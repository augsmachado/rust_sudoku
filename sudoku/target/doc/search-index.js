var searchIndex = JSON.parse('{\
"ab_glyph_rasterizer":{"doc":"Coverage rasterization for lines, quadratic & cubic …","i":[[5,"point","ab_glyph_rasterizer","<code>Point</code> constructor.",null,[[["f32",15]],["point",3]]],[3,"Point","","An (x, y) coordinate.",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"Rasterizer","","Coverage rasterizer for lines, quadratic & cubic beziers.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"clone","","",0,[[],["point",3]]],[11,"default","","",0,[[],["point",3]]],[11,"eq","","",0,[[["point",3]],["bool",15]]],[11,"ne","","",0,[[["point",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["point",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["point",3]],["bool",15]]],[11,"le","","",0,[[["point",3]],["bool",15]]],[11,"gt","","",0,[[["point",3]],["bool",15]]],[11,"ge","","",0,[[["point",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"sub","","Subtract rhs.x from x, rhs.y from y.",0,[[["point",3]],["point",3]]],[11,"add","","Add rhs.x to x, rhs.y to y.",0,[[["point",3]],["point",3]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"new","","Allocates a new rasterizer that can draw onto a <code>width</code> x …",1,[[["usize",15]]]],[11,"reset","","Resets the rasterizer to an empty <code>width</code> x <code>height</code> alpha …",1,[[["usize",15]]]],[11,"clear","","Clears the rasterizer. This method behaves as if the …",1,[[]]],[11,"dimensions","","Returns the dimensions the rasterizer was built to draw …",1,[[]]],[11,"draw_line","","Adds a straight line from <code>p0</code> to <code>p1</code> to the outline.",1,[[["point",3]]]],[11,"draw_quad","","Adds a quadratic Bézier curve from <code>p0</code> to <code>p2</code> to the …",1,[[["point",3]]]],[11,"draw_cubic","","Adds a cubic Bézier curve from <code>p0</code> to <code>p3</code> to the outline …",1,[[["point",3]]]],[11,"for_each_pixel","","Run a callback for each pixel index & alpha, with indices …",1,[[["fnmut",8]]]],[11,"for_each_pixel_2d","","Run a callback for each pixel x position, y position & …",1,[[["fnmut",8]]]]],"p":[[3,"Point"],[3,"Rasterizer"]]},\
"adler":{"doc":"Adler-32 checksum implementation.","i":[[3,"Adler32","adler","Adler-32 checksum calculator.",null,null],[11,"new","","Creates a new Adler-32 instance with default state.",0,[[]]],[11,"from_checksum","","Creates an <code>Adler32</code> instance from a precomputed Adler-32 …",0,[[["u32",15]]]],[11,"checksum","","Returns the calculated checksum at this point in time.",0,[[],["u32",15]]],[11,"write_slice","","Adds <code>bytes</code> to the checksum calculation.",0,[[]]],[5,"adler32_slice","","Calculates the Adler-32 checksum of a byte slice.",null,[[],["u32",15]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"finish","","",0,[[],["u64",15]]],[11,"write","","",0,[[]]],[11,"clone","","",0,[[],["adler32",3]]],[11,"default","","",0,[[]]]],"p":[[3,"Adler32"]]},\
"adler32":{"doc":"A minimal implementation of Adler32 for Rust.","i":[[3,"RollingAdler32","adler32","A rolling version of the Adler32 hash, which can \'forget\' …",null,null],[11,"new","","Creates an empty Adler32 context (with hash 1).",0,[[],["rollingadler32",3]]],[11,"from_value","","Creates an Adler32 context with the given initial value.",0,[[["u32",15]],["rollingadler32",3]]],[11,"from_buffer","","Convenience function initializing a context from the hash …",0,[[],["rollingadler32",3]]],[11,"hash","","Returns the current hash.",0,[[],["u32",15]]],[11,"remove","","Removes the given <code>byte</code> that was fed to the algorithm <code>size</code> …",0,[[["usize",15],["u8",15]]]],[11,"update","","Feeds a new <code>byte</code> to the algorithm to update the hash.",0,[[["u8",15]]]],[11,"update_buffer","","Feeds a vector of bytes to the algorithm to update the …",0,[[]]],[5,"adler32","","Consume a Read object and returns the Adler32 hash.",null,[[["read",8]],[["u32",15],["result",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["rollingadler32",3]]],[11,"default","","",0,[[],["rollingadler32",3]]]],"p":[[3,"RollingAdler32"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"block":{"doc":"A Rust interface for Objective-C blocks.","i":[[8,"BlockArguments","block","Types that may be used as the arguments to an Objective-C …",null,null],[10,"call_block","","Calls the given <code>Block</code> with self as the arguments.",0,[[]]],[3,"Block","","An Objective-C block that takes arguments of <code>A</code> when …",null,null],[11,"call","","Call self with the given arguments.",1,[[]]],[3,"RcBlock","","A reference-counted Objective-C block.",null,null],[11,"new","","Construct an <code>RcBlock</code> for the given block without copying …",2,[[]]],[11,"copy","","Constructs an <code>RcBlock</code> by copying the given block.",2,[[]]],[8,"IntoConcreteBlock","","Types that may be converted into a <code>ConcreteBlock</code>.",null,null],[16,"Ret","","The return type of the resulting <code>ConcreteBlock</code>.",3,null],[10,"into_concrete_block","","Consumes self to create a <code>ConcreteBlock</code>.",3,[[],["concreteblock",3]]],[3,"ConcreteBlock","","An Objective-C block whose size is known at compile time …",null,null],[11,"new","","Constructs a <code>ConcreteBlock</code> with the given closure. When …",4,[[]]],[11,"copy","","Copy self onto the heap as an <code>RcBlock</code>.",4,[[],["rcblock",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"drop","","",2,[[]]],[11,"clone","","",2,[[],["rcblock",3]]],[11,"clone","","",4,[[]]],[11,"deref","","",2,[[],["block",3]]],[11,"deref","","",4,[[],["block",3]]],[11,"deref_mut","","",4,[[],["block",3]]]],"p":[[8,"BlockArguments"],[3,"Block"],[3,"RcBlock"],[8,"IntoConcreteBlock"],[3,"ConcreteBlock"]]},\
"bytemuck":{"doc":"This crate gives small utilities for casting between …","i":[[8,"Zeroable","bytemuck","Trait for types that can be safely created with <code>zeroed</code>.",null,null],[11,"zeroed","","Calls <code>zeroed</code>.",0,[[]]],[8,"Pod","","Marker trait for \\\"plain old data\\\".",null,null],[8,"Contiguous","","A trait indicating that:",null,null],[16,"Int","","The primitive integer type with an identical …",1,null],[18,"MAX_VALUE","","The upper <em>inclusive</em> bound for valid instances of this …",1,null],[18,"MIN_VALUE","","The lower <em>inclusive</em> bound for valid instances of this …",1,null],[11,"from_integer","","If <code>value</code> is within the range for valid instances of this …",1,[[],["option",4]]],[11,"into_integer","","Perform the conversion from <code>C</code> into the underlying …",1,[[]]],[8,"TransparentWrapper","","A trait which indicates that a type is a <code>repr(transparent)</code>…",null,null],[11,"wrap_ref","","Convert a reference to a wrapped type into a reference to …",2,[[]]],[11,"wrap_mut","","Convert a mut reference to a wrapped type into a mut …",2,[[]]],[5,"bytes_of","","Re-interprets <code>&T</code> as <code>&[u8]</code>.",null,[[]]],[5,"bytes_of_mut","","Re-interprets <code>&mut T</code> as <code>&mut [u8]</code>.",null,[[]]],[5,"from_bytes","","Re-interprets <code>&[u8]</code> as <code>&T</code>.",null,[[]]],[5,"from_bytes_mut","","Re-interprets <code>&mut [u8]</code> as <code>&mut T</code>.",null,[[]]],[5,"try_from_bytes","","Re-interprets <code>&[u8]</code> as <code>&T</code>.",null,[[],[["podcasterror",4],["result",4]]]],[5,"try_from_bytes_mut","","Re-interprets <code>&mut [u8]</code> as <code>&mut T</code>.",null,[[],[["podcasterror",4],["result",4]]]],[4,"PodCastError","","The things that can go wrong when casting between [<code>Pod</code>] …",null,null],[13,"TargetAlignmentGreaterAndInputNotAligned","","You tried to cast a slice to an element type with a …",3,null],[13,"OutputSliceWouldHaveSlop","","If the element size changes then the output slice changes …",3,null],[13,"SizeMismatch","","When casting a slice you can\'t convert between ZST …",3,null],[13,"AlignmentMismatch","","For this type of cast the alignments must be exactly the …",3,null],[5,"cast","","Cast <code>T</code> into <code>U</code>",null,[[["pod",8]],["pod",8]]],[5,"cast_mut","","Cast <code>&mut T</code> into <code>&mut U</code>.",null,[[]]],[5,"cast_ref","","Cast <code>&T</code> into <code>&U</code>.",null,[[]]],[5,"cast_slice","","Cast <code>&[A]</code> into <code>&[B]</code>.",null,[[]]],[5,"cast_slice_mut","","Cast <code>&mut [T]</code> into <code>&mut [U]</code>.",null,[[]]],[5,"pod_align_to","","As <code>align_to</code>, but safe because of the [<code>Pod</code>] bound.",null,[[]]],[5,"pod_align_to_mut","","As <code>align_to_mut</code>, but safe because of the [<code>Pod</code>] bound.",null,[[]]],[5,"try_cast","","Try to cast <code>T</code> into <code>U</code>.",null,[[["pod",8]],[["pod",8],["podcasterror",4],["result",4]]]],[5,"try_cast_ref","","Try to convert a <code>&T</code> into <code>&U</code>.",null,[[],[["podcasterror",4],["result",4]]]],[5,"try_cast_mut","","Try to convert a <code>&mut T</code> into <code>&mut U</code>.",null,[[],[["result",4],["podcasterror",4]]]],[5,"try_cast_slice","","Try to convert <code>&[A]</code> into <code>&[B]</code> (possibly with a change in …",null,[[],[["podcasterror",4],["result",4]]]],[5,"try_cast_slice_mut","","Try to convert <code>&mut [A]</code> into <code>&mut [B]</code> (possibly with a …",null,[[],[["result",4],["podcasterror",4]]]],[14,"offset_of","","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …",null,null],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"eq","","",3,[[["podcasterror",4]],["bool",15]]],[11,"hash","","",3,[[]]],[11,"clone","","",3,[[],["podcasterror",4]]],[11,"zeroed","","Calls <code>zeroed</code>.",0,[[]]],[18,"MAX_VALUE","","The upper <em>inclusive</em> bound for valid instances of this …",1,null],[18,"MIN_VALUE","","The lower <em>inclusive</em> bound for valid instances of this …",1,null],[11,"from_integer","","If <code>value</code> is within the range for valid instances of this …",1,[[],["option",4]]],[11,"into_integer","","Perform the conversion from <code>C</code> into the underlying …",1,[[]]],[11,"wrap_ref","","Convert a reference to a wrapped type into a reference to …",2,[[]]],[11,"wrap_mut","","Convert a mut reference to a wrapped type into a mut …",2,[[]]]],"p":[[8,"Zeroable"],[8,"Contiguous"],[8,"TransparentWrapper"],[4,"PodCastError"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","i":[[8,"ReadBytesExt","byteorder","Extends <code>Read</code> with methods for reading numbers. (For …",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",0,[[],[["u8",15],["result",6]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],[["result",6],["i8",15]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying …",0,[[],[["result",6],["u16",15]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],[["result",6],["i16",15]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying …",0,[[],[["u32",15],["result",6]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],[["result",6],["i32",15]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying …",0,[[],[["u32",15],["result",6]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],[["result",6],["i32",15]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying …",0,[[],[["result",6],["u64",15]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],[["i64",15],["result",6]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying …",0,[[],[["result",6],["u64",15]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],[["i64",15],["result",6]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying …",0,[[],[["u128",15],["result",6]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],[["result",6],["i128",15]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying …",0,[[["usize",15]],[["result",6],["u64",15]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["usize",15]],[["i64",15],["result",6]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying …",0,[[["usize",15]],[["u128",15],["result",6]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["usize",15]],[["result",6],["i128",15]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",0,[[],[["result",6],["f32",15]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",0,[[],[["f64",15],["result",6]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the …",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the …",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the …",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the …",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the …",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the …",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the …",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the …",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the …",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) …",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) …",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[8,"WriteBytesExt","","Extends <code>Write</code> with methods for writing numbers. (For …",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["u8",15]],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["i8",15]],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying …",1,[[["u16",15]],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["i16",15]],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying …",1,[[["u32",15]],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["i32",15]],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying …",1,[[["u32",15]],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["i32",15]],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying …",1,[[["u64",15]],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64",15]],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying …",1,[[["u64",15]],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64",15]],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying …",1,[[["u128",15]],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["i128",15]],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying …",1,[[["usize",15],["u64",15]],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64",15],["usize",15]],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying …",1,[[["usize",15],["u128",15]],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["usize",15],["i128",15]],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",1,[[["f32",15]],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",1,[[["f64",15]],["result",6]]],[8,"ByteOrder","","<code>ByteOrder</code> describes types that can serialize integers as …",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from <code>buf</code>.",2,[[],["u16",15]]],[11,"read_u24","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.",2,[[],["u32",15]]],[10,"read_u32","","Reads an unsigned 32 bit integer from <code>buf</code>.",2,[[],["u32",15]]],[11,"read_u48","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.",2,[[],["u64",15]]],[10,"read_u64","","Reads an unsigned 64 bit integer from <code>buf</code>.",2,[[],["u64",15]]],[10,"read_u128","","Reads an unsigned 128 bit integer from <code>buf</code>.",2,[[],["u128",15]]],[10,"read_uint","","Reads an unsigned n-bytes integer from <code>buf</code>.",2,[[["usize",15]],["u64",15]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from <code>buf</code>.",2,[[["usize",15]],["u128",15]]],[10,"write_u16","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.",2,[[["u16",15]]]],[11,"write_u24","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.",2,[[["u32",15]]]],[10,"write_u32","","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.",2,[[["u32",15]]]],[11,"write_u48","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.",2,[[["u64",15]]]],[10,"write_u64","","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.",2,[[["u64",15]]]],[10,"write_u128","","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.",2,[[["u128",15]]]],[10,"write_uint","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[["usize",15],["u64",15]]]],[10,"write_uint128","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[["usize",15],["u128",15]]]],[11,"read_i16","","Reads a signed 16 bit integer from <code>buf</code>.",2,[[],["i16",15]]],[11,"read_i24","","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.",2,[[],["i32",15]]],[11,"read_i32","","Reads a signed 32 bit integer from <code>buf</code>.",2,[[],["i32",15]]],[11,"read_i48","","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.",2,[[],["i64",15]]],[11,"read_i64","","Reads a signed 64 bit integer from <code>buf</code>.",2,[[],["i64",15]]],[11,"read_i128","","Reads a signed 128 bit integer from <code>buf</code>.",2,[[],["i128",15]]],[11,"read_int","","Reads a signed n-bytes integer from <code>buf</code>.",2,[[["usize",15]],["i64",15]]],[11,"read_int128","","Reads a signed n-bytes integer from <code>buf</code>.",2,[[["usize",15]],["i128",15]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",2,[[],["f32",15]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",2,[[],["f64",15]]],[11,"write_i16","","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.",2,[[["i16",15]]]],[11,"write_i24","","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.",2,[[["i32",15]]]],[11,"write_i32","","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.",2,[[["i32",15]]]],[11,"write_i48","","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.",2,[[["i64",15]]]],[11,"write_i64","","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.",2,[[["i64",15]]]],[11,"write_i128","","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.",2,[[["i128",15]]]],[11,"write_int","","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[["i64",15],["usize",15]]]],[11,"write_int128","","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[["usize",15],["i128",15]]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",2,[[["f32",15]]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",2,[[["f64",15]]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a …",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a …",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a …",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to …",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a …",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a …",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a …",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a …",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 …",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 …",2,[[]]],[4,"BigEndian","","Defines big-endian serialization.",null,null],[6,"BE","","A type alias for <code>BigEndian</code>.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"LE","","A type alias for <code>LittleEndian</code>.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"read_u16","","",3,[[],["u16",15]]],[11,"read_u32","","",3,[[],["u32",15]]],[11,"read_u64","","",3,[[],["u64",15]]],[11,"read_u128","","",3,[[],["u128",15]]],[11,"read_uint","","",3,[[["usize",15]],["u64",15]]],[11,"read_uint128","","",3,[[["usize",15]],["u128",15]]],[11,"write_u16","","",3,[[["u16",15]]]],[11,"write_u32","","",3,[[["u32",15]]]],[11,"write_u64","","",3,[[["u64",15]]]],[11,"write_u128","","",3,[[["u128",15]]]],[11,"write_uint","","",3,[[["usize",15],["u64",15]]]],[11,"write_uint128","","",3,[[["usize",15],["u128",15]]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[],["u16",15]]],[11,"read_u32","","",4,[[],["u32",15]]],[11,"read_u64","","",4,[[],["u64",15]]],[11,"read_u128","","",4,[[],["u128",15]]],[11,"read_uint","","",4,[[["usize",15]],["u64",15]]],[11,"read_uint128","","",4,[[["usize",15]],["u128",15]]],[11,"write_u16","","",4,[[["u16",15]]]],[11,"write_u32","","",4,[[["u32",15]]]],[11,"write_u64","","",4,[[["u64",15]]]],[11,"write_u128","","",4,[[["u128",15]]]],[11,"write_uint","","",4,[[["usize",15],["u64",15]]]],[11,"write_uint128","","",4,[[["usize",15],["u128",15]]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[],["bigendian",4]]],[11,"clone","","",4,[[],["littleendian",4]]],[11,"default","","",3,[[],["bigendian",4]]],[11,"default","","",4,[[],["littleendian",4]]],[11,"cmp","","",3,[[["bigendian",4]],["ordering",4]]],[11,"cmp","","",4,[[["littleendian",4]],["ordering",4]]],[11,"eq","","",3,[[["bigendian",4]],["bool",15]]],[11,"eq","","",4,[[["littleendian",4]],["bool",15]]],[11,"partial_cmp","","",3,[[["bigendian",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["littleendian",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",0,[[],[["u8",15],["result",6]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],[["result",6],["i8",15]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying …",0,[[],[["result",6],["u16",15]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],[["result",6],["i16",15]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying …",0,[[],[["u32",15],["result",6]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],[["result",6],["i32",15]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying …",0,[[],[["u32",15],["result",6]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],[["result",6],["i32",15]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying …",0,[[],[["result",6],["u64",15]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],[["i64",15],["result",6]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying …",0,[[],[["result",6],["u64",15]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],[["i64",15],["result",6]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying …",0,[[],[["u128",15],["result",6]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],[["result",6],["i128",15]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying …",0,[[["usize",15]],[["result",6],["u64",15]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["usize",15]],[["i64",15],["result",6]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying …",0,[[["usize",15]],[["u128",15],["result",6]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["usize",15]],[["result",6],["i128",15]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",0,[[],[["result",6],["f32",15]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",0,[[],[["f64",15],["result",6]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the …",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the …",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the …",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the …",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the …",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the …",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the …",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the …",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the …",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) …",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) …",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["u8",15]],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["i8",15]],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying …",1,[[["u16",15]],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["i16",15]],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying …",1,[[["u32",15]],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["i32",15]],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying …",1,[[["u32",15]],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["i32",15]],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying …",1,[[["u64",15]],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64",15]],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying …",1,[[["u64",15]],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64",15]],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying …",1,[[["u128",15]],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["i128",15]],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying …",1,[[["usize",15],["u64",15]],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64",15],["usize",15]],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying …",1,[[["usize",15],["u128",15]],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["usize",15],["i128",15]],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",1,[[["f32",15]],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",1,[[["f64",15]],["result",6]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate …",null,null]],"p":[]},\
"cgl":{"doc":"","i":[[5,"CGLSetCurrentContext","cgl","",null,null],[5,"CGLGetCurrentContext","","",null,null],[5,"CGLGetShareGroup","","",null,null],[5,"CGLChoosePixelFormat","","",null,null],[5,"CGLDescribePixelFormat","","",null,null],[5,"CGLDestroyPixelFormat","","",null,null],[5,"CGLReleasePixelFormat","","",null,null],[5,"CGLRetainPixelFormat","","",null,null],[5,"CGLGetPixelFormatRetainCount","","",null,null],[5,"CGLCreateContext","","",null,null],[5,"CGLDestroyContext","","",null,null],[5,"CGLGetPixelFormat","","",null,null],[5,"CGLEnable","","",null,null],[5,"CGLDisable","","",null,null],[5,"CGLIsEnabled","","",null,null],[5,"CGLSetParameter","","",null,null],[5,"CGLGetParameter","","",null,null],[5,"CGLLockContext","","",null,null],[5,"CGLUnlockContext","","",null,null],[5,"CGLSetOption","","",null,null],[5,"CGLGetOption","","",null,null],[5,"CGLSetGlobalOption","","",null,null],[5,"CGLGetGlobalOption","","",null,null],[5,"CGLGetVersion","","",null,null],[5,"CGLTexImageIOSurface2D","","",null,null],[5,"CGLErrorString","","",null,null],[6,"GLenum","","",null,null],[6,"GLint","","",null,null],[6,"GLsizei","","",null,null],[6,"GLuint","","",null,null],[6,"CGLPixelFormatAttribute","","",null,null],[6,"CGLContextParameter","","",null,null],[6,"CGLContextEnable","","",null,null],[6,"CGLGlobalOption","","",null,null],[6,"CGLError","","",null,null],[6,"CGLPixelFormatObj","","",null,null],[6,"CGLContextObj","","",null,null],[6,"CGLShareGroupObj","","",null,null],[6,"IOSurfaceRef","","",null,null],[17,"kCGLNoError","","",null,null],[17,"kCGLPFAAllRenderers","","",null,null],[17,"kCGLPFADoubleBuffer","","",null,null],[17,"kCGLPFAStereo","","",null,null],[17,"kCGLPFAAuxBuffers","","",null,null],[17,"kCGLPFAColorSize","","",null,null],[17,"kCGLPFAAlphaSize","","",null,null],[17,"kCGLPFADepthSize","","",null,null],[17,"kCGLPFAStencilSize","","",null,null],[17,"kCGLPFAAccumSize","","",null,null],[17,"kCGLPFAMinimumPolicy","","",null,null],[17,"kCGLPFAMaximumPolicy","","",null,null],[17,"kCGLPFAOffScreen","","",null,null],[17,"kCGLPFAFullScreen","","",null,null],[17,"kCGLPFASampleBuffers","","",null,null],[17,"kCGLPFASamples","","",null,null],[17,"kCGLPFAAuxDepthStencil","","",null,null],[17,"kCGLPFAColorFloat","","",null,null],[17,"kCGLPFAMultisample","","",null,null],[17,"kCGLPFASupersample","","",null,null],[17,"kCGLPFASampleAlpha","","",null,null],[17,"kCGLPFARendererID","","",null,null],[17,"kCGLPFASingleRenderer","","",null,null],[17,"kCGLPFANoRecovery","","",null,null],[17,"kCGLPFAAccelerated","","",null,null],[17,"kCGLPFAClosestPolicy","","",null,null],[17,"kCGLPFARobust","","",null,null],[17,"kCGLPFABackingStore","","",null,null],[17,"kCGLPFAMPSafe","","",null,null],[17,"kCGLPFAWindow","","",null,null],[17,"kCGLPFAMultiScreen","","",null,null],[17,"kCGLPFACompliant","","",null,null],[17,"kCGLPFADisplayMask","","",null,null],[17,"kCGLPFAPBuffer","","",null,null],[17,"kCGLPFARemotePBuffer","","",null,null],[17,"kCGLPFAAllowOfflineRenderers","","",null,null],[17,"kCGLPFAAcceleratedCompute","","",null,null],[17,"kCGLPFAOpenGLProfile","","",null,null],[17,"kCGLPFAVirtualScreenCount","","",null,null],[17,"kCGLCESwapRectangle","","",null,null],[17,"kCGLCESwapLimit","","",null,null],[17,"kCGLCERasterization","","",null,null],[17,"kCGLCEStateValidation","","",null,null],[17,"kCGLCESurfaceBackingSize","","",null,null],[17,"kCGLCEDisplayListOptimization","","",null,null],[17,"kCGLCEMPEngine","","",null,null],[17,"kCGLCECrashOnRemovedFunctions","","",null,null],[17,"kCGLCPSwapRectangle","","",null,null],[17,"kCGLCPSwapInterval","","",null,null],[17,"kCGLCPDispatchTableSize","","",null,null],[17,"kCGLCPClientStorage","","",null,null],[17,"kCGLCPSurfaceTexture","","",null,null],[17,"kCGLCPSurfaceOrder","","",null,null],[17,"kCGLCPSurfaceOpacity","","",null,null],[17,"kCGLCPSurfaceBackingSize","","",null,null],[17,"kCGLCPSurfaceSurfaceVolatile","","",null,null],[17,"kCGLCPReclaimResources","","",null,null],[17,"kCGLCPCurrentRendererID","","",null,null],[17,"kCGLCPGPUVertexProcessing","","",null,null],[17,"kCGLCPGPUFragmentProcessing","","",null,null],[17,"kCGLCPHasDrawable","","",null,null],[17,"kCGLCPMPSwapsInFlight","","",null,null],[17,"kCGLGOFormatCacheSize","","",null,null],[17,"kCGLGOClearFormatCache","","",null,null],[17,"kCGLGORetainRenderers","","",null,null],[17,"kCGLGOResetLibrary","","",null,null],[17,"kCGLGOUseErrorHandler","","",null,null],[17,"kCGLGOUseBuildCache","","",null,null],[17,"CORE_BOOLEAN_ATTRIBUTES","","",null,null],[17,"CORE_INTEGER_ATTRIBUTES","","",null,null]],"p":[]},\
"cocoa":{"doc":"","i":[[0,"appkit","cocoa","",null,null],[7,"NSAppKitVersionNumber","cocoa::appkit","",null,null],[7,"NSPasteboardTypeString","","",null,null],[7,"NSPasteboardTypePDF","","",null,null],[7,"NSPasteboardTypeTIFF","","",null,null],[7,"NSPasteboardTypePNG","","",null,null],[7,"NSPasteboardTypeRTF","","",null,null],[7,"NSPasteboardTypeRTFD","","",null,null],[7,"NSPasteboardTypeHTML","","",null,null],[7,"NSPasteboardTypeTabularText","","",null,null],[7,"NSPasteboardTypeFont","","",null,null],[7,"NSPasteboardTypeRuler","","",null,null],[7,"NSPasteboardTypeColor","","",null,null],[7,"NSPasteboardTypeSound","","",null,null],[7,"NSPasteboardTypeMultipleTextSelection","","",null,null],[7,"NSPasteboardTypeFindPanelSearchOptions","","",null,null],[7,"NSStringPboardType","","",null,null],[7,"NSFilenamesPboardType","","",null,null],[7,"NSPostScriptPboardType","","",null,null],[7,"NSTIFFPboardType","","",null,null],[7,"NSRTFPboardType","","",null,null],[7,"NSTabularTextPboardType","","",null,null],[7,"NSFontPboardType","","",null,null],[7,"NSRulerPboardType","","",null,null],[7,"NSFileContentsPboardType","","",null,null],[7,"NSColorPboardType","","",null,null],[7,"NSRTFDPboardType","","",null,null],[7,"NSHTMLPboardType","","",null,null],[7,"NSPICTPboardType","","",null,null],[7,"NSURLPboardType","","",null,null],[7,"NSPDFPboardType","","",null,null],[7,"NSVCardPboardType","","",null,null],[7,"NSFilesPromisePboardType","","",null,null],[7,"NSMultipleTextSelectionPboardType","","",null,null],[7,"NSSoundPboardType","","",null,null],[7,"NSGeneralPboard","","",null,null],[7,"NSFontPboard","","",null,null],[7,"NSRulerPboard","","",null,null],[7,"NSFindPboard","","",null,null],[7,"NSDragPboard","","",null,null],[7,"NSPasteboardURLReadingFileURLsOnlyKey","","",null,null],[7,"NSPasteboardURLReadingContentsConformToTypesKey","","",null,null],[7,"NSAppearanceNameVibrantDark","","",null,null],[7,"NSAppearanceNameVibrantLight","","",null,null],[7,"NSFullScreenModeAllScreens","","",null,null],[7,"NSFullScreenModeSetting","","",null,null],[7,"NSFullScreenModeWindowLevel","","",null,null],[7,"NSFullScreenModeApplicationPresentationOptions","","",null,null],[7,"NSImageHintCTM","","",null,null],[7,"NSImageHintInterpolation","","",null,null],[7,"NSImageNameQuickLookTemplate","","",null,null],[7,"NSImageNameBluetoothTemplate","","",null,null],[7,"NSImageNameIChatTheaterTemplate","","",null,null],[7,"NSImageNameSlideshowTemplate","","",null,null],[7,"NSImageNameActionTemplate","","",null,null],[7,"NSImageNameSmartBadgeTemplate","","",null,null],[7,"NSImageNamePathTemplate","","",null,null],[7,"NSImageNameInvalidDataFreestandingTemplate","","",null,null],[7,"NSImageNameLockLockedTemplate","","",null,null],[7,"NSImageNameLockUnlockedTemplate","","",null,null],[7,"NSImageNameGoRightTemplate","","",null,null],[7,"NSImageNameGoLeftTemplate","","",null,null],[7,"NSImageNameRightFacingTriangleTemplate","","",null,null],[7,"NSImageNameLeftFacingTriangleTemplate","","",null,null],[7,"NSImageNameAddTemplate","","",null,null],[7,"NSImageNameRemoveTemplate","","",null,null],[7,"NSImageNameRevealFreestandingTemplate","","",null,null],[7,"NSImageNameFollowLinkFreestandingTemplate","","",null,null],[7,"NSImageNameEnterFullScreenTemplate","","",null,null],[7,"NSImageNameExitFullScreenTemplate","","",null,null],[7,"NSImageNameStopProgressTemplate","","",null,null],[7,"NSImageNameStopProgressFreestandingTemplate","","",null,null],[7,"NSImageNameRefreshTemplate","","",null,null],[7,"NSImageNameRefreshFreestandingTemplate","","",null,null],[7,"NSImageNameMultipleDocuments","","",null,null],[7,"NSImageNameUser","","",null,null],[7,"NSImageNameUserGroup","","",null,null],[7,"NSImageNameEveryone","","",null,null],[7,"NSImageNameUserGuest","","",null,null],[7,"NSImageNameBonjour","","",null,null],[7,"NSImageNameDotMac","","",null,null],[7,"NSImageNameComputer","","",null,null],[7,"NSImageNameFolderBurnable","","",null,null],[7,"NSImageNameFolderSmart","","",null,null],[7,"NSImageNameNetwork","","",null,null],[7,"NSImageNameUserAccounts","","",null,null],[7,"NSImageNamePreferencesGeneral","","",null,null],[7,"NSImageNameAdvanced","","",null,null],[7,"NSImageNameInfo","","",null,null],[7,"NSImageNameFontPanel","","",null,null],[7,"NSImageNameColorPanel","","",null,null],[7,"NSImageNameFolder","","",null,null],[7,"NSImageNameTrashEmpty","","",null,null],[7,"NSImageNameTrashFull","","",null,null],[7,"NSImageNameHomeTemplate","","",null,null],[7,"NSImageNameBookmarksTemplate","","",null,null],[7,"NSImageNameCaution","","",null,null],[7,"NSImageNameStatusAvailable","","",null,null],[7,"NSImageNameStatusPartiallyAvailable","","",null,null],[7,"NSImageNameStatusUnavailable","","",null,null],[7,"NSImageNameStatusNone","","",null,null],[7,"NSImageNameApplicationIcon","","",null,null],[7,"NSImageNameMenuOnStateTemplate","","",null,null],[7,"NSImageNameMenuMixedStateTemplate","","",null,null],[7,"NSImageNameMobileMe","","",null,null],[7,"NSImageNameIconViewTemplate","","",null,null],[7,"NSImageNameListViewTemplate","","",null,null],[7,"NSImageNameColumnViewTemplate","","",null,null],[7,"NSImageNameFlowViewTemplate","","",null,null],[7,"NSImageNameShareTemplate","","",null,null],[5,"NSRectFill","","",null,null],[6,"CGFloat","","",null,null],[3,"CGPoint","","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[6,"CGLContextObj","","",null,null],[6,"GLint","","",null,null],[17,"NSAppKitVersionNumber10_0","","",null,null],[17,"NSAppKitVersionNumber10_1","","",null,null],[17,"NSAppKitVersionNumber10_2","","",null,null],[17,"NSAppKitVersionNumber10_2_3","","",null,null],[17,"NSAppKitVersionNumber10_3","","",null,null],[17,"NSAppKitVersionNumber10_3_2","","",null,null],[17,"NSAppKitVersionNumber10_3_3","","",null,null],[17,"NSAppKitVersionNumber10_3_5","","",null,null],[17,"NSAppKitVersionNumber10_3_7","","",null,null],[17,"NSAppKitVersionNumber10_3_9","","",null,null],[17,"NSAppKitVersionNumber10_4","","",null,null],[17,"NSAppKitVersionNumber10_4_1","","",null,null],[17,"NSAppKitVersionNumber10_4_3","","",null,null],[17,"NSAppKitVersionNumber10_4_4","","",null,null],[17,"NSAppKitVersionNumber10_4_7","","",null,null],[17,"NSAppKitVersionNumber10_5","","",null,null],[17,"NSAppKitVersionNumber10_5_2","","",null,null],[17,"NSAppKitVersionNumber10_5_3","","",null,null],[17,"NSAppKitVersionNumber10_6","","",null,null],[17,"NSAppKitVersionNumber10_7","","",null,null],[17,"NSAppKitVersionNumber10_7_2","","",null,null],[17,"NSAppKitVersionNumber10_7_3","","",null,null],[17,"NSAppKitVersionNumber10_7_4","","",null,null],[17,"NSAppKitVersionNumber10_8","","",null,null],[17,"NSAppKitVersionNumber10_9","","",null,null],[17,"NSAppKitVersionNumber10_10","","",null,null],[17,"NSAppKitVersionNumber10_10_2","","",null,null],[17,"NSAppKitVersionNumber10_10_3","","",null,null],[17,"NSAppKitVersionNumber10_10_4","","",null,null],[17,"NSAppKitVersionNumber10_10_5","","",null,null],[17,"NSAppKitVersionNumber10_10_Max","","",null,null],[17,"NSAppKitVersionNumber10_11","","",null,null],[17,"NSAppKitVersionNumber10_11_1","","",null,null],[17,"NSAppKitVersionNumber10_11_2","","",null,null],[17,"NSAppKitVersionNumber10_11_3","","",null,null],[17,"NSAppKitVersionNumber10_12","","",null,null],[17,"NSAppKitVersionNumber10_12_1","","",null,null],[17,"NSAppKitVersionNumber10_12_2","","",null,null],[17,"NSAppKitVersionNumber10_13","","",null,null],[17,"NSAppKitVersionNumber10_13_1","","",null,null],[17,"NSAppKitVersionNumber10_13_2","","",null,null],[17,"NSAppKitVersionNumber10_13_4","","",null,null],[5,"NSApp","","",null,[[],["id",6]]],[4,"NSApplicationActivationPolicy","","",null,null],[13,"NSApplicationActivationPolicyRegular","","",1,null],[13,"NSApplicationActivationPolicyAccessory","","",1,null],[13,"NSApplicationActivationPolicyProhibited","","",1,null],[13,"NSApplicationActivationPolicyERROR","","",1,null],[4,"NSApplicationActivationOptions","","",null,null],[13,"NSApplicationActivateAllWindows","","",2,null],[13,"NSApplicationActivateIgnoringOtherApps","","",2,null],[4,"NSApplicationTerminateReply","","",null,null],[13,"NSTerminateCancel","","",3,null],[13,"NSTerminateNow","","",3,null],[13,"NSTerminateLater","","",3,null],[3,"NSApplicationPresentationOptions","","",null,null],[18,"NSApplicationPresentationDefault","","",4,null],[18,"NSApplicationPresentationAutoHideDock","","",4,null],[18,"NSApplicationPresentationHideDock","","",4,null],[18,"NSApplicationPresentationAutoHideMenuBar","","",4,null],[18,"NSApplicationPresentationHideMenuBar","","",4,null],[18,"NSApplicationPresentationDisableAppleMenu","","",4,null],[18,"NSApplicationPresentationDisableProcessSwitching","","",4,null],[18,"NSApplicationPresentationDisableForceQuit","","",4,null],[18,"NSApplicationPresentationDisableSessionTermination","","",4,null],[18,"NSApplicationPresentationDisableHideApplication","","",4,null],[18,"NSApplicationPresentationDisableMenuBarTransparency","","",4,null],[18,"NSApplicationPresentationFullScreen","","",4,null],[18,"NSApplicationPresentationAutoHideToolbar","","",4,null],[11,"empty","","Returns an empty set of flags",4,[[],["nsapplicationpresentationoptions",3]]],[11,"all","","Returns the set containing all flags.",4,[[],["nsapplicationpresentationoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",4,[[],["nsuinteger",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",4,[[["nsuinteger",6]],[["nsapplicationpresentationoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",4,[[["nsuinteger",6]],["nsapplicationpresentationoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",4,[[["nsuinteger",6]],["nsapplicationpresentationoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",4,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",4,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",4,[[["nsapplicationpresentationoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",4,[[["nsapplicationpresentationoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",4,[[["nsapplicationpresentationoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",4,[[["nsapplicationpresentationoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",4,[[["nsapplicationpresentationoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",4,[[["nsapplicationpresentationoptions",3],["bool",15]]]],[3,"NSWindowStyleMask","","",null,null],[18,"NSBorderlessWindowMask","","",5,null],[18,"NSTitledWindowMask","","",5,null],[18,"NSClosableWindowMask","","",5,null],[18,"NSMiniaturizableWindowMask","","",5,null],[18,"NSResizableWindowMask","","",5,null],[18,"NSTexturedBackgroundWindowMask","","",5,null],[18,"NSUnifiedTitleAndToolbarWindowMask","","",5,null],[18,"NSFullScreenWindowMask","","",5,null],[18,"NSFullSizeContentViewWindowMask","","",5,null],[11,"empty","","Returns an empty set of flags",5,[[],["nswindowstylemask",3]]],[11,"all","","Returns the set containing all flags.",5,[[],["nswindowstylemask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",5,[[],["nsuinteger",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",5,[[["nsuinteger",6]],[["option",4],["nswindowstylemask",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",5,[[["nsuinteger",6]],["nswindowstylemask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",5,[[["nsuinteger",6]],["nswindowstylemask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",5,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",5,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",5,[[["nswindowstylemask",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",5,[[["nswindowstylemask",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",5,[[["nswindowstylemask",3]]]],[11,"remove","","Removes the specified flags in-place.",5,[[["nswindowstylemask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",5,[[["nswindowstylemask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",5,[[["bool",15],["nswindowstylemask",3]]]],[4,"NSWindowTitleVisibility","","",null,null],[13,"NSWindowTitleVisible","","",6,null],[13,"NSWindowTitleHidden","","",6,null],[4,"NSWindowTabbingMode","","",null,null],[13,"NSWindowTabbingModeAutomatic","","",7,null],[13,"NSWindowTabbingModeDisallowed","","",7,null],[13,"NSWindowTabbingModePreferred","","",7,null],[4,"NSBackingStoreType","","",null,null],[13,"NSBackingStoreRetained","","",8,null],[13,"NSBackingStoreNonretained","","",8,null],[13,"NSBackingStoreBuffered","","",8,null],[3,"NSWindowOrderingMode","","",null,null],[18,"NSWindowAbove","","",9,null],[18,"NSWindowBelow","","",9,null],[18,"NSWindowOut","","",9,null],[11,"empty","","Returns an empty set of flags",9,[[],["nswindoworderingmode",3]]],[11,"all","","Returns the set containing all flags.",9,[[],["nswindoworderingmode",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[],["nsinteger",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",9,[[["nsinteger",6]],[["option",4],["nswindoworderingmode",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",9,[[["nsinteger",6]],["nswindoworderingmode",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",9,[[["nsinteger",6]],["nswindoworderingmode",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",9,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",9,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",9,[[["nswindoworderingmode",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",9,[[["nswindoworderingmode",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["nswindoworderingmode",3]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["nswindoworderingmode",3]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["nswindoworderingmode",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",9,[[["bool",15],["nswindoworderingmode",3]]]],[3,"NSAlignmentOptions","","",null,null],[18,"NSAlignMinXInward","","",10,null],[18,"NSAlignMinYInward","","",10,null],[18,"NSAlignMaxXInward","","",10,null],[18,"NSAlignMaxYInward","","",10,null],[18,"NSAlignWidthInward","","",10,null],[18,"NSAlignHeightInward","","",10,null],[18,"NSAlignMinXOutward","","",10,null],[18,"NSAlignMinYOutward","","",10,null],[18,"NSAlignMaxXOutward","","",10,null],[18,"NSAlignMaxYOutward","","",10,null],[18,"NSAlignWidthOutward","","",10,null],[18,"NSAlignHeightOutward","","",10,null],[18,"NSAlignMinXNearest","","",10,null],[18,"NSAlignMinYNearest","","",10,null],[18,"NSAlignMaxXNearest","","",10,null],[18,"NSAlignMaxYNearest","","",10,null],[18,"NSAlignWidthNearest","","",10,null],[18,"NSAlignHeightNearest","","",10,null],[18,"NSAlignRectFlipped","","",10,null],[18,"NSAlignAllEdgesInward","","",10,null],[18,"NSAlignAllEdgesOutward","","",10,null],[18,"NSAlignAllEdgesNearest","","",10,null],[11,"empty","","Returns an empty set of flags",10,[[],["nsalignmentoptions",3]]],[11,"all","","Returns the set containing all flags.",10,[[],["nsalignmentoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[],["c_ulonglong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",10,[[["c_ulonglong",6]],[["nsalignmentoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",10,[[["c_ulonglong",6]],["nsalignmentoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",10,[[["c_ulonglong",6]],["nsalignmentoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",10,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",10,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",10,[[["nsalignmentoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",10,[[["nsalignmentoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["nsalignmentoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["nsalignmentoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["nsalignmentoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",10,[[["bool",15],["nsalignmentoptions",3]]]],[4,"NSOpenGLPixelFormatAttribute","","",null,null],[13,"NSOpenGLPFAAllRenderers","","",11,null],[13,"NSOpenGLPFATripleBuffer","","",11,null],[13,"NSOpenGLPFADoubleBuffer","","",11,null],[13,"NSOpenGLPFAStereo","","",11,null],[13,"NSOpenGLPFAAuxBuffers","","",11,null],[13,"NSOpenGLPFAColorSize","","",11,null],[13,"NSOpenGLPFAAlphaSize","","",11,null],[13,"NSOpenGLPFADepthSize","","",11,null],[13,"NSOpenGLPFAStencilSize","","",11,null],[13,"NSOpenGLPFAAccumSize","","",11,null],[13,"NSOpenGLPFAMinimumPolicy","","",11,null],[13,"NSOpenGLPFAMaximumPolicy","","",11,null],[13,"NSOpenGLPFAOffScreen","","",11,null],[13,"NSOpenGLPFAFullScreen","","",11,null],[13,"NSOpenGLPFASampleBuffers","","",11,null],[13,"NSOpenGLPFASamples","","",11,null],[13,"NSOpenGLPFAAuxDepthStencil","","",11,null],[13,"NSOpenGLPFAColorFloat","","",11,null],[13,"NSOpenGLPFAMultisample","","",11,null],[13,"NSOpenGLPFASupersample","","",11,null],[13,"NSOpenGLPFASampleAlpha","","",11,null],[13,"NSOpenGLPFARendererID","","",11,null],[13,"NSOpenGLPFASingleRenderer","","",11,null],[13,"NSOpenGLPFANoRecovery","","",11,null],[13,"NSOpenGLPFAAccelerated","","",11,null],[13,"NSOpenGLPFAClosestPolicy","","",11,null],[13,"NSOpenGLPFARobust","","",11,null],[13,"NSOpenGLPFABackingStore","","",11,null],[13,"NSOpenGLPFAMPSafe","","",11,null],[13,"NSOpenGLPFAWindow","","",11,null],[13,"NSOpenGLPFAMultiScreen","","",11,null],[13,"NSOpenGLPFACompliant","","",11,null],[13,"NSOpenGLPFAScreenMask","","",11,null],[13,"NSOpenGLPFAPixelBuffer","","",11,null],[13,"NSOpenGLPFARemotePixelBuffer","","",11,null],[13,"NSOpenGLPFAAllowOfflineRenderers","","",11,null],[13,"NSOpenGLPFAAcceleratedCompute","","",11,null],[13,"NSOpenGLPFAOpenGLProfile","","",11,null],[13,"NSOpenGLPFAVirtualScreenCount","","",11,null],[4,"NSOpenGLPFAOpenGLProfiles","","",null,null],[13,"NSOpenGLProfileVersionLegacy","","",12,null],[13,"NSOpenGLProfileVersion3_2Core","","",12,null],[13,"NSOpenGLProfileVersion4_1Core","","",12,null],[4,"NSOpenGLContextParameter","","",null,null],[13,"NSOpenGLCPSwapInterval","","",13,null],[13,"NSOpenGLCPSurfaceOrder","","",13,null],[13,"NSOpenGLCPSurfaceOpacity","","",13,null],[13,"NSOpenGLCPSurfaceBackingSize","","",13,null],[13,"NSOpenGLCPReclaimResources","","",13,null],[13,"NSOpenGLCPCurrentRendererID","","",13,null],[13,"NSOpenGLCPGPUVertexProcessing","","",13,null],[13,"NSOpenGLCPGPUFragmentProcessing","","",13,null],[13,"NSOpenGLCPHasDrawable","","",13,null],[13,"NSOpenGLCPMPSwapsInFlight","","",13,null],[4,"NSWindowButton","","",null,null],[13,"NSWindowCloseButton","","",14,null],[13,"NSWindowMiniaturizeButton","","",14,null],[13,"NSWindowZoomButton","","",14,null],[13,"NSWindowToolbarButton","","",14,null],[13,"NSWindowDocumentIconButton","","",14,null],[13,"NSWindowDocumentVersionsButton","","",14,null],[13,"NSWindowFullScreenButton","","",14,null],[4,"NSBezelStyle","","",null,null],[13,"NSRoundedBezelStyle","","",15,null],[13,"NSRegularSquareBezelStyle","","",15,null],[13,"NSDisclosureBezelStyle","","",15,null],[13,"NSShadowlessSquareBezelStyle","","",15,null],[13,"NSCircularBezelStyle","","",15,null],[13,"NSTexturedSquareBezelStyle","","",15,null],[13,"NSHelpButtonBezelStyle","","",15,null],[13,"NSSmallSquareBezelStyle","","",15,null],[13,"NSTexturedRoundedBezelStyle","","",15,null],[13,"NSRoundRectBezelStyle","","",15,null],[13,"NSRecessedBezelStyle","","",15,null],[13,"NSRoundedDisclosureBezelStyle","","",15,null],[4,"NSRequestUserAttentionType","","",null,null],[13,"NSCriticalRequest","","",16,null],[13,"NSInformationalRequest","","",16,null],[7,"NSMainMenuWindowLevel","","",null,null],[8,"NSApplication","","",null,null],[11,"sharedApplication","","",17,[[],["id",6]]],[10,"mainMenu","","",17,[[],["id",6]]],[10,"setActivationPolicy_","","",17,[[["nsapplicationactivationpolicy",4]],["bool",6]]],[10,"setPresentationOptions_","","",17,[[["nsapplicationpresentationoptions",3]],["bool",6]]],[10,"presentationOptions_","","",17,[[],["nsapplicationpresentationoptions",3]]],[10,"setMainMenu_","","",17,[[["id",6]]]],[10,"setServicesMenu_","","",17,[[["id",6]]]],[10,"setWindowsMenu_","","",17,[[["id",6]]]],[10,"activateIgnoringOtherApps_","","",17,[[["bool",6]]]],[10,"run","","",17,[[]]],[10,"finishLaunching","","",17,[[]]],[10,"nextEventMatchingMask_untilDate_inMode_dequeue_","","",17,[[["id",6],["bool",6],["nsuinteger",6]],["id",6]]],[10,"sendEvent_","","",17,[[["id",6]]]],[10,"postEvent_atStart_","","",17,[[["id",6],["bool",6]]]],[10,"stop_","","",17,[[["id",6]]]],[10,"setApplicationIconImage_","","",17,[[["id",6]]]],[10,"requestUserAttention_","","",17,[[["nsrequestuserattentiontype",4]]]],[8,"NSRunningApplication","","",null,null],[11,"currentApplication","","",18,[[],["id",6]]],[10,"activateWithOptions_","","",18,[[["nsapplicationactivationoptions",4]],["bool",6]]],[8,"NSPasteboard","","",null,null],[11,"generalPasteboard","","",19,[[],["id",6]]],[11,"pasteboardByFilteringData_ofType","","",19,[[["id",6]],["id",6]]],[11,"pasteboardByFilteringFile","","",19,[[["id",6]],["id",6]]],[11,"pasteboardByFilteringTypesInPasteboard","","",19,[[["id",6]],["id",6]]],[11,"pasteboardWithName","","",19,[[["id",6]],["id",6]]],[11,"pasteboardWithUniqueName","","",19,[[],["id",6]]],[10,"releaseGlobally","","",19,[[]]],[10,"clearContents","","",19,[[],["nsinteger",6]]],[10,"writeObjects","","",19,[[["id",6]],["bool",6]]],[10,"setData_forType","","",19,[[["id",6]],["bool",6]]],[10,"setPropertyList_forType","","",19,[[["id",6]],["bool",6]]],[10,"setString_forType","","",19,[[["id",6]],["bool",6]]],[10,"readObjectsForClasses_options","","",19,[[["id",6]],["id",6]]],[10,"pasteboardItems","","",19,[[],["id",6]]],[10,"indexOfPasteboardItem","","",19,[[["id",6]],["nsinteger",6]]],[10,"dataForType","","",19,[[["id",6]],["id",6]]],[10,"propertyListForType","","",19,[[["id",6]],["id",6]]],[10,"stringForType","","",19,[[["id",6]],["id",6]]],[10,"availableTypeFromArray","","",19,[[["id",6]],["id",6]]],[10,"canReadItemWithDataConformingToTypes","","",19,[[["id",6]],["bool",6]]],[10,"canReadObjectForClasses_options","","",19,[[["id",6]],["bool",6]]],[10,"types","","",19,[[],["id",6]]],[11,"typesFilterableTo","","",19,[[["id",6]],["id",6]]],[10,"name","","",19,[[],["id",6]]],[10,"changeCount","","",19,[[],["nsinteger",6]]],[10,"declareTypes_owner","","",19,[[["id",6]],["nsinteger",6]]],[10,"addTypes_owner","","",19,[[["id",6]],["nsinteger",6]]],[10,"writeFileContents","","",19,[[["id",6]],["bool",6]]],[10,"writeFileWrapper","","",19,[[["id",6]],["bool",6]]],[10,"readFileContentsType_toFile","","",19,[[["id",6]],["id",6]]],[10,"readFileWrapper","","",19,[[],["id",6]]],[8,"NSPasteboardItem","","",null,null],[10,"types","","",20,[[],["id",6]]],[10,"setDataProvider_forTypes","","",20,[[["id",6]],["bool",6]]],[10,"setData_forType","","",20,[[["id",6]],["bool",6]]],[10,"setString_forType","","",20,[[["id",6]],["bool",6]]],[10,"setPropertyList_forType","","",20,[[["id",6]],["bool",6]]],[10,"dataForType","","",20,[[["id",6]],["id",6]]],[10,"stringForType","","",20,[[["id",6]],["id",6]]],[10,"propertyListForType","","",20,[[["id",6]],["id",6]]],[8,"NSPasteboardItemDataProvider","","",null,null],[10,"pasteboard_item_provideDataForType","","",21,[[["id",6]]]],[10,"pasteboardFinishedWithDataProvider","","",21,[[["id",6]]]],[8,"NSPasteboardWriting","","",null,null],[10,"writableTypesForPasteboard","","",22,[[["id",6]],["id",6]]],[10,"writingOptionsForType_pasteboard","","",22,[[["id",6]],["nspasteboardwritingoptions",4]]],[10,"pasteboardPropertyListForType","","",22,[[["id",6]],["id",6]]],[8,"NSPasteboardReading","","",null,null],[10,"initWithPasteboardPropertyList_ofType","","",23,[[["id",6]],["id",6]]],[10,"readableTypesForPasteboard","","",23,[[["id",6]],["id",6]]],[10,"readingOptionsForType_pasteboard","","",23,[[["id",6]],["nspasteboardreadingoptions",4]]],[4,"NSPasteboardReadingOptions","","",null,null],[13,"NSPasteboardReadingAsData","","",24,null],[13,"NSPasteboardReadingAsString","","",24,null],[13,"NSPasteboardReadingAsPropertyList","","",24,null],[13,"NSPasteboardReadingAsKeyedArchive","","",24,null],[4,"NSPasteboardWritingOptions","","",null,null],[13,"NSPasteboardWritingPromised","","",25,null],[8,"NSMenu","","",null,null],[11,"alloc","","",26,[[],["id",6]]],[11,"new","","",26,[[],["id",6]]],[10,"initWithTitle_","","",26,[[["id",6]],["id",6]]],[10,"setAutoenablesItems","","",26,[[["bool",6]]]],[10,"addItem_","","",26,[[["id",6]]]],[10,"addItemWithTitle_action_keyEquivalent","","",26,[[["id",6],["sel",6]],["id",6]]],[10,"itemAtIndex_","","",26,[[["nsinteger",6]],["id",6]]],[8,"NSMenuItem","","",null,null],[11,"alloc","","",27,[[],["id",6]]],[11,"new","","",27,[[],["id",6]]],[11,"separatorItem","","",27,[[],["id",6]]],[10,"initWithTitle_action_keyEquivalent_","","",27,[[["id",6],["sel",6]],["id",6]]],[10,"setKeyEquivalentModifierMask_","","",27,[[["nseventmodifierflags",3]]]],[10,"setSubmenu_","","",27,[[["id",6]]]],[10,"setTarget_","","",27,[[["id",6]]]],[6,"NSWindowDepth","","",null,null],[3,"NSWindowCollectionBehavior","","",null,null],[18,"NSWindowCollectionBehaviorDefault","","",28,null],[18,"NSWindowCollectionBehaviorCanJoinAllSpaces","","",28,null],[18,"NSWindowCollectionBehaviorMoveToActiveSpace","","",28,null],[18,"NSWindowCollectionBehaviorManaged","","",28,null],[18,"NSWindowCollectionBehaviorTransient","","",28,null],[18,"NSWindowCollectionBehaviorStationary","","",28,null],[18,"NSWindowCollectionBehaviorParticipatesInCycle","","",28,null],[18,"NSWindowCollectionBehaviorIgnoresCycle","","",28,null],[18,"NSWindowCollectionBehaviorFullScreenPrimary","","",28,null],[18,"NSWindowCollectionBehaviorFullScreenAuxiliary","","",28,null],[11,"empty","","Returns an empty set of flags",28,[[],["nswindowcollectionbehavior",3]]],[11,"all","","Returns the set containing all flags.",28,[[],["nswindowcollectionbehavior",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",28,[[],["nsuinteger",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",28,[[["nsuinteger",6]],[["option",4],["nswindowcollectionbehavior",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",28,[[["nsuinteger",6]],["nswindowcollectionbehavior",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",28,[[["nsuinteger",6]],["nswindowcollectionbehavior",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",28,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",28,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",28,[[["nswindowcollectionbehavior",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",28,[[["nswindowcollectionbehavior",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",28,[[["nswindowcollectionbehavior",3]]]],[11,"remove","","Removes the specified flags in-place.",28,[[["nswindowcollectionbehavior",3]]]],[11,"toggle","","Toggles the specified flags in-place.",28,[[["nswindowcollectionbehavior",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",28,[[["bool",15],["nswindowcollectionbehavior",3]]]],[3,"NSWindowOcclusionState","","",null,null],[18,"NSWindowOcclusionStateVisible","","",29,null],[11,"empty","","Returns an empty set of flags",29,[[],["nswindowocclusionstate",3]]],[11,"all","","Returns the set containing all flags.",29,[[],["nswindowocclusionstate",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",29,[[],["nsuinteger",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",29,[[["nsuinteger",6]],[["nswindowocclusionstate",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",29,[[["nsuinteger",6]],["nswindowocclusionstate",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",29,[[["nsuinteger",6]],["nswindowocclusionstate",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",29,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",29,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",29,[[["nswindowocclusionstate",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",29,[[["nswindowocclusionstate",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",29,[[["nswindowocclusionstate",3]]]],[11,"remove","","Removes the specified flags in-place.",29,[[["nswindowocclusionstate",3]]]],[11,"toggle","","Toggles the specified flags in-place.",29,[[["nswindowocclusionstate",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",29,[[["nswindowocclusionstate",3],["bool",15]]]],[8,"NSWindow","","",null,null],[11,"alloc","","",30,[[],["id",6]]],[10,"initWithContentRect_styleMask_backing_defer_","","",30,[[["bool",6],["nsbackingstoretype",4],["nswindowstylemask",3],["nsrect",3]],["id",6]]],[10,"initWithContentRect_styleMask_backing_defer_screen_","","",30,[[["bool",6],["id",6],["nsbackingstoretype",4],["nswindowstylemask",3],["nsrect",3]],["id",6]]],[10,"styleMask","","",30,[[],["nswindowstylemask",3]]],[10,"setStyleMask_","","",30,[[["nswindowstylemask",3]]]],[10,"toggleFullScreen_","","",30,[[["id",6]]]],[10,"worksWhenModal","","",30,[[],["bool",6]]],[10,"alphaValue","","",30,[[],["cgfloat",6]]],[10,"setAlphaValue_","","",30,[[["cgfloat",6]]]],[10,"backgroundColor","","",30,[[],["id",6]]],[10,"setBackgroundColor_","","",30,[[["id",6]]]],[10,"colorSpace","","",30,[[],["id",6]]],[10,"setColorSpace_","","",30,[[["id",6]]]],[10,"contentView","","",30,[[],["id",6]]],[10,"setContentView_","","",30,[[["id",6]]]],[10,"canHide","","",30,[[],["bool",6]]],[10,"setCanHide_","","",30,[[["bool",6]]]],[10,"hidesOnDeactivate","","",30,[[],["bool",6]]],[10,"setHidesOnDeactivate_","","",30,[[["bool",6]]]],[10,"collectionBehavior","","",30,[[],["nswindowcollectionbehavior",3]]],[10,"setCollectionBehavior_","","",30,[[["nswindowcollectionbehavior",3]]]],[10,"setOpaque_","","",30,[[["bool",6]]]],[10,"hasShadow","","",30,[[],["bool",6]]],[10,"setHasShadow_","","",30,[[["bool",6]]]],[10,"invalidateShadow","","",30,[[]]],[10,"autorecalculatesContentBorderThicknessForEdge_","","",30,[[["nsrectedge",4]],["bool",6]]],[10,"setAutorecalculatesContentBorderThickness_forEdge_","","",30,[[["bool",6],["nsrectedge",4]],["bool",6]]],[10,"contentBorderThicknessForEdge_","","",30,[[["nsrectedge",4]],["cgfloat",6]]],[10,"setContentBorderThickness_forEdge_","","",30,[[["cgfloat",6],["nsrectedge",4]]]],[10,"delegate","","",30,[[],["id",6]]],[10,"setDelegate_","","",30,[[["id",6]]]],[10,"preventsApplicationTerminationWhenModal","","",30,[[],["bool",6]]],[10,"setPreventsApplicationTerminationWhenModal_","","",30,[[["bool",6]]]],[10,"contentRectForFrameRect_styleMask_","","",30,[[["nswindowstylemask",3],["nsrect",3]],["nsrect",3]]],[10,"frameRectForContentRect_styleMask_","","",30,[[["nswindowstylemask",3],["nsrect",3]],["nsrect",3]]],[10,"minFrameWidthWithTitle_styleMask_","","",30,[[["id",6],["nswindowstylemask",3]],["cgfloat",6]]],[10,"contentRectForFrameRect_","","",30,[[["nsrect",3]],["nsrect",3]]],[10,"frameRectForContentRect_","","",30,[[["nsrect",3]],["nsrect",3]]],[10,"drawers","","",30,[[],["id",6]]],[10,"windowController","","",30,[[],["id",6]]],[10,"setWindowController_","","",30,[[["id",6]]]],[10,"frame","","",30,[[],["nsrect",3]]],[10,"setFrameOrigin_","","",30,[[["nspoint",3]]]],[10,"setFrameTopLeftPoint_","","",30,[[["nspoint",3]]]],[10,"constrainFrameRect_toScreen_","","",30,[[["id",6],["nsrect",3]]]],[10,"cascadeTopLeftFromPoint_","","",30,[[["nspoint",3]],["nspoint",3]]],[10,"setFrame_display_","","",30,[[["bool",6],["nsrect",3]]]],[10,"setFrame_displayViews_","","",30,[[["bool",6],["nsrect",3]]]],[10,"aspectRatio","","",30,[[],["nssize",3]]],[10,"setAspectRatio_","","",30,[[["nssize",3]]]],[10,"minSize","","",30,[[],["nssize",3]]],[10,"setMinSize_","","",30,[[["nssize",3]]]],[10,"maxSize","","",30,[[],["nssize",3]]],[10,"setMaxSize_","","",30,[[["nssize",3]]]],[10,"performZoom_","","",30,[[["id",6]]]],[10,"zoom_","","",30,[[["id",6]]]],[10,"resizeFlags","","",30,[[],["nsinteger",6]]],[10,"showsResizeIndicator","","",30,[[],["bool",6]]],[10,"setShowsResizeIndicator_","","",30,[[["bool",6]]]],[10,"resizeIncrements","","",30,[[],["nssize",3]]],[10,"setResizeIncrements_","","",30,[[["nssize",3]]]],[10,"preservesContentDuringLiveResize","","",30,[[],["bool",6]]],[10,"setPreservesContentDuringLiveResize_","","",30,[[["bool",6]]]],[10,"inLiveResize","","",30,[[],["bool",6]]],[10,"contentAspectRatio","","",30,[[],["nssize",3]]],[10,"setContentAspectRatio_","","",30,[[["nssize",3]]]],[10,"contentMinSize","","",30,[[],["nssize",3]]],[10,"setContentMinSize_","","",30,[[["nssize",3]]]],[10,"contentSize","","",30,[[],["nssize",3]]],[10,"setContentSize_","","",30,[[["nssize",3]]]],[10,"contentMaxSize","","",30,[[],["nssize",3]]],[10,"setContentMaxSize_","","",30,[[["nssize",3]]]],[10,"contentResizeIncrements","","",30,[[],["nssize",3]]],[10,"setContentResizeIncrements_","","",30,[[["nssize",3]]]],[10,"isVisible","","",30,[[],["bool",6]]],[10,"occlusionState","","",30,[[],["nswindowocclusionstate",3]]],[10,"orderOut_","","",30,[[["id",6]]]],[10,"orderBack_","","",30,[[["id",6]]]],[10,"orderFront_","","",30,[[["id",6]]]],[10,"orderFrontRegardless","","",30,[[]]],[10,"orderFrontWindow_relativeTo_","","",30,[[["nsinteger",6],["nswindoworderingmode",3]]]],[10,"level","","",30,[[],["nsinteger",6]]],[10,"setLevel_","","",30,[[["nsinteger",6]]]],[10,"isKeyWindow","","",30,[[],["bool",6]]],[10,"canBecomeKeyWindow","","",30,[[],["bool",6]]],[10,"makeKeyWindow","","",30,[[]]],[10,"makeKeyAndOrderFront_","","",30,[[["id",6]]]],[10,"canBecomeMainWindow","","",30,[[],["bool",6]]],[10,"makeMainWindow","","",30,[[]]],[10,"toolbar","","",30,[[],["id",6]]],[10,"setToolbar_","","",30,[[["id",6]]]],[10,"runToolbarCustomizationPalette","","",30,[[["id",6]]]],[10,"standardWindowButton_","","",30,[[["nswindowbutton",4]],["id",6]]],[10,"allowsAutomaticWindowTabbing","","",30,[[],["bool",6]]],[10,"setAllowsAutomaticWindowTabbing_","","",30,[[["bool",6]]]],[10,"tabbingIdentifier","","",30,[[],["id",6]]],[10,"tabbingMode","","",30,[[],["nswindowtabbingmode",4]]],[10,"setTabbingMode_","","",30,[[["nswindowtabbingmode",4]]]],[10,"addTabbedWindow_ordered_","","",30,[[["id",6],["nswindoworderingmode",3]]]],[10,"toggleTabBar_","","",30,[[["id",6]]]],[10,"initialFirstResponder","","",30,[[],["id",6]]],[10,"firstResponder","","",30,[[],["id",6]]],[10,"setInitialFirstResponder_","","",30,[[["id",6]]]],[10,"makeFirstResponder_","","",30,[[["id",6]],["bool",6]]],[10,"keyDown_","","",30,[[["id",6]]]],[10,"acceptsMouseMovedEvents","","",30,[[],["bool",6]]],[10,"ignoresMouseEvents","","",30,[[],["bool",6]]],[10,"setIgnoresMouseEvents_","","",30,[[["bool",6]]]],[10,"mouseLocationOutsideOfEventStream","","",30,[[],["nspoint",3]]],[10,"setAcceptsMouseMovedEvents_","","",30,[[["bool",6]]]],[10,"windowNumberAtPoint_belowWindowWithWindowNumber_","","",30,[[["nspoint",3],["nsinteger",6]],["nsinteger",6]]],[10,"backingScaleFactor","","",30,[[],["cgfloat",6]]],[10,"backingAlignedRect_options_","","",30,[[["nsalignmentoptions",3],["nsrect",3]],["nsrect",3]]],[10,"convertRectFromBacking_","","",30,[[["nsrect",3]],["nsrect",3]]],[10,"convertRectToBacking_","","",30,[[["nsrect",3]],["nsrect",3]]],[10,"convertRectToScreen_","","",30,[[["nsrect",3]],["nsrect",3]]],[10,"convertRectFromScreen_","","",30,[[["nsrect",3]],["nsrect",3]]],[10,"setDocumentEdited_","","",30,[[["bool",6]]]],[10,"title","","",30,[[],["id",6]]],[10,"setTitle_","","",30,[[["id",6]]]],[10,"setTitleWithRepresentedFilename_","","",30,[[["id",6]]]],[10,"setTitleVisibility_","","",30,[[["nswindowtitlevisibility",4]]]],[10,"setTitlebarAppearsTransparent_","","",30,[[["bool",6]]]],[10,"representedFilename","","",30,[[],["id",6]]],[10,"setRepresentedFilename_","","",30,[[["id",6]]]],[10,"representedURL","","",30,[[],["id",6]]],[10,"setRepresentedURL_","","",30,[[["id",6]]]],[10,"screen","","",30,[[],["id",6]]],[10,"deepestScreen","","",30,[[],["id",6]]],[10,"displaysWhenScreenProfileChanges","","",30,[[],["bool",6]]],[10,"setDisplaysWhenScreenProfileChanges_","","",30,[[["bool",6]]]],[10,"setMovableByWindowBackground_","","",30,[[["bool",6]]]],[10,"setMovable_","","",30,[[["bool",6]]]],[10,"center","","",30,[[]]],[10,"performClose_","","",30,[[["id",6]]]],[10,"close","","",30,[[]]],[10,"setReleasedWhenClosed_","","",30,[[["bool",6]]]],[10,"performMiniaturize_","","",30,[[["id",6]]]],[10,"miniaturize_","","",30,[[["id",6]]]],[10,"deminiaturize_","","",30,[[["id",6]]]],[10,"miniwindowImage","","",30,[[],["id",6]]],[10,"setMiniwindowImage_","","",30,[[["id",6]]]],[10,"miniwindowTitle","","",30,[[],["id",6]]],[10,"setMiniwindowTitle_","","",30,[[["id",6]]]],[4,"NSViewLayerContentsPlacement","","",null,null],[13,"NSViewLayerContentsPlacementScaleAxesIndependently","","",31,null],[13,"NSViewLayerContentsPlacementScaleProportionallyToFit","","",31,null],[13,"NSViewLayerContentsPlacementScaleProportionallyToFill","","",31,null],[13,"NSViewLayerContentsPlacementCenter","","",31,null],[13,"NSViewLayerContentsPlacementTop","","",31,null],[13,"NSViewLayerContentsPlacementTopRight","","",31,null],[13,"NSViewLayerContentsPlacementRight","","",31,null],[13,"NSViewLayerContentsPlacementBottomRight","","",31,null],[13,"NSViewLayerContentsPlacementBottom","","",31,null],[13,"NSViewLayerContentsPlacementBottomLeft","","",31,null],[13,"NSViewLayerContentsPlacementLeft","","",31,null],[13,"NSViewLayerContentsPlacementTopLeft","","",31,null],[8,"NSView","","",null,null],[11,"alloc","","",32,[[],["id",6]]],[10,"init","","",32,[[],["id",6]]],[10,"initWithFrame_","","",32,[[["nsrect",3]],["id",6]]],[10,"bounds","","",32,[[],["nsrect",3]]],[10,"frame","","",32,[[],["nsrect",3]]],[10,"setFrameSize","","",32,[[["nssize",3]]]],[10,"setFrameOrigin","","",32,[[["nspoint",3]]]],[10,"display_","","",32,[[]]],[10,"setWantsBestResolutionOpenGLSurface_","","",32,[[["bool",6]]]],[10,"convertPoint_fromView_","","",32,[[["nspoint",3],["id",6]],["nspoint",3]]],[10,"addSubview_","","",32,[[["id",6]]]],[10,"superview","","",32,[[],["id",6]]],[10,"removeFromSuperview","","",32,[[]]],[10,"setAutoresizingMask_","","",32,[[["nsautoresizingmaskoptions",6]]]],[10,"wantsLayer","","",32,[[],["bool",6]]],[10,"setWantsLayer","","",32,[[["bool",6]]]],[10,"layer","","",32,[[],["id",6]]],[10,"setLayer","","",32,[[["id",6]]]],[10,"widthAnchor","","",32,[[],["id",6]]],[10,"heightAnchor","","",32,[[],["id",6]]],[10,"convertRectToBacking","","",32,[[["nsrect",3]],["nsrect",3]]],[10,"layerContentsPlacement","","",32,[[],["nsviewlayercontentsplacement",4]]],[10,"setLayerContentsPlacement","","",32,[[["nsviewlayercontentsplacement",4]]]],[6,"NSAutoresizingMaskOptions","","",null,null],[17,"NSViewNotSizable","","",null,null],[17,"NSViewMinXMargin","","",null,null],[17,"NSViewWidthSizable","","",null,null],[17,"NSViewMaxXMargin","","",null,null],[17,"NSViewMinYMargin","","",null,null],[17,"NSViewHeightSizable","","",null,null],[17,"NSViewMaxYMargin","","",null,null],[8,"NSOpenGLView","","",null,null],[11,"alloc","","",33,[[],["id",6]]],[10,"initWithFrame_pixelFormat_","","",33,[[["id",6],["nsrect",3]],["id",6]]],[10,"display_","","",33,[[]]],[10,"setOpenGLContext_","","",33,[[["id",6]]]],[10,"setPixelFormat_","","",33,[[["id",6]]]],[8,"NSOpenGLPixelFormat","","",null,null],[11,"alloc","","",34,[[],["id",6]]],[10,"initWithAttributes_","","",34,[[],["id",6]]],[10,"getValues_forAttribute_forVirtualScreen_","","",34,[[["nsopenglpixelformatattribute",4],["glint",6]]]],[10,"numberOfVirtualScreens","","",34,[[],["glint",6]]],[8,"NSOpenGLContext","","",null,null],[11,"alloc","","",35,[[],["id",6]]],[10,"initWithFormat_shareContext_","","",35,[[["id",6]],["id",6]]],[10,"initWithCGLContextObj_","","",35,[[["cglcontextobj",6]],["id",6]]],[10,"clearCurrentContext","","",35,[[]]],[10,"currentContext","","",35,[[],["id",6]]],[10,"makeCurrentContext","","",35,[[]]],[10,"setView_","","",35,[[["id",6]]]],[10,"view","","",35,[[],["id",6]]],[10,"clearDrawable","","",35,[[]]],[10,"update","","",35,[[]]],[10,"flushBuffer","","",35,[[]]],[10,"setValues_forParameter_","","",35,[[["nsopenglcontextparameter",4]]]],[10,"getValues_forParameter_","","",35,[[["nsopenglcontextparameter",4]]]],[10,"setCurrentVirtualScreen_","","",35,[[["glint",6]]]],[10,"currentVirtualScreen","","",35,[[],["glint",6]]],[10,"CGLContextObj","","",35,[[],["cglcontextobj",6]]],[3,"NSEventSwipeTrackingOptions","","",null,null],[18,"NSEventSwipeTrackingLockDirection","","",36,null],[18,"NSEventSwipeTrackingClampGestureAmount","","",36,null],[11,"empty","","Returns an empty set of flags",36,[[],["nseventswipetrackingoptions",3]]],[11,"all","","Returns the set containing all flags.",36,[[],["nseventswipetrackingoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",36,[[],["nsuinteger",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",36,[[["nsuinteger",6]],[["nseventswipetrackingoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",36,[[["nsuinteger",6]],["nseventswipetrackingoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",36,[[["nsuinteger",6]],["nseventswipetrackingoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",36,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",36,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",36,[[["nseventswipetrackingoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",36,[[["nseventswipetrackingoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",36,[[["nseventswipetrackingoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",36,[[["nseventswipetrackingoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",36,[[["nseventswipetrackingoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",36,[[["bool",15],["nseventswipetrackingoptions",3]]]],[4,"NSEventGestureAxis","","",null,null],[13,"NSEventGestureAxisNone","","",37,null],[13,"NSEventGestureAxisHorizontal","","",37,null],[13,"NSEventGestureAxisVertical","","",37,null],[3,"NSEventPhase","","",null,null],[18,"NSEventPhaseNone","","",38,null],[18,"NSEventPhaseBegan","","",38,null],[18,"NSEventPhaseStationary","","",38,null],[18,"NSEventPhaseChanged","","",38,null],[18,"NSEventPhaseEnded","","",38,null],[18,"NSEventPhaseCancelled","","",38,null],[18,"NSEventPhaseMayBegin","","",38,null],[11,"empty","","Returns an empty set of flags",38,[[],["nseventphase",3]]],[11,"all","","Returns the set containing all flags.",38,[[],["nseventphase",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",38,[[],["nsuinteger",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",38,[[["nsuinteger",6]],[["nseventphase",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",38,[[["nsuinteger",6]],["nseventphase",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",38,[[["nsuinteger",6]],["nseventphase",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",38,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",38,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",38,[[["nseventphase",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",38,[[["nseventphase",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",38,[[["nseventphase",3]]]],[11,"remove","","Removes the specified flags in-place.",38,[[["nseventphase",3]]]],[11,"toggle","","Toggles the specified flags in-place.",38,[[["nseventphase",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",38,[[["nseventphase",3],["bool",15]]]],[3,"NSTouchPhase","","",null,null],[18,"NSTouchPhaseBegan","","",39,null],[18,"NSTouchPhaseMoved","","",39,null],[18,"NSTouchPhaseStationary","","",39,null],[18,"NSTouchPhaseEnded","","",39,null],[18,"NSTouchPhaseCancelled","","",39,null],[18,"NSTouchPhaseTouching","","",39,null],[18,"NSTouchPhaseAny","","",39,null],[11,"empty","","Returns an empty set of flags",39,[[],["nstouchphase",3]]],[11,"all","","Returns the set containing all flags.",39,[[],["nstouchphase",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",39,[[],["nsuinteger",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",39,[[["nsuinteger",6]],[["option",4],["nstouchphase",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",39,[[["nsuinteger",6]],["nstouchphase",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",39,[[["nsuinteger",6]],["nstouchphase",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",39,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",39,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",39,[[["nstouchphase",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",39,[[["nstouchphase",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",39,[[["nstouchphase",3]]]],[11,"remove","","Removes the specified flags in-place.",39,[[["nstouchphase",3]]]],[11,"toggle","","Toggles the specified flags in-place.",39,[[["nstouchphase",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",39,[[["bool",15],["nstouchphase",3]]]],[4,"NSEventType","","",null,null],[13,"NSLeftMouseDown","","",40,null],[13,"NSLeftMouseUp","","",40,null],[13,"NSRightMouseDown","","",40,null],[13,"NSRightMouseUp","","",40,null],[13,"NSMouseMoved","","",40,null],[13,"NSLeftMouseDragged","","",40,null],[13,"NSRightMouseDragged","","",40,null],[13,"NSMouseEntered","","",40,null],[13,"NSMouseExited","","",40,null],[13,"NSKeyDown","","",40,null],[13,"NSKeyUp","","",40,null],[13,"NSFlagsChanged","","",40,null],[13,"NSAppKitDefined","","",40,null],[13,"NSSystemDefined","","",40,null],[13,"NSApplicationDefined","","",40,null],[13,"NSPeriodic","","",40,null],[13,"NSCursorUpdate","","",40,null],[13,"NSScrollWheel","","",40,null],[13,"NSTabletPoint","","",40,null],[13,"NSTabletProximity","","",40,null],[13,"NSOtherMouseDown","","",40,null],[13,"NSOtherMouseUp","","",40,null],[13,"NSOtherMouseDragged","","",40,null],[13,"NSEventTypeGesture","","",40,null],[13,"NSEventTypeMagnify","","",40,null],[13,"NSEventTypeSwipe","","",40,null],[13,"NSEventTypeRotate","","",40,null],[13,"NSEventTypeBeginGesture","","",40,null],[13,"NSEventTypeEndGesture","","",40,null],[13,"NSEventTypePressure","","",40,null],[3,"NSEventMask","","",null,null],[18,"NSLeftMouseDownMask","","",41,null],[18,"NSLeftMouseUpMask","","",41,null],[18,"NSRightMouseDownMask","","",41,null],[18,"NSRightMouseUpMask","","",41,null],[18,"NSMouseMovedMask","","",41,null],[18,"NSLeftMouseDraggedMask","","",41,null],[18,"NSRightMouseDraggedMask","","",41,null],[18,"NSMouseEnteredMask","","",41,null],[18,"NSMouseExitedMask","","",41,null],[18,"NSKeyDownMask","","",41,null],[18,"NSKeyUpMask","","",41,null],[18,"NSFlagsChangedMask","","",41,null],[18,"NSAppKitDefinedMask","","",41,null],[18,"NSSystemDefinedMask","","",41,null],[18,"NSApplicationDefinedMask","","",41,null],[18,"NSPeriodicMask","","",41,null],[18,"NSCursorUpdateMask","","",41,null],[18,"NSScrollWheelMask","","",41,null],[18,"NSTabletPointMask","","",41,null],[18,"NSTabletProximityMask","","",41,null],[18,"NSOtherMouseDownMask","","",41,null],[18,"NSOtherMouseUpMask","","",41,null],[18,"NSOtherMouseDraggedMask","","",41,null],[18,"NSEventMaskGesture","","",41,null],[18,"NSEventMaskSwipe","","",41,null],[18,"NSEventMaskRotate","","",41,null],[18,"NSEventMaskBeginGesture","","",41,null],[18,"NSEventMaskEndGesture","","",41,null],[18,"NSEventMaskPressure","","",41,null],[18,"NSAnyEventMask","","",41,null],[11,"empty","","Returns an empty set of flags",41,[[],["nseventmask",3]]],[11,"all","","Returns the set containing all flags.",41,[[],["nseventmask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",41,[[],["c_ulonglong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",41,[[["c_ulonglong",6]],[["option",4],["nseventmask",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",41,[[["c_ulonglong",6]],["nseventmask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",41,[[["c_ulonglong",6]],["nseventmask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",41,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",41,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",41,[[["nseventmask",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",41,[[["nseventmask",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",41,[[["nseventmask",3]]]],[11,"remove","","Removes the specified flags in-place.",41,[[["nseventmask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",41,[[["nseventmask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",41,[[["bool",15],["nseventmask",3]]]],[11,"from_type","","",41,[[["nseventtype",4]],["nseventmask",3]]],[3,"NSEventModifierFlags","","",null,null],[18,"NSAlphaShiftKeyMask","","",42,null],[18,"NSShiftKeyMask","","",42,null],[18,"NSControlKeyMask","","",42,null],[18,"NSAlternateKeyMask","","",42,null],[18,"NSCommandKeyMask","","",42,null],[18,"NSNumericPadKeyMask","","",42,null],[18,"NSHelpKeyMask","","",42,null],[18,"NSFunctionKeyMask","","",42,null],[18,"NSDeviceIndependentModifierFlagsMask","","",42,null],[11,"empty","","Returns an empty set of flags",42,[[],["nseventmodifierflags",3]]],[11,"all","","Returns the set containing all flags.",42,[[],["nseventmodifierflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",42,[[],["nsuinteger",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",42,[[["nsuinteger",6]],[["option",4],["nseventmodifierflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",42,[[["nsuinteger",6]],["nseventmodifierflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",42,[[["nsuinteger",6]],["nseventmodifierflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",42,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",42,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",42,[[["nseventmodifierflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",42,[[["nseventmodifierflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",42,[[["nseventmodifierflags",3]]]],[11,"remove","","Removes the specified flags in-place.",42,[[["nseventmodifierflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",42,[[["nseventmodifierflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",42,[[["bool",15],["nseventmodifierflags",3]]]],[4,"NSPointingDeviceType","","",null,null],[4,"NSEventButtonMask","","",null,null],[4,"NSEventSubtype","","",null,null],[13,"NSWindowExposedEventType","","",43,null],[13,"NSApplicationActivatedEventType","","",43,null],[13,"NSApplicationDeactivatedEventType","","",43,null],[13,"NSWindowMovedEventType","","",43,null],[13,"NSScreenChangedEventType","","",43,null],[13,"NSAWTEventType","","",43,null],[17,"NSUpArrowFunctionKey","","",null,null],[17,"NSDownArrowFunctionKey","","",null,null],[17,"NSLeftArrowFunctionKey","","",null,null],[17,"NSRightArrowFunctionKey","","",null,null],[17,"NSF1FunctionKey","","",null,null],[17,"NSF2FunctionKey","","",null,null],[17,"NSF3FunctionKey","","",null,null],[17,"NSF4FunctionKey","","",null,null],[17,"NSF5FunctionKey","","",null,null],[17,"NSF6FunctionKey","","",null,null],[17,"NSF7FunctionKey","","",null,null],[17,"NSF8FunctionKey","","",null,null],[17,"NSF9FunctionKey","","",null,null],[17,"NSF10FunctionKey","","",null,null],[17,"NSF11FunctionKey","","",null,null],[17,"NSF12FunctionKey","","",null,null],[17,"NSF13FunctionKey","","",null,null],[17,"NSF14FunctionKey","","",null,null],[17,"NSF15FunctionKey","","",null,null],[17,"NSF16FunctionKey","","",null,null],[17,"NSF17FunctionKey","","",null,null],[17,"NSF18FunctionKey","","",null,null],[17,"NSF19FunctionKey","","",null,null],[17,"NSF20FunctionKey","","",null,null],[17,"NSF21FunctionKey","","",null,null],[17,"NSF22FunctionKey","","",null,null],[17,"NSF23FunctionKey","","",null,null],[17,"NSF24FunctionKey","","",null,null],[17,"NSF25FunctionKey","","",null,null],[17,"NSF26FunctionKey","","",null,null],[17,"NSF27FunctionKey","","",null,null],[17,"NSF28FunctionKey","","",null,null],[17,"NSF29FunctionKey","","",null,null],[17,"NSF30FunctionKey","","",null,null],[17,"NSF31FunctionKey","","",null,null],[17,"NSF32FunctionKey","","",null,null],[17,"NSF33FunctionKey","","",null,null],[17,"NSF34FunctionKey","","",null,null],[17,"NSF35FunctionKey","","",null,null],[17,"NSInsertFunctionKey","","",null,null],[17,"NSDeleteFunctionKey","","",null,null],[17,"NSHomeFunctionKey","","",null,null],[17,"NSBeginFunctionKey","","",null,null],[17,"NSEndFunctionKey","","",null,null],[17,"NSPageUpFunctionKey","","",null,null],[17,"NSPageDownFunctionKey","","",null,null],[17,"NSPrintScreenFunctionKey","","",null,null],[17,"NSScrollLockFunctionKey","","",null,null],[17,"NSPauseFunctionKey","","",null,null],[17,"NSSysReqFunctionKey","","",null,null],[17,"NSBreakFunctionKey","","",null,null],[17,"NSResetFunctionKey","","",null,null],[17,"NSStopFunctionKey","","",null,null],[17,"NSMenuFunctionKey","","",null,null],[17,"NSUserFunctionKey","","",null,null],[17,"NSSystemFunctionKey","","",null,null],[17,"NSPrintFunctionKey","","",null,null],[17,"NSClearLineFunctionKey","","",null,null],[17,"NSClearDisplayFunctionKey","","",null,null],[17,"NSInsertLineFunctionKey","","",null,null],[17,"NSDeleteLineFunctionKey","","",null,null],[17,"NSInsertCharFunctionKey","","",null,null],[17,"NSDeleteCharFunctionKey","","",null,null],[17,"NSPrevFunctionKey","","",null,null],[17,"NSNextFunctionKey","","",null,null],[17,"NSSelectFunctionKey","","",null,null],[17,"NSExecuteFunctionKey","","",null,null],[17,"NSUndoFunctionKey","","",null,null],[17,"NSRedoFunctionKey","","",null,null],[17,"NSFindFunctionKey","","",null,null],[17,"NSHelpFunctionKey","","",null,null],[17,"NSModeSwitchFunctionKey","","",null,null],[8,"NSEvent","","",null,null],[10,"keyEventWithType_location_modifierFlags_timestamp_windowNumber_context_characters_charactersIgnoringModifiers_isARepeat_keyCode_","","",44,[[["nspoint",3],["nstimeinterval",6],["nseventmodifierflags",3],["nsinteger",6],["id",6],["bool",6],["nseventtype",4],["c_ushort",6]],["id",6]]],[10,"mouseEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_clickCount_pressure_","","",44,[[["nspoint",3],["nstimeinterval",6],["id",6],["nseventmodifierflags",3],["nseventtype",4],["nsinteger",6],["c_float",6]],["id",6]]],[10,"enterExitEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_trackingNumber_userData_","","",44,[[["nspoint",3],["nstimeinterval",6],["id",6],["nseventmodifierflags",3],["nseventtype",4],["nsinteger",6]],["id",6]]],[10,"otherEventWithType_location_modifierFlags_timestamp_windowNumber_context_subtype_data1_data2_","","",44,[[["nspoint",3],["nstimeinterval",6],["nseventmodifierflags",3],["nsinteger",6],["id",6],["nseventtype",4],["nseventsubtype",4]],["id",6]]],[10,"eventWithEventRef_","","",44,[[],["id",6]]],[10,"eventWithCGEvent_","","",44,[[],["id",6]]],[10,"context","","",44,[[],["id",6]]],[10,"locationInWindow","","",44,[[],["nspoint",3]]],[10,"modifierFlags","","",44,[[],["nseventmodifierflags",3]]],[10,"timestamp","","",44,[[],["nstimeinterval",6]]],[10,"eventType","","",44,[[],["nseventtype",4]]],[10,"window","","",44,[[],["id",6]]],[10,"windowNumber","","",44,[[],["nsinteger",6]]],[10,"eventRef","","",44,[[]]],[10,"CGEvent","","",44,[[]]],[10,"currentModifierFlags","","",44,[[],["nseventmodifierflags",3]]],[10,"keyRepeatDelay","","",44,[[],["nstimeinterval",6]]],[10,"keyRepeatInterval","","",44,[[],["nstimeinterval",6]]],[10,"characters","","",44,[[],["id",6]]],[10,"charactersIgnoringModifiers","","",44,[[],["id",6]]],[10,"keyCode","","",44,[[],["c_ushort",6]]],[10,"isARepeat","","",44,[[],["bool",6]]],[10,"pressedMouseButtons","","",44,[[],["nsuinteger",6]]],[10,"doubleClickInterval","","",44,[[],["nstimeinterval",6]]],[10,"mouseLocation","","",44,[[],["nspoint",3]]],[10,"buttonNumber","","",44,[[],["nsinteger",6]]],[10,"clickCount","","",44,[[],["nsinteger",6]]],[10,"pressure","","",44,[[],["c_float",6]]],[10,"stage","","",44,[[],["nsinteger",6]]],[10,"setMouseCoalescingEnabled_","","",44,[[["bool",6]]]],[10,"isMouseCoalescingEnabled","","",44,[[],["bool",6]]],[10,"eventNumber","","",44,[[],["nsinteger",6]]],[10,"trackingNumber","","",44,[[],["nsinteger",6]]],[10,"trackingArea","","",44,[[],["id",6]]],[10,"userData","","",44,[[]]],[10,"data1","","",44,[[],["nsinteger",6]]],[10,"data2","","",44,[[],["nsinteger",6]]],[10,"subtype","","",44,[[],["nseventsubtype",4]]],[10,"deltaX","","",44,[[],["cgfloat",6]]],[10,"deltaY","","",44,[[],["cgfloat",6]]],[10,"deltaZ","","",44,[[],["cgfloat",6]]],[10,"capabilityMask","","",44,[[],["nsuinteger",6]]],[10,"deviceID","","",44,[[],["nsuinteger",6]]],[10,"pointingDeviceID","","",44,[[],["nsuinteger",6]]],[10,"pointingDeviceSerialNumber","","",44,[[],["nsuinteger",6]]],[10,"pointingDeviceType","","",44,[[],["nspointingdevicetype",4]]],[10,"systemTabletID","","",44,[[],["nsuinteger",6]]],[10,"tabletID","","",44,[[],["nsuinteger",6]]],[10,"uniqueID","","",44,[[],["c_ulonglong",6]]],[10,"vendorID","","",44,[[],["nsuinteger",6]]],[10,"vendorPointingDeviceType","","",44,[[],["nsuinteger",6]]],[10,"absoluteX","","",44,[[],["nsinteger",6]]],[10,"absoluteY","","",44,[[],["nsinteger",6]]],[10,"absoluteZ","","",44,[[],["nsinteger",6]]],[10,"buttonMask","","",44,[[],["nseventbuttonmask",4]]],[10,"rotation","","",44,[[],["c_float",6]]],[10,"tangentialPressure","","",44,[[],["c_float",6]]],[10,"tilt","","",44,[[],["nspoint",3]]],[10,"vendorDefined","","",44,[[],["id",6]]],[10,"startPeriodicEventsAfterDelay_withPeriod_","","",44,[[["nstimeinterval",6]]]],[10,"stopPeriodicEvents","","",44,[[]]],[10,"magnification","","",44,[[],["cgfloat",6]]],[10,"touchesMatchingPhase_inView_","","",44,[[["nstouchphase",3],["id",6]],["id",6]]],[10,"isSwipeTrackingFromScrollEventsEnabled","","",44,[[],["bool",6]]],[10,"removeMonitor_","","",44,[[["id",6]]]],[10,"hasPreciseScrollingDeltas","","",44,[[],["bool",6]]],[10,"scrollingDeltaX","","",44,[[],["cgfloat",6]]],[10,"scrollingDeltaY","","",44,[[],["cgfloat",6]]],[10,"momentumPhase","","",44,[[],["nseventphase",3]]],[10,"phase","","",44,[[],["nseventphase",3]]],[10,"locationInNode_","","",44,[[["id",6]],["cgpoint",3]]],[8,"NSScreen","","",null,null],[10,"mainScreen","","",45,[[],["id",6]]],[10,"deepestScreen","","",45,[[],["id",6]]],[10,"screens","","",45,[[],["id",6]]],[10,"depth","","",45,[[],["nswindowdepth",6]]],[10,"frame","","",45,[[],["nsrect",3]]],[10,"supportedWindowDepths","","",45,[[]]],[10,"deviceDescription","","",45,[[],["id",6]]],[10,"visibleFrame","","",45,[[],["nsrect",3]]],[10,"colorSpace","","",45,[[],["id",6]]],[10,"screensHaveSeparateSpaces","","",45,[[],["bool",6]]],[10,"backingAlignedRect_options_","","",45,[[["nsalignmentoptions",3],["nsrect",3]],["nsrect",3]]],[10,"backingScaleFactor","","",45,[[],["cgfloat",6]]],[10,"convertRectFromBacking_","","",45,[[["nsrect",3]],["nsrect",3]]],[10,"convertRectToBacking_","","",45,[[["nsrect",3]],["nsrect",3]]],[8,"NSControl","","",null,null],[11,"alloc","","",46,[[],["id",6]]],[10,"initWithFrame_","","",46,[[["nsrect",3]],["id",6]]],[10,"isEnabled_","","",46,[[],["bool",6]]],[10,"setEnabled_","","",46,[[["bool",6]],["bool",6]]],[8,"NSImageView","","",null,null],[11,"alloc","","",47,[[],["id",6]]],[10,"initWithFrame_","","",47,[[["nsrect",3]],["id",6]]],[10,"setImage_","","",47,[[["id",6]]]],[8,"NSButton","","",null,null],[10,"setImage_","","",48,[[["id",6]]]],[10,"setBezelStyle_","","",48,[[["nsbezelstyle",4]]]],[10,"setTitle_","","",48,[[["id",6]]]],[11,"alloc","","",48,[[],["id",6]]],[10,"initWithFrame_","","",48,[[["nsrect",3]],["id",6]]],[10,"setTarget_","","",48,[[["id",6]]]],[10,"setAction_","","",48,[[["sel",3]]]],[8,"NSImage","","",null,null],[11,"alloc","","",49,[[],["id",6]]],[10,"initByReferencingFile_","","",49,[[["id",6]],["id",6]]],[10,"initWithContentsOfFile_","","",49,[[["id",6]],["id",6]]],[10,"initWithData_","","",49,[[["id",6]],["id",6]]],[10,"initWithDataIgnoringOrientation_","","",49,[[["id",6]],["id",6]]],[10,"initWithPasteboard_","","",49,[[["id",6]],["id",6]]],[10,"initWithSize_flipped_drawingHandler_","","",49,[[["bool",6],["nssize",3]]]],[10,"initWithSize_","","",49,[[["nssize",3]],["id",6]]],[11,"imageNamed_","","",49,[[["id",6]],["id",6]]],[10,"name","","",49,[[],["id",6]]],[10,"setName_","","",49,[[["id",6]],["bool",6]]],[10,"size","","",49,[[],["nssize",3]]],[10,"template","","",49,[[],["bool",6]]],[10,"canInitWithPasteboard_","","",49,[[["id",6]],["bool",6]]],[10,"imageTypes","","",49,[[],["id",6]]],[10,"imageUnfilteredTypes","","",49,[[],["id",6]]],[10,"addRepresentation_","","",49,[[["id",6]]]],[10,"addRepresentations_","","",49,[[["id",6]]]],[10,"representations","","",49,[[],["id",6]]],[10,"removeRepresentation_","","",49,[[["id",6]]]],[10,"bestRepresentationForRect_context_hints_","","",49,[[["id",6],["nsrect",3]],["id",6]]],[10,"prefersColorMatch","","",49,[[],["bool",6]]],[10,"usesEPSOnResolutionMismatch","","",49,[[],["bool",6]]],[10,"matchesOnMultipleResolution","","",49,[[],["bool",6]]],[10,"drawInRect_","","",49,[[["nsrect",3]]]],[10,"drawAtPoint_fromRect_operation_fraction_","","",49,[[["nspoint",3],["nscompositingoperation",4],["cgfloat",6],["nsrect",3]]]],[10,"drawInRect_fromRect_operation_fraction_","","",49,[[["nscompositingoperation",4],["cgfloat",6],["nsrect",3]]]],[10,"drawInRect_fromRect_operation_fraction_respectFlipped_hints_","","",49,[[["bool",6],["id",6],["nscompositingoperation",4],["cgfloat",6],["nsrect",3]]]],[10,"drawRepresentation_inRect_","","",49,[[["id",6],["nsrect",3]]]],[10,"isValid","","",49,[[],["bool",6]]],[10,"backgroundColor","","",49,[[],["id",6]]],[10,"lockFocus","","",49,[[]]],[10,"lockFocusFlipped_","","",49,[[["bool",6]]]],[10,"unlockFocus","","",49,[[]]],[10,"alignmentRect","","",49,[[],["nsrect",3]]],[10,"cacheMode","","",49,[[],["nsimagecachemode",4]]],[10,"recache","","",49,[[]]],[10,"delegate","","",49,[[],["id",6]]],[10,"TIFFRepresentation","","",49,[[],["id",6]]],[10,"TIFFRepresentationUsingCompression_factor_","","",49,[[["nstiffcompression",4],["f32",15]],["id",6]]],[10,"cancelIncrementalLoad","","",49,[[]]],[10,"hitTestRect_withImageDestinationRect_context_hints_flipped_","","",49,[[["id",6],["bool",6],["nsrect",3]],["bool",6]]],[10,"accessibilityDescription","","",49,[[],["id",6]]],[10,"layerContentsForContentsScale_","","",49,[[["cgfloat",6]],["id",6]]],[10,"recommendedLayerContentsScale_","","",49,[[["cgfloat",6]],["cgfloat",6]]],[10,"matchesOnlyOnBestFittingAxis","","",49,[[],["bool",6]]],[4,"NSCompositingOperation","","",null,null],[13,"NSCompositeClear","","",50,null],[13,"NSCompositeCopy","","",50,null],[13,"NSCompositeSourceOver","","",50,null],[13,"NSCompositeSourceIn","","",50,null],[13,"NSCompositeSourceOut","","",50,null],[13,"NSCompositeSourceAtop","","",50,null],[13,"NSCompositeDestinationOver","","",50,null],[13,"NSCompositeDestinationIn","","",50,null],[13,"NSCompositeDestinationOut","","",50,null],[13,"NSCompositeDestinationAtop","","",50,null],[13,"NSCompositeXOR","","",50,null],[13,"NSCompositePlusDarker","","",50,null],[13,"NSCompositeHighlight","","",50,null],[13,"NSCompositePlusLighter","","",50,null],[4,"NSImageCacheMode","","",null,null],[13,"NSImageCacheDefault","","",51,null],[13,"NSImageCacheAlways","","",51,null],[13,"NSImageCacheBySize","","",51,null],[13,"NSImageCacheNever","","",51,null],[4,"NSTIFFCompression","","",null,null],[13,"NSTIFFCompressionNone","","",52,null],[13,"NSTIFFCompressionCCITTFAX3","","",52,null],[13,"NSTIFFCompressionCCITTFAX4","","",52,null],[13,"NSTIFFCompressionLZW","","",52,null],[13,"NSTIFFCompressionJPEG","","",52,null],[13,"NSTIFFCompressionNEXT","","",52,null],[13,"NSTIFFCompressionPackBits","","",52,null],[13,"NSTIFFCompressionOldJPEG","","",52,null],[4,"NSImageLoadStatus","","",null,null],[13,"NSImageLoadStatusCompleted","","",53,null],[13,"NSImageLoadStatusCancelled","","",53,null],[13,"NSImageLoadStatusInvalidData","","",53,null],[13,"NSImageLoadStatusUnexpectedEOF","","",53,null],[13,"NSImageLoadStatusReadError","","",53,null],[8,"NSSound","","",null,null],[11,"canInitWithPasteboard_","","",54,[[["id",6]],["bool",6]]],[10,"initWithContentsOfFile_withReference_","","",54,[[["id",6],["bool",6]],["id",6]]],[10,"initWithContentsOfURL_withReference_","","",54,[[["id",6],["bool",6]],["id",6]]],[10,"initWithData_","","",54,[[["id",6]],["id",6]]],[10,"initWithPasteboard_","","",54,[[["id",6]],["id",6]]],[10,"name","","",54,[[],["id",6]]],[10,"volume","","",54,[[],["f32",15]]],[10,"currentTime","","",54,[[],["nstimeinterval",6]]],[10,"loops","","",54,[[],["bool",6]]],[10,"playbackDeviceIdentifier","","",54,[[],["id",6]]],[10,"delegate","","",54,[[],["id",6]]],[11,"soundUnfilteredTypes","","",54,[[],["id",6]]],[11,"soundNamed_","","",54,[[["id",6]],["id",6]]],[10,"duration","","",54,[[],["nstimeinterval",6]]],[10,"playing","","",54,[[],["bool",6]]],[10,"pause","","",54,[[],["bool",6]]],[10,"play","","",54,[[],["bool",6]]],[10,"resume","","",54,[[],["bool",6]]],[10,"stop","","",54,[[],["bool",6]]],[10,"writeToPasteboard_","","",54,[[["id",6]]]],[17,"NSVariableStatusItemLength","","",null,null],[17,"NSSquareStatusItemLength","","",null,null],[8,"NSStatusItem","","",null,null],[10,"statusBar","","",55,[[],["id",6]]],[10,"button","","",55,[[],["id",6]]],[10,"menu","","",55,[[],["id",6]]],[10,"setMenu_","","",55,[[["id",6]]]],[10,"length","","",55,[[],["cgfloat",6]]],[10,"setLength_","","",55,[[["cgfloat",6]]]],[8,"NSStatusBar","","",null,null],[11,"systemStatusBar","","",56,[[],["id",6]]],[10,"statusItemWithLength_","","",56,[[["cgfloat",6]],["id",6]]],[10,"removeStatusItem_","","",56,[[["id",6]]]],[10,"isVertical","","",56,[[],["bool",6]]],[8,"NSTextField","","",null,null],[11,"alloc","","",57,[[],["id",6]]],[10,"initWithFrame_","","",57,[[["nsrect",3]],["id",6]]],[10,"setEditable_","","",57,[[["bool",6]]]],[10,"setStringValue_","","",57,[[["id",6]]]],[4,"NSTabViewType","","",null,null],[13,"NSTopTabsBezelBorder","","",58,null],[13,"NSLeftTabsBezelBorder","","",58,null],[13,"NSBottomTabsBezelBorder","","",58,null],[13,"NSRightTabsBezelBorder","","",58,null],[13,"NSNoTabsBezelBorder","","",58,null],[13,"NSNoTabsLineBorder","","",58,null],[13,"NSNoTabsNoBorder","","",58,null],[8,"NSTabView","","",null,null],[11,"new","","",59,[[],["id",6]]],[10,"initWithFrame_","","",59,[[["nsrect",3]],["id",6]]],[10,"addTabViewItem_","","",59,[[["id",6]]]],[10,"insertTabViewItem_atIndex_","","",59,[[["nsinteger",6],["id",6]]]],[10,"removeTabViewItem_","","",59,[[["id",6]]]],[10,"indexOfTabViewItem_","","",59,[[["id",6]],["id",6]]],[10,"indexOfTabViewItemWithIdentifier_","","",59,[[["id",6]],["id",6]]],[10,"numberOfTabViewItems","","",59,[[],["id",6]]],[10,"tabViewItemAtIndex_","","",59,[[["id",6]],["id",6]]],[10,"tabViewItems","","",59,[[],["id",6]]],[10,"selectFirstTabViewItem_","","",59,[[["id",6]]]],[10,"selectLastTabViewItem_","","",59,[[["id",6]]]],[10,"selectNextTabViewItem_","","",59,[[["id",6]]]],[10,"selectPreviousTabViewItem_","","",59,[[["id",6]]]],[10,"selectTabViewItem_","","",59,[[["id",6]]]],[10,"selectTabViewItemAtIndex_","","",59,[[["id",6]]]],[10,"selectTabViewItemWithIdentifier_","","",59,[[["id",6]]]],[10,"selectedTabViewItem","","",59,[[],["id",6]]],[10,"takeSelectedTabViewItemFromSender_","","",59,[[["id",6]]]],[10,"font","","",59,[[],["id",6]]],[10,"setFont_","","",59,[[["id",6]]]],[10,"tabViewType","","",59,[[],["nstabviewtype",4]]],[10,"setTabViewType_","","",59,[[["nstabviewtype",4]]]],[10,"controlTint","","",59,[[],["id",6]]],[10,"setControlTint_","","",59,[[["id",6]]]],[10,"drawsBackground","","",59,[[],["bool",6]]],[10,"setDrawsBackground_","","",59,[[["bool",6]]]],[10,"minimumSize","","",59,[[],["id",6]]],[10,"contentRect","","",59,[[],["id",6]]],[10,"controlSize","","",59,[[],["id",6]]],[10,"setControlSize_","","",59,[[["id",6]]]],[10,"allowsTruncatedLabels","","",59,[[],["bool",6]]],[10,"setAllowsTruncatedLabels_","","",59,[[["bool",6]]]],[10,"setDelegate_","","",59,[[["id",6]]]],[10,"delegate","","",59,[[],["id",6]]],[10,"tabViewAtPoint_","","",59,[[["id",6]],["id",6]]],[4,"NSTabState","","",null,null],[13,"NSSelectedTab","","",60,null],[13,"NSBackgroundTab","","",60,null],[13,"NSPressedTab","","",60,null],[8,"NSTabViewItem","","",null,null],[11,"alloc","","",61,[[],["id",6]]],[11,"new","","",61,[[],["id",6]]],[10,"initWithIdentifier_","","",61,[[["id",6]],["id",6]]],[10,"drawLabel_inRect_","","",61,[[["bool",6],["nsrect",3]]]],[10,"label","","",61,[[],["id",6]]],[10,"setLabel_","","",61,[[["id",6]]]],[10,"sizeOfLabel_","","",61,[[["bool",6]]]],[10,"tabState","","",61,[[],["nstabstate",4]]],[10,"identifier","","",61,[[],["id",6]]],[10,"setIdentifier_","","",61,[[["id",6]]]],[10,"color","","",61,[[],["id",6]]],[10,"setColor_","","",61,[[["id",6]]]],[10,"view","","",61,[[],["id",6]]],[10,"setView_","","",61,[[["id",6]]]],[10,"initialFirstResponder","","",61,[[],["id",6]]],[10,"setInitialFirstResponder_","","",61,[[["id",6]]]],[10,"tabView","","",61,[[],["id",6]]],[10,"tooltip","","",61,[[],["id",6]]],[10,"setTooltip_","","",61,[[["id",6]]]],[8,"NSLayoutConstraint","","",null,null],[10,"activateConstraints","","",62,[[["id",6]],["id",6]]],[8,"NSLayoutDimension","","",null,null],[10,"constraintEqualToConstant","","",63,[[["cgfloat",6]],["id",6]]],[10,"constraintLessThanOrEqualToConstant","","",63,[[["cgfloat",6]],["id",6]]],[10,"constraintGreaterThanOrEqualToConstant","","",63,[[["cgfloat",6]],["id",6]]],[8,"NSColorSpace","","",null,null],[10,"deviceRGBColorSpace","","",64,[[],["id",6]]],[10,"genericRGBColorSpace","","",64,[[],["id",6]]],[10,"deviceCMYKColorSpace","","",64,[[],["id",6]]],[10,"genericCMYKColorSpace","","",64,[[],["id",6]]],[10,"deviceGrayColorSpace","","",64,[[],["id",6]]],[10,"genericGrayColorSpace","","",64,[[],["id",6]]],[10,"sRGBColorSpace","","",64,[[],["id",6]]],[10,"extendedSRGBColorSpace","","",64,[[],["id",6]]],[10,"displayP3ColorSpace","","",64,[[],["id",6]]],[10,"genericGamma22GrayColorSpace","","",64,[[],["id",6]]],[10,"extendedGenericGamma22GrayColorSpace","","",64,[[],["id",6]]],[10,"adobeRGB1998ColorSpace","","",64,[[],["id",6]]],[10,"alloc","","",64,[[],["id",6]]],[10,"initWithCGColorSpace_","","",64,[[],["id",6]]],[10,"CGColorSpace","","",64,[[]]],[10,"localizedName","","",64,[[],["id",6]]],[8,"NSColor","","",null,null],[10,"clearColor","","",65,[[],["id",6]]],[10,"colorWithRed_green_blue_alpha_","","",65,[[["cgfloat",6]],["id",6]]],[10,"colorWithSRGBRed_green_blue_alpha_","","",65,[[["cgfloat",6]],["id",6]]],[10,"colorWithDeviceRed_green_blue_alpha_","","",65,[[["cgfloat",6]],["id",6]]],[10,"colorWithDisplayP3Red_green_blue_alpha_","","",65,[[["cgfloat",6]],["id",6]]],[10,"colorWithCalibratedRed_green_blue_alpha_","","",65,[[["cgfloat",6]],["id",6]]],[10,"colorUsingColorSpace_","","",65,[[["id",6]],["id",6]]],[10,"alphaComponent","","",65,[[],["cgfloat",6]]],[10,"whiteComponent","","",65,[[],["cgfloat",6]]],[10,"redComponent","","",65,[[],["cgfloat",6]]],[10,"greenComponent","","",65,[[],["cgfloat",6]]],[10,"blueComponent","","",65,[[],["cgfloat",6]]],[10,"cyanComponent","","",65,[[],["cgfloat",6]]],[10,"magentaComponent","","",65,[[],["cgfloat",6]]],[10,"yellowComponent","","",65,[[],["cgfloat",6]]],[10,"blackComponent","","",65,[[],["cgfloat",6]]],[10,"hueComponent","","",65,[[],["cgfloat",6]]],[10,"saturationComponent","","",65,[[],["cgfloat",6]]],[10,"brightnessComponent","","",65,[[],["cgfloat",6]]],[8,"NSToolbar","","",null,null],[11,"alloc","","",66,[[],["id",6]]],[10,"init_","","",66,[[],["id",6]]],[10,"initWithIdentifier_","","",66,[[["id",6]],["id",6]]],[10,"showsBaselineSeparator","","",66,[[],["bool",6]]],[10,"setShowsBaselineSeparator_","","",66,[[["bool",6]]]],[8,"NSSpellChecker","","",null,null],[10,"sharedSpellChecker","","",67,[[],["id",6]]],[10,"checkSpellingOfString_startingAt","","",67,[[["nsinteger",6],["id",6]],["nsrange",3]]],[10,"checkSpellingOfString_startingAt_language_wrap_inSpellDocumentWithTag_wordCount","","",67,[[["id",6],["bool",6],["nsinteger",6]]]],[10,"uniqueSpellDocumentTag","","",67,[[],["nsinteger",6]]],[10,"closeSpellDocumentWithTag","","",67,[[["nsinteger",6]]]],[10,"ignoreWord_inSpellDocumentWithTag","","",67,[[["nsinteger",6],["id",6]]]],[8,"NSNib","","",null,null],[11,"alloc","","",68,[[],["id",6]]],[10,"initWithNibNamed_bundle_","","",68,[[["id",6]],["id",6]]],[0,"base","cocoa","",null,null],[6,"Class","cocoa::base","",null,null],[6,"id","","",null,null],[6,"SEL","","",null,null],[17,"nil","","",null,null],[17,"Nil","","",null,null],[5,"selector","","A convenience method to convert the name of a selector to …",null,[[["str",15]],["sel",3]]],[6,"BOOL","","The Objective-C <code>BOOL</code> type.",null,null],[17,"NO","","The equivalent of false for Objective-C\'s <code>BOOL</code> type.",null,null],[17,"YES","","The equivalent of true for Objective-C\'s <code>BOOL</code> type.",null,null],[0,"foundation","cocoa","",null,null],[6,"NSInteger","cocoa::foundation","",null,null],[6,"NSUInteger","","",null,null],[17,"NSIntegerMax","","",null,null],[17,"NSNotFound","","",null,null],[3,"NSRange","","",null,null],[12,"location","","",69,null],[12,"length","","",69,null],[7,"NSDefaultRunLoopMode","","",null,null],[8,"NSAutoreleasePool","","",null,null],[11,"new","","",70,[[]]],[10,"autorelease","","",70,[[]]],[10,"drain","","",70,[[]]],[3,"NSOperatingSystemVersion","","",null,null],[12,"majorVersion","","",71,null],[12,"minorVersion","","",71,null],[12,"patchVersion","","",71,null],[8,"NSProcessInfo","","",null,null],[11,"processInfo","","",72,[[]]],[10,"processName","","",72,[[]]],[10,"operatingSystemVersion","","",72,[[],["nsoperatingsystemversion",3]]],[10,"isOperatingSystemAtLeastVersion","","",72,[[["nsoperatingsystemversion",3]],["bool",15]]],[6,"NSTimeInterval","","",null,null],[8,"NSArray","","",null,null],[11,"array","","",73,[[]]],[11,"arrayWithObjects","","",73,[[]]],[11,"arrayWithObject","","",73,[[]]],[10,"init","","",73,[[]]],[10,"count","","",73,[[],["u64",15]]],[10,"arrayByAddingObjectFromArray","","",73,[[]]],[10,"arrayByAddingObjectsFromArray","","",73,[[]]],[10,"objectAtIndex","","",73,[[["u64",15]]]],[8,"NSDictionary","","",null,null],[11,"dictionary","","",74,[[]]],[11,"dictionaryWithContentsOfFile_","","",74,[[]]],[11,"dictionaryWithContentsOfURL_","","",74,[[]]],[11,"dictionaryWithDictionary_","","",74,[[]]],[11,"dictionaryWithObject_forKey_","","",74,[[]]],[11,"dictionaryWithObjects_forKeys_","","",74,[[]]],[11,"dictionaryWithObjects_forKeys_count_","","",74,[[["u64",15]]]],[11,"dictionaryWithObjectsAndKeys_","","",74,[[]]],[10,"init","","",74,[[]]],[10,"initWithContentsOfFile_","","",74,[[]]],[10,"initWithContentsOfURL_","","",74,[[]]],[10,"initWithDictionary_","","",74,[[]]],[10,"initWithDictionary_copyItems_","","",74,[[["i8",15]]]],[10,"initWithObjects_forKeys_","","",74,[[]]],[10,"initWithObjects_forKeys_count_","","",74,[[["u64",15]]]],[10,"initWithObjectsAndKeys_","","",74,[[]]],[11,"sharedKeySetForKeys_","","",74,[[]]],[10,"count","","",74,[[],["u64",15]]],[10,"isEqualToDictionary_","","",74,[[],["i8",15]]],[10,"allKeys","","",74,[[]]],[10,"allKeysForObject_","","",74,[[]]],[10,"allValues","","",74,[[]]],[10,"objectForKey_","","",74,[[]]],[10,"objectForKeyedSubscript_","","",74,[[]]],[10,"objectsForKeys_notFoundMarker_","","",74,[[]]],[10,"valueForKey_","","",74,[[]]],[10,"keyEnumerator","","",74,[[]]],[10,"objectEnumerator","","",74,[[]]],[10,"enumerateKeysAndObjectsUsingBlock_","","",74,[[]]],[10,"enumerateKeysAndObjectsWithOptions_usingBlock_","","",74,[[["nsenumerationoptions",3]]]],[10,"keysSortedByValueUsingSelector_","","",74,[[["sel",3]]]],[10,"keysSortedByValueUsingComparator_","","",74,[[]]],[10,"keysSortedByValueWithOptions_usingComparator_","","",74,[[["nsenumerationoptions",3]]]],[10,"keysOfEntriesPassingTest_","","",74,[[]]],[10,"keysOfEntriesWithOptions_PassingTest_","","",74,[[["nsenumerationoptions",3]]]],[10,"writeToFile_atomically_","","",74,[[["i8",15]],["i8",15]]],[10,"writeToURL_atomically_","","",74,[[["i8",15]],["i8",15]]],[10,"fileCreationDate","","",74,[[]]],[10,"fileExtensionHidden","","",74,[[],["i8",15]]],[10,"fileGroupOwnerAccountID","","",74,[[]]],[10,"fileGroupOwnerAccountName","","",74,[[]]],[10,"fileIsAppendOnly","","",74,[[],["i8",15]]],[10,"fileIsImmutable","","",74,[[],["i8",15]]],[10,"fileModificationDate","","",74,[[]]],[10,"fileOwnerAccountID","","",74,[[]]],[10,"fileOwnerAccountName","","",74,[[]]],[10,"filePosixPermissions","","",74,[[],["u64",15]]],[10,"fileSize","","",74,[[],["u64",15]]],[10,"fileSystemFileNumber","","",74,[[],["u64",15]]],[10,"fileSystemNumber","","",74,[[],["i64",15]]],[10,"fileType","","",74,[[]]],[10,"description","","",74,[[]]],[10,"descriptionInStringsFileFormat","","",74,[[]]],[10,"descriptionWithLocale_","","",74,[[]]],[10,"descriptionWithLocale_indent_","","",74,[[["u64",15]]]],[3,"NSEnumerationOptions","","",null,null],[6,"NSComparator","","",null,null],[4,"NSComparisonResult","","",null,null],[13,"NSOrderedAscending","","",75,null],[13,"NSOrderedSame","","",75,null],[13,"NSOrderedDescending","","",75,null],[8,"NSString","","",null,null],[11,"alloc","","",76,[[]]],[10,"stringByAppendingString_","","",76,[[]]],[10,"init_str","","",76,[[["str",15]]]],[10,"UTF8String","","",76,[[]]],[10,"len","","",76,[[],["usize",15]]],[10,"isEqualToString","","",76,[[["str",15]],["bool",15]]],[10,"substringWithRange","","",76,[[["nsrange",3]]]],[8,"NSDate","","",null,null],[11,"distantPast","","",77,[[]]],[11,"distantFuture","","",77,[[]]],[3,"NSFastIterator","","",null,null],[8,"NSFastEnumeration","","",null,null],[10,"iter","","",78,[[],["nsfastiterator",3]]],[8,"NSRunLoop","","",null,null],[10,"currentRunLoop","","",79,[[]]],[10,"performSelector_target_argument_order_modes_","","",79,[[["u64",15],["sel",3]]]],[3,"NSURLBookmarkCreationOptions","","",null,null],[6,"NSURLBookmarkFileCreationOptions","","",null,null],[3,"NSURLBookmarkResolutionOptions","","",null,null],[8,"NSURL","","",null,null],[10,"alloc","","",80,[[]]],[10,"URLWithString_","","",80,[[]]],[10,"initWithString_","","",80,[[]]],[10,"URLWithString_relativeToURL_","","",80,[[]]],[10,"initWithString_relativeToURL_","","",80,[[]]],[10,"fileURLWithPath_isDirectory_","","",80,[[["i8",15]]]],[10,"initFileURLWithPath_isDirectory_","","",80,[[["i8",15]]]],[10,"fileURLWithPath_relativeToURL_","","",80,[[]]],[10,"initFileURLWithPath_relativeToURL_","","",80,[[]]],[10,"fileURLWithPath_isDirectory_relativeToURL_","","",80,[[["i8",15]]]],[10,"initFileURLWithPath_isDirectory_relativeToURL_","","",80,[[["i8",15]]]],[10,"fileURLWithPath_","","",80,[[]]],[10,"initFileURLWithPath_","","",80,[[]]],[10,"fileURLWithPathComponents_","","",80,[[]]],[10,"URLByResolvingAliasFileAtURL_options_error_","","",80,[[["nsurlbookmarkresolutionoptions",3]]]],[10,"URLByResolvingBookmarkData_options_relativeToURL_bookmarkDataIsStale_error_","","",80,[[["nsurlbookmarkresolutionoptions",3]]]],[10,"initByResolvingBookmarkData_options_relativeToURL_bookmarkDataIsStale_error_","","",80,[[["nsurlbookmarkresolutionoptions",3]]]],[10,"absoluteURLWithDataRepresentation_relativeToURL_","","",80,[[]]],[10,"initAbsoluteURLWithDataRepresentation_relativeToURL_","","",80,[[]]],[10,"URLWithDataRepresentation_relativeToURL_","","",80,[[]]],[10,"initWithDataRepresentation_relativeToURL_","","",80,[[]]],[10,"dataRepresentation","","",80,[[]]],[10,"isEqual_","","",80,[[],["i8",15]]],[10,"checkResourceIsReachableAndReturnError_","","",80,[[],["i8",15]]],[10,"isFileReferenceURL","","",80,[[],["i8",15]]],[10,"isFileURL","","",80,[[],["i8",15]]],[10,"absoluteString","","",80,[[]]],[10,"absoluteURL","","",80,[[]]],[10,"baseURL","","",80,[[]]],[10,"fragment","","",80,[[]]],[10,"host","","",80,[[]]],[10,"lastPathComponent","","",80,[[]]],[10,"parameterString","","",80,[[]]],[10,"password","","",80,[[]]],[10,"path","","",80,[[]]],[10,"pathComponents","","",80,[[]]],[10,"pathExtension","","",80,[[]]],[10,"port","","",80,[[]]],[10,"query","","",80,[[]]],[10,"relativePath","","",80,[[]]],[10,"relativeString","","",80,[[]]],[10,"resourceSpecifier","","",80,[[]]],[10,"scheme","","",80,[[]]],[10,"standardizedURL","","",80,[[]]],[10,"user","","",80,[[]]],[10,"NSURLResourceKey","","",80,[[]]],[10,"filePathURL","","",80,[[]]],[10,"fileReferenceURL","","",80,[[]]],[10,"URLByAppendingPathComponent_","","",80,[[]]],[10,"URLByAppendingPathComponent_isDirectory_","","",80,[[["i8",15]]]],[10,"URLByAppendingPathExtension_","","",80,[[]]],[10,"URLByDeletingLastPathComponent","","",80,[[]]],[10,"URLByDeletingPathExtension","","",80,[[]]],[10,"URLByResolvingSymlinksInPath","","",80,[[]]],[10,"URLByStandardizingPath","","",80,[[]]],[10,"hasDirectoryPath","","",80,[[],["i8",15]]],[10,"bookmarkDataWithContentsOfURL_error_","","",80,[[]]],[10,"bookmarkDataWithOptions_includingResourceValuesForKeys_relativeToURL_error_","","",80,[[["nsurlbookmarkcreationoptions",3]]]],[10,"writeBookmarkData_toURL_options_error_","","",80,[[["nsurlbookmarkcreationoptions",3]]]],[10,"startAccessingSecurityScopedResource","","",80,[[],["i8",15]]],[10,"stopAccessingSecurityScopedResource","","",80,[[]]],[10,"NSURLBookmarkFileCreationOptions","","",80,[[],["nsurlbookmarkcreationoptions",3]]],[10,"NSURLBookmarkCreationOptions","","",80,[[],["nsurlbookmarkcreationoptions",3]]],[10,"NSURLBookmarkResolutionOptions","","",80,[[],["nsurlbookmarkresolutionoptions",3]]],[8,"NSBundle","","",null,null],[10,"mainBundle","","",81,[[]]],[10,"loadNibNamed_owner_topLevelObjects_","","",81,[[],["i8",15]]],[8,"NSData","","",null,null],[11,"data","","",82,[[]]],[11,"dataWithBytes_length_","","",82,[[["u64",15]]]],[11,"dataWithBytesNoCopy_length_","","",82,[[["u64",15]]]],[11,"dataWithBytesNoCopy_length_freeWhenDone_","","",82,[[["i8",15],["u64",15]]]],[11,"dataWithContentsOfFile_","","",82,[[]]],[11,"dataWithContentsOfFile_options_error_","","",82,[[["nsdatareadingoptions",3]]]],[11,"dataWithContentsOfURL_","","",82,[[]]],[11,"dataWithContentsOfURL_options_error_","","",82,[[["nsdatareadingoptions",3]]]],[11,"dataWithData_","","",82,[[]]],[10,"initWithBase64EncodedData_options_","","",82,[[["nsdatabase64decodingoptions",3]]]],[10,"initWithBase64EncodedString_options_","","",82,[[["nsdatabase64decodingoptions",3]]]],[10,"initWithBytes_length_","","",82,[[["u64",15]]]],[10,"initWithBytesNoCopy_length_","","",82,[[["u64",15]]]],[10,"initWithBytesNoCopy_length_deallocator_","","",82,[[["u64",15]]]],[10,"initWithBytesNoCopy_length_freeWhenDone_","","",82,[[["i8",15],["u64",15]]]],[10,"initWithContentsOfFile_","","",82,[[]]],[10,"initWithContentsOfFile_options_error","","",82,[[["nsdatareadingoptions",3]]]],[10,"initWithContentsOfURL_","","",82,[[]]],[10,"initWithContentsOfURL_options_error_","","",82,[[["nsdatareadingoptions",3]]]],[10,"initWithData_","","",82,[[]]],[10,"bytes","","",82,[[]]],[10,"description","","",82,[[]]],[10,"enumerateByteRangesUsingBlock_","","",82,[[]]],[10,"getBytes_length_","","",82,[[["u64",15]]]],[10,"getBytes_range_","","",82,[[["nsrange",3]]]],[10,"subdataWithRange_","","",82,[[["nsrange",3]]]],[10,"rangeOfData_options_range_","","",82,[[["nsdatasearchoptions",3],["nsrange",3]],["nsrange",3]]],[10,"base64EncodedDataWithOptions_","","",82,[[["nsdatabase64encodingoptions",3]]]],[10,"base64EncodedStringWithOptions_","","",82,[[["nsdatabase64encodingoptions",3]]]],[10,"isEqualToData_","","",82,[[]]],[10,"length","","",82,[[],["u64",15]]],[10,"writeToFile_atomically_","","",82,[[["i8",15]],["i8",15]]],[10,"writeToFile_options_error_","","",82,[[["nsdatawritingoptions",3]],["i8",15]]],[10,"writeToURL_atomically_","","",82,[[["i8",15]],["i8",15]]],[10,"writeToURL_options_error_","","",82,[[["nsdatawritingoptions",3]],["i8",15]]],[3,"NSDataReadingOptions","","",null,null],[3,"NSDataBase64EncodingOptions","","",null,null],[3,"NSDataBase64DecodingOptions","","",null,null],[3,"NSDataWritingOptions","","",null,null],[3,"NSDataSearchOptions","","",null,null],[8,"NSUserDefaults","","",null,null],[10,"standardUserDefaults","","",83,[[]]],[10,"setBool_forKey_","","",83,[[["i8",15]]]],[10,"bool_forKey_","","",83,[[],["i8",15]]],[10,"removeObject_forKey_","","",83,[[]]],[4,"NSRectEdge","","",null,null],[13,"NSRectMinXEdge","","",84,null],[13,"NSRectMinYEdge","","",84,null],[13,"NSRectMaxXEdge","","",84,null],[13,"NSRectMaxYEdge","","",84,null],[8,"NSValue","","",null,null],[11,"valueWithPoint","","",85,[[["nspoint",3]]]],[11,"valueWithSize","","",85,[[["nssize",3]]]],[3,"NSPoint","","",null,null],[12,"x","","",86,null],[12,"y","","",86,null],[3,"NSSize","","",null,null],[12,"width","","",87,null],[12,"height","","",87,null],[3,"NSRect","","",null,null],[12,"origin","","",88,null],[12,"size","","",88,null],[0,"quartzcore","cocoa","",null,null],[0,"transaction","cocoa::quartzcore","",null,null],[5,"begin","cocoa::quartzcore::transaction","",null,[[]]],[5,"commit","","",null,[[]]],[5,"flush","","",null,[[]]],[5,"lock","","",null,[[]]],[5,"unlock","","",null,[[]]],[5,"animation_duration","","",null,[[],["cftimeinterval",6]]],[5,"set_animation_duration","","",null,[[["cftimeinterval",6]]]],[5,"animation_timing_function","","",null,[[],["id",6]]],[5,"set_animation_timing_function","","",null,[[["id",6]]]],[5,"disable_actions","","",null,[[],["bool",15]]],[5,"set_disable_actions","","",null,[[["bool",15]]]],[5,"completion_block","","",null,[[],[["rcblock",3],["option",4]]]],[5,"set_completion_block","","",null,[[["concreteblock",3]]]],[5,"value_for_key","","",null,[[["str",15]],["id",6]]],[5,"set_value_for_key","","",null,[[["id",6],["str",15]]]],[5,"current_media_time","cocoa::quartzcore","",null,[[],["cftimeinterval",6]]],[3,"CALayer","","",null,null],[11,"id","","",89,[[],["id",6]]],[11,"new","","",89,[[],["calayer",3]]],[11,"from_layer","","",89,[[["calayer",3]],["calayer",3]]],[11,"presentation_layer","","",89,[[],["calayer",3]]],[11,"model_layer","","",89,[[],["calayer",3]]],[11,"default_value_for_key","","",89,[[["cfstring",3]],["id",6]]],[11,"needs_display_for_key","","",89,[[["cfstring",3]],["bool",15]]],[11,"should_archive_value_for_key","","",89,[[["cfstring",3]],["bool",15]]],[11,"bounds","","",89,[[],["cgrect",3]]],[11,"set_bounds","","",89,[[["cgrect",3]]]],[11,"position","","",89,[[],["cgpoint",3]]],[11,"set_position","","",89,[[["cgpoint",3]]]],[11,"z_position","","",89,[[],["cgfloat",6]]],[11,"set_z_position","","",89,[[["cgfloat",6]]]],[11,"anchor_point","","",89,[[],["cgpoint",3]]],[11,"set_anchor_point","","",89,[[["cgpoint",3]]]],[11,"anchor_point_z","","",89,[[],["cgfloat",6]]],[11,"set_anchor_point_z","","",89,[[["cgfloat",6]]]],[11,"transform","","",89,[[],["catransform3d",3]]],[11,"set_transform","","",89,[[["catransform3d",3]]]],[11,"affine_transform","","",89,[[],["cgaffinetransform",3]]],[11,"set_affine_transform","","",89,[[["cgaffinetransform",3]]]],[11,"frame","","",89,[[],["cgrect",3]]],[11,"set_frame","","",89,[[["cgrect",3]]]],[11,"is_hidden","","",89,[[],["bool",15]]],[11,"set_hidden","","",89,[[["bool",15]]]],[11,"is_double_sided","","",89,[[],["bool",15]]],[11,"set_double_sided","","",89,[[["bool",15]]]],[11,"is_geometry_flipped","","",89,[[],["bool",15]]],[11,"set_geometry_flipped","","",89,[[["bool",15]]]],[11,"contents_are_flipped","","",89,[[],["bool",15]]],[11,"superlayer","","",89,[[],[["option",4],["calayer",3]]]],[11,"remove_from_superlayer","","",89,[[]]],[11,"sublayers","","",89,[[],[["calayer",3],["cfarray",3]]]],[11,"add_sublayer","","",89,[[["calayer",3]]]],[11,"insert_sublayer_at_index","","",89,[[["u32",15],["calayer",3]]]],[11,"insert_sublayer_below","","",89,[[["calayer",3]]]],[11,"insert_sublayer_above","","",89,[[["calayer",3]]]],[11,"replace_sublayer_with","","",89,[[["calayer",3]]]],[11,"sublayer_transform","","",89,[[],["catransform3d",3]]],[11,"set_sublayer_transform","","",89,[[["catransform3d",3]]]],[11,"mask","","",89,[[],[["option",4],["calayer",3]]]],[11,"set_mask","","",89,[[["option",4],["calayer",3]]]],[11,"masks_to_bounds","","",89,[[],["bool",15]]],[11,"set_masks_to_bounds","","",89,[[["bool",15]]]],[11,"convert_point_from_layer","","",89,[[["option",4],["calayer",3],["cgpoint",3]],["cgpoint",3]]],[11,"convert_point_to_layer","","",89,[[["option",4],["calayer",3],["cgpoint",3]],["cgpoint",3]]],[11,"convert_rect_from_layer","","",89,[[["cgrect",3],["option",4],["calayer",3]],["cgrect",3]]],[11,"convert_rect_to_layer","","",89,[[["cgrect",3],["option",4],["calayer",3]],["cgrect",3]]],[11,"convert_time_from_layer","","",89,[[["option",4],["cftimeinterval",6],["calayer",3]],["cftimeinterval",6]]],[11,"convert_time_to_layer","","",89,[[["option",4],["cftimeinterval",6],["calayer",3]],["cftimeinterval",6]]],[11,"hit_test","","",89,[[["cgpoint",3]],[["option",4],["calayer",3]]]],[11,"contains_point","","",89,[[["cgpoint",3]],["bool",15]]],[11,"contents","","",89,[[],["id",6]]],[11,"set_contents","","",89,[[["id",6]]]],[11,"contents_rect","","",89,[[],["cgrect",3]]],[11,"set_contents_rect","","",89,[[["cgrect",3]]]],[11,"contents_gravity","","",89,[[],["contentsgravity",4]]],[11,"set_contents_gravity","","",89,[[["contentsgravity",4]]]],[11,"contents_scale","","",89,[[],["cgfloat",6]]],[11,"set_contents_scale","","",89,[[["cgfloat",6]]]],[11,"contents_center","","",89,[[],["cgrect",3]]],[11,"set_contents_center","","",89,[[["cgrect",3]]]],[11,"contents_format","","",89,[[],["contentsformat",4]]],[11,"set_contents_format","","",89,[[["contentsformat",4]]]],[11,"minification_filter","","",89,[[],["filter",4]]],[11,"set_minification_filter","","",89,[[["filter",4]]]],[11,"magnification_filter","","",89,[[],["filter",4]]],[11,"set_magnification_filter","","",89,[[["filter",4]]]],[11,"minification_filter_bias","","",89,[[],["f32",15]]],[11,"set_minification_filter_bias","","",89,[[["f32",15]]]],[11,"is_opaque","","",89,[[],["bool",15]]],[11,"set_opaque","","",89,[[["bool",15]]]],[11,"display","","",89,[[]]],[11,"set_needs_display","","",89,[[]]],[11,"set_needs_display_in_rect","","",89,[[["cgrect",3]]]],[11,"needs_display","","",89,[[],["bool",15]]],[11,"display_if_needed","","",89,[[]]],[11,"needs_display_on_bounds_change","","",89,[[],["bool",15]]],[11,"set_needs_display_on_bounds_change","","",89,[[["bool",15]]]],[11,"draws_asynchronously","","",89,[[],["bool",15]]],[11,"set_draws_asynchronously","","",89,[[["bool",15]]]],[11,"draw_in_context","","",89,[[["cgcontext",3]]]],[11,"render_in_context","","",89,[[["cgcontext",3]]]],[11,"edge_antialiasing_mask","","",89,[[],["edgeantialiasingmask",3]]],[11,"set_edge_antialiasing_mask","","",89,[[["edgeantialiasingmask",3]]]],[11,"background_color","","",89,[[],[["option",4],["cgcolor",3]]]],[11,"set_background_color","","",89,[[["option",4],["cgcolor",3]]]],[11,"corner_radius","","",89,[[],["cgfloat",6]]],[11,"set_corner_radius","","",89,[[["cgfloat",6]]]],[11,"masked_corners","","",89,[[],["cornermask",3]]],[11,"set_masked_corners","","",89,[[["cornermask",3]]]],[11,"border_width","","",89,[[],["cgfloat",6]]],[11,"set_border_width","","",89,[[["cgfloat",6]]]],[11,"border_color","","",89,[[],[["option",4],["cgcolor",3]]]],[11,"set_border_color","","",89,[[["option",4],["cgcolor",3]]]],[11,"opacity","","",89,[[],["f32",15]]],[11,"set_opacity","","",89,[[["f32",15]]]],[11,"compositing_filter","","",89,[[],["id",6]]],[11,"set_compositing_filter","","",89,[[["id",6]]]],[11,"filters","","",89,[[],[["option",4],["cfarray",3]]]],[11,"set_filters","","",89,[[["option",4],["cfarray",3]]]],[11,"background_filters","","",89,[[],[["option",4],["cfarray",3]]]],[11,"set_background_filters","","",89,[[["option",4],["cfarray",3]]]],[11,"should_rasterize","","",89,[[],["bool",15]]],[11,"set_should_rasterize","","",89,[[["bool",15]]]],[11,"rasterization_scale","","",89,[[],["cgfloat",6]]],[11,"set_rasterization_scale","","",89,[[["cgfloat",6]]]],[11,"shadow_color","","",89,[[],[["option",4],["cgcolor",3]]]],[11,"set_shadow_color","","",89,[[["option",4],["cgcolor",3]]]],[11,"shadow_opacity","","",89,[[],["f32",15]]],[11,"set_shadow_opacity","","",89,[[["f32",15]]]],[11,"shadow_offset","","",89,[[],["cgsize",3]]],[11,"set_shadow_offset","","",89,[[["cgsize",3]]]],[11,"shadow_radius","","",89,[[],["cgfloat",6]]],[11,"set_shadow_radius","","",89,[[["cgfloat",6]]]],[11,"shadow_path","","",89,[[],[["option",4],["cgpath",3]]]],[11,"set_shadow_path","","",89,[[["option",4],["cgpath",3]]]],[11,"autoresizing_mask","","",89,[[],["autoresizingmask",3]]],[11,"set_autoresizing_mask","","",89,[[["autoresizingmask",3]]]],[11,"layout_manager","","",89,[[],["id",6]]],[11,"set_layout_manager","","",89,[[["id",6]]]],[11,"preferred_frame_size","","",89,[[],["cgsize",3]]],[11,"set_needs_layout","","",89,[[]]],[11,"needs_layout","","",89,[[],["bool",15]]],[11,"layout_if_needed","","",89,[[]]],[11,"layout_sublayers","","",89,[[]]],[11,"resize_sublayers_with_old_size","","",89,[[["cgsize",3]]]],[11,"resize_with_old_superlayer_size","","",89,[[["cgsize",3]]]],[11,"default_action_for_key","","",89,[[["str",15]],["id",6]]],[11,"action_for_key","","",89,[[["str",15]],["id",6]]],[11,"actions","","",89,[[],[["cfdictionary",3],["cfstringref",6],["cftyperef",6]]]],[11,"set_actions","","",89,[[["cfdictionary",3],["cfstringref",6],["cftyperef",6]]]],[11,"add_animation_for_key","","",89,[[["id",6],["option",4],["str",15]]]],[11,"remove_all_animation","","",89,[[]]],[11,"remove_animation_for_key","","",89,[[["str",15]]]],[11,"animation_keys","","",89,[[],[["string",3],["vec",3]]]],[11,"animation_for_key","","",89,[[["str",15]],["id",6]]],[11,"name","","",89,[[],["string",3]]],[11,"set_name","","",89,[[["str",15]]]],[11,"delegate","","",89,[[],["id",6]]],[11,"set_delegate","","",89,[[["id",6]]]],[11,"style","","",89,[[],[["option",4],["cfdictionary",3]]]],[11,"set_style","","",89,[[["option",4],["cfdictionary",3]]]],[11,"reload_value_for_key_path","","",89,[[["str",15]]]],[11,"set_contents_opaque","","",89,[[["bool",15]]]],[4,"ContentsGravity","","",null,null],[13,"Center","","",90,null],[13,"Top","","",90,null],[13,"Bottom","","",90,null],[13,"Left","","",90,null],[13,"Right","","",90,null],[13,"TopLeft","","",90,null],[13,"TopRight","","",90,null],[13,"BottomLeft","","",90,null],[13,"BottomRight","","",90,null],[13,"Resize","","",90,null],[13,"ResizeAspect","","",90,null],[13,"ResizeAspectFill","","",90,null],[13,"Other","","",90,null],[4,"ContentsFormat","","",null,null],[13,"RGBA8Uint","","",91,null],[13,"RGBA16Float","","",91,null],[13,"Gray8Uint","","",91,null],[13,"Other","","",91,null],[4,"Filter","","",null,null],[13,"Nearest","","",92,null],[13,"Linear","","",92,null],[13,"Trilinear","","",92,null],[13,"Other","","",92,null],[3,"EdgeAntialiasingMask","","",null,null],[18,"LEFT_EDGE","","",93,null],[18,"RIGHT_EDGE","","",93,null],[18,"BOTTOM_EDGE","","",93,null],[18,"TOP_EDGE","","",93,null],[11,"empty","","Returns an empty set of flags",93,[[],["edgeantialiasingmask",3]]],[11,"all","","Returns the set containing all flags.",93,[[],["edgeantialiasingmask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",93,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",93,[[["u32",15]],[["edgeantialiasingmask",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",93,[[["u32",15]],["edgeantialiasingmask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",93,[[["u32",15]],["edgeantialiasingmask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",93,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",93,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",93,[[["edgeantialiasingmask",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",93,[[["edgeantialiasingmask",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",93,[[["edgeantialiasingmask",3]]]],[11,"remove","","Removes the specified flags in-place.",93,[[["edgeantialiasingmask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",93,[[["edgeantialiasingmask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",93,[[["bool",15],["edgeantialiasingmask",3]]]],[3,"CornerMask","","",null,null],[18,"MIN_X_MIN_Y_CORNER","","",94,null],[18,"MAX_X_MIN_Y_CORNER","","",94,null],[18,"MIN_X_MAX_Y_CORNER","","",94,null],[18,"MAX_X_MAX_Y_CORNER","","",94,null],[11,"empty","","Returns an empty set of flags",94,[[],["cornermask",3]]],[11,"all","","Returns the set containing all flags.",94,[[],["cornermask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",94,[[],["nsuinteger",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",94,[[["nsuinteger",6]],[["option",4],["cornermask",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",94,[[["nsuinteger",6]],["cornermask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",94,[[["nsuinteger",6]],["cornermask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",94,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",94,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",94,[[["cornermask",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",94,[[["cornermask",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",94,[[["cornermask",3]]]],[11,"remove","","Removes the specified flags in-place.",94,[[["cornermask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",94,[[["cornermask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",94,[[["cornermask",3],["bool",15]]]],[3,"AutoresizingMask","","",null,null],[18,"NOT_SIZABLE","","",95,null],[18,"MIN_X_MARGIN","","",95,null],[18,"WIDTH_SIZABLE","","",95,null],[18,"MAX_X_MARGIN","","",95,null],[18,"MIN_Y_MARGIN","","",95,null],[18,"HEIGHT_SIZABLE","","",95,null],[18,"MAX_Y_MARGIN","","",95,null],[11,"empty","","Returns an empty set of flags",95,[[],["autoresizingmask",3]]],[11,"all","","Returns the set containing all flags.",95,[[],["autoresizingmask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",95,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",95,[[["u32",15]],[["option",4],["autoresizingmask",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",95,[[["u32",15]],["autoresizingmask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",95,[[["u32",15]],["autoresizingmask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",95,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",95,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",95,[[["autoresizingmask",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",95,[[["autoresizingmask",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",95,[[["autoresizingmask",3]]]],[11,"remove","","Removes the specified flags in-place.",95,[[["autoresizingmask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",95,[[["autoresizingmask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",95,[[["bool",15],["autoresizingmask",3]]]],[3,"CARenderer","","",null,null],[11,"id","","",96,[[],["id",6]]],[11,"from_cgl_context","","",96,[[["cglcontextobj",6],["option",4],["cgcolorspace",3]],["carenderer",3]]],[11,"from_metal_texture","","",96,[[["id",6],["option",4],["cgcolorspace",3]],["carenderer",3]]],[11,"layer","","",96,[[],[["option",4],["calayer",3]]]],[11,"set_layer","","",96,[[["option",4],["calayer",3]]]],[11,"bounds","","",96,[[],["cgrect",3]]],[11,"set_bounds","","",96,[[["cgrect",3]]]],[11,"begin_frame_at","","",96,[[["option",4],["cftimeinterval",6],["cvtimestamp",3]]]],[11,"update_bounds","","",96,[[],["cgrect",3]]],[11,"add_update_rect","","",96,[[["cgrect",3]]]],[11,"render","","",96,[[]]],[11,"next_frame_time","","",96,[[],["cftimeinterval",6]]],[11,"end_frame","","",96,[[]]],[11,"set_destination","","",96,[[["id",6]]]],[3,"CATransform3D","","",null,null],[12,"m11","","",97,null],[12,"m12","","",97,null],[12,"m13","","",97,null],[12,"m14","","",97,null],[12,"m21","","",97,null],[12,"m22","","",97,null],[12,"m23","","",97,null],[12,"m24","","",97,null],[12,"m31","","",97,null],[12,"m32","","",97,null],[12,"m33","","",97,null],[12,"m34","","",97,null],[12,"m41","","",97,null],[12,"m42","","",97,null],[12,"m43","","",97,null],[12,"m44","","",97,null],[18,"IDENTITY","","",97,null],[11,"from_translation","","",97,[[["cgfloat",6]],["catransform3d",3]]],[11,"from_scale","","",97,[[["cgfloat",6]],["catransform3d",3]]],[11,"from_rotation","","",97,[[["cgfloat",6]],["catransform3d",3]]],[11,"affine","","",97,[[["cgaffinetransform",3]],["catransform3d",3]]],[11,"is_identity","","",97,[[],["bool",15]]],[11,"translate","","",97,[[["cgfloat",6]],["catransform3d",3]]],[11,"scale","","",97,[[["cgfloat",6]],["catransform3d",3]]],[11,"rotate","","",97,[[["cgfloat",6]],["catransform3d",3]]],[11,"invert","","",97,[[],["catransform3d",3]]],[11,"is_affine","","",97,[[],["bool",15]]],[11,"to_affine","","",97,[[],["cgaffinetransform",3]]],[3,"CVTimeStamp","","",null,null],[12,"version","","",98,null],[12,"videoTimeScale","","",98,null],[12,"videoTime","","",98,null],[12,"hostTime","","",98,null],[12,"rateScalar","","",98,null],[12,"videoRefreshPeriod","","",98,null],[12,"smpteTime","","",98,null],[12,"flags","","",98,null],[12,"reserved","","",98,null],[6,"CVTimeStampFlags","","",null,null],[17,"kCVTimeStampVideoTimeValid","","",null,null],[17,"kCVTimeStampHostTimeValid","","",null,null],[17,"kCVTimeStampSMPTETimeValid","","",null,null],[17,"kCVTimeStampVideoRefreshPeriodValid","","",null,null],[17,"kCVTimeStampRateScalarValid","","",null,null],[17,"kCVTimeStampTopField","","",null,null],[17,"kCVTimeStampBottomField","","",null,null],[17,"kCVTimeStampVideoHostTimeValid","","",null,null],[17,"kCVTimeStampIsInterlaced","","",null,null],[3,"CVSMPTETime","","",null,null],[12,"subframes","","",99,null],[12,"subframeDivisor","","",99,null],[12,"counter","","",99,null],[12,"time_type","","",99,null],[12,"flags","","",99,null],[12,"hours","","",99,null],[12,"minutes","","",99,null],[12,"seconds","","",99,null],[12,"frames","","",99,null],[6,"CVSMPTETimeType","","",null,null],[17,"kCVSMPTETimeType24","","",null,null],[17,"kCVSMPTETimeType25","","",null,null],[17,"kCVSMPTETimeType30Drop","","",null,null],[17,"kCVSMPTETimeType30","","",null,null],[17,"kCVSMPTETimeType2997","","",null,null],[17,"kCVSMPTETimeType2997Drop","","",null,null],[17,"kCVSMPTETimeType60","","",null,null],[17,"kCVSMPTETimeType5994","","",null,null],[6,"CVSMPTETimeFlags","","",null,null],[17,"kCVSMPTETimeValid","","",null,null],[17,"kCVSMPTETimeRunning","","",null,null],[14,"delegate","cocoa","Creates a Cocoa delegate to use e.g. with …",null,null],[11,"from","cocoa::appkit","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","cocoa::foundation","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"into_iter","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","cocoa::quartzcore","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"fmt","cocoa::appkit","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",0,[[],["cgpoint",3]]],[11,"clone","","",0,[[],["cgpoint",3]]],[11,"fmt","cocoa::foundation","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",102,[[]]],[11,"hash","","",106,[[]]],[11,"hash","","",108,[[]]],[11,"hash","","",109,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",110,[[]]],[11,"hash","","",107,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",104,[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",107,[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",108,[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",105,[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",106,[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",109,[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",102,[[["nsenumerationoptions",3]],["nsenumerationoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",110,[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]]],[11,"partial_cmp","","",104,[[["nsurlbookmarkcreationoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",104,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"le","","",104,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"gt","","",104,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"ge","","",104,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"partial_cmp","","",108,[[["nsdatabase64decodingoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",108,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"le","","",108,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"gt","","",108,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"ge","","",108,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"partial_cmp","","",106,[[["nsdatareadingoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",106,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"le","","",106,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"gt","","",106,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"ge","","",106,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"partial_cmp","","",105,[[["nsurlbookmarkresolutionoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",105,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"le","","",105,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"gt","","",105,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"ge","","",105,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"partial_cmp","","",109,[[["nsdatawritingoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",109,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"le","","",109,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"gt","","",109,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"ge","","",109,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"partial_cmp","","",110,[[["nsdatasearchoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",110,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"le","","",110,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"gt","","",110,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"ge","","",110,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"partial_cmp","","",107,[[["nsdatabase64encodingoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",107,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"le","","",107,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"gt","","",107,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"ge","","",107,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"partial_cmp","","",102,[[["nsenumerationoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",102,[[["nsenumerationoptions",3]],["bool",15]]],[11,"le","","",102,[[["nsenumerationoptions",3]],["bool",15]]],[11,"gt","","",102,[[["nsenumerationoptions",3]],["bool",15]]],[11,"ge","","",102,[[["nsenumerationoptions",3]],["bool",15]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_iter","","",110,[[],["nsdatasearchoptions",3]]],[11,"from_iter","","",108,[[],["nsdatabase64decodingoptions",3]]],[11,"from_iter","","",105,[[],["nsurlbookmarkresolutionoptions",3]]],[11,"from_iter","","",106,[[],["nsdatareadingoptions",3]]],[11,"from_iter","","",109,[[],["nsdatawritingoptions",3]]],[11,"from_iter","","",104,[[],["nsurlbookmarkcreationoptions",3]]],[11,"from_iter","","",107,[[],["nsdatabase64encodingoptions",3]]],[11,"from_iter","","",102,[[],["nsenumerationoptions",3]]],[11,"clone","","",86,[[],["nspoint",3]]],[11,"clone","","",110,[[],["nsdatasearchoptions",3]]],[11,"clone","","",71,[[],["nsoperatingsystemversion",3]]],[11,"clone","","",107,[[],["nsdatabase64encodingoptions",3]]],[11,"clone","","",69,[[],["nsrange",3]]],[11,"clone","","",109,[[],["nsdatawritingoptions",3]]],[11,"clone","","",104,[[],["nsurlbookmarkcreationoptions",3]]],[11,"clone","","",88,[[],["nsrect",3]]],[11,"clone","","",106,[[],["nsdatareadingoptions",3]]],[11,"clone","","",108,[[],["nsdatabase64decodingoptions",3]]],[11,"clone","","",75,[[],["nscomparisonresult",4]]],[11,"clone","","",102,[[],["nsenumerationoptions",3]]],[11,"clone","","",87,[[],["nssize",3]]],[11,"clone","","",105,[[],["nsurlbookmarkresolutionoptions",3]]],[11,"cmp","","",108,[[["nsdatabase64decodingoptions",3]],["ordering",4]]],[11,"cmp","","",104,[[["nsurlbookmarkcreationoptions",3]],["ordering",4]]],[11,"cmp","","",106,[[["nsdatareadingoptions",3]],["ordering",4]]],[11,"cmp","","",105,[[["nsurlbookmarkresolutionoptions",3]],["ordering",4]]],[11,"cmp","","",109,[[["nsdatawritingoptions",3]],["ordering",4]]],[11,"cmp","","",110,[[["nsdatasearchoptions",3]],["ordering",4]]],[11,"cmp","","",107,[[["nsdatabase64encodingoptions",3]],["ordering",4]]],[11,"cmp","","",102,[[["nsenumerationoptions",3]],["ordering",4]]],[11,"bitxor_assign","","Toggles the set of flags.",108,[[["nsdatabase64decodingoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",109,[[["nsdatawritingoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",106,[[["nsdatareadingoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",104,[[["nsurlbookmarkcreationoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",110,[[["nsdatasearchoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",102,[[["nsenumerationoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",107,[[["nsdatabase64encodingoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",105,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitor","","Returns the union of the two sets of flags.",110,[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",109,[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",106,[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",107,[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",108,[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",105,[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",104,[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",102,[[["nsenumerationoptions",3]],["nsenumerationoptions",3]]],[11,"not","","Returns the complement of this set of flags.",108,[[],["nsdatabase64decodingoptions",3]]],[11,"not","","Returns the complement of this set of flags.",109,[[],["nsdatawritingoptions",3]]],[11,"not","","Returns the complement of this set of flags.",107,[[],["nsdatabase64encodingoptions",3]]],[11,"not","","Returns the complement of this set of flags.",106,[[],["nsdatareadingoptions",3]]],[11,"not","","Returns the complement of this set of flags.",105,[[],["nsurlbookmarkresolutionoptions",3]]],[11,"not","","Returns the complement of this set of flags.",110,[[],["nsdatasearchoptions",3]]],[11,"not","","Returns the complement of this set of flags.",104,[[],["nsurlbookmarkcreationoptions",3]]],[11,"not","","Returns the complement of this set of flags.",102,[[],["nsenumerationoptions",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",104,[[["nsurlbookmarkcreationoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",110,[[["nsdatasearchoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",108,[[["nsdatabase64decodingoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",106,[[["nsdatareadingoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",109,[[["nsdatawritingoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",107,[[["nsdatabase64encodingoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",102,[[["nsenumerationoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",105,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"extend","","",106,[[]]],[11,"extend","","",104,[[]]],[11,"extend","","",108,[[]]],[11,"extend","","",110,[[]]],[11,"extend","","",102,[[]]],[11,"extend","","",105,[[]]],[11,"extend","","",109,[[]]],[11,"extend","","",107,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",107,[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",109,[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",104,[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",106,[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",102,[[["nsenumerationoptions",3]],["nsenumerationoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",110,[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",105,[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",108,[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]]],[11,"bitor_assign","","Adds the set of flags.",110,[[["nsdatasearchoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",106,[[["nsdatareadingoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",107,[[["nsdatabase64encodingoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",102,[[["nsenumerationoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",105,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",104,[[["nsurlbookmarkcreationoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",108,[[["nsdatabase64decodingoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",109,[[["nsdatawritingoptions",3]]]],[11,"next","","",103,[[],["option",4]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",105,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",102,[[["nsenumerationoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",104,[[["nsurlbookmarkcreationoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",109,[[["nsdatawritingoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",107,[[["nsdatabase64encodingoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",108,[[["nsdatabase64decodingoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",106,[[["nsdatareadingoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",110,[[["nsdatasearchoptions",3]]]],[11,"eq","","",102,[[["nsenumerationoptions",3]],["bool",15]]],[11,"ne","","",102,[[["nsenumerationoptions",3]],["bool",15]]],[11,"eq","","",106,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"ne","","",106,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"eq","","",110,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"ne","","",110,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"eq","","",75,[[["nscomparisonresult",4]],["bool",15]]],[11,"eq","","",109,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"ne","","",109,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"eq","","",105,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"ne","","",105,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"eq","","",107,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"ne","","",107,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"eq","","",108,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"ne","","",108,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"eq","","",104,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"ne","","",104,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"bitand","","Returns the intersection between the two sets of flags.",109,[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",105,[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",107,[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",110,[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",108,[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",106,[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",104,[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",102,[[["nsenumerationoptions",3]],["nsenumerationoptions",3]]],[11,"encode","","",87,[[],["encoding",3]]],[11,"encode","","",88,[[],["encoding",3]]],[11,"encode","","",86,[[],["encoding",3]]],[11,"mainMenu","cocoa","",111,[[],["id",6]]],[11,"setActivationPolicy_","","",111,[[["nsapplicationactivationpolicy",4]],["bool",6]]],[11,"setPresentationOptions_","","",111,[[["nsapplicationpresentationoptions",3]],["bool",6]]],[11,"presentationOptions_","","",111,[[],["nsapplicationpresentationoptions",3]]],[11,"setMainMenu_","","",111,[[["id",6]]]],[11,"setServicesMenu_","","",111,[[["id",6]]]],[11,"setWindowsMenu_","","",111,[[["id",6]]]],[11,"activateIgnoringOtherApps_","","",111,[[["bool",6]]]],[11,"run","","",111,[[]]],[11,"finishLaunching","","",111,[[]]],[11,"nextEventMatchingMask_untilDate_inMode_dequeue_","","",111,[[["id",6],["bool",6],["nsuinteger",6]],["id",6]]],[11,"sendEvent_","","",111,[[["id",6]]]],[11,"postEvent_atStart_","","",111,[[["id",6],["bool",6]]]],[11,"stop_","","",111,[[["id",6]]]],[11,"setApplicationIconImage_","","",111,[[["id",6]]]],[11,"requestUserAttention_","","",111,[[["nsrequestuserattentiontype",4]]]],[11,"activateWithOptions_","","",111,[[["nsapplicationactivationoptions",4]],["bool",6]]],[11,"releaseGlobally","","",111,[[]]],[11,"clearContents","","",111,[[],["nsinteger",6]]],[11,"writeObjects","","",111,[[["id",6]],["bool",6]]],[11,"setData_forType","","",111,[[["id",6]],["bool",6]]],[11,"setPropertyList_forType","","",111,[[["id",6]],["bool",6]]],[11,"setString_forType","","",111,[[["id",6]],["bool",6]]],[11,"readObjectsForClasses_options","","",111,[[["id",6]],["id",6]]],[11,"pasteboardItems","","",111,[[],["id",6]]],[11,"indexOfPasteboardItem","","",111,[[["id",6]],["nsinteger",6]]],[11,"dataForType","","",111,[[["id",6]],["id",6]]],[11,"propertyListForType","","",111,[[["id",6]],["id",6]]],[11,"stringForType","","",111,[[["id",6]],["id",6]]],[11,"availableTypeFromArray","","",111,[[["id",6]],["id",6]]],[11,"canReadItemWithDataConformingToTypes","","",111,[[["id",6]],["bool",6]]],[11,"canReadObjectForClasses_options","","",111,[[["id",6]],["bool",6]]],[11,"types","","",111,[[],["id",6]]],[11,"name","","",111,[[],["id",6]]],[11,"changeCount","","",111,[[],["nsinteger",6]]],[11,"declareTypes_owner","","",111,[[["id",6]],["nsinteger",6]]],[11,"addTypes_owner","","",111,[[["id",6]],["nsinteger",6]]],[11,"writeFileContents","","",111,[[["id",6]],["bool",6]]],[11,"writeFileWrapper","","",111,[[["id",6]],["bool",6]]],[11,"readFileContentsType_toFile","","",111,[[["id",6]],["id",6]]],[11,"readFileWrapper","","",111,[[],["id",6]]],[11,"types","","",111,[[],["id",6]]],[11,"setDataProvider_forTypes","","",111,[[["id",6]],["bool",6]]],[11,"setData_forType","","",111,[[["id",6]],["bool",6]]],[11,"setString_forType","","",111,[[["id",6]],["bool",6]]],[11,"setPropertyList_forType","","",111,[[["id",6]],["bool",6]]],[11,"dataForType","","",111,[[["id",6]],["id",6]]],[11,"stringForType","","",111,[[["id",6]],["id",6]]],[11,"propertyListForType","","",111,[[["id",6]],["id",6]]],[11,"pasteboard_item_provideDataForType","","",111,[[["id",6]]]],[11,"pasteboardFinishedWithDataProvider","","",111,[[["id",6]]]],[11,"writableTypesForPasteboard","","",111,[[["id",6]],["id",6]]],[11,"writingOptionsForType_pasteboard","","",111,[[["id",6]],["nspasteboardwritingoptions",4]]],[11,"pasteboardPropertyListForType","","",111,[[["id",6]],["id",6]]],[11,"initWithPasteboardPropertyList_ofType","","",111,[[["id",6]],["id",6]]],[11,"readableTypesForPasteboard","","",111,[[["id",6]],["id",6]]],[11,"readingOptionsForType_pasteboard","","",111,[[["id",6]],["nspasteboardreadingoptions",4]]],[11,"initWithTitle_","","",111,[[["id",6]],["id",6]]],[11,"setAutoenablesItems","","",111,[[["bool",6]]]],[11,"addItem_","","",111,[[["id",6]]]],[11,"addItemWithTitle_action_keyEquivalent","","",111,[[["id",6],["sel",6]],["id",6]]],[11,"itemAtIndex_","","",111,[[["nsinteger",6]],["id",6]]],[11,"initWithTitle_action_keyEquivalent_","","",111,[[["id",6],["sel",6]],["id",6]]],[11,"setKeyEquivalentModifierMask_","","",111,[[["nseventmodifierflags",3]]]],[11,"setSubmenu_","","",111,[[["id",6]]]],[11,"setTarget_","","",111,[[["id",6]]]],[11,"initWithContentRect_styleMask_backing_defer_","","",111,[[["bool",6],["nsbackingstoretype",4],["nswindowstylemask",3],["nsrect",3]],["id",6]]],[11,"initWithContentRect_styleMask_backing_defer_screen_","","",111,[[["bool",6],["id",6],["nsbackingstoretype",4],["nswindowstylemask",3],["nsrect",3]],["id",6]]],[11,"styleMask","","",111,[[],["nswindowstylemask",3]]],[11,"setStyleMask_","","",111,[[["nswindowstylemask",3]]]],[11,"toggleFullScreen_","","",111,[[["id",6]]]],[11,"worksWhenModal","","",111,[[],["bool",6]]],[11,"alphaValue","","",111,[[],["cgfloat",6]]],[11,"setAlphaValue_","","",111,[[["cgfloat",6]]]],[11,"backgroundColor","","",111,[[],["id",6]]],[11,"setBackgroundColor_","","",111,[[["id",6]]]],[11,"colorSpace","","",111,[[],["id",6]]],[11,"setColorSpace_","","",111,[[["id",6]]]],[11,"contentView","","",111,[[],["id",6]]],[11,"setContentView_","","",111,[[["id",6]]]],[11,"canHide","","",111,[[],["bool",6]]],[11,"setCanHide_","","",111,[[["bool",6]]]],[11,"hidesOnDeactivate","","",111,[[],["bool",6]]],[11,"setHidesOnDeactivate_","","",111,[[["bool",6]]]],[11,"collectionBehavior","","",111,[[],["nswindowcollectionbehavior",3]]],[11,"setCollectionBehavior_","","",111,[[["nswindowcollectionbehavior",3]]]],[11,"setOpaque_","","",111,[[["bool",6]]]],[11,"hasShadow","","",111,[[],["bool",6]]],[11,"setHasShadow_","","",111,[[["bool",6]]]],[11,"invalidateShadow","","",111,[[]]],[11,"autorecalculatesContentBorderThicknessForEdge_","","",111,[[["nsrectedge",4]],["bool",6]]],[11,"setAutorecalculatesContentBorderThickness_forEdge_","","",111,[[["bool",6],["nsrectedge",4]],["bool",6]]],[11,"contentBorderThicknessForEdge_","","",111,[[["nsrectedge",4]],["cgfloat",6]]],[11,"setContentBorderThickness_forEdge_","","",111,[[["cgfloat",6],["nsrectedge",4]]]],[11,"delegate","","",111,[[],["id",6]]],[11,"setDelegate_","","",111,[[["id",6]]]],[11,"preventsApplicationTerminationWhenModal","","",111,[[],["bool",6]]],[11,"setPreventsApplicationTerminationWhenModal_","","",111,[[["bool",6]]]],[11,"contentRectForFrameRect_styleMask_","","",111,[[["nswindowstylemask",3],["nsrect",3]],["nsrect",3]]],[11,"frameRectForContentRect_styleMask_","","",111,[[["nswindowstylemask",3],["nsrect",3]],["nsrect",3]]],[11,"minFrameWidthWithTitle_styleMask_","","",111,[[["id",6],["nswindowstylemask",3]],["cgfloat",6]]],[11,"contentRectForFrameRect_","","",111,[[["nsrect",3]],["nsrect",3]]],[11,"frameRectForContentRect_","","",111,[[["nsrect",3]],["nsrect",3]]],[11,"drawers","","",111,[[],["id",6]]],[11,"windowController","","",111,[[],["id",6]]],[11,"setWindowController_","","",111,[[["id",6]]]],[11,"frame","","",111,[[],["nsrect",3]]],[11,"setFrameOrigin_","","",111,[[["nspoint",3]]]],[11,"setFrameTopLeftPoint_","","",111,[[["nspoint",3]]]],[11,"constrainFrameRect_toScreen_","","",111,[[["id",6],["nsrect",3]]]],[11,"cascadeTopLeftFromPoint_","","",111,[[["nspoint",3]],["nspoint",3]]],[11,"setFrame_display_","","",111,[[["bool",6],["nsrect",3]]]],[11,"setFrame_displayViews_","","",111,[[["bool",6],["nsrect",3]]]],[11,"aspectRatio","","",111,[[],["nssize",3]]],[11,"setAspectRatio_","","",111,[[["nssize",3]]]],[11,"minSize","","",111,[[],["nssize",3]]],[11,"setMinSize_","","",111,[[["nssize",3]]]],[11,"maxSize","","",111,[[],["nssize",3]]],[11,"setMaxSize_","","",111,[[["nssize",3]]]],[11,"performZoom_","","",111,[[["id",6]]]],[11,"zoom_","","",111,[[["id",6]]]],[11,"resizeFlags","","",111,[[],["nsinteger",6]]],[11,"showsResizeIndicator","","",111,[[],["bool",6]]],[11,"setShowsResizeIndicator_","","",111,[[["bool",6]]]],[11,"resizeIncrements","","",111,[[],["nssize",3]]],[11,"setResizeIncrements_","","",111,[[["nssize",3]]]],[11,"preservesContentDuringLiveResize","","",111,[[],["bool",6]]],[11,"setPreservesContentDuringLiveResize_","","",111,[[["bool",6]]]],[11,"inLiveResize","","",111,[[],["bool",6]]],[11,"contentAspectRatio","","",111,[[],["nssize",3]]],[11,"setContentAspectRatio_","","",111,[[["nssize",3]]]],[11,"contentMinSize","","",111,[[],["nssize",3]]],[11,"setContentMinSize_","","",111,[[["nssize",3]]]],[11,"contentSize","","",111,[[],["nssize",3]]],[11,"setContentSize_","","",111,[[["nssize",3]]]],[11,"contentMaxSize","","",111,[[],["nssize",3]]],[11,"setContentMaxSize_","","",111,[[["nssize",3]]]],[11,"contentResizeIncrements","","",111,[[],["nssize",3]]],[11,"setContentResizeIncrements_","","",111,[[["nssize",3]]]],[11,"isVisible","","",111,[[],["bool",6]]],[11,"occlusionState","","",111,[[],["nswindowocclusionstate",3]]],[11,"orderOut_","","",111,[[["id",6]]]],[11,"orderBack_","","",111,[[["id",6]]]],[11,"orderFront_","","",111,[[["id",6]]]],[11,"orderFrontRegardless","","",111,[[]]],[11,"orderFrontWindow_relativeTo_","","",111,[[["nsinteger",6],["nswindoworderingmode",3]]]],[11,"level","","",111,[[],["nsinteger",6]]],[11,"setLevel_","","",111,[[["nsinteger",6]]]],[11,"isKeyWindow","","",111,[[],["bool",6]]],[11,"canBecomeKeyWindow","","",111,[[],["bool",6]]],[11,"makeKeyWindow","","",111,[[]]],[11,"makeKeyAndOrderFront_","","",111,[[["id",6]]]],[11,"canBecomeMainWindow","","",111,[[],["bool",6]]],[11,"makeMainWindow","","",111,[[]]],[11,"toolbar","","",111,[[],["id",6]]],[11,"setToolbar_","","",111,[[["id",6]]]],[11,"runToolbarCustomizationPalette","","",111,[[["id",6]]]],[11,"standardWindowButton_","","",111,[[["nswindowbutton",4]],["id",6]]],[11,"allowsAutomaticWindowTabbing","","",111,[[],["bool",6]]],[11,"setAllowsAutomaticWindowTabbing_","","",111,[[["bool",6]]]],[11,"tabbingIdentifier","","",111,[[],["id",6]]],[11,"tabbingMode","","",111,[[],["nswindowtabbingmode",4]]],[11,"setTabbingMode_","","",111,[[["nswindowtabbingmode",4]]]],[11,"addTabbedWindow_ordered_","","",111,[[["id",6],["nswindoworderingmode",3]]]],[11,"toggleTabBar_","","",111,[[["id",6]]]],[11,"initialFirstResponder","","",111,[[],["id",6]]],[11,"firstResponder","","",111,[[],["id",6]]],[11,"setInitialFirstResponder_","","",111,[[["id",6]]]],[11,"makeFirstResponder_","","",111,[[["id",6]],["bool",6]]],[11,"keyDown_","","",111,[[["id",6]]]],[11,"acceptsMouseMovedEvents","","",111,[[],["bool",6]]],[11,"ignoresMouseEvents","","",111,[[],["bool",6]]],[11,"setIgnoresMouseEvents_","","",111,[[["bool",6]]]],[11,"mouseLocationOutsideOfEventStream","","",111,[[],["nspoint",3]]],[11,"setAcceptsMouseMovedEvents_","","",111,[[["bool",6]]]],[11,"windowNumberAtPoint_belowWindowWithWindowNumber_","","",111,[[["nspoint",3],["nsinteger",6]],["nsinteger",6]]],[11,"backingScaleFactor","","",111,[[],["cgfloat",6]]],[11,"backingAlignedRect_options_","","",111,[[["nsalignmentoptions",3],["nsrect",3]],["nsrect",3]]],[11,"convertRectFromBacking_","","",111,[[["nsrect",3]],["nsrect",3]]],[11,"convertRectToBacking_","","",111,[[["nsrect",3]],["nsrect",3]]],[11,"convertRectToScreen_","","",111,[[["nsrect",3]],["nsrect",3]]],[11,"convertRectFromScreen_","","",111,[[["nsrect",3]],["nsrect",3]]],[11,"setDocumentEdited_","","",111,[[["bool",6]]]],[11,"title","","",111,[[],["id",6]]],[11,"setTitle_","","",111,[[["id",6]]]],[11,"setTitleWithRepresentedFilename_","","",111,[[["id",6]]]],[11,"setTitleVisibility_","","",111,[[["nswindowtitlevisibility",4]]]],[11,"setTitlebarAppearsTransparent_","","",111,[[["bool",6]]]],[11,"representedFilename","","",111,[[],["id",6]]],[11,"setRepresentedFilename_","","",111,[[["id",6]]]],[11,"representedURL","","",111,[[],["id",6]]],[11,"setRepresentedURL_","","",111,[[["id",6]]]],[11,"screen","","",111,[[],["id",6]]],[11,"deepestScreen","","",111,[[],["id",6]]],[11,"displaysWhenScreenProfileChanges","","",111,[[],["bool",6]]],[11,"setDisplaysWhenScreenProfileChanges_","","",111,[[["bool",6]]]],[11,"setMovableByWindowBackground_","","",111,[[["bool",6]]]],[11,"setMovable_","","",111,[[["bool",6]]]],[11,"center","","",111,[[]]],[11,"performClose_","","",111,[[["id",6]]]],[11,"close","","",111,[[]]],[11,"setReleasedWhenClosed_","","",111,[[["bool",6]]]],[11,"performMiniaturize_","","",111,[[["id",6]]]],[11,"miniaturize_","","",111,[[["id",6]]]],[11,"deminiaturize_","","",111,[[["id",6]]]],[11,"miniwindowImage","","",111,[[],["id",6]]],[11,"setMiniwindowImage_","","",111,[[["id",6]]]],[11,"miniwindowTitle","","",111,[[],["id",6]]],[11,"setMiniwindowTitle_","","",111,[[["id",6]]]],[11,"init","","",111,[[],["id",6]]],[11,"initWithFrame_","","",111,[[["nsrect",3]],["id",6]]],[11,"bounds","","",111,[[],["nsrect",3]]],[11,"frame","","",111,[[],["nsrect",3]]],[11,"setFrameSize","","",111,[[["nssize",3]]]],[11,"setFrameOrigin","","",111,[[["nspoint",3]]]],[11,"display_","","",111,[[]]],[11,"setWantsBestResolutionOpenGLSurface_","","",111,[[["bool",6]]]],[11,"convertPoint_fromView_","","",111,[[["nspoint",3],["id",6]],["nspoint",3]]],[11,"addSubview_","","",111,[[["id",6]]]],[11,"superview","","",111,[[],["id",6]]],[11,"removeFromSuperview","","",111,[[]]],[11,"setAutoresizingMask_","","",111,[[["nsautoresizingmaskoptions",6]]]],[11,"wantsLayer","","",111,[[],["bool",6]]],[11,"setWantsLayer","","",111,[[["bool",6]]]],[11,"layer","","",111,[[],["id",6]]],[11,"setLayer","","",111,[[["id",6]]]],[11,"widthAnchor","","",111,[[],["id",6]]],[11,"heightAnchor","","",111,[[],["id",6]]],[11,"convertRectToBacking","","",111,[[["nsrect",3]],["nsrect",3]]],[11,"layerContentsPlacement","","",111,[[],["nsviewlayercontentsplacement",4]]],[11,"setLayerContentsPlacement","","",111,[[["nsviewlayercontentsplacement",4]]]],[11,"initWithFrame_pixelFormat_","","",111,[[["id",6],["nsrect",3]],["id",6]]],[11,"display_","","",111,[[]]],[11,"setOpenGLContext_","","",111,[[["id",6]]]],[11,"setPixelFormat_","","",111,[[["id",6]]]],[11,"initWithAttributes_","","",111,[[],["id",6]]],[11,"getValues_forAttribute_forVirtualScreen_","","",111,[[["nsopenglpixelformatattribute",4],["glint",6]]]],[11,"numberOfVirtualScreens","","",111,[[],["glint",6]]],[11,"initWithFormat_shareContext_","","",111,[[["id",6]],["id",6]]],[11,"initWithCGLContextObj_","","",111,[[["cglcontextobj",6]],["id",6]]],[11,"clearCurrentContext","","",111,[[]]],[11,"currentContext","","",111,[[],["id",6]]],[11,"makeCurrentContext","","",111,[[]]],[11,"setView_","","",111,[[["id",6]]]],[11,"view","","",111,[[],["id",6]]],[11,"clearDrawable","","",111,[[]]],[11,"update","","",111,[[]]],[11,"flushBuffer","","",111,[[]]],[11,"setValues_forParameter_","","",111,[[["nsopenglcontextparameter",4]]]],[11,"getValues_forParameter_","","",111,[[["nsopenglcontextparameter",4]]]],[11,"setCurrentVirtualScreen_","","",111,[[["glint",6]]]],[11,"currentVirtualScreen","","",111,[[],["glint",6]]],[11,"CGLContextObj","","",111,[[],["cglcontextobj",6]]],[11,"keyEventWithType_location_modifierFlags_timestamp_windowNumber_context_characters_charactersIgnoringModifiers_isARepeat_keyCode_","","",111,[[["nspoint",3],["nstimeinterval",6],["nseventmodifierflags",3],["nsinteger",6],["id",6],["bool",6],["nseventtype",4],["c_ushort",6]],["id",6]]],[11,"mouseEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_clickCount_pressure_","","",111,[[["nspoint",3],["nstimeinterval",6],["id",6],["nseventmodifierflags",3],["nseventtype",4],["nsinteger",6],["c_float",6]],["id",6]]],[11,"enterExitEventWithType_location_modifierFlags_timestamp_windowNumber_context_eventNumber_trackingNumber_userData_","","",111,[[["nspoint",3],["nstimeinterval",6],["id",6],["nseventmodifierflags",3],["nseventtype",4],["nsinteger",6]],["id",6]]],[11,"otherEventWithType_location_modifierFlags_timestamp_windowNumber_context_subtype_data1_data2_","","",111,[[["nspoint",3],["nstimeinterval",6],["nseventmodifierflags",3],["nsinteger",6],["id",6],["nseventtype",4],["nseventsubtype",4]],["id",6]]],[11,"eventWithEventRef_","","",111,[[],["id",6]]],[11,"eventWithCGEvent_","","",111,[[],["id",6]]],[11,"context","","",111,[[],["id",6]]],[11,"locationInWindow","","",111,[[],["nspoint",3]]],[11,"modifierFlags","","",111,[[],["nseventmodifierflags",3]]],[11,"timestamp","","",111,[[],["nstimeinterval",6]]],[11,"eventType","","",111,[[],["nseventtype",4]]],[11,"window","","",111,[[],["id",6]]],[11,"windowNumber","","",111,[[],["nsinteger",6]]],[11,"eventRef","","",111,[[]]],[11,"CGEvent","","",111,[[]]],[11,"currentModifierFlags","","",111,[[],["nseventmodifierflags",3]]],[11,"keyRepeatDelay","","",111,[[],["nstimeinterval",6]]],[11,"keyRepeatInterval","","",111,[[],["nstimeinterval",6]]],[11,"characters","","",111,[[],["id",6]]],[11,"charactersIgnoringModifiers","","",111,[[],["id",6]]],[11,"keyCode","","",111,[[],["c_ushort",6]]],[11,"isARepeat","","",111,[[],["bool",6]]],[11,"pressedMouseButtons","","",111,[[],["nsuinteger",6]]],[11,"doubleClickInterval","","",111,[[],["nstimeinterval",6]]],[11,"mouseLocation","","",111,[[],["nspoint",3]]],[11,"buttonNumber","","",111,[[],["nsinteger",6]]],[11,"clickCount","","",111,[[],["nsinteger",6]]],[11,"pressure","","",111,[[],["c_float",6]]],[11,"stage","","",111,[[],["nsinteger",6]]],[11,"setMouseCoalescingEnabled_","","",111,[[["bool",6]]]],[11,"isMouseCoalescingEnabled","","",111,[[],["bool",6]]],[11,"eventNumber","","",111,[[],["nsinteger",6]]],[11,"trackingNumber","","",111,[[],["nsinteger",6]]],[11,"trackingArea","","",111,[[],["id",6]]],[11,"userData","","",111,[[]]],[11,"data1","","",111,[[],["nsinteger",6]]],[11,"data2","","",111,[[],["nsinteger",6]]],[11,"subtype","","",111,[[],["nseventsubtype",4]]],[11,"deltaX","","",111,[[],["cgfloat",6]]],[11,"deltaY","","",111,[[],["cgfloat",6]]],[11,"deltaZ","","",111,[[],["cgfloat",6]]],[11,"capabilityMask","","",111,[[],["nsuinteger",6]]],[11,"deviceID","","",111,[[],["nsuinteger",6]]],[11,"pointingDeviceID","","",111,[[],["nsuinteger",6]]],[11,"pointingDeviceSerialNumber","","",111,[[],["nsuinteger",6]]],[11,"pointingDeviceType","","",111,[[],["nspointingdevicetype",4]]],[11,"systemTabletID","","",111,[[],["nsuinteger",6]]],[11,"tabletID","","",111,[[],["nsuinteger",6]]],[11,"uniqueID","","",111,[[],["c_ulonglong",6]]],[11,"vendorID","","",111,[[],["nsuinteger",6]]],[11,"vendorPointingDeviceType","","",111,[[],["nsuinteger",6]]],[11,"absoluteX","","",111,[[],["nsinteger",6]]],[11,"absoluteY","","",111,[[],["nsinteger",6]]],[11,"absoluteZ","","",111,[[],["nsinteger",6]]],[11,"buttonMask","","",111,[[],["nseventbuttonmask",4]]],[11,"rotation","","",111,[[],["c_float",6]]],[11,"tangentialPressure","","",111,[[],["c_float",6]]],[11,"tilt","","",111,[[],["nspoint",3]]],[11,"vendorDefined","","",111,[[],["id",6]]],[11,"startPeriodicEventsAfterDelay_withPeriod_","","",111,[[["nstimeinterval",6]]]],[11,"stopPeriodicEvents","","",111,[[]]],[11,"magnification","","",111,[[],["cgfloat",6]]],[11,"touchesMatchingPhase_inView_","","",111,[[["nstouchphase",3],["id",6]],["id",6]]],[11,"isSwipeTrackingFromScrollEventsEnabled","","",111,[[],["bool",6]]],[11,"removeMonitor_","","",111,[[["id",6]]]],[11,"hasPreciseScrollingDeltas","","",111,[[],["bool",6]]],[11,"scrollingDeltaX","","",111,[[],["cgfloat",6]]],[11,"scrollingDeltaY","","",111,[[],["cgfloat",6]]],[11,"momentumPhase","","",111,[[],["nseventphase",3]]],[11,"phase","","",111,[[],["nseventphase",3]]],[11,"locationInNode_","","",111,[[["id",6]],["cgpoint",3]]],[11,"mainScreen","","",111,[[],["id",6]]],[11,"deepestScreen","","",111,[[],["id",6]]],[11,"screens","","",111,[[],["id",6]]],[11,"depth","","",111,[[],["nswindowdepth",6]]],[11,"frame","","",111,[[],["nsrect",3]]],[11,"supportedWindowDepths","","",111,[[]]],[11,"deviceDescription","","",111,[[],["id",6]]],[11,"visibleFrame","","",111,[[],["nsrect",3]]],[11,"colorSpace","","",111,[[],["id",6]]],[11,"screensHaveSeparateSpaces","","",111,[[],["bool",6]]],[11,"backingAlignedRect_options_","","",111,[[["nsalignmentoptions",3],["nsrect",3]],["nsrect",3]]],[11,"backingScaleFactor","","",111,[[],["cgfloat",6]]],[11,"convertRectFromBacking_","","",111,[[["nsrect",3]],["nsrect",3]]],[11,"convertRectToBacking_","","",111,[[["nsrect",3]],["nsrect",3]]],[11,"initWithFrame_","","",111,[[["nsrect",3]],["id",6]]],[11,"isEnabled_","","",111,[[],["bool",6]]],[11,"setEnabled_","","",111,[[["bool",6]],["bool",6]]],[11,"initWithFrame_","","",111,[[["nsrect",3]],["id",6]]],[11,"setImage_","","",111,[[["id",6]]]],[11,"initWithFrame_","","",111,[[["nsrect",3]],["id",6]]],[11,"setBezelStyle_","","",111,[[["nsbezelstyle",4]]]],[11,"setTitle_","","",111,[[["id",6]]]],[11,"setImage_","","",111,[[["id",6]]]],[11,"setTarget_","","",111,[[["id",6]]]],[11,"setAction_","","",111,[[["sel",3]]]],[11,"initByReferencingFile_","","",111,[[["id",6]],["id",6]]],[11,"initWithContentsOfFile_","","",111,[[["id",6]],["id",6]]],[11,"initWithData_","","",111,[[["id",6]],["id",6]]],[11,"initWithDataIgnoringOrientation_","","",111,[[["id",6]],["id",6]]],[11,"initWithPasteboard_","","",111,[[["id",6]],["id",6]]],[11,"initWithSize_flipped_drawingHandler_","","",111,[[["bool",6],["nssize",3]]]],[11,"initWithSize_","","",111,[[["nssize",3]],["id",6]]],[11,"name","","",111,[[],["id",6]]],[11,"setName_","","",111,[[["id",6]],["bool",6]]],[11,"size","","",111,[[],["nssize",3]]],[11,"template","","",111,[[],["bool",6]]],[11,"canInitWithPasteboard_","","",111,[[["id",6]],["bool",6]]],[11,"imageTypes","","",111,[[],["id",6]]],[11,"imageUnfilteredTypes","","",111,[[],["id",6]]],[11,"addRepresentation_","","",111,[[["id",6]]]],[11,"addRepresentations_","","",111,[[["id",6]]]],[11,"representations","","",111,[[],["id",6]]],[11,"removeRepresentation_","","",111,[[["id",6]]]],[11,"bestRepresentationForRect_context_hints_","","",111,[[["id",6],["nsrect",3]],["id",6]]],[11,"prefersColorMatch","","",111,[[],["bool",6]]],[11,"usesEPSOnResolutionMismatch","","",111,[[],["bool",6]]],[11,"matchesOnMultipleResolution","","",111,[[],["bool",6]]],[11,"drawInRect_","","",111,[[["nsrect",3]]]],[11,"drawAtPoint_fromRect_operation_fraction_","","",111,[[["nspoint",3],["nscompositingoperation",4],["cgfloat",6],["nsrect",3]]]],[11,"drawInRect_fromRect_operation_fraction_","","",111,[[["nscompositingoperation",4],["cgfloat",6],["nsrect",3]]]],[11,"drawInRect_fromRect_operation_fraction_respectFlipped_hints_","","",111,[[["bool",6],["id",6],["nscompositingoperation",4],["cgfloat",6],["nsrect",3]]]],[11,"drawRepresentation_inRect_","","",111,[[["id",6],["nsrect",3]]]],[11,"isValid","","",111,[[],["bool",6]]],[11,"backgroundColor","","",111,[[],["id",6]]],[11,"lockFocus","","",111,[[]]],[11,"lockFocusFlipped_","","",111,[[["bool",6]]]],[11,"unlockFocus","","",111,[[]]],[11,"alignmentRect","","",111,[[],["nsrect",3]]],[11,"cacheMode","","",111,[[],["nsimagecachemode",4]]],[11,"recache","","",111,[[]]],[11,"delegate","","",111,[[],["id",6]]],[11,"TIFFRepresentation","","",111,[[],["id",6]]],[11,"TIFFRepresentationUsingCompression_factor_","","",111,[[["nstiffcompression",4],["f32",15]],["id",6]]],[11,"cancelIncrementalLoad","","",111,[[]]],[11,"hitTestRect_withImageDestinationRect_context_hints_flipped_","","",111,[[["id",6],["bool",6],["nsrect",3]],["bool",6]]],[11,"accessibilityDescription","","",111,[[],["id",6]]],[11,"layerContentsForContentsScale_","","",111,[[["cgfloat",6]],["id",6]]],[11,"recommendedLayerContentsScale_","","",111,[[["cgfloat",6]],["cgfloat",6]]],[11,"matchesOnlyOnBestFittingAxis","","",111,[[],["bool",6]]],[11,"initWithContentsOfFile_withReference_","","",111,[[["id",6],["bool",6]],["id",6]]],[11,"initWithContentsOfURL_withReference_","","",111,[[["id",6],["bool",6]],["id",6]]],[11,"initWithData_","","",111,[[["id",6]],["id",6]]],[11,"initWithPasteboard_","","",111,[[["id",6]],["id",6]]],[11,"name","","",111,[[],["id",6]]],[11,"volume","","",111,[[],["f32",15]]],[11,"currentTime","","",111,[[],["nstimeinterval",6]]],[11,"loops","","",111,[[],["bool",6]]],[11,"playbackDeviceIdentifier","","",111,[[],["id",6]]],[11,"delegate","","",111,[[],["id",6]]],[11,"duration","","",111,[[],["nstimeinterval",6]]],[11,"playing","","",111,[[],["bool",6]]],[11,"pause","","",111,[[],["bool",6]]],[11,"play","","",111,[[],["bool",6]]],[11,"resume","","",111,[[],["bool",6]]],[11,"stop","","",111,[[],["bool",6]]],[11,"writeToPasteboard_","","",111,[[["id",6]]]],[11,"statusBar","","",111,[[],["id",6]]],[11,"button","","",111,[[],["id",6]]],[11,"menu","","",111,[[],["id",6]]],[11,"setMenu_","","",111,[[["id",6]]]],[11,"length","","",111,[[],["cgfloat",6]]],[11,"setLength_","","",111,[[["cgfloat",6]]]],[11,"statusItemWithLength_","","",111,[[["cgfloat",6]],["id",6]]],[11,"removeStatusItem_","","",111,[[["id",6]]]],[11,"isVertical","","",111,[[],["bool",6]]],[11,"initWithFrame_","","",111,[[["nsrect",3]],["id",6]]],[11,"setEditable_","","",111,[[["bool",6]]]],[11,"setStringValue_","","",111,[[["id",6]]]],[11,"initWithFrame_","","",111,[[["nsrect",3]],["id",6]]],[11,"addTabViewItem_","","",111,[[["id",6]]]],[11,"insertTabViewItem_atIndex_","","",111,[[["nsinteger",6],["id",6]]]],[11,"removeTabViewItem_","","",111,[[["id",6]]]],[11,"indexOfTabViewItem_","","",111,[[["id",6]],["id",6]]],[11,"indexOfTabViewItemWithIdentifier_","","",111,[[["id",6]],["id",6]]],[11,"numberOfTabViewItems","","",111,[[],["id",6]]],[11,"tabViewItemAtIndex_","","",111,[[["id",6]],["id",6]]],[11,"tabViewItems","","",111,[[],["id",6]]],[11,"selectFirstTabViewItem_","","",111,[[["id",6]]]],[11,"selectLastTabViewItem_","","",111,[[["id",6]]]],[11,"selectNextTabViewItem_","","",111,[[["id",6]]]],[11,"selectPreviousTabViewItem_","","",111,[[["id",6]]]],[11,"selectTabViewItem_","","",111,[[["id",6]]]],[11,"selectTabViewItemAtIndex_","","",111,[[["id",6]]]],[11,"selectTabViewItemWithIdentifier_","","",111,[[["id",6]]]],[11,"selectedTabViewItem","","",111,[[],["id",6]]],[11,"takeSelectedTabViewItemFromSender_","","",111,[[["id",6]]]],[11,"font","","",111,[[],["id",6]]],[11,"setFont_","","",111,[[["id",6]]]],[11,"tabViewType","","",111,[[],["nstabviewtype",4]]],[11,"setTabViewType_","","",111,[[["nstabviewtype",4]]]],[11,"controlTint","","",111,[[],["id",6]]],[11,"setControlTint_","","",111,[[["id",6]]]],[11,"drawsBackground","","",111,[[],["bool",6]]],[11,"setDrawsBackground_","","",111,[[["bool",6]]]],[11,"minimumSize","","",111,[[],["id",6]]],[11,"contentRect","","",111,[[],["id",6]]],[11,"controlSize","","",111,[[],["id",6]]],[11,"setControlSize_","","",111,[[["id",6]]]],[11,"allowsTruncatedLabels","","",111,[[],["bool",6]]],[11,"setAllowsTruncatedLabels_","","",111,[[["bool",6]]]],[11,"setDelegate_","","",111,[[["id",6]]]],[11,"delegate","","",111,[[],["id",6]]],[11,"tabViewAtPoint_","","",111,[[["id",6]],["id",6]]],[11,"initWithIdentifier_","","",111,[[["id",6]],["id",6]]],[11,"drawLabel_inRect_","","",111,[[["bool",6],["nsrect",3]]]],[11,"label","","",111,[[],["id",6]]],[11,"setLabel_","","",111,[[["id",6]]]],[11,"sizeOfLabel_","","",111,[[["bool",6]]]],[11,"tabState","","",111,[[],["nstabstate",4]]],[11,"identifier","","",111,[[],["id",6]]],[11,"setIdentifier_","","",111,[[["id",6]]]],[11,"color","","",111,[[],["id",6]]],[11,"setColor_","","",111,[[["id",6]]]],[11,"view","","",111,[[],["id",6]]],[11,"setView_","","",111,[[["id",6]]]],[11,"initialFirstResponder","","",111,[[],["id",6]]],[11,"setInitialFirstResponder_","","",111,[[["id",6]]]],[11,"tabView","","",111,[[],["id",6]]],[11,"tooltip","","",111,[[],["id",6]]],[11,"setTooltip_","","",111,[[["id",6]]]],[11,"activateConstraints","","",111,[[["id",6]],["id",6]]],[11,"constraintEqualToConstant","","",111,[[["cgfloat",6]],["id",6]]],[11,"constraintLessThanOrEqualToConstant","","",111,[[["cgfloat",6]],["id",6]]],[11,"constraintGreaterThanOrEqualToConstant","","",111,[[["cgfloat",6]],["id",6]]],[11,"deviceRGBColorSpace","","",111,[[],["id",6]]],[11,"genericRGBColorSpace","","",111,[[],["id",6]]],[11,"deviceCMYKColorSpace","","",111,[[],["id",6]]],[11,"genericCMYKColorSpace","","",111,[[],["id",6]]],[11,"deviceGrayColorSpace","","",111,[[],["id",6]]],[11,"genericGrayColorSpace","","",111,[[],["id",6]]],[11,"sRGBColorSpace","","",111,[[],["id",6]]],[11,"extendedSRGBColorSpace","","",111,[[],["id",6]]],[11,"displayP3ColorSpace","","",111,[[],["id",6]]],[11,"genericGamma22GrayColorSpace","","",111,[[],["id",6]]],[11,"extendedGenericGamma22GrayColorSpace","","",111,[[],["id",6]]],[11,"adobeRGB1998ColorSpace","","",111,[[],["id",6]]],[11,"alloc","","",111,[[],["id",6]]],[11,"initWithCGColorSpace_","","",111,[[],["id",6]]],[11,"CGColorSpace","","",111,[[]]],[11,"localizedName","","",111,[[],["id",6]]],[11,"clearColor","","",111,[[],["id",6]]],[11,"colorWithRed_green_blue_alpha_","","",111,[[["cgfloat",6]],["id",6]]],[11,"colorWithSRGBRed_green_blue_alpha_","","",111,[[["cgfloat",6]],["id",6]]],[11,"colorWithDeviceRed_green_blue_alpha_","","",111,[[["cgfloat",6]],["id",6]]],[11,"colorWithDisplayP3Red_green_blue_alpha_","","",111,[[["cgfloat",6]],["id",6]]],[11,"colorWithCalibratedRed_green_blue_alpha_","","",111,[[["cgfloat",6]],["id",6]]],[11,"colorUsingColorSpace_","","",111,[[["id",6]],["id",6]]],[11,"alphaComponent","","",111,[[],["cgfloat",6]]],[11,"whiteComponent","","",111,[[],["cgfloat",6]]],[11,"redComponent","","",111,[[],["cgfloat",6]]],[11,"greenComponent","","",111,[[],["cgfloat",6]]],[11,"blueComponent","","",111,[[],["cgfloat",6]]],[11,"cyanComponent","","",111,[[],["cgfloat",6]]],[11,"magentaComponent","","",111,[[],["cgfloat",6]]],[11,"yellowComponent","","",111,[[],["cgfloat",6]]],[11,"blackComponent","","",111,[[],["cgfloat",6]]],[11,"hueComponent","","",111,[[],["cgfloat",6]]],[11,"saturationComponent","","",111,[[],["cgfloat",6]]],[11,"brightnessComponent","","",111,[[],["cgfloat",6]]],[11,"init_","","",111,[[],["id",6]]],[11,"initWithIdentifier_","","",111,[[["id",6]],["id",6]]],[11,"showsBaselineSeparator","","",111,[[],["bool",6]]],[11,"setShowsBaselineSeparator_","","",111,[[["bool",6]]]],[11,"sharedSpellChecker","","",111,[[],["id",6]]],[11,"checkSpellingOfString_startingAt","","",111,[[["nsinteger",6],["id",6]],["nsrange",3]]],[11,"checkSpellingOfString_startingAt_language_wrap_inSpellDocumentWithTag_wordCount","","",111,[[["id",6],["bool",6],["nsinteger",6]]]],[11,"uniqueSpellDocumentTag","","",111,[[],["nsinteger",6]]],[11,"closeSpellDocumentWithTag","","",111,[[["nsinteger",6]]]],[11,"ignoreWord_inSpellDocumentWithTag","","",111,[[["nsinteger",6],["id",6]]]],[11,"initWithNibNamed_bundle_","","",111,[[["id",6]],["id",6]]],[11,"drop","cocoa::quartzcore","",89,[[]]],[11,"drop","","",96,[[]]],[11,"extend","cocoa::appkit","",4,[[["intoiterator",8]]]],[11,"extend","","",5,[[["intoiterator",8]]]],[11,"extend","","",9,[[["intoiterator",8]]]],[11,"extend","","",10,[[["intoiterator",8]]]],[11,"extend","","",28,[[["intoiterator",8]]]],[11,"extend","","",29,[[["intoiterator",8]]]],[11,"extend","","",36,[[["intoiterator",8]]]],[11,"extend","","",38,[[["intoiterator",8]]]],[11,"extend","","",39,[[["intoiterator",8]]]],[11,"extend","","",41,[[["intoiterator",8]]]],[11,"extend","","",42,[[["intoiterator",8]]]],[11,"extend","cocoa::quartzcore","",93,[[["intoiterator",8]]]],[11,"extend","","",94,[[["intoiterator",8]]]],[11,"extend","","",95,[[["intoiterator",8]]]],[11,"clone","cocoa::appkit","",1,[[],["nsapplicationactivationpolicy",4]]],[11,"clone","","",2,[[],["nsapplicationactivationoptions",4]]],[11,"clone","","",3,[[],["nsapplicationterminatereply",4]]],[11,"clone","","",4,[[],["nsapplicationpresentationoptions",3]]],[11,"clone","","",5,[[],["nswindowstylemask",3]]],[11,"clone","","",6,[[],["nswindowtitlevisibility",4]]],[11,"clone","","",7,[[],["nswindowtabbingmode",4]]],[11,"clone","","",8,[[],["nsbackingstoretype",4]]],[11,"clone","","",9,[[],["nswindoworderingmode",3]]],[11,"clone","","",10,[[],["nsalignmentoptions",3]]],[11,"clone","","",11,[[],["nsopenglpixelformatattribute",4]]],[11,"clone","","",12,[[],["nsopenglpfaopenglprofiles",4]]],[11,"clone","","",13,[[],["nsopenglcontextparameter",4]]],[11,"clone","","",14,[[],["nswindowbutton",4]]],[11,"clone","","",15,[[],["nsbezelstyle",4]]],[11,"clone","","",16,[[],["nsrequestuserattentiontype",4]]],[11,"clone","","",24,[[],["nspasteboardreadingoptions",4]]],[11,"clone","","",25,[[],["nspasteboardwritingoptions",4]]],[11,"clone","","",28,[[],["nswindowcollectionbehavior",3]]],[11,"clone","","",29,[[],["nswindowocclusionstate",3]]],[11,"clone","","",31,[[],["nsviewlayercontentsplacement",4]]],[11,"clone","","",36,[[],["nseventswipetrackingoptions",3]]],[11,"clone","","",38,[[],["nseventphase",3]]],[11,"clone","","",39,[[],["nstouchphase",3]]],[11,"clone","","",40,[[],["nseventtype",4]]],[11,"clone","","",41,[[],["nseventmask",3]]],[11,"clone","","",42,[[],["nseventmodifierflags",3]]],[11,"clone","","",50,[[],["nscompositingoperation",4]]],[11,"clone","","",51,[[],["nsimagecachemode",4]]],[11,"clone","","",52,[[],["nstiffcompression",4]]],[11,"clone","","",53,[[],["nsimageloadstatus",4]]],[11,"clone","cocoa::quartzcore","",89,[[],["calayer",3]]],[11,"clone","","",90,[[],["contentsgravity",4]]],[11,"clone","","",91,[[],["contentsformat",4]]],[11,"clone","","",92,[[],["filter",4]]],[11,"clone","","",93,[[],["edgeantialiasingmask",3]]],[11,"clone","","",94,[[],["cornermask",3]]],[11,"clone","","",95,[[],["autoresizingmask",3]]],[11,"clone","","",96,[[],["carenderer",3]]],[11,"clone","","",97,[[],["catransform3d",3]]],[11,"clone","","",98,[[],["cvtimestamp",3]]],[11,"clone","","",99,[[],["cvsmptetime",3]]],[11,"cmp","cocoa::appkit","",4,[[["nsapplicationpresentationoptions",3]],["ordering",4]]],[11,"cmp","","",5,[[["nswindowstylemask",3]],["ordering",4]]],[11,"cmp","","",9,[[["nswindoworderingmode",3]],["ordering",4]]],[11,"cmp","","",10,[[["nsalignmentoptions",3]],["ordering",4]]],[11,"cmp","","",28,[[["nswindowcollectionbehavior",3]],["ordering",4]]],[11,"cmp","","",29,[[["nswindowocclusionstate",3]],["ordering",4]]],[11,"cmp","","",36,[[["nseventswipetrackingoptions",3]],["ordering",4]]],[11,"cmp","","",38,[[["nseventphase",3]],["ordering",4]]],[11,"cmp","","",39,[[["nstouchphase",3]],["ordering",4]]],[11,"cmp","","",41,[[["nseventmask",3]],["ordering",4]]],[11,"cmp","","",42,[[["nseventmodifierflags",3]],["ordering",4]]],[11,"cmp","cocoa::quartzcore","",93,[[["edgeantialiasingmask",3]],["ordering",4]]],[11,"cmp","","",94,[[["cornermask",3]],["ordering",4]]],[11,"cmp","","",95,[[["autoresizingmask",3]],["ordering",4]]],[11,"eq","cocoa::appkit","",1,[[["nsapplicationactivationpolicy",4]],["bool",15]]],[11,"eq","","",2,[[["nsapplicationactivationoptions",4]],["bool",15]]],[11,"eq","","",3,[[["nsapplicationterminatereply",4]],["bool",15]]],[11,"eq","","",4,[[["nsapplicationpresentationoptions",3]],["bool",15]]],[11,"ne","","",4,[[["nsapplicationpresentationoptions",3]],["bool",15]]],[11,"eq","","",5,[[["nswindowstylemask",3]],["bool",15]]],[11,"ne","","",5,[[["nswindowstylemask",3]],["bool",15]]],[11,"eq","","",6,[[["nswindowtitlevisibility",4]],["bool",15]]],[11,"eq","","",7,[[["nswindowtabbingmode",4]],["bool",15]]],[11,"eq","","",8,[[["nsbackingstoretype",4]],["bool",15]]],[11,"eq","","",9,[[["nswindoworderingmode",3]],["bool",15]]],[11,"ne","","",9,[[["nswindoworderingmode",3]],["bool",15]]],[11,"eq","","",10,[[["nsalignmentoptions",3]],["bool",15]]],[11,"ne","","",10,[[["nsalignmentoptions",3]],["bool",15]]],[11,"eq","","",11,[[["nsopenglpixelformatattribute",4]],["bool",15]]],[11,"eq","","",12,[[["nsopenglpfaopenglprofiles",4]],["bool",15]]],[11,"eq","","",13,[[["nsopenglcontextparameter",4]],["bool",15]]],[11,"eq","","",14,[[["nswindowbutton",4]],["bool",15]]],[11,"eq","","",15,[[["nsbezelstyle",4]],["bool",15]]],[11,"eq","","",16,[[["nsrequestuserattentiontype",4]],["bool",15]]],[11,"eq","","",24,[[["nspasteboardreadingoptions",4]],["bool",15]]],[11,"eq","","",25,[[["nspasteboardwritingoptions",4]],["bool",15]]],[11,"eq","","",28,[[["nswindowcollectionbehavior",3]],["bool",15]]],[11,"ne","","",28,[[["nswindowcollectionbehavior",3]],["bool",15]]],[11,"eq","","",29,[[["nswindowocclusionstate",3]],["bool",15]]],[11,"ne","","",29,[[["nswindowocclusionstate",3]],["bool",15]]],[11,"eq","","",31,[[["nsviewlayercontentsplacement",4]],["bool",15]]],[11,"eq","","",36,[[["nseventswipetrackingoptions",3]],["bool",15]]],[11,"ne","","",36,[[["nseventswipetrackingoptions",3]],["bool",15]]],[11,"eq","","",38,[[["nseventphase",3]],["bool",15]]],[11,"ne","","",38,[[["nseventphase",3]],["bool",15]]],[11,"eq","","",39,[[["nstouchphase",3]],["bool",15]]],[11,"ne","","",39,[[["nstouchphase",3]],["bool",15]]],[11,"eq","","",40,[[["nseventtype",4]],["bool",15]]],[11,"eq","","",41,[[["nseventmask",3]],["bool",15]]],[11,"ne","","",41,[[["nseventmask",3]],["bool",15]]],[11,"eq","","",42,[[["nseventmodifierflags",3]],["bool",15]]],[11,"ne","","",42,[[["nseventmodifierflags",3]],["bool",15]]],[11,"eq","","",50,[[["nscompositingoperation",4]],["bool",15]]],[11,"eq","","",51,[[["nsimagecachemode",4]],["bool",15]]],[11,"eq","","",52,[[["nstiffcompression",4]],["bool",15]]],[11,"eq","","",53,[[["nsimageloadstatus",4]],["bool",15]]],[11,"eq","cocoa::quartzcore","",90,[[["contentsgravity",4]],["bool",15]]],[11,"ne","","",90,[[["contentsgravity",4]],["bool",15]]],[11,"eq","","",91,[[["contentsformat",4]],["bool",15]]],[11,"ne","","",91,[[["contentsformat",4]],["bool",15]]],[11,"eq","","",92,[[["filter",4]],["bool",15]]],[11,"ne","","",92,[[["filter",4]],["bool",15]]],[11,"eq","","",93,[[["edgeantialiasingmask",3]],["bool",15]]],[11,"ne","","",93,[[["edgeantialiasingmask",3]],["bool",15]]],[11,"eq","","",94,[[["cornermask",3]],["bool",15]]],[11,"ne","","",94,[[["cornermask",3]],["bool",15]]],[11,"eq","","",95,[[["autoresizingmask",3]],["bool",15]]],[11,"ne","","",95,[[["autoresizingmask",3]],["bool",15]]],[11,"eq","","",97,[[["catransform3d",3]],["bool",15]]],[11,"partial_cmp","cocoa::appkit","",4,[[["nsapplicationpresentationoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["nsapplicationpresentationoptions",3]],["bool",15]]],[11,"le","","",4,[[["nsapplicationpresentationoptions",3]],["bool",15]]],[11,"gt","","",4,[[["nsapplicationpresentationoptions",3]],["bool",15]]],[11,"ge","","",4,[[["nsapplicationpresentationoptions",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["nswindowstylemask",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["nswindowstylemask",3]],["bool",15]]],[11,"le","","",5,[[["nswindowstylemask",3]],["bool",15]]],[11,"gt","","",5,[[["nswindowstylemask",3]],["bool",15]]],[11,"ge","","",5,[[["nswindowstylemask",3]],["bool",15]]],[11,"partial_cmp","","",9,[[["nswindoworderingmode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["nswindoworderingmode",3]],["bool",15]]],[11,"le","","",9,[[["nswindoworderingmode",3]],["bool",15]]],[11,"gt","","",9,[[["nswindoworderingmode",3]],["bool",15]]],[11,"ge","","",9,[[["nswindoworderingmode",3]],["bool",15]]],[11,"partial_cmp","","",10,[[["nsalignmentoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["nsalignmentoptions",3]],["bool",15]]],[11,"le","","",10,[[["nsalignmentoptions",3]],["bool",15]]],[11,"gt","","",10,[[["nsalignmentoptions",3]],["bool",15]]],[11,"ge","","",10,[[["nsalignmentoptions",3]],["bool",15]]],[11,"partial_cmp","","",28,[[["nswindowcollectionbehavior",3]],[["option",4],["ordering",4]]]],[11,"lt","","",28,[[["nswindowcollectionbehavior",3]],["bool",15]]],[11,"le","","",28,[[["nswindowcollectionbehavior",3]],["bool",15]]],[11,"gt","","",28,[[["nswindowcollectionbehavior",3]],["bool",15]]],[11,"ge","","",28,[[["nswindowcollectionbehavior",3]],["bool",15]]],[11,"partial_cmp","","",29,[[["nswindowocclusionstate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["nswindowocclusionstate",3]],["bool",15]]],[11,"le","","",29,[[["nswindowocclusionstate",3]],["bool",15]]],[11,"gt","","",29,[[["nswindowocclusionstate",3]],["bool",15]]],[11,"ge","","",29,[[["nswindowocclusionstate",3]],["bool",15]]],[11,"partial_cmp","","",36,[[["nseventswipetrackingoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",36,[[["nseventswipetrackingoptions",3]],["bool",15]]],[11,"le","","",36,[[["nseventswipetrackingoptions",3]],["bool",15]]],[11,"gt","","",36,[[["nseventswipetrackingoptions",3]],["bool",15]]],[11,"ge","","",36,[[["nseventswipetrackingoptions",3]],["bool",15]]],[11,"partial_cmp","","",38,[[["nseventphase",3]],[["option",4],["ordering",4]]]],[11,"lt","","",38,[[["nseventphase",3]],["bool",15]]],[11,"le","","",38,[[["nseventphase",3]],["bool",15]]],[11,"gt","","",38,[[["nseventphase",3]],["bool",15]]],[11,"ge","","",38,[[["nseventphase",3]],["bool",15]]],[11,"partial_cmp","","",39,[[["nstouchphase",3]],[["option",4],["ordering",4]]]],[11,"lt","","",39,[[["nstouchphase",3]],["bool",15]]],[11,"le","","",39,[[["nstouchphase",3]],["bool",15]]],[11,"gt","","",39,[[["nstouchphase",3]],["bool",15]]],[11,"ge","","",39,[[["nstouchphase",3]],["bool",15]]],[11,"partial_cmp","","",41,[[["nseventmask",3]],[["option",4],["ordering",4]]]],[11,"lt","","",41,[[["nseventmask",3]],["bool",15]]],[11,"le","","",41,[[["nseventmask",3]],["bool",15]]],[11,"gt","","",41,[[["nseventmask",3]],["bool",15]]],[11,"ge","","",41,[[["nseventmask",3]],["bool",15]]],[11,"partial_cmp","","",42,[[["nseventmodifierflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",42,[[["nseventmodifierflags",3]],["bool",15]]],[11,"le","","",42,[[["nseventmodifierflags",3]],["bool",15]]],[11,"gt","","",42,[[["nseventmodifierflags",3]],["bool",15]]],[11,"ge","","",42,[[["nseventmodifierflags",3]],["bool",15]]],[11,"partial_cmp","cocoa::quartzcore","",93,[[["edgeantialiasingmask",3]],[["option",4],["ordering",4]]]],[11,"lt","","",93,[[["edgeantialiasingmask",3]],["bool",15]]],[11,"le","","",93,[[["edgeantialiasingmask",3]],["bool",15]]],[11,"gt","","",93,[[["edgeantialiasingmask",3]],["bool",15]]],[11,"ge","","",93,[[["edgeantialiasingmask",3]],["bool",15]]],[11,"partial_cmp","","",94,[[["cornermask",3]],[["option",4],["ordering",4]]]],[11,"lt","","",94,[[["cornermask",3]],["bool",15]]],[11,"le","","",94,[[["cornermask",3]],["bool",15]]],[11,"gt","","",94,[[["cornermask",3]],["bool",15]]],[11,"ge","","",94,[[["cornermask",3]],["bool",15]]],[11,"partial_cmp","","",95,[[["autoresizingmask",3]],[["option",4],["ordering",4]]]],[11,"lt","","",95,[[["autoresizingmask",3]],["bool",15]]],[11,"le","","",95,[[["autoresizingmask",3]],["bool",15]]],[11,"gt","","",95,[[["autoresizingmask",3]],["bool",15]]],[11,"ge","","",95,[[["autoresizingmask",3]],["bool",15]]],[11,"fmt","cocoa::appkit","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","cocoa::quartzcore","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"sub","cocoa::appkit","Returns the set difference of the two sets of flags.",4,[[["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",5,[[["nswindowstylemask",3]],["nswindowstylemask",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["nswindoworderingmode",3]],["nswindoworderingmode",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["nsalignmentoptions",3]],["nsalignmentoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",28,[[["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",29,[[["nswindowocclusionstate",3]],["nswindowocclusionstate",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",36,[[["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",38,[[["nseventphase",3]],["nseventphase",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",39,[[["nstouchphase",3]],["nstouchphase",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",41,[[["nseventmask",3]],["nseventmask",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",42,[[["nseventmodifierflags",3]],["nseventmodifierflags",3]]],[11,"sub","cocoa::quartzcore","Returns the set difference of the two sets of flags.",93,[[["edgeantialiasingmask",3]],["edgeantialiasingmask",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",94,[[["cornermask",3]],["cornermask",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",95,[[["autoresizingmask",3]],["autoresizingmask",3]]],[11,"mul","","",97,[[["catransform3d",3]],["catransform3d",3]]],[11,"sub_assign","cocoa::appkit","Disables all flags enabled in the set.",4,[[["nsapplicationpresentationoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",5,[[["nswindowstylemask",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["nswindoworderingmode",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["nsalignmentoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",28,[[["nswindowcollectionbehavior",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",29,[[["nswindowocclusionstate",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",36,[[["nseventswipetrackingoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",38,[[["nseventphase",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",39,[[["nstouchphase",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",41,[[["nseventmask",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",42,[[["nseventmodifierflags",3]]]],[11,"sub_assign","cocoa::quartzcore","Disables all flags enabled in the set.",93,[[["edgeantialiasingmask",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",94,[[["cornermask",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",95,[[["autoresizingmask",3]]]],[11,"not","cocoa::appkit","Returns the complement of this set of flags.",4,[[],["nsapplicationpresentationoptions",3]]],[11,"not","","Returns the complement of this set of flags.",5,[[],["nswindowstylemask",3]]],[11,"not","","Returns the complement of this set of flags.",9,[[],["nswindoworderingmode",3]]],[11,"not","","Returns the complement of this set of flags.",10,[[],["nsalignmentoptions",3]]],[11,"not","","Returns the complement of this set of flags.",28,[[],["nswindowcollectionbehavior",3]]],[11,"not","","Returns the complement of this set of flags.",29,[[],["nswindowocclusionstate",3]]],[11,"not","","Returns the complement of this set of flags.",36,[[],["nseventswipetrackingoptions",3]]],[11,"not","","Returns the complement of this set of flags.",38,[[],["nseventphase",3]]],[11,"not","","Returns the complement of this set of flags.",39,[[],["nstouchphase",3]]],[11,"not","","Returns the complement of this set of flags.",41,[[],["nseventmask",3]]],[11,"not","","Returns the complement of this set of flags.",42,[[],["nseventmodifierflags",3]]],[11,"not","cocoa::quartzcore","Returns the complement of this set of flags.",93,[[],["edgeantialiasingmask",3]]],[11,"not","","Returns the complement of this set of flags.",94,[[],["cornermask",3]]],[11,"not","","Returns the complement of this set of flags.",95,[[],["autoresizingmask",3]]],[11,"bitand","cocoa::appkit","Returns the intersection between the two sets of flags.",4,[[["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",5,[[["nswindowstylemask",3]],["nswindowstylemask",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["nswindoworderingmode",3]],["nswindoworderingmode",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["nsalignmentoptions",3]],["nsalignmentoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",28,[[["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",29,[[["nswindowocclusionstate",3]],["nswindowocclusionstate",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",36,[[["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",38,[[["nseventphase",3]],["nseventphase",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",39,[[["nstouchphase",3]],["nstouchphase",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",41,[[["nseventmask",3]],["nseventmask",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",42,[[["nseventmodifierflags",3]],["nseventmodifierflags",3]]],[11,"bitand","cocoa::quartzcore","Returns the intersection between the two sets of flags.",93,[[["edgeantialiasingmask",3]],["edgeantialiasingmask",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",94,[[["cornermask",3]],["cornermask",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",95,[[["autoresizingmask",3]],["autoresizingmask",3]]],[11,"bitor","cocoa::appkit","Returns the union of the two sets of flags.",4,[[["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",5,[[["nswindowstylemask",3]],["nswindowstylemask",3]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["nswindoworderingmode",3]],["nswindoworderingmode",3]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["nsalignmentoptions",3]],["nsalignmentoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",28,[[["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]]],[11,"bitor","","Returns the union of the two sets of flags.",29,[[["nswindowocclusionstate",3]],["nswindowocclusionstate",3]]],[11,"bitor","","Returns the union of the two sets of flags.",36,[[["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",38,[[["nseventphase",3]],["nseventphase",3]]],[11,"bitor","","Returns the union of the two sets of flags.",39,[[["nstouchphase",3]],["nstouchphase",3]]],[11,"bitor","","Returns the union of the two sets of flags.",41,[[["nseventmask",3]],["nseventmask",3]]],[11,"bitor","","Returns the union of the two sets of flags.",42,[[["nseventmodifierflags",3]],["nseventmodifierflags",3]]],[11,"bitor","cocoa::quartzcore","Returns the union of the two sets of flags.",93,[[["edgeantialiasingmask",3]],["edgeantialiasingmask",3]]],[11,"bitor","","Returns the union of the two sets of flags.",94,[[["cornermask",3]],["cornermask",3]]],[11,"bitor","","Returns the union of the two sets of flags.",95,[[["autoresizingmask",3]],["autoresizingmask",3]]],[11,"bitxor","cocoa::appkit","Returns the left flags, but with all the right flags …",4,[[["nsapplicationpresentationoptions",3]],["nsapplicationpresentationoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",5,[[["nswindowstylemask",3]],["nswindowstylemask",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",9,[[["nswindoworderingmode",3]],["nswindoworderingmode",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",10,[[["nsalignmentoptions",3]],["nsalignmentoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",28,[[["nswindowcollectionbehavior",3]],["nswindowcollectionbehavior",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",29,[[["nswindowocclusionstate",3]],["nswindowocclusionstate",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",36,[[["nseventswipetrackingoptions",3]],["nseventswipetrackingoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",38,[[["nseventphase",3]],["nseventphase",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",39,[[["nstouchphase",3]],["nstouchphase",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",41,[[["nseventmask",3]],["nseventmask",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",42,[[["nseventmodifierflags",3]],["nseventmodifierflags",3]]],[11,"bitxor","cocoa::quartzcore","Returns the left flags, but with all the right flags …",93,[[["edgeantialiasingmask",3]],["edgeantialiasingmask",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",94,[[["cornermask",3]],["cornermask",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",95,[[["autoresizingmask",3]],["autoresizingmask",3]]],[11,"bitand_assign","cocoa::appkit","Disables all flags disabled in the set.",4,[[["nsapplicationpresentationoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",5,[[["nswindowstylemask",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["nswindoworderingmode",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["nsalignmentoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",28,[[["nswindowcollectionbehavior",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",29,[[["nswindowocclusionstate",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",36,[[["nseventswipetrackingoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",38,[[["nseventphase",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",39,[[["nstouchphase",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",41,[[["nseventmask",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",42,[[["nseventmodifierflags",3]]]],[11,"bitand_assign","cocoa::quartzcore","Disables all flags disabled in the set.",93,[[["edgeantialiasingmask",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",94,[[["cornermask",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",95,[[["autoresizingmask",3]]]],[11,"bitor_assign","cocoa::appkit","Adds the set of flags.",4,[[["nsapplicationpresentationoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",5,[[["nswindowstylemask",3]]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["nswindoworderingmode",3]]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["nsalignmentoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",28,[[["nswindowcollectionbehavior",3]]]],[11,"bitor_assign","","Adds the set of flags.",29,[[["nswindowocclusionstate",3]]]],[11,"bitor_assign","","Adds the set of flags.",36,[[["nseventswipetrackingoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",38,[[["nseventphase",3]]]],[11,"bitor_assign","","Adds the set of flags.",39,[[["nstouchphase",3]]]],[11,"bitor_assign","","Adds the set of flags.",41,[[["nseventmask",3]]]],[11,"bitor_assign","","Adds the set of flags.",42,[[["nseventmodifierflags",3]]]],[11,"bitor_assign","cocoa::quartzcore","Adds the set of flags.",93,[[["edgeantialiasingmask",3]]]],[11,"bitor_assign","","Adds the set of flags.",94,[[["cornermask",3]]]],[11,"bitor_assign","","Adds the set of flags.",95,[[["autoresizingmask",3]]]],[11,"bitxor_assign","cocoa::appkit","Toggles the set of flags.",4,[[["nsapplicationpresentationoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",5,[[["nswindowstylemask",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["nswindoworderingmode",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["nsalignmentoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",28,[[["nswindowcollectionbehavior",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",29,[[["nswindowocclusionstate",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",36,[[["nseventswipetrackingoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",38,[[["nseventphase",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",39,[[["nstouchphase",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",41,[[["nseventmask",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",42,[[["nseventmodifierflags",3]]]],[11,"bitxor_assign","cocoa::quartzcore","Toggles the set of flags.",93,[[["edgeantialiasingmask",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",94,[[["cornermask",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",95,[[["autoresizingmask",3]]]],[11,"hash","cocoa::appkit","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","cocoa::quartzcore","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"from_iter","cocoa::appkit","",4,[[["intoiterator",8]],["nsapplicationpresentationoptions",3]]],[11,"from_iter","","",5,[[["intoiterator",8]],["nswindowstylemask",3]]],[11,"from_iter","","",9,[[["intoiterator",8]],["nswindoworderingmode",3]]],[11,"from_iter","","",10,[[["intoiterator",8]],["nsalignmentoptions",3]]],[11,"from_iter","","",28,[[["intoiterator",8]],["nswindowcollectionbehavior",3]]],[11,"from_iter","","",29,[[["intoiterator",8]],["nswindowocclusionstate",3]]],[11,"from_iter","","",36,[[["intoiterator",8]],["nseventswipetrackingoptions",3]]],[11,"from_iter","","",38,[[["intoiterator",8]],["nseventphase",3]]],[11,"from_iter","","",39,[[["intoiterator",8]],["nstouchphase",3]]],[11,"from_iter","","",41,[[["intoiterator",8]],["nseventmask",3]]],[11,"from_iter","","",42,[[["intoiterator",8]],["nseventmodifierflags",3]]],[11,"from_iter","cocoa::quartzcore","",93,[[["intoiterator",8]],["edgeantialiasingmask",3]]],[11,"from_iter","","",94,[[["intoiterator",8]],["cornermask",3]]],[11,"from_iter","","",95,[[["intoiterator",8]],["autoresizingmask",3]]],[11,"fmt","cocoa::appkit","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","cocoa::quartzcore","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","cocoa::appkit","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","cocoa::quartzcore","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","cocoa::appkit","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","cocoa::quartzcore","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","cocoa::appkit","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","cocoa::quartzcore","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"new","cocoa::appkit","",0,[[["f64",15]],["cgpoint",3]]],[11,"apply_transform","","",0,[[["cgaffinetransform",3]],["cgpoint",3]]],[11,"new","cocoa::foundation","",69,[[["u64",15]],["nsrange",3]]],[11,"new","","",71,[[["u64",15]],["nsoperatingsystemversion",3]]],[18,"NSEnumerationConcurrent","","",102,null],[18,"NSEnumerationReverse","","",102,null],[11,"empty","","Returns an empty set of flags",102,[[],["nsenumerationoptions",3]]],[11,"all","","Returns the set containing all flags.",102,[[],["nsenumerationoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",102,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",102,[[["u64",15]],[["nsenumerationoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",102,[[["u64",15]],["nsenumerationoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",102,[[["u64",15]],["nsenumerationoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",102,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",102,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",102,[[["nsenumerationoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",102,[[["nsenumerationoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",102,[[["nsenumerationoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",102,[[["nsenumerationoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",102,[[["nsenumerationoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",102,[[["nsenumerationoptions",3],["bool",15]]]],[18,"NSURLBookmarkCreationPreferFileIDResolution","","",104,null],[18,"NSURLBookmarkCreationMinimalBookmark","","",104,null],[18,"NSURLBookmarkCreationSuitableForBookmarkFile","","",104,null],[18,"NSURLBookmarkCreationWithSecurityScope","","",104,null],[18,"NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess","","",104,null],[11,"empty","","Returns an empty set of flags",104,[[],["nsurlbookmarkcreationoptions",3]]],[11,"all","","Returns the set containing all flags.",104,[[],["nsurlbookmarkcreationoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",104,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",104,[[["u64",15]],[["nsurlbookmarkcreationoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",104,[[["u64",15]],["nsurlbookmarkcreationoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",104,[[["u64",15]],["nsurlbookmarkcreationoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",104,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",104,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",104,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",104,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",104,[[["nsurlbookmarkcreationoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",104,[[["nsurlbookmarkcreationoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",104,[[["nsurlbookmarkcreationoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",104,[[["nsurlbookmarkcreationoptions",3],["bool",15]]]],[18,"NSURLBookmarkResolutionWithoutUI","","",105,null],[18,"NSURLBookmarkResolutionWithoutMounting","","",105,null],[18,"NSURLBookmarkResolutionWithSecurityScope","","",105,null],[11,"empty","","Returns an empty set of flags",105,[[],["nsurlbookmarkresolutionoptions",3]]],[11,"all","","Returns the set containing all flags.",105,[[],["nsurlbookmarkresolutionoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",105,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",105,[[["u64",15]],[["nsurlbookmarkresolutionoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",105,[[["u64",15]],["nsurlbookmarkresolutionoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",105,[[["u64",15]],["nsurlbookmarkresolutionoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",105,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",105,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",105,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",105,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",105,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",105,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",105,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",105,[[["nsurlbookmarkresolutionoptions",3],["bool",15]]]],[18,"NSDataReadingMappedIfSafe","","",106,null],[18,"NSDataReadingUncached","","",106,null],[18,"NSDataReadingMappedAlways","","",106,null],[11,"empty","","Returns an empty set of flags",106,[[],["nsdatareadingoptions",3]]],[11,"all","","Returns the set containing all flags.",106,[[],["nsdatareadingoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",106,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",106,[[["u64",15]],[["option",4],["nsdatareadingoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",106,[[["u64",15]],["nsdatareadingoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",106,[[["u64",15]],["nsdatareadingoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",106,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",106,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",106,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",106,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",106,[[["nsdatareadingoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",106,[[["nsdatareadingoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",106,[[["nsdatareadingoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",106,[[["bool",15],["nsdatareadingoptions",3]]]],[18,"NSDataBase64Encoding64CharacterLineLength","","",107,null],[18,"NSDataBase64Encoding76CharacterLineLength","","",107,null],[18,"NSDataBase64EncodingEndLineWithCarriageReturn","","",107,null],[18,"NSDataBase64EncodingEndLineWithLineFeed","","",107,null],[11,"empty","","Returns an empty set of flags",107,[[],["nsdatabase64encodingoptions",3]]],[11,"all","","Returns the set containing all flags.",107,[[],["nsdatabase64encodingoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",107,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",107,[[["u64",15]],[["nsdatabase64encodingoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",107,[[["u64",15]],["nsdatabase64encodingoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",107,[[["u64",15]],["nsdatabase64encodingoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",107,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",107,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",107,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",107,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",107,[[["nsdatabase64encodingoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",107,[[["nsdatabase64encodingoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",107,[[["nsdatabase64encodingoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",107,[[["nsdatabase64encodingoptions",3],["bool",15]]]],[18,"NSDataBase64DecodingIgnoreUnknownCharacters","","",108,null],[11,"empty","","Returns an empty set of flags",108,[[],["nsdatabase64decodingoptions",3]]],[11,"all","","Returns the set containing all flags.",108,[[],["nsdatabase64decodingoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",108,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",108,[[["u64",15]],[["option",4],["nsdatabase64decodingoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",108,[[["u64",15]],["nsdatabase64decodingoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",108,[[["u64",15]],["nsdatabase64decodingoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",108,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",108,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",108,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",108,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",108,[[["nsdatabase64decodingoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",108,[[["nsdatabase64decodingoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",108,[[["nsdatabase64decodingoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",108,[[["bool",15],["nsdatabase64decodingoptions",3]]]],[18,"NSDataWritingAtomic","","",109,null],[18,"NSDataWritingWithoutOverwriting","","",109,null],[11,"empty","","Returns an empty set of flags",109,[[],["nsdatawritingoptions",3]]],[11,"all","","Returns the set containing all flags.",109,[[],["nsdatawritingoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",109,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",109,[[["u64",15]],[["nsdatawritingoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",109,[[["u64",15]],["nsdatawritingoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",109,[[["u64",15]],["nsdatawritingoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",109,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",109,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",109,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",109,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",109,[[["nsdatawritingoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",109,[[["nsdatawritingoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",109,[[["nsdatawritingoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",109,[[["bool",15],["nsdatawritingoptions",3]]]],[18,"NSDataSearchBackwards","","",110,null],[18,"NSDataSearchAnchored","","",110,null],[11,"empty","","Returns an empty set of flags",110,[[],["nsdatasearchoptions",3]]],[11,"all","","Returns the set containing all flags.",110,[[],["nsdatasearchoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",110,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",110,[[["u64",15]],[["nsdatasearchoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",110,[[["u64",15]],["nsdatasearchoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",110,[[["u64",15]],["nsdatasearchoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",110,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",110,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",110,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",110,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",110,[[["nsdatasearchoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",110,[[["nsdatasearchoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",110,[[["nsdatasearchoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",110,[[["bool",15],["nsdatasearchoptions",3]]]],[11,"new","","",86,[[["f64",15]],["nspoint",3]]],[11,"new","","",87,[[["f64",15]],["nssize",3]]],[11,"new","","",88,[[["nssize",3],["nspoint",3]],["nsrect",3]]],[11,"as_CGRect","","",88,[[],["cgrect",3]]],[11,"inset","","",88,[[["f64",15]],["nsrect",3]]]],"p":[[3,"CGPoint"],[4,"NSApplicationActivationPolicy"],[4,"NSApplicationActivationOptions"],[4,"NSApplicationTerminateReply"],[3,"NSApplicationPresentationOptions"],[3,"NSWindowStyleMask"],[4,"NSWindowTitleVisibility"],[4,"NSWindowTabbingMode"],[4,"NSBackingStoreType"],[3,"NSWindowOrderingMode"],[3,"NSAlignmentOptions"],[4,"NSOpenGLPixelFormatAttribute"],[4,"NSOpenGLPFAOpenGLProfiles"],[4,"NSOpenGLContextParameter"],[4,"NSWindowButton"],[4,"NSBezelStyle"],[4,"NSRequestUserAttentionType"],[8,"NSApplication"],[8,"NSRunningApplication"],[8,"NSPasteboard"],[8,"NSPasteboardItem"],[8,"NSPasteboardItemDataProvider"],[8,"NSPasteboardWriting"],[8,"NSPasteboardReading"],[4,"NSPasteboardReadingOptions"],[4,"NSPasteboardWritingOptions"],[8,"NSMenu"],[8,"NSMenuItem"],[3,"NSWindowCollectionBehavior"],[3,"NSWindowOcclusionState"],[8,"NSWindow"],[4,"NSViewLayerContentsPlacement"],[8,"NSView"],[8,"NSOpenGLView"],[8,"NSOpenGLPixelFormat"],[8,"NSOpenGLContext"],[3,"NSEventSwipeTrackingOptions"],[4,"NSEventGestureAxis"],[3,"NSEventPhase"],[3,"NSTouchPhase"],[4,"NSEventType"],[3,"NSEventMask"],[3,"NSEventModifierFlags"],[4,"NSEventSubtype"],[8,"NSEvent"],[8,"NSScreen"],[8,"NSControl"],[8,"NSImageView"],[8,"NSButton"],[8,"NSImage"],[4,"NSCompositingOperation"],[4,"NSImageCacheMode"],[4,"NSTIFFCompression"],[4,"NSImageLoadStatus"],[8,"NSSound"],[8,"NSStatusItem"],[8,"NSStatusBar"],[8,"NSTextField"],[4,"NSTabViewType"],[8,"NSTabView"],[4,"NSTabState"],[8,"NSTabViewItem"],[8,"NSLayoutConstraint"],[8,"NSLayoutDimension"],[8,"NSColorSpace"],[8,"NSColor"],[8,"NSToolbar"],[8,"NSSpellChecker"],[8,"NSNib"],[3,"NSRange"],[8,"NSAutoreleasePool"],[3,"NSOperatingSystemVersion"],[8,"NSProcessInfo"],[8,"NSArray"],[8,"NSDictionary"],[4,"NSComparisonResult"],[8,"NSString"],[8,"NSDate"],[8,"NSFastEnumeration"],[8,"NSRunLoop"],[8,"NSURL"],[8,"NSBundle"],[8,"NSData"],[8,"NSUserDefaults"],[4,"NSRectEdge"],[8,"NSValue"],[3,"NSPoint"],[3,"NSSize"],[3,"NSRect"],[3,"CALayer"],[4,"ContentsGravity"],[4,"ContentsFormat"],[4,"Filter"],[3,"EdgeAntialiasingMask"],[3,"CornerMask"],[3,"AutoresizingMask"],[3,"CARenderer"],[3,"CATransform3D"],[3,"CVTimeStamp"],[3,"CVSMPTETime"],[4,"NSPointingDeviceType"],[4,"NSEventButtonMask"],[3,"NSEnumerationOptions"],[3,"NSFastIterator"],[3,"NSURLBookmarkCreationOptions"],[3,"NSURLBookmarkResolutionOptions"],[3,"NSDataReadingOptions"],[3,"NSDataBase64EncodingOptions"],[3,"NSDataBase64DecodingOptions"],[3,"NSDataWritingOptions"],[3,"NSDataSearchOptions"],[6,"id"]]},\
"cocoa_foundation":{"doc":"","i":[[0,"base","cocoa_foundation","",null,null],[6,"BOOL","cocoa_foundation::base","The Objective-C <code>BOOL</code> type.",null,null],[17,"NO","","The equivalent of false for Objective-C\'s <code>BOOL</code> type.",null,null],[17,"YES","","The equivalent of true for Objective-C\'s <code>BOOL</code> type.",null,null],[6,"Class","","",null,null],[6,"id","","",null,null],[6,"SEL","","",null,null],[17,"nil","","",null,null],[17,"Nil","","",null,null],[5,"selector","","A convenience method to convert the name of a selector to …",null,[[["str",15]],["sel",6]]],[0,"foundation","cocoa_foundation","",null,null],[7,"NSDefaultRunLoopMode","cocoa_foundation::foundation","",null,null],[6,"NSInteger","","",null,null],[6,"NSUInteger","","",null,null],[17,"NSIntegerMax","","",null,null],[17,"NSNotFound","","",null,null],[3,"NSPoint","","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"NSSize","","",null,null],[12,"width","","",1,null],[12,"height","","",1,null],[3,"NSRect","","",null,null],[12,"origin","","",2,null],[12,"size","","",2,null],[4,"NSRectEdge","","",null,null],[13,"NSRectMinXEdge","","",3,null],[13,"NSRectMinYEdge","","",3,null],[13,"NSRectMaxXEdge","","",3,null],[13,"NSRectMaxYEdge","","",3,null],[8,"NSValue","","",null,null],[11,"valueWithPoint","","",4,[[["nspoint",3]],["id",6]]],[11,"valueWithSize","","",4,[[["nssize",3]],["id",6]]],[3,"NSRange","","",null,null],[12,"location","","",5,null],[12,"length","","",5,null],[11,"new","","",5,[[["nsuinteger",6]],["nsrange",3]]],[8,"NSAutoreleasePool","","",null,null],[11,"new","","",6,[[],["id",6]]],[10,"autorelease","","",6,[[]]],[10,"drain","","",6,[[]]],[3,"NSOperatingSystemVersion","","",null,null],[12,"majorVersion","","",7,null],[12,"minorVersion","","",7,null],[12,"patchVersion","","",7,null],[11,"new","","",7,[[["nsuinteger",6]],["nsoperatingsystemversion",3]]],[8,"NSProcessInfo","","",null,null],[11,"processInfo","","",8,[[],["id",6]]],[10,"processName","","",8,[[],["id",6]]],[10,"operatingSystemVersion","","",8,[[],["nsoperatingsystemversion",3]]],[10,"isOperatingSystemAtLeastVersion","","",8,[[["nsoperatingsystemversion",3]],["bool",15]]],[6,"NSTimeInterval","","",null,null],[8,"NSArray","","",null,null],[11,"array","","",9,[[],["id",6]]],[11,"arrayWithObjects","","",9,[[],["id",6]]],[11,"arrayWithObject","","",9,[[["id",6]],["id",6]]],[10,"init","","",9,[[],["id",6]]],[10,"count","","",9,[[],["nsuinteger",6]]],[10,"arrayByAddingObjectFromArray","","",9,[[["id",6]],["id",6]]],[10,"arrayByAddingObjectsFromArray","","",9,[[["id",6]],["id",6]]],[10,"objectAtIndex","","",9,[[["nsuinteger",6]],["id",6]]],[8,"NSDictionary","","",null,null],[11,"dictionary","","",10,[[],["id",6]]],[11,"dictionaryWithContentsOfFile_","","",10,[[["id",6]],["id",6]]],[11,"dictionaryWithContentsOfURL_","","",10,[[["id",6]],["id",6]]],[11,"dictionaryWithDictionary_","","",10,[[["id",6]],["id",6]]],[11,"dictionaryWithObject_forKey_","","",10,[[["id",6]],["id",6]]],[11,"dictionaryWithObjects_forKeys_","","",10,[[["id",6]],["id",6]]],[11,"dictionaryWithObjects_forKeys_count_","","",10,[[["nsuinteger",6]],["id",6]]],[11,"dictionaryWithObjectsAndKeys_","","",10,[[["id",6]],["id",6]]],[10,"init","","",10,[[],["id",6]]],[10,"initWithContentsOfFile_","","",10,[[["id",6]],["id",6]]],[10,"initWithContentsOfURL_","","",10,[[["id",6]],["id",6]]],[10,"initWithDictionary_","","",10,[[["id",6]],["id",6]]],[10,"initWithDictionary_copyItems_","","",10,[[["id",6],["bool",6]],["id",6]]],[10,"initWithObjects_forKeys_","","",10,[[["id",6]],["id",6]]],[10,"initWithObjects_forKeys_count_","","",10,[[["id",6],["nsuinteger",6]],["id",6]]],[10,"initWithObjectsAndKeys_","","",10,[[["id",6]],["id",6]]],[11,"sharedKeySetForKeys_","","",10,[[["id",6]],["id",6]]],[10,"count","","",10,[[],["nsuinteger",6]]],[10,"isEqualToDictionary_","","",10,[[["id",6]],["bool",6]]],[10,"allKeys","","",10,[[],["id",6]]],[10,"allKeysForObject_","","",10,[[["id",6]],["id",6]]],[10,"allValues","","",10,[[],["id",6]]],[10,"objectForKey_","","",10,[[["id",6]],["id",6]]],[10,"objectForKeyedSubscript_","","",10,[[["id",6]],["id",6]]],[10,"objectsForKeys_notFoundMarker_","","",10,[[["id",6]],["id",6]]],[10,"valueForKey_","","",10,[[["id",6]],["id",6]]],[10,"keyEnumerator","","",10,[[],["id",6]]],[10,"objectEnumerator","","",10,[[],["id",6]]],[10,"enumerateKeysAndObjectsUsingBlock_","","",10,[[]]],[10,"enumerateKeysAndObjectsWithOptions_usingBlock_","","",10,[[["nsenumerationoptions",3]]]],[10,"keysSortedByValueUsingSelector_","","",10,[[["sel",6]],["id",6]]],[10,"keysSortedByValueUsingComparator_","","",10,[[["nscomparator",6]],["id",6]]],[10,"keysSortedByValueWithOptions_usingComparator_","","",10,[[["nscomparator",6],["nsenumerationoptions",3]],["id",6]]],[10,"keysOfEntriesPassingTest_","","",10,[[],["id",6]]],[10,"keysOfEntriesWithOptions_PassingTest_","","",10,[[["nsenumerationoptions",3]],["id",6]]],[10,"writeToFile_atomically_","","",10,[[["id",6],["bool",6]],["bool",6]]],[10,"writeToURL_atomically_","","",10,[[["id",6],["bool",6]],["bool",6]]],[10,"fileCreationDate","","",10,[[],["id",6]]],[10,"fileExtensionHidden","","",10,[[],["bool",6]]],[10,"fileGroupOwnerAccountID","","",10,[[],["id",6]]],[10,"fileGroupOwnerAccountName","","",10,[[],["id",6]]],[10,"fileIsAppendOnly","","",10,[[],["bool",6]]],[10,"fileIsImmutable","","",10,[[],["bool",6]]],[10,"fileModificationDate","","",10,[[],["id",6]]],[10,"fileOwnerAccountID","","",10,[[],["id",6]]],[10,"fileOwnerAccountName","","",10,[[],["id",6]]],[10,"filePosixPermissions","","",10,[[],["nsuinteger",6]]],[10,"fileSize","","",10,[[],["c_ulonglong",6]]],[10,"fileSystemFileNumber","","",10,[[],["nsuinteger",6]]],[10,"fileSystemNumber","","",10,[[],["nsinteger",6]]],[10,"fileType","","",10,[[],["id",6]]],[10,"description","","",10,[[],["id",6]]],[10,"descriptionInStringsFileFormat","","",10,[[],["id",6]]],[10,"descriptionWithLocale_","","",10,[[["id",6]],["id",6]]],[10,"descriptionWithLocale_indent_","","",10,[[["id",6],["nsuinteger",6]],["id",6]]],[3,"NSEnumerationOptions","","",null,null],[18,"NSEnumerationConcurrent","","",11,null],[18,"NSEnumerationReverse","","",11,null],[11,"empty","","Returns an empty set of flags",11,[[],["nsenumerationoptions",3]]],[11,"all","","Returns the set containing all flags.",11,[[],["nsenumerationoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",11,[[],["c_ulonglong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",11,[[["c_ulonglong",6]],[["option",4],["nsenumerationoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",11,[[["c_ulonglong",6]],["nsenumerationoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",11,[[["c_ulonglong",6]],["nsenumerationoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",11,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",11,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",11,[[["nsenumerationoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",11,[[["nsenumerationoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",11,[[["nsenumerationoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",11,[[["nsenumerationoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",11,[[["nsenumerationoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",11,[[["bool",15],["nsenumerationoptions",3]]]],[6,"NSComparator","","",null,null],[4,"NSComparisonResult","","",null,null],[13,"NSOrderedAscending","","",12,null],[13,"NSOrderedSame","","",12,null],[13,"NSOrderedDescending","","",12,null],[8,"NSString","","",null,null],[11,"alloc","","",13,[[],["id",6]]],[10,"stringByAppendingString_","","",13,[[["id",6]],["id",6]]],[10,"init_str","","",13,[[["str",15]]]],[10,"UTF8String","","",13,[[]]],[10,"len","","",13,[[],["usize",15]]],[10,"isEqualToString","","",13,[[["str",15]],["bool",15]]],[10,"substringWithRange","","",13,[[["nsrange",3]],["id",6]]],[8,"NSDate","","",null,null],[11,"distantPast","","",14,[[],["id",6]]],[11,"distantFuture","","",14,[[],["id",6]]],[3,"NSFastIterator","","",null,null],[8,"NSFastEnumeration","","",null,null],[10,"iter","","",15,[[],["nsfastiterator",3]]],[8,"NSRunLoop","","",null,null],[10,"currentRunLoop","","",16,[[]]],[10,"performSelector_target_argument_order_modes_","","",16,[[["id",6],["sel",6],["nsuinteger",6]]]],[3,"NSURLBookmarkCreationOptions","","",null,null],[18,"NSURLBookmarkCreationPreferFileIDResolution","","",17,null],[18,"NSURLBookmarkCreationMinimalBookmark","","",17,null],[18,"NSURLBookmarkCreationSuitableForBookmarkFile","","",17,null],[18,"NSURLBookmarkCreationWithSecurityScope","","",17,null],[18,"NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess","","",17,null],[11,"empty","","Returns an empty set of flags",17,[[],["nsurlbookmarkcreationoptions",3]]],[11,"all","","Returns the set containing all flags.",17,[[],["nsurlbookmarkcreationoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[],["nsuinteger",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",17,[[["nsuinteger",6]],[["option",4],["nsurlbookmarkcreationoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",17,[[["nsuinteger",6]],["nsurlbookmarkcreationoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",17,[[["nsuinteger",6]],["nsurlbookmarkcreationoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",17,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",17,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",17,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",17,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["nsurlbookmarkcreationoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["nsurlbookmarkcreationoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["nsurlbookmarkcreationoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",17,[[["bool",15],["nsurlbookmarkcreationoptions",3]]]],[6,"NSURLBookmarkFileCreationOptions","","",null,null],[3,"NSURLBookmarkResolutionOptions","","",null,null],[18,"NSURLBookmarkResolutionWithoutUI","","",18,null],[18,"NSURLBookmarkResolutionWithoutMounting","","",18,null],[18,"NSURLBookmarkResolutionWithSecurityScope","","",18,null],[11,"empty","","Returns an empty set of flags",18,[[],["nsurlbookmarkresolutionoptions",3]]],[11,"all","","Returns the set containing all flags.",18,[[],["nsurlbookmarkresolutionoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[],["nsuinteger",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",18,[[["nsuinteger",6]],[["option",4],["nsurlbookmarkresolutionoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",18,[[["nsuinteger",6]],["nsurlbookmarkresolutionoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",18,[[["nsuinteger",6]],["nsurlbookmarkresolutionoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",18,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",18,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",18,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",18,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",18,[[["nsurlbookmarkresolutionoptions",3],["bool",15]]]],[8,"NSURL","","",null,null],[10,"alloc","","",19,[[],["id",6]]],[10,"URLWithString_","","",19,[[["id",6]],["id",6]]],[10,"initWithString_","","",19,[[["id",6]],["id",6]]],[10,"URLWithString_relativeToURL_","","",19,[[["id",6]],["id",6]]],[10,"initWithString_relativeToURL_","","",19,[[["id",6]],["id",6]]],[10,"fileURLWithPath_isDirectory_","","",19,[[["id",6],["bool",6]],["id",6]]],[10,"initFileURLWithPath_isDirectory_","","",19,[[["id",6],["bool",6]],["id",6]]],[10,"fileURLWithPath_relativeToURL_","","",19,[[["id",6]],["id",6]]],[10,"initFileURLWithPath_relativeToURL_","","",19,[[["id",6]],["id",6]]],[10,"fileURLWithPath_isDirectory_relativeToURL_","","",19,[[["id",6],["bool",6]],["id",6]]],[10,"initFileURLWithPath_isDirectory_relativeToURL_","","",19,[[["id",6],["bool",6]],["id",6]]],[10,"fileURLWithPath_","","",19,[[["id",6]],["id",6]]],[10,"initFileURLWithPath_","","",19,[[["id",6]],["id",6]]],[10,"fileURLWithPathComponents_","","",19,[[["id",6]],["id",6]]],[10,"URLByResolvingAliasFileAtURL_options_error_","","",19,[[["id",6],["nsurlbookmarkresolutionoptions",3]],["id",6]]],[10,"URLByResolvingBookmarkData_options_relativeToURL_bookmarkDataIsStale_error_","","",19,[[["id",6],["nsurlbookmarkresolutionoptions",3]],["id",6]]],[10,"initByResolvingBookmarkData_options_relativeToURL_bookmarkDataIsStale_error_","","",19,[[["id",6],["nsurlbookmarkresolutionoptions",3]],["id",6]]],[10,"absoluteURLWithDataRepresentation_relativeToURL_","","",19,[[["id",6]],["id",6]]],[10,"initAbsoluteURLWithDataRepresentation_relativeToURL_","","",19,[[["id",6]],["id",6]]],[10,"URLWithDataRepresentation_relativeToURL_","","",19,[[["id",6]],["id",6]]],[10,"initWithDataRepresentation_relativeToURL_","","",19,[[["id",6]],["id",6]]],[10,"dataRepresentation","","",19,[[],["id",6]]],[10,"isEqual_","","",19,[[["id",6]],["bool",6]]],[10,"checkResourceIsReachableAndReturnError_","","",19,[[["id",6]],["bool",6]]],[10,"isFileReferenceURL","","",19,[[],["bool",6]]],[10,"isFileURL","","",19,[[],["bool",6]]],[10,"absoluteString","","",19,[[],["id",6]]],[10,"absoluteURL","","",19,[[],["id",6]]],[10,"baseURL","","",19,[[],["id",6]]],[10,"fragment","","",19,[[],["id",6]]],[10,"host","","",19,[[],["id",6]]],[10,"lastPathComponent","","",19,[[],["id",6]]],[10,"parameterString","","",19,[[],["id",6]]],[10,"password","","",19,[[],["id",6]]],[10,"path","","",19,[[],["id",6]]],[10,"pathComponents","","",19,[[],["id",6]]],[10,"pathExtension","","",19,[[],["id",6]]],[10,"port","","",19,[[],["id",6]]],[10,"query","","",19,[[],["id",6]]],[10,"relativePath","","",19,[[],["id",6]]],[10,"relativeString","","",19,[[],["id",6]]],[10,"resourceSpecifier","","",19,[[],["id",6]]],[10,"scheme","","",19,[[],["id",6]]],[10,"standardizedURL","","",19,[[],["id",6]]],[10,"user","","",19,[[],["id",6]]],[10,"NSURLResourceKey","","",19,[[],["id",6]]],[10,"filePathURL","","",19,[[],["id",6]]],[10,"fileReferenceURL","","",19,[[],["id",6]]],[10,"URLByAppendingPathComponent_","","",19,[[["id",6]],["id",6]]],[10,"URLByAppendingPathComponent_isDirectory_","","",19,[[["id",6],["bool",6]],["id",6]]],[10,"URLByAppendingPathExtension_","","",19,[[["id",6]],["id",6]]],[10,"URLByDeletingLastPathComponent","","",19,[[],["id",6]]],[10,"URLByDeletingPathExtension","","",19,[[],["id",6]]],[10,"URLByResolvingSymlinksInPath","","",19,[[],["id",6]]],[10,"URLByStandardizingPath","","",19,[[],["id",6]]],[10,"hasDirectoryPath","","",19,[[],["bool",6]]],[10,"bookmarkDataWithContentsOfURL_error_","","",19,[[["id",6]],["id",6]]],[10,"bookmarkDataWithOptions_includingResourceValuesForKeys_relativeToURL_error_","","",19,[[["id",6],["nsurlbookmarkcreationoptions",3]],["id",6]]],[10,"writeBookmarkData_toURL_options_error_","","",19,[[["id",6],["nsurlbookmarkfilecreationoptions",6]],["id",6]]],[10,"startAccessingSecurityScopedResource","","",19,[[],["bool",6]]],[10,"stopAccessingSecurityScopedResource","","",19,[[]]],[10,"NSURLBookmarkFileCreationOptions","","",19,[[],["nsurlbookmarkfilecreationoptions",6]]],[10,"NSURLBookmarkCreationOptions","","",19,[[],["nsurlbookmarkcreationoptions",3]]],[10,"NSURLBookmarkResolutionOptions","","",19,[[],["nsurlbookmarkresolutionoptions",3]]],[8,"NSBundle","","",null,null],[10,"mainBundle","","",20,[[]]],[10,"loadNibNamed_owner_topLevelObjects_","","",20,[[["id",6]],["bool",6]]],[8,"NSData","","",null,null],[11,"data","","",21,[[],["id",6]]],[11,"dataWithBytes_length_","","",21,[[["nsuinteger",6]],["id",6]]],[11,"dataWithBytesNoCopy_length_","","",21,[[["nsuinteger",6]],["id",6]]],[11,"dataWithBytesNoCopy_length_freeWhenDone_","","",21,[[["nsuinteger",6],["bool",6]],["id",6]]],[11,"dataWithContentsOfFile_","","",21,[[["id",6]],["id",6]]],[11,"dataWithContentsOfFile_options_error_","","",21,[[["id",6],["nsdatareadingoptions",3]],["id",6]]],[11,"dataWithContentsOfURL_","","",21,[[["id",6]],["id",6]]],[11,"dataWithContentsOfURL_options_error_","","",21,[[["id",6],["nsdatareadingoptions",3]],["id",6]]],[11,"dataWithData_","","",21,[[["id",6]],["id",6]]],[10,"initWithBase64EncodedData_options_","","",21,[[["id",6],["nsdatabase64decodingoptions",3]],["id",6]]],[10,"initWithBase64EncodedString_options_","","",21,[[["id",6],["nsdatabase64decodingoptions",3]],["id",6]]],[10,"initWithBytes_length_","","",21,[[["nsuinteger",6]],["id",6]]],[10,"initWithBytesNoCopy_length_","","",21,[[["nsuinteger",6]],["id",6]]],[10,"initWithBytesNoCopy_length_deallocator_","","",21,[[["nsuinteger",6]],["id",6]]],[10,"initWithBytesNoCopy_length_freeWhenDone_","","",21,[[["nsuinteger",6],["bool",6]],["id",6]]],[10,"initWithContentsOfFile_","","",21,[[["id",6]],["id",6]]],[10,"initWithContentsOfFile_options_error","","",21,[[["id",6],["nsdatareadingoptions",3]],["id",6]]],[10,"initWithContentsOfURL_","","",21,[[["id",6]],["id",6]]],[10,"initWithContentsOfURL_options_error_","","",21,[[["id",6],["nsdatareadingoptions",3]],["id",6]]],[10,"initWithData_","","",21,[[["id",6]],["id",6]]],[10,"bytes","","",21,[[]]],[10,"description","","",21,[[],["id",6]]],[10,"enumerateByteRangesUsingBlock_","","",21,[[]]],[10,"getBytes_length_","","",21,[[["nsuinteger",6]]]],[10,"getBytes_range_","","",21,[[["nsrange",3]]]],[10,"subdataWithRange_","","",21,[[["nsrange",3]],["id",6]]],[10,"rangeOfData_options_range_","","",21,[[["id",6],["nsrange",3],["nsdatasearchoptions",3]],["nsrange",3]]],[10,"base64EncodedDataWithOptions_","","",21,[[["nsdatabase64encodingoptions",3]],["id",6]]],[10,"base64EncodedStringWithOptions_","","",21,[[["nsdatabase64encodingoptions",3]],["id",6]]],[10,"isEqualToData_","","",21,[[["id",6]],["id",6]]],[10,"length","","",21,[[],["nsuinteger",6]]],[10,"writeToFile_atomically_","","",21,[[["id",6],["bool",6]],["bool",6]]],[10,"writeToFile_options_error_","","",21,[[["id",6],["nsdatawritingoptions",3]],["bool",6]]],[10,"writeToURL_atomically_","","",21,[[["id",6],["bool",6]],["bool",6]]],[10,"writeToURL_options_error_","","",21,[[["id",6],["nsdatawritingoptions",3]],["bool",6]]],[3,"NSDataReadingOptions","","",null,null],[18,"NSDataReadingMappedIfSafe","","",22,null],[18,"NSDataReadingUncached","","",22,null],[18,"NSDataReadingMappedAlways","","",22,null],[11,"empty","","Returns an empty set of flags",22,[[],["nsdatareadingoptions",3]]],[11,"all","","Returns the set containing all flags.",22,[[],["nsdatareadingoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",22,[[],["c_ulonglong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",22,[[["c_ulonglong",6]],[["option",4],["nsdatareadingoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",22,[[["c_ulonglong",6]],["nsdatareadingoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",22,[[["c_ulonglong",6]],["nsdatareadingoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",22,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",22,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",22,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",22,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",22,[[["nsdatareadingoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",22,[[["nsdatareadingoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",22,[[["nsdatareadingoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",22,[[["bool",15],["nsdatareadingoptions",3]]]],[3,"NSDataBase64EncodingOptions","","",null,null],[18,"NSDataBase64Encoding64CharacterLineLength","","",23,null],[18,"NSDataBase64Encoding76CharacterLineLength","","",23,null],[18,"NSDataBase64EncodingEndLineWithCarriageReturn","","",23,null],[18,"NSDataBase64EncodingEndLineWithLineFeed","","",23,null],[11,"empty","","Returns an empty set of flags",23,[[],["nsdatabase64encodingoptions",3]]],[11,"all","","Returns the set containing all flags.",23,[[],["nsdatabase64encodingoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",23,[[],["c_ulonglong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",23,[[["c_ulonglong",6]],[["nsdatabase64encodingoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",23,[[["c_ulonglong",6]],["nsdatabase64encodingoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",23,[[["c_ulonglong",6]],["nsdatabase64encodingoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",23,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",23,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",23,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",23,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",23,[[["nsdatabase64encodingoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",23,[[["nsdatabase64encodingoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",23,[[["nsdatabase64encodingoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",23,[[["bool",15],["nsdatabase64encodingoptions",3]]]],[3,"NSDataBase64DecodingOptions","","",null,null],[18,"NSDataBase64DecodingIgnoreUnknownCharacters","","",24,null],[11,"empty","","Returns an empty set of flags",24,[[],["nsdatabase64decodingoptions",3]]],[11,"all","","Returns the set containing all flags.",24,[[],["nsdatabase64decodingoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",24,[[],["c_ulonglong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",24,[[["c_ulonglong",6]],[["nsdatabase64decodingoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",24,[[["c_ulonglong",6]],["nsdatabase64decodingoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",24,[[["c_ulonglong",6]],["nsdatabase64decodingoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",24,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",24,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",24,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",24,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",24,[[["nsdatabase64decodingoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",24,[[["nsdatabase64decodingoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",24,[[["nsdatabase64decodingoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",24,[[["bool",15],["nsdatabase64decodingoptions",3]]]],[3,"NSDataWritingOptions","","",null,null],[18,"NSDataWritingAtomic","","",25,null],[18,"NSDataWritingWithoutOverwriting","","",25,null],[11,"empty","","Returns an empty set of flags",25,[[],["nsdatawritingoptions",3]]],[11,"all","","Returns the set containing all flags.",25,[[],["nsdatawritingoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",25,[[],["c_ulonglong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",25,[[["c_ulonglong",6]],[["nsdatawritingoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",25,[[["c_ulonglong",6]],["nsdatawritingoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",25,[[["c_ulonglong",6]],["nsdatawritingoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",25,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",25,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",25,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",25,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",25,[[["nsdatawritingoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",25,[[["nsdatawritingoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",25,[[["nsdatawritingoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",25,[[["nsdatawritingoptions",3],["bool",15]]]],[3,"NSDataSearchOptions","","",null,null],[18,"NSDataSearchBackwards","","",26,null],[18,"NSDataSearchAnchored","","",26,null],[11,"empty","","Returns an empty set of flags",26,[[],["nsdatasearchoptions",3]]],[11,"all","","Returns the set containing all flags.",26,[[],["nsdatasearchoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",26,[[],["c_ulonglong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",26,[[["c_ulonglong",6]],[["option",4],["nsdatasearchoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",26,[[["c_ulonglong",6]],["nsdatasearchoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",26,[[["c_ulonglong",6]],["nsdatasearchoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",26,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",26,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",26,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",26,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",26,[[["nsdatasearchoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",26,[[["nsdatasearchoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",26,[[["nsdatasearchoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",26,[[["bool",15],["nsdatasearchoptions",3]]]],[8,"NSUserDefaults","","",null,null],[10,"standardUserDefaults","","",27,[[]]],[10,"setBool_forKey_","","",27,[[["id",6],["bool",6]]]],[10,"bool_forKey_","","",27,[[["id",6]],["bool",6]]],[10,"removeObject_forKey_","","",27,[[["id",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"autorelease","cocoa_foundation","",29,[[],["id",6]]],[11,"drain","","",29,[[]]],[11,"processName","","",29,[[],["id",6]]],[11,"operatingSystemVersion","","",29,[[],["nsoperatingsystemversion",3]]],[11,"isOperatingSystemAtLeastVersion","","",29,[[["nsoperatingsystemversion",3]],["bool",15]]],[11,"init","","",29,[[],["id",6]]],[11,"count","","",29,[[],["nsuinteger",6]]],[11,"arrayByAddingObjectFromArray","","",29,[[["id",6]],["id",6]]],[11,"arrayByAddingObjectsFromArray","","",29,[[["id",6]],["id",6]]],[11,"objectAtIndex","","",29,[[["nsuinteger",6]],["id",6]]],[11,"init","","",29,[[],["id",6]]],[11,"initWithContentsOfFile_","","",29,[[["id",6]],["id",6]]],[11,"initWithContentsOfURL_","","",29,[[["id",6]],["id",6]]],[11,"initWithDictionary_","","",29,[[["id",6]],["id",6]]],[11,"initWithDictionary_copyItems_","","",29,[[["id",6],["bool",6]],["id",6]]],[11,"initWithObjects_forKeys_","","",29,[[["id",6]],["id",6]]],[11,"initWithObjects_forKeys_count_","","",29,[[["id",6],["nsuinteger",6]],["id",6]]],[11,"initWithObjectsAndKeys_","","",29,[[["id",6]],["id",6]]],[11,"count","","",29,[[],["nsuinteger",6]]],[11,"isEqualToDictionary_","","",29,[[["id",6]],["bool",6]]],[11,"allKeys","","",29,[[],["id",6]]],[11,"allKeysForObject_","","",29,[[["id",6]],["id",6]]],[11,"allValues","","",29,[[],["id",6]]],[11,"objectForKey_","","",29,[[["id",6]],["id",6]]],[11,"objectForKeyedSubscript_","","",29,[[["id",6]],["id",6]]],[11,"objectsForKeys_notFoundMarker_","","",29,[[["id",6]],["id",6]]],[11,"valueForKey_","","",29,[[["id",6]],["id",6]]],[11,"keyEnumerator","","",29,[[],["id",6]]],[11,"objectEnumerator","","",29,[[],["id",6]]],[11,"enumerateKeysAndObjectsUsingBlock_","","",29,[[]]],[11,"enumerateKeysAndObjectsWithOptions_usingBlock_","","",29,[[["nsenumerationoptions",3]]]],[11,"keysSortedByValueUsingSelector_","","",29,[[["sel",6]],["id",6]]],[11,"keysSortedByValueUsingComparator_","","",29,[[["nscomparator",6]],["id",6]]],[11,"keysSortedByValueWithOptions_usingComparator_","","",29,[[["nscomparator",6],["nsenumerationoptions",3]],["id",6]]],[11,"keysOfEntriesPassingTest_","","",29,[[],["id",6]]],[11,"keysOfEntriesWithOptions_PassingTest_","","",29,[[["nsenumerationoptions",3]],["id",6]]],[11,"writeToFile_atomically_","","",29,[[["id",6],["bool",6]],["bool",6]]],[11,"writeToURL_atomically_","","",29,[[["id",6],["bool",6]],["bool",6]]],[11,"fileCreationDate","","",29,[[],["id",6]]],[11,"fileExtensionHidden","","",29,[[],["bool",6]]],[11,"fileGroupOwnerAccountID","","",29,[[],["id",6]]],[11,"fileGroupOwnerAccountName","","",29,[[],["id",6]]],[11,"fileIsAppendOnly","","",29,[[],["bool",6]]],[11,"fileIsImmutable","","",29,[[],["bool",6]]],[11,"fileModificationDate","","",29,[[],["id",6]]],[11,"fileOwnerAccountID","","",29,[[],["id",6]]],[11,"fileOwnerAccountName","","",29,[[],["id",6]]],[11,"filePosixPermissions","","",29,[[],["nsuinteger",6]]],[11,"fileSize","","",29,[[],["c_ulonglong",6]]],[11,"fileSystemFileNumber","","",29,[[],["nsuinteger",6]]],[11,"fileSystemNumber","","",29,[[],["nsinteger",6]]],[11,"fileType","","",29,[[],["id",6]]],[11,"description","","",29,[[],["id",6]]],[11,"descriptionInStringsFileFormat","","",29,[[],["id",6]]],[11,"descriptionWithLocale_","","",29,[[["id",6]],["id",6]]],[11,"descriptionWithLocale_indent_","","",29,[[["id",6],["nsuinteger",6]],["id",6]]],[11,"isEqualToString","","",29,[[["str",15]],["bool",15]]],[11,"stringByAppendingString_","","",29,[[["id",6]],["id",6]]],[11,"init_str","","",29,[[["str",15]],["id",6]]],[11,"len","","",29,[[],["usize",15]]],[11,"UTF8String","","",29,[[]]],[11,"substringWithRange","","",29,[[["nsrange",3]],["id",6]]],[11,"iter","","",29,[[],["nsfastiterator",3]]],[11,"currentRunLoop","","",29,[[],["id",6]]],[11,"performSelector_target_argument_order_modes_","","",29,[[["id",6],["sel",6],["nsuinteger",6]]]],[11,"alloc","","",29,[[],["id",6]]],[11,"URLWithString_","","",29,[[["id",6]],["id",6]]],[11,"initWithString_","","",29,[[["id",6]],["id",6]]],[11,"URLWithString_relativeToURL_","","",29,[[["id",6]],["id",6]]],[11,"initWithString_relativeToURL_","","",29,[[["id",6]],["id",6]]],[11,"fileURLWithPath_isDirectory_","","",29,[[["id",6],["bool",6]],["id",6]]],[11,"initFileURLWithPath_isDirectory_","","",29,[[["id",6],["bool",6]],["id",6]]],[11,"fileURLWithPath_relativeToURL_","","",29,[[["id",6]],["id",6]]],[11,"initFileURLWithPath_relativeToURL_","","",29,[[["id",6]],["id",6]]],[11,"fileURLWithPath_isDirectory_relativeToURL_","","",29,[[["id",6],["bool",6]],["id",6]]],[11,"initFileURLWithPath_isDirectory_relativeToURL_","","",29,[[["id",6],["bool",6]],["id",6]]],[11,"fileURLWithPath_","","",29,[[["id",6]],["id",6]]],[11,"initFileURLWithPath_","","",29,[[["id",6]],["id",6]]],[11,"fileURLWithPathComponents_","","",29,[[["id",6]],["id",6]]],[11,"URLByResolvingAliasFileAtURL_options_error_","","",29,[[["id",6],["nsurlbookmarkresolutionoptions",3]],["id",6]]],[11,"URLByResolvingBookmarkData_options_relativeToURL_bookmarkDataIsStale_error_","","",29,[[["id",6],["nsurlbookmarkresolutionoptions",3]],["id",6]]],[11,"initByResolvingBookmarkData_options_relativeToURL_bookmarkDataIsStale_error_","","",29,[[["id",6],["nsurlbookmarkresolutionoptions",3]],["id",6]]],[11,"absoluteURLWithDataRepresentation_relativeToURL_","","",29,[[["id",6]],["id",6]]],[11,"initAbsoluteURLWithDataRepresentation_relativeToURL_","","",29,[[["id",6]],["id",6]]],[11,"URLWithDataRepresentation_relativeToURL_","","",29,[[["id",6]],["id",6]]],[11,"initWithDataRepresentation_relativeToURL_","","",29,[[["id",6]],["id",6]]],[11,"dataRepresentation","","",29,[[],["id",6]]],[11,"isEqual_","","",29,[[["id",6]],["bool",6]]],[11,"checkResourceIsReachableAndReturnError_","","",29,[[["id",6]],["bool",6]]],[11,"isFileReferenceURL","","",29,[[],["bool",6]]],[11,"isFileURL","","",29,[[],["bool",6]]],[11,"absoluteString","","",29,[[],["id",6]]],[11,"absoluteURL","","",29,[[],["id",6]]],[11,"baseURL","","",29,[[],["id",6]]],[11,"fragment","","",29,[[],["id",6]]],[11,"host","","",29,[[],["id",6]]],[11,"lastPathComponent","","",29,[[],["id",6]]],[11,"parameterString","","",29,[[],["id",6]]],[11,"password","","",29,[[],["id",6]]],[11,"path","","",29,[[],["id",6]]],[11,"pathComponents","","",29,[[],["id",6]]],[11,"pathExtension","","",29,[[],["id",6]]],[11,"port","","",29,[[],["id",6]]],[11,"query","","",29,[[],["id",6]]],[11,"relativePath","","",29,[[],["id",6]]],[11,"relativeString","","",29,[[],["id",6]]],[11,"resourceSpecifier","","",29,[[],["id",6]]],[11,"scheme","","",29,[[],["id",6]]],[11,"standardizedURL","","",29,[[],["id",6]]],[11,"user","","",29,[[],["id",6]]],[11,"NSURLResourceKey","","",29,[[],["id",6]]],[11,"filePathURL","","",29,[[],["id",6]]],[11,"fileReferenceURL","","",29,[[],["id",6]]],[11,"URLByAppendingPathComponent_","","",29,[[["id",6]],["id",6]]],[11,"URLByAppendingPathComponent_isDirectory_","","",29,[[["id",6],["bool",6]],["id",6]]],[11,"URLByAppendingPathExtension_","","",29,[[["id",6]],["id",6]]],[11,"URLByDeletingLastPathComponent","","",29,[[],["id",6]]],[11,"URLByDeletingPathExtension","","",29,[[],["id",6]]],[11,"URLByResolvingSymlinksInPath","","",29,[[],["id",6]]],[11,"URLByStandardizingPath","","",29,[[],["id",6]]],[11,"hasDirectoryPath","","",29,[[],["bool",6]]],[11,"bookmarkDataWithContentsOfURL_error_","","",29,[[["id",6]],["id",6]]],[11,"bookmarkDataWithOptions_includingResourceValuesForKeys_relativeToURL_error_","","",29,[[["id",6],["nsurlbookmarkcreationoptions",3]],["id",6]]],[11,"writeBookmarkData_toURL_options_error_","","",29,[[["id",6],["nsurlbookmarkfilecreationoptions",6]],["id",6]]],[11,"startAccessingSecurityScopedResource","","",29,[[],["bool",6]]],[11,"stopAccessingSecurityScopedResource","","",29,[[]]],[11,"NSURLBookmarkFileCreationOptions","","",29,[[],["nsurlbookmarkfilecreationoptions",6]]],[11,"NSURLBookmarkCreationOptions","","",29,[[],["nsurlbookmarkcreationoptions",3]]],[11,"NSURLBookmarkResolutionOptions","","",29,[[],["nsurlbookmarkresolutionoptions",3]]],[11,"mainBundle","","",29,[[],["id",6]]],[11,"loadNibNamed_owner_topLevelObjects_","","",29,[[["id",6]],["bool",6]]],[11,"initWithBase64EncodedData_options_","","",29,[[["id",6],["nsdatabase64decodingoptions",3]],["id",6]]],[11,"initWithBase64EncodedString_options_","","",29,[[["id",6],["nsdatabase64decodingoptions",3]],["id",6]]],[11,"initWithBytes_length_","","",29,[[["nsuinteger",6]],["id",6]]],[11,"initWithBytesNoCopy_length_","","",29,[[["nsuinteger",6]],["id",6]]],[11,"initWithBytesNoCopy_length_deallocator_","","",29,[[["nsuinteger",6]],["id",6]]],[11,"initWithBytesNoCopy_length_freeWhenDone_","","",29,[[["nsuinteger",6],["bool",6]],["id",6]]],[11,"initWithContentsOfFile_","","",29,[[["id",6]],["id",6]]],[11,"initWithContentsOfFile_options_error","","",29,[[["id",6],["nsdatareadingoptions",3]],["id",6]]],[11,"initWithContentsOfURL_","","",29,[[["id",6]],["id",6]]],[11,"initWithContentsOfURL_options_error_","","",29,[[["id",6],["nsdatareadingoptions",3]],["id",6]]],[11,"initWithData_","","",29,[[["id",6]],["id",6]]],[11,"bytes","","",29,[[]]],[11,"description","","",29,[[],["id",6]]],[11,"enumerateByteRangesUsingBlock_","","",29,[[]]],[11,"getBytes_length_","","",29,[[["nsuinteger",6]]]],[11,"getBytes_range_","","",29,[[["nsrange",3]]]],[11,"subdataWithRange_","","",29,[[["nsrange",3]],["id",6]]],[11,"rangeOfData_options_range_","","",29,[[["id",6],["nsrange",3],["nsdatasearchoptions",3]],["nsrange",3]]],[11,"base64EncodedDataWithOptions_","","",29,[[["nsdatabase64encodingoptions",3]],["id",6]]],[11,"base64EncodedStringWithOptions_","","",29,[[["nsdatabase64encodingoptions",3]],["id",6]]],[11,"isEqualToData_","","",29,[[["id",6]],["id",6]]],[11,"length","","",29,[[],["nsuinteger",6]]],[11,"writeToFile_atomically_","","",29,[[["id",6],["bool",6]],["bool",6]]],[11,"writeToFile_options_error_","","",29,[[["id",6],["nsdatawritingoptions",3]],["bool",6]]],[11,"writeToURL_atomically_","","",29,[[["id",6],["bool",6]],["bool",6]]],[11,"writeToURL_options_error_","","",29,[[["id",6],["nsdatawritingoptions",3]],["bool",6]]],[11,"standardUserDefaults","","",29,[[],["id",6]]],[11,"setBool_forKey_","","",29,[[["id",6],["bool",6]]]],[11,"bool_forKey_","","",29,[[["id",6]],["bool",6]]],[11,"removeObject_forKey_","","",29,[[["id",6]]]],[11,"extend","cocoa_foundation::foundation","",11,[[["intoiterator",8]]]],[11,"extend","","",17,[[["intoiterator",8]]]],[11,"extend","","",18,[[["intoiterator",8]]]],[11,"extend","","",22,[[["intoiterator",8]]]],[11,"extend","","",23,[[["intoiterator",8]]]],[11,"extend","","",24,[[["intoiterator",8]]]],[11,"extend","","",25,[[["intoiterator",8]]]],[11,"extend","","",26,[[["intoiterator",8]]]],[11,"next","","",28,[[],[["id",6],["option",4]]]],[11,"clone","","",0,[[],["nspoint",3]]],[11,"clone","","",1,[[],["nssize",3]]],[11,"clone","","",2,[[],["nsrect",3]]],[11,"clone","","",5,[[],["nsrange",3]]],[11,"clone","","",7,[[],["nsoperatingsystemversion",3]]],[11,"clone","","",11,[[],["nsenumerationoptions",3]]],[11,"clone","","",12,[[],["nscomparisonresult",4]]],[11,"clone","","",17,[[],["nsurlbookmarkcreationoptions",3]]],[11,"clone","","",18,[[],["nsurlbookmarkresolutionoptions",3]]],[11,"clone","","",22,[[],["nsdatareadingoptions",3]]],[11,"clone","","",23,[[],["nsdatabase64encodingoptions",3]]],[11,"clone","","",24,[[],["nsdatabase64decodingoptions",3]]],[11,"clone","","",25,[[],["nsdatawritingoptions",3]]],[11,"clone","","",26,[[],["nsdatasearchoptions",3]]],[11,"cmp","","",11,[[["nsenumerationoptions",3]],["ordering",4]]],[11,"cmp","","",17,[[["nsurlbookmarkcreationoptions",3]],["ordering",4]]],[11,"cmp","","",18,[[["nsurlbookmarkresolutionoptions",3]],["ordering",4]]],[11,"cmp","","",22,[[["nsdatareadingoptions",3]],["ordering",4]]],[11,"cmp","","",23,[[["nsdatabase64encodingoptions",3]],["ordering",4]]],[11,"cmp","","",24,[[["nsdatabase64decodingoptions",3]],["ordering",4]]],[11,"cmp","","",25,[[["nsdatawritingoptions",3]],["ordering",4]]],[11,"cmp","","",26,[[["nsdatasearchoptions",3]],["ordering",4]]],[11,"eq","","",11,[[["nsenumerationoptions",3]],["bool",15]]],[11,"ne","","",11,[[["nsenumerationoptions",3]],["bool",15]]],[11,"eq","","",12,[[["nscomparisonresult",4]],["bool",15]]],[11,"eq","","",17,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"ne","","",17,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"eq","","",18,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"ne","","",18,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"eq","","",22,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"ne","","",22,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"eq","","",23,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"ne","","",23,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"eq","","",24,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"ne","","",24,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"eq","","",25,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"ne","","",25,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"eq","","",26,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"ne","","",26,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"partial_cmp","","",11,[[["nsenumerationoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["nsenumerationoptions",3]],["bool",15]]],[11,"le","","",11,[[["nsenumerationoptions",3]],["bool",15]]],[11,"gt","","",11,[[["nsenumerationoptions",3]],["bool",15]]],[11,"ge","","",11,[[["nsenumerationoptions",3]],["bool",15]]],[11,"partial_cmp","","",17,[[["nsurlbookmarkcreationoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"le","","",17,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"gt","","",17,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"ge","","",17,[[["nsurlbookmarkcreationoptions",3]],["bool",15]]],[11,"partial_cmp","","",18,[[["nsurlbookmarkresolutionoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",18,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"le","","",18,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"gt","","",18,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"ge","","",18,[[["nsurlbookmarkresolutionoptions",3]],["bool",15]]],[11,"partial_cmp","","",22,[[["nsdatareadingoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"le","","",22,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"gt","","",22,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"ge","","",22,[[["nsdatareadingoptions",3]],["bool",15]]],[11,"partial_cmp","","",23,[[["nsdatabase64encodingoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",23,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"le","","",23,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"gt","","",23,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"ge","","",23,[[["nsdatabase64encodingoptions",3]],["bool",15]]],[11,"partial_cmp","","",24,[[["nsdatabase64decodingoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",24,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"le","","",24,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"gt","","",24,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"ge","","",24,[[["nsdatabase64decodingoptions",3]],["bool",15]]],[11,"partial_cmp","","",25,[[["nsdatawritingoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",25,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"le","","",25,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"gt","","",25,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"ge","","",25,[[["nsdatawritingoptions",3]],["bool",15]]],[11,"partial_cmp","","",26,[[["nsdatasearchoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",26,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"le","","",26,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"gt","","",26,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"ge","","",26,[[["nsdatasearchoptions",3]],["bool",15]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"sub","","Returns the set difference of the two sets of flags.",11,[[["nsenumerationoptions",3]],["nsenumerationoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",17,[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",18,[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",22,[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",23,[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",24,[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",25,[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",26,[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",11,[[["nsenumerationoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",17,[[["nsurlbookmarkcreationoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",18,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",22,[[["nsdatareadingoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",23,[[["nsdatabase64encodingoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",24,[[["nsdatabase64decodingoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",25,[[["nsdatawritingoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",26,[[["nsdatasearchoptions",3]]]],[11,"not","","Returns the complement of this set of flags.",11,[[],["nsenumerationoptions",3]]],[11,"not","","Returns the complement of this set of flags.",17,[[],["nsurlbookmarkcreationoptions",3]]],[11,"not","","Returns the complement of this set of flags.",18,[[],["nsurlbookmarkresolutionoptions",3]]],[11,"not","","Returns the complement of this set of flags.",22,[[],["nsdatareadingoptions",3]]],[11,"not","","Returns the complement of this set of flags.",23,[[],["nsdatabase64encodingoptions",3]]],[11,"not","","Returns the complement of this set of flags.",24,[[],["nsdatabase64decodingoptions",3]]],[11,"not","","Returns the complement of this set of flags.",25,[[],["nsdatawritingoptions",3]]],[11,"not","","Returns the complement of this set of flags.",26,[[],["nsdatasearchoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",11,[[["nsenumerationoptions",3]],["nsenumerationoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",17,[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",18,[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",22,[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",23,[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",24,[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",25,[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",26,[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",11,[[["nsenumerationoptions",3]],["nsenumerationoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",17,[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",18,[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",22,[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",23,[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",24,[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",25,[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",26,[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",11,[[["nsenumerationoptions",3]],["nsenumerationoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",17,[[["nsurlbookmarkcreationoptions",3]],["nsurlbookmarkcreationoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",18,[[["nsurlbookmarkresolutionoptions",3]],["nsurlbookmarkresolutionoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",22,[[["nsdatareadingoptions",3]],["nsdatareadingoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",23,[[["nsdatabase64encodingoptions",3]],["nsdatabase64encodingoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",24,[[["nsdatabase64decodingoptions",3]],["nsdatabase64decodingoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",25,[[["nsdatawritingoptions",3]],["nsdatawritingoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",26,[[["nsdatasearchoptions",3]],["nsdatasearchoptions",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",11,[[["nsenumerationoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",17,[[["nsurlbookmarkcreationoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",18,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",22,[[["nsdatareadingoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",23,[[["nsdatabase64encodingoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",24,[[["nsdatabase64decodingoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",25,[[["nsdatawritingoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",26,[[["nsdatasearchoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",11,[[["nsenumerationoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",17,[[["nsurlbookmarkcreationoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",18,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",22,[[["nsdatareadingoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",23,[[["nsdatabase64encodingoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",24,[[["nsdatabase64decodingoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",25,[[["nsdatawritingoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",26,[[["nsdatasearchoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",11,[[["nsenumerationoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",17,[[["nsurlbookmarkcreationoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",18,[[["nsurlbookmarkresolutionoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",22,[[["nsdatareadingoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",23,[[["nsdatabase64encodingoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",24,[[["nsdatabase64decodingoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",25,[[["nsdatawritingoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",26,[[["nsdatasearchoptions",3]]]],[11,"hash","","",11,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"from_iter","","",11,[[["intoiterator",8]],["nsenumerationoptions",3]]],[11,"from_iter","","",17,[[["intoiterator",8]],["nsurlbookmarkcreationoptions",3]]],[11,"from_iter","","",18,[[["intoiterator",8]],["nsurlbookmarkresolutionoptions",3]]],[11,"from_iter","","",22,[[["intoiterator",8]],["nsdatareadingoptions",3]]],[11,"from_iter","","",23,[[["intoiterator",8]],["nsdatabase64encodingoptions",3]]],[11,"from_iter","","",24,[[["intoiterator",8]],["nsdatabase64decodingoptions",3]]],[11,"from_iter","","",25,[[["intoiterator",8]],["nsdatawritingoptions",3]]],[11,"from_iter","","",26,[[["intoiterator",8]],["nsdatasearchoptions",3]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"encode","","",0,[[],["encoding",3]]],[11,"encode","","",1,[[],["encoding",3]]],[11,"encode","","",2,[[],["encoding",3]]],[11,"new","","",0,[[["cgfloat",6]],["nspoint",3]]],[11,"new","","",1,[[["cgfloat",6]],["nssize",3]]],[11,"new","","",2,[[["nssize",3],["nspoint",3]],["nsrect",3]]],[11,"as_CGRect","","",2,[[],["cgrect",3]]],[11,"inset","","",2,[[["cgfloat",6]],["nsrect",3]]],[11,"valueWithPoint","","",4,[[["nspoint",3]],["id",6]]],[11,"valueWithSize","","",4,[[["nssize",3]],["id",6]]]],"p":[[3,"NSPoint"],[3,"NSSize"],[3,"NSRect"],[4,"NSRectEdge"],[8,"NSValue"],[3,"NSRange"],[8,"NSAutoreleasePool"],[3,"NSOperatingSystemVersion"],[8,"NSProcessInfo"],[8,"NSArray"],[8,"NSDictionary"],[3,"NSEnumerationOptions"],[4,"NSComparisonResult"],[8,"NSString"],[8,"NSDate"],[8,"NSFastEnumeration"],[8,"NSRunLoop"],[3,"NSURLBookmarkCreationOptions"],[3,"NSURLBookmarkResolutionOptions"],[8,"NSURL"],[8,"NSBundle"],[8,"NSData"],[3,"NSDataReadingOptions"],[3,"NSDataBase64EncodingOptions"],[3,"NSDataBase64DecodingOptions"],[3,"NSDataWritingOptions"],[3,"NSDataSearchOptions"],[8,"NSUserDefaults"],[3,"NSFastIterator"],[6,"id"]]},\
"color_quant":{"doc":"Color quantization libraryThis library provides a color …","i":[[3,"NeuQuant","color_quant","",null,null],[11,"new","","Creates a new neuronal network and trains it with the …",0,[[["usize",15],["i32",15]]]],[11,"init","","Initializes the neuronal network and trains it with the …",0,[[]]],[11,"map_pixel","","Maps the rgba-pixel in-place to the best-matching color …",0,[[]]],[11,"index_of","","Finds the best-matching index in the color map.",0,[[],["usize",15]]],[11,"lookup","","Lookup pixel values for color at <code>idx</code> in the colormap.",0,[[["usize",15]],["option",4]]],[11,"color_map_rgba","","Returns the RGBA color map calculated from the sample.",0,[[],[["vec",3],["u8",15]]]],[11,"color_map_rgb","","Returns the RGBA color map calculated from the sample.",0,[[],[["vec",3],["u8",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"NeuQuant"]]},\
"core_foundation":{"doc":"This crate provides wrappers around the underlying …","i":[[0,"array","core_foundation","Heterogeneous immutable arrays.",null,null],[6,"CFArrayRetainCallBack","core_foundation::array","",null,null],[6,"CFArrayReleaseCallBack","","",null,null],[6,"CFArrayCopyDescriptionCallBack","","",null,null],[6,"CFArrayEqualCallBack","","",null,null],[3,"CFArrayCallBacks","","",null,null],[12,"version","","",0,null],[12,"retain","","",0,null],[12,"release","","",0,null],[12,"copyDescription","","",0,null],[12,"equal","","",0,null],[3,"__CFArray","","",null,null],[6,"CFArrayRef","","",null,null],[7,"kCFTypeArrayCallBacks","","",null,null],[5,"CFArrayCreate","","",null,[[["isize",15]]]],[5,"CFArrayCreateCopy","","",null,[[]]],[5,"CFArrayGetCount","","",null,[[],["isize",15]]],[5,"CFArrayGetValues","","",null,[[["cfrange",3]]]],[5,"CFArrayGetValueAtIndex","","",null,[[["isize",15]]]],[5,"CFArrayGetTypeID","","",null,[[],["usize",15]]],[6,"CFIndex","","",null,null],[3,"CFArray","","A heterogeneous immutable array.",null,null],[3,"CFArrayIterator","","",null,null],[11,"from_copyable","","Creates a new <code>CFArray</code> with the given elements, which must …",1,[[],["cfarray",3]]],[11,"from_CFTypes","","Creates a new <code>CFArray</code> with the given elements, which must …",1,[[],["cfarray",3]]],[11,"to_untyped","","",1,[[],["cfarray",3]]],[11,"into_untyped","","Returns the same array, but with the type reset to void …",1,[[],["cfarray",3]]],[11,"iter","","Iterates over the elements of this <code>CFArray</code>.",1,[[],["cfarrayiterator",3]]],[11,"len","","",1,[[],["cfindex",6]]],[11,"get_unchecked","","",1,[[["cfindex",6]],["itemref",3]]],[11,"get","","",1,[[["cfindex",6]],[["option",4],["itemref",3]]]],[11,"get_values","","",1,[[["cfrange",3]],["vec",3]]],[11,"get_all_values","","",1,[[],["vec",3]]],[0,"attributed_string","core_foundation","",null,null],[3,"__CFAttributedString","core_foundation::attributed_string","",null,null],[6,"CFAttributedStringRef","","",null,null],[6,"CFMutableAttributedStringRef","","",null,null],[5,"CFAttributedStringCreate","","",null,[[]]],[5,"CFAttributedStringGetLength","","",null,[[],["isize",15]]],[5,"CFAttributedStringGetTypeID","","",null,[[],["usize",15]]],[5,"CFAttributedStringCreateMutableCopy","","",null,[[["isize",15]]]],[5,"CFAttributedStringCreateMutable","","",null,[[["isize",15]]]],[5,"CFAttributedStringReplaceString","","",null,[[["cfrange",3]]]],[5,"CFAttributedStringSetAttribute","","",null,[[["cfrange",3]]]],[3,"CFAttributedString","","",null,null],[11,"new","","",2,[[["cfstring",3]]]],[11,"char_len","","",2,[[],["cfindex",6]]],[3,"CFMutableAttributedString","","",null,null],[11,"new","","",3,[[]]],[11,"char_len","","",3,[[],["cfindex",6]]],[11,"replace_str","","",3,[[["cfstring",3],["cfrange",3]]]],[11,"set_attribute","","",3,[[["cfrange",3],["cfstringref",6]]]],[0,"base","core_foundation","",null,null],[6,"Boolean","core_foundation::base","",null,null],[6,"mach_port_t","","",null,null],[6,"CFAllocatorRef","","",null,null],[6,"CFNullRef","","",null,null],[6,"CFTypeRef","","",null,null],[6,"OSStatus","","",null,null],[6,"SInt32","","",null,null],[6,"CFTypeID","","",null,null],[6,"CFOptionFlags","","",null,null],[6,"CFHashCode","","",null,null],[6,"CFIndex","","",null,null],[4,"CFComparisonResult","","",null,null],[13,"LessThan","","",4,null],[13,"EqualTo","","",4,null],[13,"GreaterThan","","",4,null],[3,"CFRange","","",null,null],[12,"location","","",5,null],[12,"length","","",5,null],[6,"CFAllocatorRetainCallBack","","",null,null],[6,"CFAllocatorReleaseCallBack","","",null,null],[6,"CFAllocatorCopyDescriptionCallBack","","",null,null],[6,"CFAllocatorAllocateCallBack","","",null,null],[6,"CFAllocatorReallocateCallBack","","",null,null],[6,"CFAllocatorDeallocateCallBack","","",null,null],[6,"CFAllocatorPreferredSizeCallBack","","",null,null],[3,"CFAllocatorContext","","",null,null],[12,"version","","",6,null],[12,"info","","",6,null],[12,"retain","","",6,null],[12,"release","","",6,null],[12,"copyDescription","","",6,null],[12,"allocate","","",6,null],[12,"reallocate","","",6,null],[12,"deallocate","","",6,null],[12,"preferredSize","","",6,null],[8,"TCFTypeRef","","Trait for all types which are Core Foundation reference …",null,null],[10,"as_void_ptr","","",7,[[]]],[10,"from_void_ptr","","",7,[[]]],[7,"kCFNotFound","","Constant used by some functions to indicate failed …",null,null],[7,"kCFAllocatorDefault","","",null,null],[7,"kCFAllocatorSystemDefault","","",null,null],[7,"kCFAllocatorMalloc","","",null,null],[7,"kCFAllocatorMallocZone","","",null,null],[7,"kCFAllocatorNull","","",null,null],[7,"kCFAllocatorUseContext","","",null,null],[5,"CFAllocatorCreate","","",null,[[]]],[5,"CFAllocatorAllocate","","",null,[[["usize",15],["isize",15]]]],[5,"CFAllocatorDeallocate","","",null,[[]]],[5,"CFAllocatorGetPreferredSizeForSize","","",null,[[["usize",15],["isize",15]],["isize",15]]],[5,"CFAllocatorReallocate","","",null,[[["usize",15],["isize",15]]]],[5,"CFAllocatorGetDefault","","",null,[[]]],[5,"CFAllocatorSetDefault","","",null,[[]]],[5,"CFAllocatorGetContext","","",null,[[]]],[5,"CFAllocatorGetTypeID","","",null,[[],["usize",15]]],[7,"kCFNull","","",null,null],[5,"CFCopyDescription","","",null,[[]]],[5,"CFEqual","","",null,[[],["u8",15]]],[5,"CFGetRetainCount","","",null,[[],["isize",15]]],[5,"CFGetTypeID","","",null,[[],["usize",15]]],[5,"CFHash","","",null,[[],["usize",15]]],[5,"CFRelease","","",null,[[]]],[5,"CFRetain","","",null,[[]]],[5,"CFShow","","",null,[[]]],[8,"CFIndexConvertible","","",null,null],[10,"to_CFIndex","","Always use this method to construct a <code>CFIndex</code> value. It …",8,[[],["cfindex",6]]],[3,"CFType","","Superclass of all Core Foundation objects.",null,null],[11,"downcast","","Try to downcast the <code>CFType</code> to a subclass. Checking if the …",9,[[],[["option",4],["concretecftype",8]]]],[11,"downcast_into","","Similar to <code>downcast</code>, but consumes self and can thus avoid …",9,[[],[["option",4],["concretecftype",8]]]],[3,"CFAllocator","","",null,null],[11,"new","","",10,[[["cfallocatorcontext",3]],["cfallocator",3]]],[8,"TCFType","","All Core Foundation types implement this trait. The …",null,null],[16,"Ref","","The reference type wrapped inside this type.",11,null],[10,"as_concrete_TypeRef","","Returns the object as its concrete TypeRef.",11,[[]]],[10,"wrap_under_create_rule","","Returns an instance of the object, wrapping the …",11,[[]]],[10,"type_id","","Returns the type ID for this class.",11,[[],["cftypeid",6]]],[11,"as_CFType","","Returns the object as a wrapped <code>CFType</code>. The reference …",11,[[],["cftype",3]]],[11,"into_CFType","","Returns the object as a wrapped <code>CFType</code>. Consumes self and …",11,[[],["cftype",3]]],[10,"as_CFTypeRef","","Returns the object as a raw <code>CFTypeRef</code>. The reference …",11,[[],["cftyperef",6]]],[10,"wrap_under_get_rule","","Returns an instance of the object, wrapping the …",11,[[]]],[11,"retain_count","","Returns the reference count of the object. It is unwise …",11,[[],["cfindex",6]]],[11,"type_of","","Returns the type ID of this object.",11,[[],["cftypeid",6]]],[11,"show","","Writes a debugging version of this object on standard …",11,[[]]],[11,"instance_of","","Returns true if this value is an instance of another type.",11,[[],["bool",15]]],[3,"ItemRef","","A reference to an element inside a container",null,null],[3,"ItemMutRef","","A reference to a mutable element inside a container",null,null],[8,"FromMutVoid","","A trait describing how to convert from the stored *mut …",null,null],[10,"from_mut_void","","",12,[[],["itemmutref",3]]],[8,"FromVoid","","A trait describing how to convert from the stored *const …",null,null],[10,"from_void","","",13,[[],["itemref",3]]],[8,"ToVoid","","A trait describing how to convert from the stored *const …",null,null],[10,"to_void","","",14,[[]]],[0,"boolean","core_foundation","A Boolean type.",null,null],[6,"CFBooleanRef","core_foundation::boolean","",null,null],[5,"CFBooleanGetTypeID","","",null,[[],["usize",15]]],[7,"kCFBooleanTrue","","",null,null],[7,"kCFBooleanFalse","","",null,null],[3,"CFBoolean","","A Boolean type.",null,null],[11,"true_value","","",15,[[],["cfboolean",3]]],[11,"false_value","","",15,[[],["cfboolean",3]]],[0,"characterset","core_foundation","A set of Unicode compliant characters.",null,null],[6,"CFCharacterSetPredefinedSet","core_foundation::characterset","",null,null],[7,"kCFCharacterSetControl","","",null,null],[7,"kCFCharacterSetWhitespace","","",null,null],[7,"kCFCharacterSetWhitespaceAndNewline","","",null,null],[7,"kCFCharacterSetDecimalDigit","","",null,null],[7,"kCFCharacterSetLetter","","",null,null],[7,"kCFCharacterSetLowercaseLetter","","",null,null],[7,"kCFCharacterSetUppercaseLetter","","",null,null],[7,"kCFCharacterSetNonBase","","",null,null],[7,"kCFCharacterSetDecomposable","","",null,null],[7,"kCFCharacterSetAlphaNumeric","","",null,null],[7,"kCFCharacterSetPunctuation","","",null,null],[7,"kCFCharacterSetIllegal","","",null,null],[7,"kCFCharacterSetCapitalizedLetter","","",null,null],[7,"kCFCharacterSetSymbol","","",null,null],[7,"kCFCharacterSetNewline","","",null,null],[3,"__CFCharacterSet","","",null,null],[6,"CFCharacterSetRef","","",null,null],[6,"CFMutableCharacterSetRef","","",null,null],[5,"CFCharacterSetGetTypeID","","",null,[[],["usize",15]]],[5,"CFCharacterSetGetPredefined","","",null,[[["isize",15]]]],[5,"CFCharacterSetCreateWithCharactersInRange","","",null,[[["cfrange",3]]]],[5,"CFCharacterSetCreateWithCharactersInString","","",null,[[]]],[5,"CFCharacterSetCreateWithBitmapRepresentation","","",null,[[]]],[5,"CFCharacterSetCreateMutable","","",null,[[]]],[5,"CFCharacterSetCreateCopy","","",null,[[]]],[5,"CFCharacterSetCreateMutableCopy","","",null,[[]]],[5,"CFCharacterSetIsCharacterMember","","",null,[[["u16",15]],["u8",15]]],[5,"CFCharacterSetCreateBitmapRepresentation","","",null,[[]]],[5,"CFCharacterSetAddCharactersInRange","","",null,[[["cfrange",3]]]],[5,"CFCharacterSetRemoveCharactersInRange","","",null,[[["cfrange",3]]]],[5,"CFCharacterSetAddCharactersInString","","",null,[[]]],[5,"CFCharacterSetRemoveCharactersInString","","",null,[[]]],[5,"CFCharacterSetUnion","","",null,[[]]],[5,"CFCharacterSetIntersect","","",null,[[]]],[5,"CFCharacterSetInvert","","",null,[[]]],[3,"CFCharacterSet","","An immutable set of Unicde characters.",null,null],[0,"data","core_foundation","Core Foundation byte buffers.",null,null],[3,"__CFData","core_foundation::data","",null,null],[6,"CFDataRef","","",null,null],[5,"CFDataCreate","","",null,[[["isize",15]]]],[5,"CFDataGetBytePtr","","",null,[[]]],[5,"CFDataGetBytes","","",null,[[["cfrange",3]]]],[5,"CFDataGetLength","","",null,[[],["isize",15]]],[5,"CFDataGetTypeID","","",null,[[],["usize",15]]],[3,"CFData","","A byte buffer.",null,null],[11,"from_buffer","","",16,[[],["cfdata",3]]],[11,"bytes","","Returns a pointer to the underlying bytes in this data. …",16,[[]]],[11,"len","","Returns the length of this byte buffer.",16,[[],["cfindex",6]]],[0,"date","core_foundation","Core Foundation date objects.",null,null],[3,"__CFDate","core_foundation::date","",null,null],[6,"CFDateRef","","",null,null],[6,"CFTimeInterval","","",null,null],[6,"CFAbsoluteTime","","",null,null],[7,"kCFAbsoluteTimeIntervalSince1904","","",null,null],[7,"kCFAbsoluteTimeIntervalSince1970","","",null,null],[5,"CFAbsoluteTimeGetCurrent","","",null,[[],["f64",15]]],[5,"CFDateCreate","","",null,[[["f64",15]]]],[5,"CFDateGetAbsoluteTime","","",null,[[],["f64",15]]],[5,"CFDateGetTimeIntervalSinceDate","","",null,[[],["f64",15]]],[5,"CFDateCompare","","",null,[[],["cfcomparisonresult",4]]],[5,"CFDateGetTypeID","","",null,[[],["usize",15]]],[3,"CFDate","","A date.",null,null],[11,"new","","",17,[[["cfabsolutetime",6]],["cfdate",3]]],[11,"now","","",17,[[],["cfdate",3]]],[11,"abs_time","","",17,[[],["cfabsolutetime",6]]],[0,"dictionary","core_foundation","Dictionaries of key-value pairs.",null,null],[6,"CFDictionaryApplierFunction","core_foundation::dictionary","",null,null],[6,"CFDictionaryRetainCallBack","","",null,null],[6,"CFDictionaryReleaseCallBack","","",null,null],[6,"CFDictionaryCopyDescriptionCallBack","","",null,null],[6,"CFDictionaryEqualCallBack","","",null,null],[6,"CFDictionaryHashCallBack","","",null,null],[3,"CFDictionaryKeyCallBacks","","",null,null],[12,"version","","",18,null],[12,"retain","","",18,null],[12,"release","","",18,null],[12,"copyDescription","","",18,null],[12,"equal","","",18,null],[12,"hash","","",18,null],[3,"CFDictionaryValueCallBacks","","",null,null],[12,"version","","",19,null],[12,"retain","","",19,null],[12,"release","","",19,null],[12,"copyDescription","","",19,null],[12,"equal","","",19,null],[3,"__CFDictionary","","",null,null],[6,"CFDictionaryRef","","",null,null],[6,"CFMutableDictionaryRef","","",null,null],[7,"kCFTypeDictionaryKeyCallBacks","","",null,null],[7,"kCFTypeDictionaryValueCallBacks","","",null,null],[5,"CFDictionaryContainsKey","","",null,[[],["u8",15]]],[5,"CFDictionaryCreate","","",null,[[["isize",15]]]],[5,"CFDictionaryGetCount","","",null,[[],["isize",15]]],[5,"CFDictionaryGetTypeID","","",null,[[],["usize",15]]],[5,"CFDictionaryGetValueIfPresent","","",null,[[],["u8",15]]],[5,"CFDictionaryApplyFunction","","",null,[[]]],[5,"CFDictionaryGetKeysAndValues","","",null,[[]]],[5,"CFDictionaryCreateMutable","","",null,[[["isize",15]]]],[5,"CFDictionaryCreateMutableCopy","","",null,[[["isize",15]]]],[5,"CFDictionaryAddValue","","",null,[[]]],[5,"CFDictionarySetValue","","",null,[[]]],[5,"CFDictionaryReplaceValue","","",null,[[]]],[5,"CFDictionaryRemoveValue","","",null,[[]]],[5,"CFDictionaryRemoveAllValues","","",null,[[]]],[3,"CFDictionary","","",null,null],[11,"from_CFType_pairs","","",20,[[],["cfdictionary",3]]],[11,"to_untyped","","",20,[[],["cfdictionary",3]]],[11,"to_mutable","","Returns a <code>CFMutableDictionary</code> pointing to the same …",20,[[],["cfmutabledictionary",3]]],[11,"into_untyped","","Returns the same dictionary, but with the types reset to …",20,[[],["cfdictionary",3]]],[11,"len","","",20,[[],["usize",15]]],[11,"is_empty","","",20,[[],["bool",15]]],[11,"contains_key","","",20,[[],["bool",15]]],[11,"find","","",20,[[["tovoid",8]],[["itemref",3],["option",4]]]],[11,"get","","PanicsPanics if the key is not present in the dictionary. …",20,[[["tovoid",8]],["itemref",3]]],[11,"get_keys_and_values","","",20,[[]]],[3,"CFMutableDictionary","","",null,null],[11,"new","","",21,[[]]],[11,"with_capacity","","",21,[[["isize",15]]]],[11,"copy_with_capacity","","",21,[[["isize",15]]]],[11,"from_CFType_pairs","","",21,[[],["cfmutabledictionary",3]]],[11,"to_untyped","","",21,[[],["cfmutabledictionary",3]]],[11,"into_untyped","","Returns the same dictionary, but with the types reset to …",21,[[],["cfmutabledictionary",3]]],[11,"to_immutable","","Returns a <code>CFDictionary</code> pointing to the same underlying …",21,[[],["cfdictionary",3]]],[11,"len","","",21,[[],["usize",15]]],[11,"is_empty","","",21,[[],["bool",15]]],[11,"contains_key","","",21,[[],["bool",15]]],[11,"find","","",21,[[],[["itemref",3],["option",4]]]],[11,"get","","PanicsPanics if the key is not present in the dictionary. …",21,[[],["itemref",3]]],[11,"get_keys_and_values","","",21,[[]]],[11,"add","","Adds the key-value pair to the dictionary if no such key …",21,[[]]],[11,"set","","Sets the value of the key in the dictionary.",21,[[]]],[11,"replace","","Replaces the value of the key in the dictionary.",21,[[]]],[11,"remove","","Removes the value of the key from the dictionary.",21,[[]]],[11,"remove_all","","",21,[[]]],[0,"error","core_foundation","Core Foundation errors.",null,null],[3,"__CFError","core_foundation::error","",null,null],[6,"CFErrorRef","","",null,null],[5,"CFErrorGetTypeID","","",null,[[],["usize",15]]],[7,"kCFErrorDomainPOSIX","","",null,null],[7,"kCFErrorDomainOSStatus","","",null,null],[7,"kCFErrorDomainMach","","",null,null],[7,"kCFErrorDomainCocoa","","",null,null],[5,"CFErrorGetDomain","","",null,[[]]],[5,"CFErrorGetCode","","",null,[[],["isize",15]]],[5,"CFErrorCopyDescription","","",null,[[]]],[3,"CFError","","An error value.",null,null],[11,"domain","","Returns a string identifying the domain with which this …",22,[[],["cfstring",3]]],[11,"code","","Returns the code identifying this type of error.",22,[[],["cfindex",6]]],[11,"description","","Returns a human-presentable description of the error.",22,[[],["cfstring",3]]],[0,"filedescriptor","core_foundation","",null,null],[6,"CFFileDescriptorNativeDescriptor","core_foundation::filedescriptor","",null,null],[3,"__CFFileDescriptor","","",null,null],[6,"CFFileDescriptorRef","","",null,null],[17,"kCFFileDescriptorReadCallBack","","",null,null],[17,"kCFFileDescriptorWriteCallBack","","",null,null],[6,"CFFileDescriptorCallBack","","",null,null],[3,"CFFileDescriptorContext","","",null,null],[12,"version","","",23,null],[12,"info","","",23,null],[12,"retain","","",23,null],[12,"release","","",23,null],[12,"copyDescription","","",23,null],[5,"CFFileDescriptorGetTypeID","","",null,[[],["usize",15]]],[5,"CFFileDescriptorCreate","","",null,[[["u8",15],["i32",15]]]],[5,"CFFileDescriptorGetNativeDescriptor","","",null,[[],["i32",15]]],[5,"CFFileDescriptorGetContext","","",null,[[]]],[5,"CFFileDescriptorEnableCallBacks","","",null,[[["usize",15]]]],[5,"CFFileDescriptorDisableCallBacks","","",null,[[["usize",15]]]],[5,"CFFileDescriptorInvalidate","","",null,[[]]],[5,"CFFileDescriptorIsValid","","",null,[[],["u8",15]]],[5,"CFFileDescriptorCreateRunLoopSource","","",null,[[["isize",15]]]],[3,"CFFileDescriptor","","",null,null],[11,"new","","",24,[[["option",4],["cffiledescriptorcontext",3],["rawfd",6],["bool",15],["cffiledescriptorcallback",6]],[["option",4],["cffiledescriptor",3]]]],[11,"context","","",24,[[],["cffiledescriptorcontext",3]]],[11,"enable_callbacks","","",24,[[["cfoptionflags",6]]]],[11,"disable_callbacks","","",24,[[["cfoptionflags",6]]]],[11,"valid","","",24,[[],["bool",15]]],[11,"invalidate","","",24,[[]]],[11,"to_run_loop_source","","",24,[[["cfindex",6]],[["option",4],["cfrunloopsource",3]]]],[0,"number","core_foundation","Immutable numbers.",null,null],[3,"__CFBoolean","core_foundation::number","",null,null],[6,"CFBooleanRef","","",null,null],[6,"CFNumberType","","",null,null],[17,"kCFNumberSInt8Type","","",null,null],[17,"kCFNumberSInt16Type","","",null,null],[17,"kCFNumberSInt32Type","","",null,null],[17,"kCFNumberSInt64Type","","",null,null],[17,"kCFNumberFloat32Type","","",null,null],[17,"kCFNumberFloat64Type","","",null,null],[17,"kCFNumberCharType","","",null,null],[17,"kCFNumberShortType","","",null,null],[17,"kCFNumberIntType","","",null,null],[17,"kCFNumberLongType","","",null,null],[17,"kCFNumberLongLongType","","",null,null],[17,"kCFNumberFloatType","","",null,null],[17,"kCFNumberDoubleType","","",null,null],[17,"kCFNumberCFIndexType","","",null,null],[17,"kCFNumberNSIntegerType","","",null,null],[17,"kCFNumberCGFloatType","","",null,null],[17,"kCFNumberMaxType","","",null,null],[4,"__CFNumber","","",null,null],[6,"CFNumberRef","","",null,null],[7,"kCFBooleanTrue","","",null,null],[7,"kCFBooleanFalse","","",null,null],[5,"CFBooleanGetTypeID","","",null,[[],["usize",15]]],[5,"CFBooleanGetValue","","",null,[[],["bool",15]]],[5,"CFNumberCreate","","",null,[[["u32",15]]]],[5,"CFNumberGetValue","","",null,[[["u32",15]],["bool",15]]],[5,"CFNumberCompare","","",null,[[],["cfcomparisonresult",4]]],[5,"CFNumberGetTypeID","","",null,[[],["usize",15]]],[5,"CFNumberGetType","","",null,[[],["u32",15]]],[3,"CFNumber","","An immutable numeric value.",null,null],[11,"to_i32","","",25,[[],[["option",4],["i32",15]]]],[11,"to_i64","","",25,[[],[["i64",15],["option",4]]]],[11,"to_f32","","",25,[[],[["option",4],["f32",15]]]],[11,"to_f64","","",25,[[],[["f64",15],["option",4]]]],[0,"set","core_foundation","An immutable bag of elements.",null,null],[6,"CFSetApplierFunction","core_foundation::set","",null,null],[6,"CFSetRetainCallBack","","",null,null],[6,"CFSetReleaseCallBack","","",null,null],[6,"CFSetCopyDescriptionCallBack","","",null,null],[6,"CFSetEqualCallBack","","",null,null],[6,"CFSetHashCallBack","","",null,null],[3,"CFSetCallBacks","","",null,null],[12,"version","","",26,null],[12,"retain","","",26,null],[12,"release","","",26,null],[12,"copyDescription","","",26,null],[12,"equal","","",26,null],[12,"hash","","",26,null],[3,"__CFSet","","",null,null],[6,"CFSetRef","","",null,null],[7,"kCFTypeSetCallBacks","","",null,null],[5,"CFSetCreate","","",null,[[["isize",15]]]],[5,"CFSetCreateCopy","","",null,[[]]],[5,"CFSetContainsValue","","",null,[[],["u8",15]]],[5,"CFSetGetCount","","",null,[[],["isize",15]]],[5,"CFSetGetCountOfValue","","",null,[[],["isize",15]]],[5,"CFSetGetValue","","",null,[[]]],[5,"CFSetGetValueIfPresent","","",null,[[],["u8",15]]],[5,"CFSetGetValues","","",null,[[]]],[5,"CFSetApplyFunction","","",null,[[]]],[5,"CFSetGetTypeID","","",null,[[],["usize",15]]],[3,"CFSet","","An immutable bag of elements.",null,null],[11,"from_slice","","Creates a new set from a list of <code>CFType</code> instances.",27,[[],["cfset",3]]],[11,"len","","Get the number of elements in the CFSet",27,[[],["usize",15]]],[0,"string","core_foundation","Immutable strings.",null,null],[6,"UniChar","core_foundation::string","",null,null],[6,"CFStringCompareFlags","","",null,null],[6,"CFStringEncoding","","",null,null],[7,"kCFStringEncodingUTF8","","",null,null],[6,"CFStringEncodings","","",null,null],[3,"__CFString","","",null,null],[6,"CFStringRef","","",null,null],[5,"CFStringCreateWithBytes","","",null,[[["u32",15],["isize",15],["u8",15]]]],[5,"CFStringCreateWithBytesNoCopy","","",null,[[["u32",15],["isize",15],["u8",15]]]],[5,"CFStringCreateWithCString","","",null,[[["u32",15]]]],[5,"CFStringGetBytes","","",null,[[["u32",15],["isize",15],["u8",15],["cfrange",3]],["isize",15]]],[5,"CFStringGetCString","","",null,[[["u32",15],["isize",15]],["u8",15]]],[5,"CFStringGetCStringPtr","","",null,[[["u32",15]]]],[5,"CFStringGetLength","","",null,[[],["isize",15]]],[5,"CFStringGetTypeID","","",null,[[],["usize",15]]],[3,"CFString","","An immutable string in one of a variety of encodings.",null,null],[11,"new","","Creates a new <code>CFString</code> instance from a Rust string.",28,[[["str",15]],["cfstring",3]]],[11,"from_static_string","","Like <code>CFString::new</code>, but references a string that can be …",28,[[["str",15]],["cfstring",3]]],[11,"char_len","","Returns the number of characters in the string.",28,[[],["cfindex",6]]],[0,"url","core_foundation","A URL type for Core Foundation.",null,null],[3,"__CFURL","core_foundation::url","",null,null],[6,"CFURLRef","","",null,null],[6,"CFURLBookmarkCreationOptions","","",null,null],[6,"CFURLBookmarkResolutionOptions","","",null,null],[6,"CFURLBookmarkFileCreationOptions","","",null,null],[6,"CFURLPathStyle","","",null,null],[17,"kCFURLPOSIXPathStyle","","",null,null],[17,"kCFURLHFSPathStyle","","",null,null],[17,"kCFURLWindowsPathStyle","","",null,null],[7,"kCFURLBookmarkCreationPreferFileIDResolutionMask","","",null,null],[7,"kCFURLBookmarkCreationMinimalBookmarkMask","","",null,null],[7,"kCFURLBookmarkCreationSuitableForBookmarkFile","","",null,null],[7,"kCFURLBookmarkCreationWithSecurityScope","","",null,null],[7,"kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess","","",null,null],[7,"kCFURLAttributeModificationDateKey","","",null,null],[7,"kCFURLContentAccessDateKey","","",null,null],[7,"kCFURLContentModificationDateKey","","",null,null],[7,"kCFURLCreationDateKey","","",null,null],[7,"kCFURLFileResourceIdentifierKey","","",null,null],[7,"kCFURLFileSecurityKey","","",null,null],[7,"kCFURLHasHiddenExtensionKey","","",null,null],[7,"kCFURLIsDirectoryKey","","",null,null],[7,"kCFURLIsExecutableKey","","",null,null],[7,"kCFURLIsHiddenKey","","",null,null],[7,"kCFURLIsPackageKey","","",null,null],[7,"kCFURLIsReadableKey","","",null,null],[7,"kCFURLIsRegularFileKey","","",null,null],[7,"kCFURLIsSymbolicLinkKey","","",null,null],[7,"kCFURLIsSystemImmutableKey","","",null,null],[7,"kCFURLIsUserImmutableKey","","",null,null],[7,"kCFURLIsVolumeKey","","",null,null],[7,"kCFURLIsWritableKey","","",null,null],[7,"kCFURLLabelNumberKey","","",null,null],[7,"kCFURLLinkCountKey","","",null,null],[7,"kCFURLLocalizedLabelKey","","",null,null],[7,"kCFURLLocalizedNameKey","","",null,null],[7,"kCFURLLocalizedTypeDescriptionKey","","",null,null],[7,"kCFURLNameKey","","",null,null],[7,"kCFURLParentDirectoryURLKey","","",null,null],[7,"kCFURLPreferredIOBlockSizeKey","","",null,null],[7,"kCFURLTypeIdentifierKey","","",null,null],[7,"kCFURLVolumeIdentifierKey","","",null,null],[7,"kCFURLVolumeURLKey","","",null,null],[7,"kCFURLFileResourceTypeKey","","",null,null],[5,"CFURLCopyAbsoluteURL","","",null,[[]]],[5,"CFURLCreateAbsoluteURLWithBytes","","",null,[[["u32",15],["isize",15],["u8",15]]]],[5,"CFURLCreateByResolvingBookmarkData","","",null,[[["usize",15]]]],[5,"CFURLCreateFilePathURL","","",null,[[]]],[5,"CFURLCreateFromFileSystemRepresentation","","",null,[[["isize",15],["u8",15]]]],[5,"CFURLCreateWithBytes","","",null,[[["u32",15],["isize",15]]]],[5,"CFURLCreateWithFileSystemPath","","",null,[[["isize",15],["u8",15]]]],[5,"CFURLCreateWithFileSystemPathRelativeToBase","","",null,[[["isize",15],["u8",15]]]],[5,"CFURLCanBeDecomposed","","",null,[[],["u8",15]]],[5,"CFURLCopyFileSystemPath","","",null,[[["isize",15]]]],[5,"CFURLCopyFragment","","",null,[[]]],[5,"CFURLCopyHostName","","",null,[[]]],[5,"CFURLCopyLastPathComponent","","",null,[[]]],[5,"CFURLCopyNetLocation","","",null,[[]]],[5,"CFURLCopyParameterString","","",null,[[]]],[5,"CFURLCopyPassword","","",null,[[]]],[5,"CFURLCopyPath","","",null,[[]]],[5,"CFURLCopyPathExtension","","",null,[[]]],[5,"CFURLCopyQueryString","","",null,[[]]],[5,"CFURLCopyResourceSpecifier","","",null,[[]]],[5,"CFURLCopyScheme","","",null,[[]]],[5,"CFURLCopyStrictPath","","",null,[[]]],[5,"CFURLCopyUserName","","",null,[[]]],[5,"CFURLGetPortNumber","","",null,[[],["i32",15]]],[5,"CFURLHasDirectoryPath","","",null,[[],["u8",15]]],[5,"CFURLGetFileSystemRepresentation","","",null,[[["isize",15],["u8",15]],["u8",15]]],[5,"CFURLGetString","","",null,[[]]],[5,"CFURLGetBytes","","",null,[[["isize",15]],["isize",15]]],[5,"CFURLGetTypeID","","",null,[[],["usize",15]]],[5,"CFURLClearResourcePropertyCache","","",null,[[]]],[5,"CFURLCreateResourcePropertiesForKeysFromBookmarkData","","",null,[[]]],[5,"CFURLCreateResourcePropertyForKeyFromBookmarkData","","",null,[[]]],[5,"CFURLSetResourcePropertyForKey","","",null,[[],["u8",15]]],[5,"CFURLCreateBookmarkData","","",null,[[["usize",15]]]],[5,"CFURLCreateBookmarkDataFromAliasRecord","","",null,[[]]],[5,"CFURLCreateBookmarkDataFromFile","","",null,[[]]],[5,"CFURLWriteBookmarkDataToFile","","",null,[[["usize",15]],["u8",15]]],[5,"CFURLStartAccessingSecurityScopedResource","","",null,[[],["u8",15]]],[5,"CFURLStopAccessingSecurityScopedResource","","",null,[[]]],[3,"CFURL","","",null,null],[11,"from_path","","",29,[[["bool",15],["path",3],["asref",8]],[["option",4],["cfurl",3]]]],[11,"from_file_system_path","","",29,[[["cfstring",3],["cfurlpathstyle",6],["bool",15]],["cfurl",3]]],[11,"to_path","","",29,[[],[["option",4],["pathbuf",3]]]],[11,"get_string","","",29,[[],["cfstring",3]]],[11,"get_file_system_path","","",29,[[["cfurlpathstyle",6]],["cfstring",3]]],[11,"absolute","","",29,[[],["cfurl",3]]],[0,"bundle","core_foundation","Core Foundation Bundle Type",null,null],[3,"__CFBundle","core_foundation::bundle","",null,null],[6,"CFBundleRef","","",null,null],[5,"CFBundleCreate","","",null,[[]]],[5,"CFBundleGetBundleWithIdentifier","","",null,[[]]],[5,"CFBundleGetFunctionPointerForName","","",null,[[]]],[5,"CFBundleGetMainBundle","","",null,[[]]],[5,"CFBundleGetInfoDictionary","","",null,[[]]],[5,"CFBundleGetTypeID","","",null,[[],["usize",15]]],[5,"CFBundleCopyExecutableURL","","",null,[[]]],[5,"CFBundleCopyPrivateFrameworksURL","","",null,[[]]],[5,"CFBundleCopySharedSupportURL","","",null,[[]]],[5,"CFBundleCopyBundleURL","","",null,[[]]],[3,"CFBundle","","A Bundle type.",null,null],[11,"new","","",30,[[["cfurl",3]],[["option",4],["cfbundle",3]]]],[11,"bundle_with_identifier","","",30,[[["cfstring",3]],[["option",4],["cfbundle",3]]]],[11,"function_pointer_for_name","","",30,[[["cfstring",3]]]],[11,"main_bundle","","",30,[[],["cfbundle",3]]],[11,"info_dictionary","","",30,[[],[["cfstring",3],["cftype",3],["cfdictionary",3]]]],[11,"executable_url","","",30,[[],[["option",4],["cfurl",3]]]],[11,"bundle_url","","Bundle\'s own location",30,[[],[["option",4],["cfurl",3]]]],[11,"path","","Bundle\'s own location",30,[[],[["option",4],["pathbuf",3]]]],[11,"private_frameworks_url","","",30,[[],[["option",4],["cfurl",3]]]],[11,"shared_support_url","","",30,[[],[["option",4],["cfurl",3]]]],[0,"propertylist","core_foundation","Core Foundation property lists",null,null],[6,"CFPropertyListRef","core_foundation::propertylist","",null,null],[6,"CFPropertyListFormat","","",null,null],[17,"kCFPropertyListOpenStepFormat","","",null,null],[17,"kCFPropertyListXMLFormat_v1_0","","",null,null],[17,"kCFPropertyListBinaryFormat_v1_0","","",null,null],[6,"CFPropertyListMutabilityOptions","","",null,null],[17,"kCFPropertyListImmutable","","",null,null],[17,"kCFPropertyListMutableContainers","","",null,null],[17,"kCFPropertyListMutableContainersAndLeaves","","",null,null],[5,"CFPropertyListCreateWithData","","",null,[[["usize",15]]]],[5,"CFPropertyListCreateData","","",null,[[["usize",15],["isize",15]]]],[5,"create_with_data","","",null,[[["cfpropertylistmutabilityoptions",6],["cfdata",3]],[["cferror",3],["result",4]]]],[5,"create_data","","",null,[[["cfpropertylistformat",6]],[["result",4],["cfdata",3],["cferror",3]]]],[8,"CFPropertyListSubClass","","Trait for all subclasses of <code>CFPropertyList</code>.",null,null],[11,"to_CFPropertyList","","Create an instance of the superclass type <code>CFPropertyList</code> …",31,[[],["cfpropertylist",3]]],[11,"into_CFPropertyList","","Equal to <code>to_CFPropertyList</code>, but consumes self and avoids …",31,[[],["cfpropertylist",3]]],[3,"CFPropertyList","","A CFPropertyList struct. This is superclass to <code>CFData</code>, …",null,null],[11,"as_concrete_TypeRef","","",32,[[],["cfpropertylistref",6]]],[11,"wrap_under_get_rule","","",32,[[["cfpropertylistref",6]],["cfpropertylist",3]]],[11,"as_CFType","","",32,[[],["cftype",3]]],[11,"into_CFType","","",32,[[],["cftype",3]]],[11,"as_CFTypeRef","","",32,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",32,[[["cfpropertylistref",6]],["cfpropertylist",3]]],[11,"retain_count","","Returns the reference count of the object. It is unwise …",32,[[],["cfindex",6]]],[11,"type_of","","Returns the type ID of this object. Will be one of …",32,[[],["cftypeid",6]]],[11,"show","","Writes a debugging version of this object on standard …",32,[[]]],[11,"instance_of","","Returns true if this value is an instance of another type.",32,[[],["bool",15]]],[11,"downcast","","Try to downcast the <code>CFPropertyList</code> to a subclass. …",32,[[],[["option",4],["cfpropertylistsubclass",8]]]],[11,"downcast_into","","Similar to <code>downcast</code>, but consumes self and can thus avoid …",32,[[],[["option",4],["cfpropertylistsubclass",8]]]],[0,"runloop","core_foundation","",null,null],[3,"__CFRunLoop","core_foundation::runloop","",null,null],[6,"CFRunLoopRef","","",null,null],[3,"__CFRunLoopSource","","",null,null],[6,"CFRunLoopSourceRef","","",null,null],[3,"__CFRunLoopObserver","","",null,null],[6,"CFRunLoopObserverRef","","",null,null],[17,"kCFRunLoopRunFinished","","",null,null],[17,"kCFRunLoopRunStopped","","",null,null],[17,"kCFRunLoopRunTimedOut","","",null,null],[17,"kCFRunLoopRunHandledSource","","",null,null],[6,"CFRunLoopActivity","","",null,null],[17,"kCFRunLoopEntry","","",null,null],[17,"kCFRunLoopBeforeTimers","","",null,null],[17,"kCFRunLoopBeforeSources","","",null,null],[17,"kCFRunLoopBeforeWaiting","","",null,null],[17,"kCFRunLoopAfterWaiting","","",null,null],[17,"kCFRunLoopExit","","",null,null],[17,"kCFRunLoopAllActivities","","",null,null],[3,"CFRunLoopSourceContext","","",null,null],[12,"version","","",33,null],[12,"info","","",33,null],[12,"retain","","",33,null],[12,"release","","",33,null],[12,"copyDescription","","",33,null],[12,"equal","","",33,null],[12,"hash","","",33,null],[12,"schedule","","",33,null],[12,"cancel","","",33,null],[12,"perform","","",33,null],[3,"CFRunLoopSourceContext1","","",null,null],[12,"version","","",34,null],[12,"info","","",34,null],[12,"retain","","",34,null],[12,"release","","",34,null],[12,"copyDescription","","",34,null],[12,"equal","","",34,null],[12,"hash","","",34,null],[12,"getPort","","",34,null],[12,"perform","","",34,null],[3,"CFRunLoopObserverContext","","",null,null],[12,"version","","",35,null],[12,"info","","",35,null],[12,"retain","","",35,null],[12,"release","","",35,null],[12,"copyDescription","","",35,null],[6,"CFRunLoopObserverCallBack","","",null,null],[3,"CFRunLoopTimerContext","","",null,null],[12,"version","","",36,null],[12,"info","","",36,null],[12,"retain","","",36,null],[12,"release","","",36,null],[12,"copyDescription","","",36,null],[6,"CFRunLoopTimerCallBack","","",null,null],[3,"__CFRunLoopTimer","","",null,null],[6,"CFRunLoopTimerRef","","",null,null],[7,"kCFRunLoopDefaultMode","","",null,null],[7,"kCFRunLoopCommonModes","","",null,null],[5,"CFRunLoopGetTypeID","","",null,[[],["usize",15]]],[5,"CFRunLoopGetCurrent","","",null,[[]]],[5,"CFRunLoopGetMain","","",null,[[]]],[5,"CFRunLoopCopyCurrentMode","","",null,[[]]],[5,"CFRunLoopCopyAllModes","","",null,[[]]],[5,"CFRunLoopAddCommonMode","","",null,[[]]],[5,"CFRunLoopGetNextTimerFireDate","","",null,[[],["f64",15]]],[5,"CFRunLoopRun","","",null,[[]]],[5,"CFRunLoopRunInMode","","",null,[[["f64",15],["u8",15]],["i32",15]]],[5,"CFRunLoopIsWaiting","","",null,[[],["u8",15]]],[5,"CFRunLoopWakeUp","","",null,[[]]],[5,"CFRunLoopStop","","",null,[[]]],[5,"CFRunLoopContainsSource","","",null,[[],["u8",15]]],[5,"CFRunLoopAddSource","","",null,[[]]],[5,"CFRunLoopRemoveSource","","",null,[[]]],[5,"CFRunLoopContainsObserver","","",null,[[],["u8",15]]],[5,"CFRunLoopAddObserver","","",null,[[]]],[5,"CFRunLoopRemoveObserver","","",null,[[]]],[5,"CFRunLoopContainsTimer","","",null,[[],["u8",15]]],[5,"CFRunLoopAddTimer","","",null,[[]]],[5,"CFRunLoopRemoveTimer","","",null,[[]]],[5,"CFRunLoopSourceGetTypeID","","",null,[[],["usize",15]]],[5,"CFRunLoopSourceCreate","","",null,[[["isize",15]]]],[5,"CFRunLoopSourceGetOrder","","",null,[[],["isize",15]]],[5,"CFRunLoopSourceInvalidate","","",null,[[]]],[5,"CFRunLoopSourceIsValid","","",null,[[],["u8",15]]],[5,"CFRunLoopSourceGetContext","","",null,[[]]],[5,"CFRunLoopSourceSignal","","",null,[[]]],[5,"CFRunLoopObserverGetTypeID","","",null,[[],["usize",15]]],[5,"CFRunLoopObserverCreate","","",null,[[["usize",15],["isize",15],["u8",15]]]],[5,"CFRunLoopObserverGetActivities","","",null,[[],["usize",15]]],[5,"CFRunLoopObserverDoesRepeat","","",null,[[],["u8",15]]],[5,"CFRunLoopObserverGetOrder","","",null,[[],["isize",15]]],[5,"CFRunLoopObserverInvalidate","","",null,[[]]],[5,"CFRunLoopObserverIsValid","","",null,[[],["u8",15]]],[5,"CFRunLoopObserverGetContext","","",null,[[]]],[5,"CFRunLoopTimerGetTypeID","","",null,[[],["usize",15]]],[5,"CFRunLoopTimerCreate","","",null,[[["f64",15],["usize",15],["isize",15]]]],[5,"CFRunLoopTimerGetNextFireDate","","",null,[[],["f64",15]]],[5,"CFRunLoopTimerSetNextFireDate","","",null,[[["f64",15]]]],[5,"CFRunLoopTimerGetInterval","","",null,[[],["f64",15]]],[5,"CFRunLoopTimerDoesRepeat","","",null,[[],["u8",15]]],[5,"CFRunLoopTimerGetOrder","","",null,[[],["isize",15]]],[5,"CFRunLoopTimerInvalidate","","",null,[[]]],[5,"CFRunLoopTimerIsValid","","",null,[[],["u8",15]]],[5,"CFRunLoopTimerGetContext","","",null,[[]]],[5,"CFRunLoopTimerGetTolerance","","",null,[[],["f64",15]]],[5,"CFRunLoopTimerSetTolerance","","",null,[[["f64",15]]]],[6,"CFRunLoopMode","","",null,null],[3,"CFRunLoop","","",null,null],[11,"get_current","","",37,[[],["cfrunloop",3]]],[11,"get_main","","",37,[[],["cfrunloop",3]]],[11,"run_current","","",37,[[]]],[11,"stop","","",37,[[]]],[11,"current_mode","","",37,[[],[["string",3],["option",4]]]],[11,"contains_timer","","",37,[[["cfrunloopmode",6],["cfrunlooptimer",3]],["bool",15]]],[11,"add_timer","","",37,[[["cfrunloopmode",6],["cfrunlooptimer",3]]]],[11,"remove_timer","","",37,[[["cfrunloopmode",6],["cfrunlooptimer",3]]]],[11,"contains_source","","",37,[[["cfrunloopmode",6],["cfrunloopsource",3]],["bool",15]]],[11,"add_source","","",37,[[["cfrunloopmode",6],["cfrunloopsource",3]]]],[11,"remove_source","","",37,[[["cfrunloopmode",6],["cfrunloopsource",3]]]],[11,"contains_observer","","",37,[[["cfrunloopmode",6],["cfrunloopobserver",3]],["bool",15]]],[11,"add_observer","","",37,[[["cfrunloopmode",6],["cfrunloopobserver",3]]]],[11,"remove_observer","","",37,[[["cfrunloopmode",6],["cfrunloopobserver",3]]]],[3,"CFRunLoopTimer","","",null,null],[11,"new","","",38,[[["cftimeinterval",6],["cfrunlooptimercallback",6],["cfindex",6],["cfabsolutetime",6],["cfoptionflags",6]],["cfrunlooptimer",3]]],[3,"CFRunLoopSource","","",null,null],[11,"from_file_descriptor","","",39,[[["cffiledescriptor",3],["cfindex",6]],[["option",4],["cfrunloopsource",3]]]],[3,"CFRunLoopObserver","","",null,null],[0,"timezone","core_foundation","Core Foundation time zone objects.",null,null],[3,"__CFTimeZone","core_foundation::timezone","",null,null],[6,"CFTimeZoneRef","","",null,null],[5,"CFTimeZoneCopySystem","","",null,[[]]],[5,"CFTimeZoneCopyDefault","","",null,[[]]],[5,"CFTimeZoneCreateWithTimeIntervalFromGMT","","",null,[[["f64",15]]]],[5,"CFTimeZoneGetSecondsFromGMT","","",null,[[["f64",15]],["f64",15]]],[5,"CFTimeZoneGetTypeID","","",null,[[],["usize",15]]],[5,"CFTimeZoneGetName","","",null,[[]]],[3,"CFTimeZone","","A time zone.",null,null],[11,"new","","",40,[[["cftimeinterval",6]],["cftimezone",3]]],[11,"system","","",40,[[],["cftimezone",3]]],[11,"seconds_from_gmt","","",40,[[["cfdate",3]],["cftimeinterval",6]]],[11,"name","","The timezone database ID that identifies the time zone. …",40,[[],["cfstring",3]]],[0,"uuid","core_foundation","Core Foundation UUID objects.",null,null],[3,"__CFUUID","core_foundation::uuid","",null,null],[6,"CFUUIDRef","","",null,null],[3,"CFUUIDBytes","","",null,null],[12,"byte0","","",41,null],[12,"byte1","","",41,null],[12,"byte2","","",41,null],[12,"byte3","","",41,null],[12,"byte4","","",41,null],[12,"byte5","","",41,null],[12,"byte6","","",41,null],[12,"byte7","","",41,null],[12,"byte8","","",41,null],[12,"byte9","","",41,null],[12,"byte10","","",41,null],[12,"byte11","","",41,null],[12,"byte12","","",41,null],[12,"byte13","","",41,null],[12,"byte14","","",41,null],[12,"byte15","","",41,null],[5,"CFUUIDCreate","","",null,[[]]],[5,"CFUUIDCreateFromUUIDBytes","","",null,[[["cfuuidbytes",3]]]],[5,"CFUUIDGetUUIDBytes","","",null,[[],["cfuuidbytes",3]]],[5,"CFUUIDGetTypeID","","",null,[[],["usize",15]]],[3,"CFUUID","","A UUID.",null,null],[11,"new","","",42,[[],["cfuuid",3]]],[8,"ConcreteCFType","core_foundation","",null,null],[14,"declare_TCFType","","Declare a Rust type that wraps an underlying …",null,null],[14,"impl_TCFType","","Provide an implementation of the <code>TCFType</code> trait for the …",null,null],[14,"impl_CFTypeDescription","","Implement <code>std::fmt::Debug</code> for the given type.",null,null],[14,"impl_CFComparison","","",null,null],[11,"from","core_foundation::array","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from_mut_void","","",1,[[],["itemmutref",3]]],[11,"from_void","","",1,[[],["itemref",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"into_iter","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","core_foundation::attributed_string","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from_mut_void","","",2,[[],["itemmutref",3]]],[11,"from_void","","",2,[[],["itemref",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from_mut_void","","",3,[[],["itemmutref",3]]],[11,"from_void","","",3,[[],["itemref",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","core_foundation::base","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from_mut_void","","",9,[[],["itemmutref",3]]],[11,"from_void","","",9,[[],["itemref",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from_mut_void","","",10,[[],["itemmutref",3]]],[11,"from_void","","",10,[[],["itemref",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from_mut_void","core_foundation::boolean","",15,[[],["itemmutref",3]]],[11,"from_void","","",15,[[],["itemref",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","core_foundation::characterset","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from_mut_void","","",49,[[],["itemmutref",3]]],[11,"from_void","","",49,[[],["itemref",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","core_foundation::data","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from_mut_void","","",16,[[],["itemmutref",3]]],[11,"from_void","","",16,[[],["itemref",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","core_foundation::date","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from_mut_void","","",17,[[],["itemmutref",3]]],[11,"from_void","","",17,[[],["itemref",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","core_foundation::dictionary","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from_mut_void","","",20,[[],["itemmutref",3]]],[11,"from_void","","",20,[[],["itemref",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from_mut_void","","",21,[[],["itemmutref",3]]],[11,"from_void","","",21,[[],["itemref",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","core_foundation::error","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from_mut_void","","",22,[[],["itemmutref",3]]],[11,"from_void","","",22,[[],["itemref",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","core_foundation::filedescriptor","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from_mut_void","","",24,[[],["itemmutref",3]]],[11,"from_void","","",24,[[],["itemref",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","core_foundation::number","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from_mut_void","","",25,[[],["itemmutref",3]]],[11,"from_void","","",25,[[],["itemref",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","core_foundation::set","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from_mut_void","","",27,[[],["itemmutref",3]]],[11,"from_void","","",27,[[],["itemref",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","core_foundation::string","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from_mut_void","","",28,[[],["itemmutref",3]]],[11,"from_void","","",28,[[],["itemref",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","core_foundation::url","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from_mut_void","","",29,[[],["itemmutref",3]]],[11,"from_void","","",29,[[],["itemref",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","core_foundation::bundle","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from_mut_void","","",30,[[],["itemmutref",3]]],[11,"from_void","","",30,[[],["itemref",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","core_foundation::propertylist","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","core_foundation::runloop","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from_mut_void","","",37,[[],["itemmutref",3]]],[11,"from_void","","",37,[[],["itemref",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from_mut_void","","",38,[[],["itemmutref",3]]],[11,"from_void","","",38,[[],["itemref",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from_mut_void","","",39,[[],["itemmutref",3]]],[11,"from_void","","",39,[[],["itemref",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from_mut_void","","",65,[[],["itemmutref",3]]],[11,"from_void","","",65,[[],["itemref",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","core_foundation::timezone","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from_mut_void","","",40,[[],["itemmutref",3]]],[11,"from_void","","",40,[[],["itemref",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","core_foundation::uuid","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from_mut_void","","",42,[[],["itemmutref",3]]],[11,"from_void","","",42,[[],["itemref",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"fmt","core_foundation::base","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","core_foundation::uuid","",41,[[],["cfuuidbytes",3]]],[11,"clone","","",41,[[],["cfuuidbytes",3]]],[11,"clone","core_foundation::dictionary","",18,[[],["cfdictionarykeycallbacks",3]]],[11,"clone","core_foundation::array","",0,[[],["cfarraycallbacks",3]]],[11,"clone","core_foundation::base","",5,[[],["cfrange",3]]],[11,"clone","core_foundation::filedescriptor","",23,[[],["cffiledescriptorcontext",3]]],[11,"clone","core_foundation::dictionary","",19,[[],["cfdictionaryvaluecallbacks",3]]],[11,"clone","core_foundation::base","",6,[[],["cfallocatorcontext",3]]],[11,"clone","","",4,[[],["cfcomparisonresult",4]]],[11,"clone","core_foundation::set","",26,[[],["cfsetcallbacks",3]]],[11,"into","core_foundation::base","",4,[[],["ordering",4]]],[11,"eq","","",4,[[["cfcomparisonresult",4]],["bool",15]]],[11,"as_concrete_TypeRef","core_foundation::array","",1,[[],["cfarrayref",6]]],[11,"wrap_under_get_rule","","",1,[[["cfarrayref",6]]]],[11,"as_CFTypeRef","","",1,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",1,[[["cfarrayref",6]]]],[11,"type_id","","",1,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::attributed_string","",2,[[],["cfattributedstringref",6]]],[11,"wrap_under_get_rule","","",2,[[["cfattributedstringref",6]]]],[11,"as_CFTypeRef","","",2,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",2,[[["cfattributedstringref",6]]]],[11,"type_id","","",2,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","","",3,[[],["cfmutableattributedstringref",6]]],[11,"wrap_under_get_rule","","",3,[[["cfmutableattributedstringref",6]]]],[11,"as_CFTypeRef","","",3,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",3,[[["cfmutableattributedstringref",6]]]],[11,"type_id","","",3,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::base","",10,[[],["cfallocatorref",6]]],[11,"wrap_under_get_rule","","",10,[[["cfallocatorref",6]]]],[11,"as_CFTypeRef","","",10,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",10,[[["cfallocatorref",6]]]],[11,"type_id","","",10,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","","",9,[[],["cftyperef",6]]],[11,"wrap_under_get_rule","","",9,[[["cftyperef",6]],["cftype",3]]],[11,"as_CFTypeRef","","",9,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",9,[[["cftyperef",6]],["cftype",3]]],[11,"type_id","","",9,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::boolean","",15,[[],["cfbooleanref",6]]],[11,"wrap_under_get_rule","","",15,[[["cfbooleanref",6]]]],[11,"as_CFTypeRef","","",15,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",15,[[["cfbooleanref",6]]]],[11,"type_id","","",15,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::characterset","",49,[[],["cfcharactersetref",6]]],[11,"wrap_under_get_rule","","",49,[[["cfcharactersetref",6]]]],[11,"as_CFTypeRef","","",49,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",49,[[["cfcharactersetref",6]]]],[11,"type_id","","",49,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::data","",16,[[],["cfdataref",6]]],[11,"wrap_under_get_rule","","",16,[[["cfdataref",6]]]],[11,"as_CFTypeRef","","",16,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",16,[[["cfdataref",6]]]],[11,"type_id","","",16,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::date","",17,[[],["cfdateref",6]]],[11,"wrap_under_get_rule","","",17,[[["cfdateref",6]]]],[11,"as_CFTypeRef","","",17,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",17,[[["cfdateref",6]]]],[11,"type_id","","",17,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::dictionary","",20,[[],["cfdictionaryref",6]]],[11,"wrap_under_get_rule","","",20,[[["cfdictionaryref",6]]]],[11,"as_CFTypeRef","","",20,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",20,[[["cfdictionaryref",6]]]],[11,"type_id","","",20,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","","",21,[[],["cfmutabledictionaryref",6]]],[11,"wrap_under_get_rule","","",21,[[["cfmutabledictionaryref",6]]]],[11,"as_CFTypeRef","","",21,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",21,[[["cfmutabledictionaryref",6]]]],[11,"type_id","","",21,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::error","",22,[[],["cferrorref",6]]],[11,"wrap_under_get_rule","","",22,[[["cferrorref",6]]]],[11,"as_CFTypeRef","","",22,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",22,[[["cferrorref",6]]]],[11,"type_id","","",22,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::filedescriptor","",24,[[],["cffiledescriptorref",6]]],[11,"wrap_under_get_rule","","",24,[[["cffiledescriptorref",6]]]],[11,"as_CFTypeRef","","",24,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",24,[[["cffiledescriptorref",6]]]],[11,"type_id","","",24,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::number","",25,[[],["cfnumberref",6]]],[11,"wrap_under_get_rule","","",25,[[["cfnumberref",6]]]],[11,"as_CFTypeRef","","",25,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",25,[[["cfnumberref",6]]]],[11,"type_id","","",25,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::set","",27,[[],["cfsetref",6]]],[11,"wrap_under_get_rule","","",27,[[["cfsetref",6]]]],[11,"as_CFTypeRef","","",27,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",27,[[["cfsetref",6]]]],[11,"type_id","","",27,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::string","",28,[[],["cfstringref",6]]],[11,"wrap_under_get_rule","","",28,[[["cfstringref",6]]]],[11,"as_CFTypeRef","","",28,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",28,[[["cfstringref",6]]]],[11,"type_id","","",28,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::url","",29,[[],["cfurlref",6]]],[11,"wrap_under_get_rule","","",29,[[["cfurlref",6]]]],[11,"as_CFTypeRef","","",29,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",29,[[["cfurlref",6]]]],[11,"type_id","","",29,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::bundle","",30,[[],["cfbundleref",6]]],[11,"wrap_under_get_rule","","",30,[[["cfbundleref",6]]]],[11,"as_CFTypeRef","","",30,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",30,[[["cfbundleref",6]]]],[11,"type_id","","",30,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::runloop","",37,[[],["cfrunloopref",6]]],[11,"wrap_under_get_rule","","",37,[[["cfrunloopref",6]]]],[11,"as_CFTypeRef","","",37,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",37,[[["cfrunloopref",6]]]],[11,"type_id","","",37,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","","",38,[[],["cfrunlooptimerref",6]]],[11,"wrap_under_get_rule","","",38,[[["cfrunlooptimerref",6]]]],[11,"as_CFTypeRef","","",38,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",38,[[["cfrunlooptimerref",6]]]],[11,"type_id","","",38,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","","",39,[[],["cfrunloopsourceref",6]]],[11,"wrap_under_get_rule","","",39,[[["cfrunloopsourceref",6]]]],[11,"as_CFTypeRef","","",39,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",39,[[["cfrunloopsourceref",6]]]],[11,"type_id","","",39,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","","",65,[[],["cfrunloopobserverref",6]]],[11,"wrap_under_get_rule","","",65,[[["cfrunloopobserverref",6]]]],[11,"as_CFTypeRef","","",65,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",65,[[["cfrunloopobserverref",6]]]],[11,"type_id","","",65,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::timezone","",40,[[],["cftimezoneref",6]]],[11,"wrap_under_get_rule","","",40,[[["cftimezoneref",6]]]],[11,"as_CFTypeRef","","",40,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",40,[[["cftimezoneref",6]]]],[11,"type_id","","",40,[[],["cftypeid",6]]],[11,"as_concrete_TypeRef","core_foundation::uuid","",42,[[],["cfuuidref",6]]],[11,"wrap_under_get_rule","","",42,[[["cfuuidref",6]]]],[11,"as_CFTypeRef","","",42,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",42,[[["cfuuidref",6]]]],[11,"type_id","","",42,[[],["cftypeid",6]]],[11,"to_void","core_foundation::array","",1,[[]]],[11,"to_void","core_foundation","",68,[[]]],[11,"to_void","core_foundation::attributed_string","",2,[[]]],[11,"to_void","core_foundation","",69,[[]]],[11,"to_void","core_foundation::attributed_string","",3,[[]]],[11,"to_void","core_foundation","",70,[[]]],[11,"to_void","core_foundation::base","",10,[[]]],[11,"to_void","core_foundation","",71,[[]]],[11,"to_void","core_foundation::base","",9,[[]]],[11,"to_void","core_foundation","",72,[[]]],[11,"to_void","core_foundation::boolean","",15,[[]]],[11,"to_void","core_foundation","",73,[[]]],[11,"to_void","core_foundation::characterset","",49,[[]]],[11,"to_void","core_foundation","",74,[[]]],[11,"to_void","core_foundation::data","",16,[[]]],[11,"to_void","core_foundation","",75,[[]]],[11,"to_void","core_foundation::date","",17,[[]]],[11,"to_void","core_foundation","",76,[[]]],[11,"to_void","core_foundation::dictionary","",20,[[]]],[11,"to_void","core_foundation","",77,[[]]],[11,"to_void","core_foundation::dictionary","",21,[[]]],[11,"to_void","core_foundation","",78,[[]]],[11,"to_void","core_foundation::error","",22,[[]]],[11,"to_void","core_foundation","",79,[[]]],[11,"to_void","core_foundation::filedescriptor","",24,[[]]],[11,"to_void","core_foundation","",80,[[]]],[11,"to_void","core_foundation::number","",25,[[]]],[11,"to_void","core_foundation","",81,[[]]],[11,"to_void","core_foundation::set","",27,[[]]],[11,"to_void","core_foundation","",82,[[]]],[11,"to_void","core_foundation::string","",28,[[]]],[11,"to_void","core_foundation","",83,[[]]],[11,"to_void","core_foundation::url","",29,[[]]],[11,"to_void","core_foundation","",84,[[]]],[11,"to_void","core_foundation::bundle","",30,[[]]],[11,"to_void","core_foundation","",85,[[]]],[11,"to_void","core_foundation::runloop","",37,[[]]],[11,"to_void","core_foundation","",86,[[]]],[11,"to_void","core_foundation::runloop","",38,[[]]],[11,"to_void","core_foundation","",87,[[]]],[11,"to_void","core_foundation::runloop","",39,[[]]],[11,"to_void","core_foundation","",88,[[]]],[11,"to_void","core_foundation::runloop","",65,[[]]],[11,"to_void","core_foundation","",89,[[]]],[11,"to_void","core_foundation::timezone","",40,[[]]],[11,"to_void","core_foundation","",90,[[]]],[11,"to_void","core_foundation::uuid","",42,[[]]],[11,"to_void","core_foundation","",91,[[]]],[11,"drop","core_foundation::array","",1,[[]]],[11,"drop","core_foundation::attributed_string","",2,[[]]],[11,"drop","","",3,[[]]],[11,"drop","core_foundation::base","",9,[[]]],[11,"drop","","",10,[[]]],[11,"drop","core_foundation::boolean","",15,[[]]],[11,"drop","core_foundation::characterset","",49,[[]]],[11,"drop","core_foundation::data","",16,[[]]],[11,"drop","core_foundation::date","",17,[[]]],[11,"drop","core_foundation::dictionary","",20,[[]]],[11,"drop","","",21,[[]]],[11,"drop","core_foundation::error","",22,[[]]],[11,"drop","core_foundation::filedescriptor","",24,[[]]],[11,"drop","core_foundation::number","",25,[[]]],[11,"drop","core_foundation::set","",27,[[]]],[11,"drop","core_foundation::string","",28,[[]]],[11,"drop","core_foundation::url","",29,[[]]],[11,"drop","core_foundation::bundle","",30,[[]]],[11,"drop","core_foundation::propertylist","",32,[[]]],[11,"drop","core_foundation::runloop","",37,[[]]],[11,"drop","","",38,[[]]],[11,"drop","","",39,[[]]],[11,"drop","","",65,[[]]],[11,"drop","core_foundation::timezone","",40,[[]]],[11,"drop","core_foundation::uuid","",42,[[]]],[11,"from","core_foundation::boolean","",15,[[["bool",15]],["cfboolean",3]]],[11,"from","core_foundation::dictionary","Creates a new mutable dictionary with the key-value pairs …",21,[[["cfdictionary",3]]]],[11,"from","core_foundation::number","",25,[[["i32",15]]]],[11,"from","","",25,[[["i64",15]]]],[11,"from","","",25,[[["f32",15]]]],[11,"from","","",25,[[["f64",15]]]],[11,"from","core_foundation::string","",28,[[["str",15]],["cfstring",3]]],[11,"len","core_foundation::array","",44,[[],["usize",15]]],[11,"next","","",44,[[],[["option",4],["itemref",3]]]],[11,"clone","","",1,[[],["cfarray",3]]],[11,"clone","core_foundation::attributed_string","",2,[[],["cfattributedstring",3]]],[11,"clone","","",3,[[],["cfmutableattributedstring",3]]],[11,"clone","core_foundation::base","",9,[[],["cftype",3]]],[11,"clone","","",10,[[],["cfallocator",3]]],[11,"clone","core_foundation::boolean","",15,[[],["cfboolean",3]]],[11,"clone","core_foundation::characterset","",49,[[],["cfcharacterset",3]]],[11,"clone","core_foundation::data","",16,[[],["cfdata",3]]],[11,"clone","core_foundation::date","",17,[[],["cfdate",3]]],[11,"clone","core_foundation::dictionary","",20,[[],["cfdictionary",3]]],[11,"clone","","",21,[[],["cfmutabledictionary",3]]],[11,"clone","core_foundation::error","",22,[[],["cferror",3]]],[11,"clone","core_foundation::filedescriptor","",24,[[],["cffiledescriptor",3]]],[11,"clone","core_foundation::number","",25,[[],["cfnumber",3]]],[11,"clone","core_foundation::set","",27,[[],["cfset",3]]],[11,"clone","core_foundation::string","",28,[[],["cfstring",3]]],[11,"clone","core_foundation::url","",29,[[],["cfurl",3]]],[11,"clone","core_foundation::bundle","",30,[[],["cfbundle",3]]],[11,"clone","core_foundation::propertylist","",32,[[],["cfpropertylist",3]]],[11,"clone","core_foundation::runloop","",37,[[],["cfrunloop",3]]],[11,"clone","","",38,[[],["cfrunlooptimer",3]]],[11,"clone","","",39,[[],["cfrunloopsource",3]]],[11,"clone","","",65,[[],["cfrunloopobserver",3]]],[11,"clone","core_foundation::timezone","",40,[[],["cftimezone",3]]],[11,"clone","core_foundation::uuid","",42,[[],["cfuuid",3]]],[11,"default","core_foundation::attributed_string","",3,[[]]],[11,"default","core_foundation::dictionary","",21,[[]]],[11,"default","core_foundation::timezone","",40,[[],["cftimezone",3]]],[11,"default","core_foundation::uuid","",42,[[]]],[11,"cmp","core_foundation::date","",17,[[["cfdate",3]],["ordering",4]]],[11,"cmp","core_foundation::number","",25,[[["cfnumber",3]],["ordering",4]]],[11,"eq","core_foundation::array","",1,[[["cfarray",3]],["bool",15]]],[11,"eq","core_foundation::attributed_string","",2,[[["cfattributedstring",3]],["bool",15]]],[11,"eq","","",3,[[["cfmutableattributedstring",3]],["bool",15]]],[11,"eq","core_foundation::base","",9,[[["cftype",3]],["bool",15]]],[11,"eq","","",10,[[["cfallocator",3]],["bool",15]]],[11,"eq","","",46,[[],["bool",15]]],[11,"eq","","",47,[[],["bool",15]]],[11,"eq","core_foundation::boolean","",15,[[["cfboolean",3]],["bool",15]]],[11,"eq","core_foundation::characterset","",49,[[["cfcharacterset",3]],["bool",15]]],[11,"eq","core_foundation::data","",16,[[["cfdata",3]],["bool",15]]],[11,"eq","core_foundation::date","",17,[[["cfdate",3]],["bool",15]]],[11,"eq","core_foundation::dictionary","",20,[[["cfdictionary",3]],["bool",15]]],[11,"eq","","",21,[[["cfmutabledictionary",3]],["bool",15]]],[11,"eq","core_foundation::error","",22,[[["cferror",3]],["bool",15]]],[11,"eq","core_foundation::filedescriptor","",24,[[["cffiledescriptor",3]],["bool",15]]],[11,"eq","core_foundation::number","",25,[[["cfnumber",3]],["bool",15]]],[11,"eq","core_foundation::set","",27,[[["cfset",3]],["bool",15]]],[11,"eq","core_foundation::string","",28,[[["cfstring",3]],["bool",15]]],[11,"eq","","",28,[[["str",15]],["bool",15]]],[11,"eq","","",28,[[["string",3]],["bool",15]]],[11,"eq","core_foundation::url","",29,[[["cfurl",3]],["bool",15]]],[11,"eq","core_foundation::bundle","",30,[[["cfbundle",3]],["bool",15]]],[11,"eq","core_foundation::propertylist","",32,[[["cfpropertylist",3]],["bool",15]]],[11,"eq","core_foundation::runloop","",37,[[["cfrunloop",3]],["bool",15]]],[11,"eq","","",38,[[["cfrunlooptimer",3]],["bool",15]]],[11,"eq","","",39,[[["cfrunloopsource",3]],["bool",15]]],[11,"eq","","",65,[[["cfrunloopobserver",3]],["bool",15]]],[11,"eq","core_foundation::timezone","",40,[[["cftimezone",3]],["bool",15]]],[11,"eq","core_foundation::uuid","",42,[[["cfuuid",3]],["bool",15]]],[11,"partial_cmp","core_foundation::date","",17,[[["cfdate",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","core_foundation::number","",25,[[["cfnumber",3]],[["ordering",4],["option",4]]]],[11,"deref","core_foundation::base","",46,[[]]],[11,"deref","","",47,[[]]],[11,"deref","core_foundation::data","",16,[[]]],[11,"deref_mut","core_foundation::base","",47,[[]]],[11,"fmt","core_foundation::array","",1,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::base","Formats the value using <code>CFCopyDescription</code>.",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","core_foundation::boolean","",15,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::characterset","",49,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::data","",16,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::date","",17,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::dictionary","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::error","",22,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::number","",25,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::set","",27,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::string","",28,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::url","",29,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::runloop","",37,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::timezone","",40,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::uuid","",42,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::error","",22,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation::string","",28,[[["formatter",3]],["result",6]]],[11,"from_str","","See also CFString::new for a variant of this which does …",28,[[["str",15]],[["result",4],["cfstring",3]]]],[11,"description","core_foundation::error","",22,[[],["str",15]]],[11,"as_raw_fd","core_foundation::filedescriptor","",24,[[],["rawfd",6]]],[11,"init","core_foundation::base","",5,[[["isize",15]],["cfrange",3]]]],"p":[[3,"CFArrayCallBacks"],[3,"CFArray"],[3,"CFAttributedString"],[3,"CFMutableAttributedString"],[4,"CFComparisonResult"],[3,"CFRange"],[3,"CFAllocatorContext"],[8,"TCFTypeRef"],[8,"CFIndexConvertible"],[3,"CFType"],[3,"CFAllocator"],[8,"TCFType"],[8,"FromMutVoid"],[8,"FromVoid"],[8,"ToVoid"],[3,"CFBoolean"],[3,"CFData"],[3,"CFDate"],[3,"CFDictionaryKeyCallBacks"],[3,"CFDictionaryValueCallBacks"],[3,"CFDictionary"],[3,"CFMutableDictionary"],[3,"CFError"],[3,"CFFileDescriptorContext"],[3,"CFFileDescriptor"],[3,"CFNumber"],[3,"CFSetCallBacks"],[3,"CFSet"],[3,"CFString"],[3,"CFURL"],[3,"CFBundle"],[8,"CFPropertyListSubClass"],[3,"CFPropertyList"],[3,"CFRunLoopSourceContext"],[3,"CFRunLoopSourceContext1"],[3,"CFRunLoopObserverContext"],[3,"CFRunLoopTimerContext"],[3,"CFRunLoop"],[3,"CFRunLoopTimer"],[3,"CFRunLoopSource"],[3,"CFTimeZone"],[3,"CFUUIDBytes"],[3,"CFUUID"],[3,"__CFArray"],[3,"CFArrayIterator"],[3,"__CFAttributedString"],[3,"ItemRef"],[3,"ItemMutRef"],[3,"__CFCharacterSet"],[3,"CFCharacterSet"],[3,"__CFData"],[3,"__CFDate"],[3,"__CFDictionary"],[3,"__CFError"],[3,"__CFFileDescriptor"],[3,"__CFBoolean"],[4,"__CFNumber"],[3,"__CFSet"],[3,"__CFString"],[3,"__CFURL"],[3,"__CFBundle"],[3,"__CFRunLoop"],[3,"__CFRunLoopSource"],[3,"__CFRunLoopObserver"],[3,"__CFRunLoopTimer"],[3,"CFRunLoopObserver"],[3,"__CFTimeZone"],[3,"__CFUUID"],[6,"CFArrayRef"],[6,"CFAttributedStringRef"],[6,"CFMutableAttributedStringRef"],[6,"CFAllocatorRef"],[6,"CFTypeRef"],[6,"CFBooleanRef"],[6,"CFCharacterSetRef"],[6,"CFDataRef"],[6,"CFDateRef"],[6,"CFDictionaryRef"],[6,"CFMutableDictionaryRef"],[6,"CFErrorRef"],[6,"CFFileDescriptorRef"],[6,"CFNumberRef"],[6,"CFSetRef"],[6,"CFStringRef"],[6,"CFURLRef"],[6,"CFBundleRef"],[6,"CFRunLoopRef"],[6,"CFRunLoopTimerRef"],[6,"CFRunLoopSourceRef"],[6,"CFRunLoopObserverRef"],[6,"CFTimeZoneRef"],[6,"CFUUIDRef"]]},\
"core_foundation_sys":{"doc":"","i":[[0,"array","core_foundation_sys","",null,null],[7,"kCFTypeArrayCallBacks","core_foundation_sys::array","",null,null],[5,"CFArrayCreate","","",null,null],[5,"CFArrayCreateCopy","","",null,null],[5,"CFArrayGetCount","","",null,null],[5,"CFArrayGetValues","","",null,null],[5,"CFArrayGetValueAtIndex","","",null,null],[5,"CFArrayGetTypeID","","",null,null],[6,"CFArrayRetainCallBack","","",null,null],[6,"CFArrayReleaseCallBack","","",null,null],[6,"CFArrayCopyDescriptionCallBack","","",null,null],[6,"CFArrayEqualCallBack","","",null,null],[3,"CFArrayCallBacks","","",null,null],[12,"version","","",0,null],[12,"retain","","",0,null],[12,"release","","",0,null],[12,"copyDescription","","",0,null],[12,"equal","","",0,null],[3,"__CFArray","","",null,null],[6,"CFArrayRef","","",null,null],[0,"attributed_string","core_foundation_sys","",null,null],[5,"CFAttributedStringCreate","core_foundation_sys::attributed_string","",null,null],[5,"CFAttributedStringGetLength","","",null,null],[5,"CFAttributedStringGetTypeID","","",null,null],[5,"CFAttributedStringCreateMutableCopy","","",null,null],[5,"CFAttributedStringCreateMutable","","",null,null],[5,"CFAttributedStringReplaceString","","",null,null],[5,"CFAttributedStringSetAttribute","","",null,null],[3,"__CFAttributedString","","",null,null],[6,"CFAttributedStringRef","","",null,null],[6,"CFMutableAttributedStringRef","","",null,null],[0,"base","core_foundation_sys","",null,null],[7,"kCFAllocatorDefault","core_foundation_sys::base","",null,null],[7,"kCFAllocatorSystemDefault","","",null,null],[7,"kCFAllocatorMalloc","","",null,null],[7,"kCFAllocatorMallocZone","","",null,null],[7,"kCFAllocatorNull","","",null,null],[7,"kCFAllocatorUseContext","","",null,null],[5,"CFAllocatorCreate","","",null,null],[5,"CFAllocatorAllocate","","",null,null],[5,"CFAllocatorDeallocate","","",null,null],[5,"CFAllocatorGetPreferredSizeForSize","","",null,null],[5,"CFAllocatorReallocate","","",null,null],[5,"CFAllocatorGetDefault","","",null,null],[5,"CFAllocatorSetDefault","","",null,null],[5,"CFAllocatorGetContext","","",null,null],[5,"CFAllocatorGetTypeID","","",null,null],[7,"kCFNull","","",null,null],[5,"CFCopyDescription","","",null,null],[5,"CFEqual","","",null,null],[5,"CFGetRetainCount","","",null,null],[5,"CFGetTypeID","","",null,null],[5,"CFHash","","",null,null],[5,"CFRelease","","",null,null],[5,"CFRetain","","",null,null],[5,"CFShow","","",null,null],[6,"Boolean","","",null,null],[6,"mach_port_t","","",null,null],[6,"CFAllocatorRef","","",null,null],[6,"CFNullRef","","",null,null],[6,"CFTypeRef","","",null,null],[6,"OSStatus","","",null,null],[6,"SInt32","","",null,null],[6,"CFTypeID","","",null,null],[6,"CFOptionFlags","","",null,null],[6,"CFHashCode","","",null,null],[6,"CFIndex","","",null,null],[4,"CFComparisonResult","","",null,null],[13,"LessThan","","",1,null],[13,"EqualTo","","",1,null],[13,"GreaterThan","","",1,null],[3,"CFRange","","",null,null],[12,"location","","",2,null],[12,"length","","",2,null],[11,"init","","",2,[[["cfindex",6]],["cfrange",3]]],[6,"CFAllocatorRetainCallBack","","",null,null],[6,"CFAllocatorReleaseCallBack","","",null,null],[6,"CFAllocatorCopyDescriptionCallBack","","",null,null],[6,"CFAllocatorAllocateCallBack","","",null,null],[6,"CFAllocatorReallocateCallBack","","",null,null],[6,"CFAllocatorDeallocateCallBack","","",null,null],[6,"CFAllocatorPreferredSizeCallBack","","",null,null],[3,"CFAllocatorContext","","",null,null],[12,"version","","",3,null],[12,"info","","",3,null],[12,"retain","","",3,null],[12,"release","","",3,null],[12,"copyDescription","","",3,null],[12,"allocate","","",3,null],[12,"reallocate","","",3,null],[12,"deallocate","","",3,null],[12,"preferredSize","","",3,null],[8,"TCFTypeRef","","Trait for all types which are Core Foundation reference …",null,null],[10,"as_void_ptr","","",4,[[]]],[10,"from_void_ptr","","",4,[[]]],[7,"kCFNotFound","","Constant used by some functions to indicate failed …",null,null],[0,"bundle","core_foundation_sys","",null,null],[5,"CFBundleCreate","core_foundation_sys::bundle","",null,null],[5,"CFBundleGetBundleWithIdentifier","","",null,null],[5,"CFBundleGetFunctionPointerForName","","",null,null],[5,"CFBundleGetMainBundle","","",null,null],[5,"CFBundleGetInfoDictionary","","",null,null],[5,"CFBundleGetTypeID","","",null,null],[5,"CFBundleCopyExecutableURL","","",null,null],[5,"CFBundleCopyPrivateFrameworksURL","","",null,null],[5,"CFBundleCopySharedSupportURL","","",null,null],[5,"CFBundleCopyBundleURL","","",null,null],[3,"__CFBundle","","",null,null],[6,"CFBundleRef","","",null,null],[0,"characterset","core_foundation_sys","",null,null],[5,"CFCharacterSetGetTypeID","core_foundation_sys::characterset","",null,null],[5,"CFCharacterSetGetPredefined","","",null,null],[5,"CFCharacterSetCreateWithCharactersInRange","","",null,null],[5,"CFCharacterSetCreateWithCharactersInString","","",null,null],[5,"CFCharacterSetCreateWithBitmapRepresentation","","",null,null],[5,"CFCharacterSetCreateMutable","","",null,null],[5,"CFCharacterSetCreateCopy","","",null,null],[5,"CFCharacterSetCreateMutableCopy","","",null,null],[5,"CFCharacterSetIsCharacterMember","","",null,null],[5,"CFCharacterSetCreateBitmapRepresentation","","",null,null],[5,"CFCharacterSetAddCharactersInRange","","",null,null],[5,"CFCharacterSetRemoveCharactersInRange","","",null,null],[5,"CFCharacterSetAddCharactersInString","","",null,null],[5,"CFCharacterSetRemoveCharactersInString","","",null,null],[5,"CFCharacterSetUnion","","",null,null],[5,"CFCharacterSetIntersect","","",null,null],[5,"CFCharacterSetInvert","","",null,null],[6,"CFCharacterSetPredefinedSet","","",null,null],[7,"kCFCharacterSetControl","","",null,null],[7,"kCFCharacterSetWhitespace","","",null,null],[7,"kCFCharacterSetWhitespaceAndNewline","","",null,null],[7,"kCFCharacterSetDecimalDigit","","",null,null],[7,"kCFCharacterSetLetter","","",null,null],[7,"kCFCharacterSetLowercaseLetter","","",null,null],[7,"kCFCharacterSetUppercaseLetter","","",null,null],[7,"kCFCharacterSetNonBase","","",null,null],[7,"kCFCharacterSetDecomposable","","",null,null],[7,"kCFCharacterSetAlphaNumeric","","",null,null],[7,"kCFCharacterSetPunctuation","","",null,null],[7,"kCFCharacterSetIllegal","","",null,null],[7,"kCFCharacterSetCapitalizedLetter","","",null,null],[7,"kCFCharacterSetSymbol","","",null,null],[7,"kCFCharacterSetNewline","","",null,null],[3,"__CFCharacterSet","","",null,null],[6,"CFCharacterSetRef","","",null,null],[6,"CFMutableCharacterSetRef","","",null,null],[0,"data","core_foundation_sys","",null,null],[5,"CFDataCreate","core_foundation_sys::data","",null,null],[5,"CFDataGetBytePtr","","",null,null],[5,"CFDataGetBytes","","",null,null],[5,"CFDataGetLength","","",null,null],[5,"CFDataGetTypeID","","",null,null],[3,"__CFData","","",null,null],[6,"CFDataRef","","",null,null],[0,"date","core_foundation_sys","",null,null],[7,"kCFAbsoluteTimeIntervalSince1904","core_foundation_sys::date","",null,null],[7,"kCFAbsoluteTimeIntervalSince1970","","",null,null],[5,"CFAbsoluteTimeGetCurrent","","",null,null],[5,"CFDateCreate","","",null,null],[5,"CFDateGetAbsoluteTime","","",null,null],[5,"CFDateGetTimeIntervalSinceDate","","",null,null],[5,"CFDateCompare","","",null,null],[5,"CFDateGetTypeID","","",null,null],[3,"__CFDate","","",null,null],[6,"CFDateRef","","",null,null],[6,"CFTimeInterval","","",null,null],[6,"CFAbsoluteTime","","",null,null],[0,"dictionary","core_foundation_sys","",null,null],[7,"kCFTypeDictionaryKeyCallBacks","core_foundation_sys::dictionary","",null,null],[7,"kCFTypeDictionaryValueCallBacks","","",null,null],[5,"CFDictionaryContainsKey","","",null,null],[5,"CFDictionaryCreate","","",null,null],[5,"CFDictionaryGetCount","","",null,null],[5,"CFDictionaryGetTypeID","","",null,null],[5,"CFDictionaryGetValueIfPresent","","",null,null],[5,"CFDictionaryApplyFunction","","",null,null],[5,"CFDictionaryGetKeysAndValues","","",null,null],[5,"CFDictionaryCreateMutable","","",null,null],[5,"CFDictionaryCreateMutableCopy","","",null,null],[5,"CFDictionaryAddValue","","",null,null],[5,"CFDictionarySetValue","","",null,null],[5,"CFDictionaryReplaceValue","","",null,null],[5,"CFDictionaryRemoveValue","","",null,null],[5,"CFDictionaryRemoveAllValues","","",null,null],[6,"CFDictionaryApplierFunction","","",null,null],[6,"CFDictionaryRetainCallBack","","",null,null],[6,"CFDictionaryReleaseCallBack","","",null,null],[6,"CFDictionaryCopyDescriptionCallBack","","",null,null],[6,"CFDictionaryEqualCallBack","","",null,null],[6,"CFDictionaryHashCallBack","","",null,null],[3,"CFDictionaryKeyCallBacks","","",null,null],[12,"version","","",5,null],[12,"retain","","",5,null],[12,"release","","",5,null],[12,"copyDescription","","",5,null],[12,"equal","","",5,null],[12,"hash","","",5,null],[3,"CFDictionaryValueCallBacks","","",null,null],[12,"version","","",6,null],[12,"retain","","",6,null],[12,"release","","",6,null],[12,"copyDescription","","",6,null],[12,"equal","","",6,null],[3,"__CFDictionary","","",null,null],[6,"CFDictionaryRef","","",null,null],[6,"CFMutableDictionaryRef","","",null,null],[0,"error","core_foundation_sys","",null,null],[5,"CFErrorGetTypeID","core_foundation_sys::error","",null,null],[7,"kCFErrorDomainPOSIX","","",null,null],[7,"kCFErrorDomainOSStatus","","",null,null],[7,"kCFErrorDomainMach","","",null,null],[7,"kCFErrorDomainCocoa","","",null,null],[5,"CFErrorGetDomain","","",null,null],[5,"CFErrorGetCode","","",null,null],[5,"CFErrorCopyDescription","","",null,null],[3,"__CFError","","",null,null],[6,"CFErrorRef","","",null,null],[0,"filedescriptor","core_foundation_sys","",null,null],[5,"CFFileDescriptorGetTypeID","core_foundation_sys::filedescriptor","",null,null],[5,"CFFileDescriptorCreate","","",null,null],[5,"CFFileDescriptorGetNativeDescriptor","","",null,null],[5,"CFFileDescriptorGetContext","","",null,null],[5,"CFFileDescriptorEnableCallBacks","","",null,null],[5,"CFFileDescriptorDisableCallBacks","","",null,null],[5,"CFFileDescriptorInvalidate","","",null,null],[5,"CFFileDescriptorIsValid","","",null,null],[5,"CFFileDescriptorCreateRunLoopSource","","",null,null],[6,"CFFileDescriptorNativeDescriptor","","",null,null],[3,"__CFFileDescriptor","","",null,null],[6,"CFFileDescriptorRef","","",null,null],[17,"kCFFileDescriptorReadCallBack","","",null,null],[17,"kCFFileDescriptorWriteCallBack","","",null,null],[6,"CFFileDescriptorCallBack","","",null,null],[3,"CFFileDescriptorContext","","",null,null],[12,"version","","",7,null],[12,"info","","",7,null],[12,"retain","","",7,null],[12,"release","","",7,null],[12,"copyDescription","","",7,null],[0,"messageport","core_foundation_sys","",null,null],[5,"CFMessagePortGetTypeID","core_foundation_sys::messageport","",null,null],[5,"CFMessagePortCreateLocal","","",null,null],[5,"CFMessagePortCreateRemote","","",null,null],[5,"CFMessagePortIsRemote","","",null,null],[5,"CFMessagePortGetName","","",null,null],[5,"CFMessagePortSetName","","",null,null],[5,"CFMessagePortGetContext","","",null,null],[5,"CFMessagePortInvalidate","","",null,null],[5,"CFMessagePortIsValid","","",null,null],[5,"CFMessagePortGetInvalidationCallBack","","",null,null],[5,"CFMessagePortSetInvalidationCallBack","","",null,null],[5,"CFMessagePortSendRequest","","",null,null],[5,"CFMessagePortCreateRunLoopSource","","",null,null],[3,"CFMessagePortContext","","",null,null],[12,"version","","",8,null],[12,"info","","",8,null],[12,"retain","","",8,null],[12,"release","","",8,null],[12,"copyDescription","","",8,null],[6,"CFMessagePortCallBack","","",null,null],[6,"CFMessagePortInvalidationCallBack","","",null,null],[3,"__CFMessagePort","","",null,null],[6,"CFMessagePortRef","","",null,null],[0,"number","core_foundation_sys","",null,null],[7,"kCFBooleanTrue","core_foundation_sys::number","",null,null],[7,"kCFBooleanFalse","","",null,null],[5,"CFBooleanGetTypeID","","",null,null],[5,"CFBooleanGetValue","","",null,null],[5,"CFNumberCreate","","",null,null],[5,"CFNumberGetValue","","",null,null],[5,"CFNumberCompare","","",null,null],[5,"CFNumberGetTypeID","","",null,null],[5,"CFNumberGetType","","",null,null],[3,"__CFBoolean","","",null,null],[6,"CFBooleanRef","","",null,null],[6,"CFNumberType","","",null,null],[17,"kCFNumberSInt8Type","","",null,null],[17,"kCFNumberSInt16Type","","",null,null],[17,"kCFNumberSInt32Type","","",null,null],[17,"kCFNumberSInt64Type","","",null,null],[17,"kCFNumberFloat32Type","","",null,null],[17,"kCFNumberFloat64Type","","",null,null],[17,"kCFNumberCharType","","",null,null],[17,"kCFNumberShortType","","",null,null],[17,"kCFNumberIntType","","",null,null],[17,"kCFNumberLongType","","",null,null],[17,"kCFNumberLongLongType","","",null,null],[17,"kCFNumberFloatType","","",null,null],[17,"kCFNumberDoubleType","","",null,null],[17,"kCFNumberCFIndexType","","",null,null],[17,"kCFNumberNSIntegerType","","",null,null],[17,"kCFNumberCGFloatType","","",null,null],[17,"kCFNumberMaxType","","",null,null],[4,"__CFNumber","","",null,null],[6,"CFNumberRef","","",null,null],[0,"propertylist","core_foundation_sys","",null,null],[5,"CFPropertyListCreateWithData","core_foundation_sys::propertylist","",null,null],[5,"CFPropertyListCreateData","","",null,null],[6,"CFPropertyListRef","","",null,null],[6,"CFPropertyListFormat","","",null,null],[17,"kCFPropertyListOpenStepFormat","","",null,null],[17,"kCFPropertyListXMLFormat_v1_0","","",null,null],[17,"kCFPropertyListBinaryFormat_v1_0","","",null,null],[6,"CFPropertyListMutabilityOptions","","",null,null],[17,"kCFPropertyListImmutable","","",null,null],[17,"kCFPropertyListMutableContainers","","",null,null],[17,"kCFPropertyListMutableContainersAndLeaves","","",null,null],[0,"runloop","core_foundation_sys","",null,null],[7,"kCFRunLoopDefaultMode","core_foundation_sys::runloop","",null,null],[7,"kCFRunLoopCommonModes","","",null,null],[5,"CFRunLoopGetTypeID","","",null,null],[5,"CFRunLoopGetCurrent","","",null,null],[5,"CFRunLoopGetMain","","",null,null],[5,"CFRunLoopCopyCurrentMode","","",null,null],[5,"CFRunLoopCopyAllModes","","",null,null],[5,"CFRunLoopAddCommonMode","","",null,null],[5,"CFRunLoopGetNextTimerFireDate","","",null,null],[5,"CFRunLoopRun","","",null,null],[5,"CFRunLoopRunInMode","","",null,null],[5,"CFRunLoopIsWaiting","","",null,null],[5,"CFRunLoopWakeUp","","",null,null],[5,"CFRunLoopStop","","",null,null],[5,"CFRunLoopContainsSource","","",null,null],[5,"CFRunLoopAddSource","","",null,null],[5,"CFRunLoopRemoveSource","","",null,null],[5,"CFRunLoopContainsObserver","","",null,null],[5,"CFRunLoopAddObserver","","",null,null],[5,"CFRunLoopRemoveObserver","","",null,null],[5,"CFRunLoopContainsTimer","","",null,null],[5,"CFRunLoopAddTimer","","",null,null],[5,"CFRunLoopRemoveTimer","","",null,null],[5,"CFRunLoopSourceGetTypeID","","",null,null],[5,"CFRunLoopSourceCreate","","",null,null],[5,"CFRunLoopSourceGetOrder","","",null,null],[5,"CFRunLoopSourceInvalidate","","",null,null],[5,"CFRunLoopSourceIsValid","","",null,null],[5,"CFRunLoopSourceGetContext","","",null,null],[5,"CFRunLoopSourceSignal","","",null,null],[5,"CFRunLoopObserverGetTypeID","","",null,null],[5,"CFRunLoopObserverCreate","","",null,null],[5,"CFRunLoopObserverGetActivities","","",null,null],[5,"CFRunLoopObserverDoesRepeat","","",null,null],[5,"CFRunLoopObserverGetOrder","","",null,null],[5,"CFRunLoopObserverInvalidate","","",null,null],[5,"CFRunLoopObserverIsValid","","",null,null],[5,"CFRunLoopObserverGetContext","","",null,null],[5,"CFRunLoopTimerGetTypeID","","",null,null],[5,"CFRunLoopTimerCreate","","",null,null],[5,"CFRunLoopTimerGetNextFireDate","","",null,null],[5,"CFRunLoopTimerSetNextFireDate","","",null,null],[5,"CFRunLoopTimerGetInterval","","",null,null],[5,"CFRunLoopTimerDoesRepeat","","",null,null],[5,"CFRunLoopTimerGetOrder","","",null,null],[5,"CFRunLoopTimerInvalidate","","",null,null],[5,"CFRunLoopTimerIsValid","","",null,null],[5,"CFRunLoopTimerGetContext","","",null,null],[5,"CFRunLoopTimerGetTolerance","","",null,null],[5,"CFRunLoopTimerSetTolerance","","",null,null],[3,"__CFRunLoop","","",null,null],[6,"CFRunLoopRef","","",null,null],[3,"__CFRunLoopSource","","",null,null],[6,"CFRunLoopSourceRef","","",null,null],[3,"__CFRunLoopObserver","","",null,null],[6,"CFRunLoopObserverRef","","",null,null],[17,"kCFRunLoopRunFinished","","",null,null],[17,"kCFRunLoopRunStopped","","",null,null],[17,"kCFRunLoopRunTimedOut","","",null,null],[17,"kCFRunLoopRunHandledSource","","",null,null],[6,"CFRunLoopActivity","","",null,null],[17,"kCFRunLoopEntry","","",null,null],[17,"kCFRunLoopBeforeTimers","","",null,null],[17,"kCFRunLoopBeforeSources","","",null,null],[17,"kCFRunLoopBeforeWaiting","","",null,null],[17,"kCFRunLoopAfterWaiting","","",null,null],[17,"kCFRunLoopExit","","",null,null],[17,"kCFRunLoopAllActivities","","",null,null],[3,"CFRunLoopSourceContext","","",null,null],[12,"version","","",9,null],[12,"info","","",9,null],[12,"retain","","",9,null],[12,"release","","",9,null],[12,"copyDescription","","",9,null],[12,"equal","","",9,null],[12,"hash","","",9,null],[12,"schedule","","",9,null],[12,"cancel","","",9,null],[12,"perform","","",9,null],[3,"CFRunLoopSourceContext1","","",null,null],[12,"version","","",10,null],[12,"info","","",10,null],[12,"retain","","",10,null],[12,"release","","",10,null],[12,"copyDescription","","",10,null],[12,"equal","","",10,null],[12,"hash","","",10,null],[12,"getPort","","",10,null],[12,"perform","","",10,null],[3,"CFRunLoopObserverContext","","",null,null],[12,"version","","",11,null],[12,"info","","",11,null],[12,"retain","","",11,null],[12,"release","","",11,null],[12,"copyDescription","","",11,null],[6,"CFRunLoopObserverCallBack","","",null,null],[3,"CFRunLoopTimerContext","","",null,null],[12,"version","","",12,null],[12,"info","","",12,null],[12,"retain","","",12,null],[12,"release","","",12,null],[12,"copyDescription","","",12,null],[6,"CFRunLoopTimerCallBack","","",null,null],[3,"__CFRunLoopTimer","","",null,null],[6,"CFRunLoopTimerRef","","",null,null],[0,"set","core_foundation_sys","",null,null],[7,"kCFTypeSetCallBacks","core_foundation_sys::set","",null,null],[5,"CFSetCreate","","",null,null],[5,"CFSetCreateCopy","","",null,null],[5,"CFSetContainsValue","","",null,null],[5,"CFSetGetCount","","",null,null],[5,"CFSetGetCountOfValue","","",null,null],[5,"CFSetGetValue","","",null,null],[5,"CFSetGetValueIfPresent","","",null,null],[5,"CFSetGetValues","","",null,null],[5,"CFSetApplyFunction","","",null,null],[5,"CFSetGetTypeID","","",null,null],[6,"CFSetApplierFunction","","",null,null],[6,"CFSetRetainCallBack","","",null,null],[6,"CFSetReleaseCallBack","","",null,null],[6,"CFSetCopyDescriptionCallBack","","",null,null],[6,"CFSetEqualCallBack","","",null,null],[6,"CFSetHashCallBack","","",null,null],[3,"CFSetCallBacks","","",null,null],[12,"version","","",13,null],[12,"retain","","",13,null],[12,"release","","",13,null],[12,"copyDescription","","",13,null],[12,"equal","","",13,null],[12,"hash","","",13,null],[3,"__CFSet","","",null,null],[6,"CFSetRef","","",null,null],[0,"string","core_foundation_sys","",null,null],[5,"CFStringCreateWithBytes","core_foundation_sys::string","",null,null],[5,"CFStringCreateWithBytesNoCopy","","",null,null],[5,"CFStringCreateWithCString","","",null,null],[5,"CFStringGetBytes","","",null,null],[5,"CFStringGetCString","","",null,null],[5,"CFStringGetCStringPtr","","",null,null],[5,"CFStringGetLength","","",null,null],[5,"CFStringGetTypeID","","",null,null],[6,"UniChar","","",null,null],[6,"CFStringCompareFlags","","",null,null],[6,"CFStringEncoding","","",null,null],[7,"kCFStringEncodingUTF8","","",null,null],[6,"CFStringEncodings","","",null,null],[3,"__CFString","","",null,null],[6,"CFStringRef","","",null,null],[0,"timezone","core_foundation_sys","",null,null],[5,"CFTimeZoneCopySystem","core_foundation_sys::timezone","",null,null],[5,"CFTimeZoneCopyDefault","","",null,null],[5,"CFTimeZoneCreateWithTimeIntervalFromGMT","","",null,null],[5,"CFTimeZoneGetSecondsFromGMT","","",null,null],[5,"CFTimeZoneGetTypeID","","",null,null],[5,"CFTimeZoneGetName","","",null,null],[3,"__CFTimeZone","","",null,null],[6,"CFTimeZoneRef","","",null,null],[0,"url","core_foundation_sys","",null,null],[7,"kCFURLAttributeModificationDateKey","core_foundation_sys::url","",null,null],[7,"kCFURLContentAccessDateKey","","",null,null],[7,"kCFURLContentModificationDateKey","","",null,null],[7,"kCFURLCreationDateKey","","",null,null],[7,"kCFURLFileResourceIdentifierKey","","",null,null],[7,"kCFURLFileSecurityKey","","",null,null],[7,"kCFURLHasHiddenExtensionKey","","",null,null],[7,"kCFURLIsDirectoryKey","","",null,null],[7,"kCFURLIsExecutableKey","","",null,null],[7,"kCFURLIsHiddenKey","","",null,null],[7,"kCFURLIsPackageKey","","",null,null],[7,"kCFURLIsReadableKey","","",null,null],[7,"kCFURLIsRegularFileKey","","",null,null],[7,"kCFURLIsSymbolicLinkKey","","",null,null],[7,"kCFURLIsSystemImmutableKey","","",null,null],[7,"kCFURLIsUserImmutableKey","","",null,null],[7,"kCFURLIsVolumeKey","","",null,null],[7,"kCFURLIsWritableKey","","",null,null],[7,"kCFURLLabelNumberKey","","",null,null],[7,"kCFURLLinkCountKey","","",null,null],[7,"kCFURLLocalizedLabelKey","","",null,null],[7,"kCFURLLocalizedNameKey","","",null,null],[7,"kCFURLLocalizedTypeDescriptionKey","","",null,null],[7,"kCFURLNameKey","","",null,null],[7,"kCFURLParentDirectoryURLKey","","",null,null],[7,"kCFURLPreferredIOBlockSizeKey","","",null,null],[7,"kCFURLTypeIdentifierKey","","",null,null],[7,"kCFURLVolumeIdentifierKey","","",null,null],[7,"kCFURLVolumeURLKey","","",null,null],[7,"kCFURLFileResourceTypeKey","","",null,null],[5,"CFURLCopyAbsoluteURL","","",null,null],[5,"CFURLCreateAbsoluteURLWithBytes","","",null,null],[5,"CFURLCreateByResolvingBookmarkData","","",null,null],[5,"CFURLCreateFilePathURL","","",null,null],[5,"CFURLCreateFromFileSystemRepresentation","","",null,null],[5,"CFURLCreateWithBytes","","",null,null],[5,"CFURLCreateWithFileSystemPath","","",null,null],[5,"CFURLCreateWithFileSystemPathRelativeToBase","","",null,null],[5,"CFURLCanBeDecomposed","","",null,null],[5,"CFURLCopyFileSystemPath","","",null,null],[5,"CFURLCopyFragment","","",null,null],[5,"CFURLCopyHostName","","",null,null],[5,"CFURLCopyLastPathComponent","","",null,null],[5,"CFURLCopyNetLocation","","",null,null],[5,"CFURLCopyParameterString","","",null,null],[5,"CFURLCopyPassword","","",null,null],[5,"CFURLCopyPath","","",null,null],[5,"CFURLCopyPathExtension","","",null,null],[5,"CFURLCopyQueryString","","",null,null],[5,"CFURLCopyResourceSpecifier","","",null,null],[5,"CFURLCopyScheme","","",null,null],[5,"CFURLCopyStrictPath","","",null,null],[5,"CFURLCopyUserName","","",null,null],[5,"CFURLGetPortNumber","","",null,null],[5,"CFURLHasDirectoryPath","","",null,null],[5,"CFURLGetFileSystemRepresentation","","",null,null],[5,"CFURLGetString","","",null,null],[5,"CFURLGetBytes","","",null,null],[5,"CFURLGetTypeID","","",null,null],[5,"CFURLClearResourcePropertyCache","","",null,null],[5,"CFURLCreateResourcePropertiesForKeysFromBookmarkData","","",null,null],[5,"CFURLCreateResourcePropertyForKeyFromBookmarkData","","",null,null],[5,"CFURLSetResourcePropertyForKey","","",null,null],[5,"CFURLCreateBookmarkData","","",null,null],[5,"CFURLCreateBookmarkDataFromAliasRecord","","",null,null],[5,"CFURLCreateBookmarkDataFromFile","","",null,null],[5,"CFURLWriteBookmarkDataToFile","","",null,null],[5,"CFURLStartAccessingSecurityScopedResource","","",null,null],[5,"CFURLStopAccessingSecurityScopedResource","","",null,null],[3,"__CFURL","","",null,null],[6,"CFURLRef","","",null,null],[6,"CFURLBookmarkCreationOptions","","",null,null],[6,"CFURLBookmarkResolutionOptions","","",null,null],[6,"CFURLBookmarkFileCreationOptions","","",null,null],[6,"CFURLPathStyle","","",null,null],[17,"kCFURLPOSIXPathStyle","","",null,null],[17,"kCFURLHFSPathStyle","","",null,null],[17,"kCFURLWindowsPathStyle","","",null,null],[7,"kCFURLBookmarkCreationPreferFileIDResolutionMask","","",null,null],[7,"kCFURLBookmarkCreationMinimalBookmarkMask","","",null,null],[7,"kCFURLBookmarkCreationSuitableForBookmarkFile","","",null,null],[7,"kCFURLBookmarkCreationWithSecurityScope","","",null,null],[7,"kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess","","",null,null],[0,"uuid","core_foundation_sys","",null,null],[5,"CFUUIDCreate","core_foundation_sys::uuid","",null,null],[5,"CFUUIDCreateFromUUIDBytes","","",null,null],[5,"CFUUIDGetUUIDBytes","","",null,null],[5,"CFUUIDGetTypeID","","",null,null],[3,"__CFUUID","","",null,null],[6,"CFUUIDRef","","",null,null],[3,"CFUUIDBytes","","",null,null],[12,"byte0","","",14,null],[12,"byte1","","",14,null],[12,"byte2","","",14,null],[12,"byte3","","",14,null],[12,"byte4","","",14,null],[12,"byte5","","",14,null],[12,"byte6","","",14,null],[12,"byte7","","",14,null],[12,"byte8","","",14,null],[12,"byte9","","",14,null],[12,"byte10","","",14,null],[12,"byte11","","",14,null],[12,"byte12","","",14,null],[12,"byte13","","",14,null],[12,"byte14","","",14,null],[12,"byte15","","",14,null],[11,"from","core_foundation_sys::array","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","core_foundation_sys::attributed_string","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","core_foundation_sys::base","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","core_foundation_sys::bundle","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","core_foundation_sys::characterset","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","core_foundation_sys::data","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","core_foundation_sys::date","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","core_foundation_sys::dictionary","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","core_foundation_sys::error","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","core_foundation_sys::filedescriptor","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","core_foundation_sys::messageport","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","core_foundation_sys::number","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","core_foundation_sys::runloop","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","core_foundation_sys::set","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","core_foundation_sys::string","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","core_foundation_sys::timezone","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","core_foundation_sys::url","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","core_foundation_sys::uuid","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into","core_foundation_sys::base","",1,[[],["ordering",4]]],[11,"clone","core_foundation_sys::array","",0,[[],["cfarraycallbacks",3]]],[11,"clone","core_foundation_sys::base","",1,[[],["cfcomparisonresult",4]]],[11,"clone","","",2,[[],["cfrange",3]]],[11,"clone","","",3,[[],["cfallocatorcontext",3]]],[11,"clone","core_foundation_sys::dictionary","",5,[[],["cfdictionarykeycallbacks",3]]],[11,"clone","","",6,[[],["cfdictionaryvaluecallbacks",3]]],[11,"clone","core_foundation_sys::filedescriptor","",7,[[],["cffiledescriptorcontext",3]]],[11,"clone","core_foundation_sys::messageport","",8,[[],["cfmessageportcontext",3]]],[11,"clone","core_foundation_sys::set","",13,[[],["cfsetcallbacks",3]]],[11,"clone","core_foundation_sys::uuid","",14,[[],["cfuuidbytes",3]]],[11,"default","","",14,[[],["cfuuidbytes",3]]],[11,"eq","core_foundation_sys::base","",1,[[["cfcomparisonresult",4]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","core_foundation_sys::messageport","",8,[[["formatter",3]],["result",6]]]],"p":[[3,"CFArrayCallBacks"],[4,"CFComparisonResult"],[3,"CFRange"],[3,"CFAllocatorContext"],[8,"TCFTypeRef"],[3,"CFDictionaryKeyCallBacks"],[3,"CFDictionaryValueCallBacks"],[3,"CFFileDescriptorContext"],[3,"CFMessagePortContext"],[3,"CFRunLoopSourceContext"],[3,"CFRunLoopSourceContext1"],[3,"CFRunLoopObserverContext"],[3,"CFRunLoopTimerContext"],[3,"CFSetCallBacks"],[3,"CFUUIDBytes"],[3,"__CFArray"],[3,"__CFAttributedString"],[3,"__CFBundle"],[3,"__CFCharacterSet"],[3,"__CFData"],[3,"__CFDate"],[3,"__CFDictionary"],[3,"__CFError"],[3,"__CFFileDescriptor"],[3,"__CFMessagePort"],[3,"__CFBoolean"],[4,"__CFNumber"],[3,"__CFRunLoop"],[3,"__CFRunLoopSource"],[3,"__CFRunLoopObserver"],[3,"__CFRunLoopTimer"],[3,"__CFSet"],[3,"__CFString"],[3,"__CFTimeZone"],[3,"__CFURL"],[3,"__CFUUID"]]},\
"core_graphics":{"doc":"","i":[[0,"base","core_graphics","",null,null],[6,"boolean_t","core_graphics::base","",null,null],[6,"CGFloat","","",null,null],[6,"CGError","","",null,null],[6,"CGGlyph","","",null,null],[17,"kCGImageAlphaNone","","",null,null],[17,"kCGImageAlphaPremultipliedLast","","",null,null],[17,"kCGImageAlphaPremultipliedFirst","","",null,null],[17,"kCGImageAlphaLast","","",null,null],[17,"kCGImageAlphaFirst","","",null,null],[17,"kCGImageAlphaNoneSkipLast","","",null,null],[17,"kCGImageAlphaNoneSkipFirst","","",null,null],[17,"kCGBitmapByteOrderDefault","","",null,null],[17,"kCGBitmapByteOrder16Little","","",null,null],[17,"kCGBitmapByteOrder32Little","","",null,null],[17,"kCGBitmapByteOrder16Big","","",null,null],[17,"kCGBitmapByteOrder32Big","","",null,null],[17,"kCGRenderingIntentDefault","","",null,null],[17,"kCGRenderingIntentAbsoluteColorimetric","","",null,null],[17,"kCGRenderingIntentRelativeColorimetric","","",null,null],[17,"kCGRenderingIntentPerceptual","","",null,null],[17,"kCGRenderingIntentSaturation","","",null,null],[17,"kCGBitmapByteOrder16Host","","",null,null],[17,"kCGBitmapByteOrder32Host","","",null,null],[0,"color","core_graphics","",null,null],[3,"CGColor","core_graphics::color","",null,null],[11,"rgb","","",0,[[["cgfloat",6]]]],[0,"color_space","core_graphics","",null,null],[7,"kCGColorSpaceSRGB","core_graphics::color_space","",null,null],[7,"kCGColorSpaceAdobeRGB1998","","",null,null],[7,"kCGColorSpaceGenericGray","","",null,null],[7,"kCGColorSpaceGenericRGB","","",null,null],[7,"kCGColorSpaceGenericCMYK","","",null,null],[7,"kCGColorSpaceGenericRGBLinear","","",null,null],[7,"kCGColorSpaceGenericGrayGamma2_2","","",null,null],[3,"CGColorSpace","","",null,null],[3,"CGColorSpaceRef","","",null,null],[11,"type_id","","",1,[[],["cftypeid",6]]],[11,"create_with_name","","",1,[[["cfstringref",6]],[["option",4],["cgcolorspace",3]]]],[11,"create_device_rgb","","",1,[[],["cgcolorspace",3]]],[11,"create_device_gray","","",1,[[],["cgcolorspace",3]]],[0,"context","core_graphics","",null,null],[4,"CGBlendMode","core_graphics::context","",null,null],[13,"Normal","","",2,null],[13,"Multiply","","",2,null],[13,"Screen","","",2,null],[13,"Overlay","","",2,null],[13,"Darken","","",2,null],[13,"Lighten","","",2,null],[13,"ColorDodge","","",2,null],[13,"ColorBurn","","",2,null],[13,"SoftLight","","",2,null],[13,"HardLight","","",2,null],[13,"Difference","","",2,null],[13,"Exclusion","","",2,null],[13,"Hue","","",2,null],[13,"Saturation","","",2,null],[13,"Color","","",2,null],[13,"Luminosity","","",2,null],[13,"Clear","","",2,null],[13,"Copy","","",2,null],[13,"SourceIn","","",2,null],[13,"SourceOut","","",2,null],[13,"SourceAtop","","",2,null],[13,"DestinationOver","","",2,null],[13,"DestinationIn","","",2,null],[13,"DestinationOut","","",2,null],[13,"DestinationAtop","","",2,null],[13,"Xor","","",2,null],[13,"PlusDarker","","",2,null],[13,"PlusLighter","","",2,null],[4,"CGTextDrawingMode","","",null,null],[13,"CGTextFill","","",3,null],[13,"CGTextStroke","","",3,null],[13,"CGTextFillStroke","","",3,null],[13,"CGTextInvisible","","",3,null],[13,"CGTextFillClip","","",3,null],[13,"CGTextStrokeClip","","",3,null],[13,"CGTextFillStrokeClip","","",3,null],[13,"CGTextClip","","",3,null],[4,"CGLineCap","","",null,null],[13,"CGLineCapButt","","",4,null],[13,"CGLineCapRound","","",4,null],[13,"CGLineCapSquare","","",4,null],[4,"CGLineJoin","","",null,null],[13,"CGLineJoinMiter","","",5,null],[13,"CGLineJoinRound","","",5,null],[13,"CGLineJoinBevel","","",5,null],[4,"CGPathDrawingMode","","",null,null],[13,"CGPathFill","","",6,null],[13,"CGPathEOFill","","",6,null],[13,"CGPathStroke","","",6,null],[13,"CGPathFillStroke","","",6,null],[13,"CGPathEOFillStroke","","",6,null],[4,"CGInterpolationQuality","","",null,null],[13,"CGInterpolationQualityDefault","","",7,null],[13,"CGInterpolationQualityNone","","",7,null],[13,"CGInterpolationQualityLow","","",7,null],[13,"CGInterpolationQualityMedium","","",7,null],[13,"CGInterpolationQualityHigh","","",7,null],[3,"CGContext","","",null,null],[3,"CGContextRef","","",null,null],[11,"type_id","","",8,[[],["cftypeid",6]]],[11,"from_existing_context_ptr","","Creates a <code>CGContext</code> instance from an existing <code>CGContextRef</code>…",8,[[],["cgcontext",3]]],[11,"create_bitmap_context","","",8,[[["cgcolorspace",3],["u32",15],["option",4],["size_t",6]],["cgcontext",3]]],[11,"data","","",8,[[]]],[11,"flush","","",9,[[]]],[11,"width","","",9,[[],["size_t",6]]],[11,"height","","",9,[[],["size_t",6]]],[11,"bytes_per_row","","",9,[[],["size_t",6]]],[11,"clip_bounding_box","","",9,[[],["cgrect",3]]],[11,"set_fill_color","","",9,[[["cgcolor",3]]]],[11,"set_rgb_fill_color","","",9,[[["cgfloat",6]]]],[11,"set_rgb_stroke_color","","",9,[[["cgfloat",6]]]],[11,"set_gray_fill_color","","",9,[[["cgfloat",6]]]],[11,"set_blend_mode","","",9,[[["cgblendmode",4]]]],[11,"set_allows_font_smoothing","","",9,[[["bool",15]]]],[11,"set_font_smoothing_style","","",9,[[["i32",15]]]],[11,"set_should_smooth_fonts","","",9,[[["bool",15]]]],[11,"set_allows_antialiasing","","",9,[[["bool",15]]]],[11,"set_should_antialias","","",9,[[["bool",15]]]],[11,"set_allows_font_subpixel_quantization","","",9,[[["bool",15]]]],[11,"set_should_subpixel_quantize_fonts","","",9,[[["bool",15]]]],[11,"set_allows_font_subpixel_positioning","","",9,[[["bool",15]]]],[11,"set_should_subpixel_position_fonts","","",9,[[["bool",15]]]],[11,"set_text_drawing_mode","","",9,[[["cgtextdrawingmode",4]]]],[11,"set_line_cap","","",9,[[["cglinecap",4]]]],[11,"set_line_dash","","",9,[[["cgfloat",6]]]],[11,"set_line_join","","",9,[[["cglinejoin",4]]]],[11,"set_line_width","","",9,[[["cgfloat",6]]]],[11,"set_miter_limit","","",9,[[["cgfloat",6]]]],[11,"add_path","","",9,[[["cgpathref",3]]]],[11,"add_curve_to_point","","",9,[[["cgfloat",6]]]],[11,"add_quad_curve_to_point","","",9,[[["cgfloat",6]]]],[11,"add_line_to_point","","",9,[[["cgfloat",6]]]],[11,"begin_path","","",9,[[]]],[11,"close_path","","",9,[[]]],[11,"move_to_point","","",9,[[["cgfloat",6]]]],[11,"clip","","",9,[[]]],[11,"eo_clip","","",9,[[]]],[11,"draw_path","","",9,[[["cgpathdrawingmode",4]]]],[11,"fill_path","","",9,[[]]],[11,"eo_fill_path","","",9,[[]]],[11,"stroke_path","","",9,[[]]],[11,"fill_rect","","",9,[[["cgrect",3]]]],[11,"fill_rects","","",9,[[]]],[11,"clear_rect","","",9,[[["cgrect",3]]]],[11,"stroke_rect","","",9,[[["cgrect",3]]]],[11,"stroke_rect_with_width","","",9,[[["cgrect",3],["cgfloat",6]]]],[11,"clip_to_rect","","",9,[[["cgrect",3]]]],[11,"clip_to_rects","","",9,[[]]],[11,"clip_to_mask","","",9,[[["cgrect",3],["cgimage",3]]]],[11,"replace_path_with_stroked_path","","",9,[[]]],[11,"fill_ellipse_in_rect","","",9,[[["cgrect",3]]]],[11,"stroke_ellipse_in_rect","","",9,[[["cgrect",3]]]],[11,"stroke_line_segments","","",9,[[]]],[11,"set_interpolation_quality","","",9,[[["cginterpolationquality",4]]]],[11,"get_interpolation_quality","","",9,[[],["cginterpolationquality",4]]],[11,"draw_image","","",9,[[["cgrect",3],["cgimage",3]]]],[11,"create_image","","",9,[[],[["cgimage",3],["option",4]]]],[11,"set_font","","",9,[[["cgfont",3]]]],[11,"set_font_size","","",9,[[["cgfloat",6]]]],[11,"set_text_matrix","","",9,[[["cgaffinetransform",3]]]],[11,"set_text_position","","",9,[[["cgfloat",6]]]],[11,"show_glyphs_at_positions","","",9,[[]]],[11,"save","","",9,[[]]],[11,"restore","","",9,[[]]],[11,"translate","","",9,[[["cgfloat",6]]]],[11,"scale","","",9,[[["cgfloat",6]]]],[11,"rotate","","",9,[[["cgfloat",6]]]],[11,"get_ctm","","",9,[[],["cgaffinetransform",3]]],[11,"concat_ctm","","",9,[[["cgaffinetransform",3]]]],[11,"draw_linear_gradient","","",9,[[["cgpoint",3],["cggradient",3],["cggradientdrawingoptions",3]]]],[11,"draw_radial_gradient","","",9,[[["cgpoint",3],["cggradient",3],["cgfloat",6],["cggradientdrawingoptions",3]]]],[11,"set_shadow","","",9,[[["cgsize",3],["cgfloat",6]]]],[11,"set_shadow_with_color","","",9,[[["cgsize",3],["cgfloat",6],["cgcolor",3]]]],[0,"data_provider","core_graphics","",null,null],[6,"CGDataProviderGetBytesCallback","core_graphics::data_provider","",null,null],[6,"CGDataProviderReleaseInfoCallback","","",null,null],[6,"CGDataProviderRewindCallback","","",null,null],[6,"CGDataProviderSkipBytesCallback","","",null,null],[6,"CGDataProviderSkipForwardCallback","","",null,null],[6,"CGDataProviderGetBytePointerCallback","","",null,null],[6,"CGDataProviderGetBytesAtOffsetCallback","","",null,null],[6,"CGDataProviderReleaseBytePointerCallback","","",null,null],[6,"CGDataProviderReleaseDataCallback","","",null,null],[6,"CGDataProviderGetBytesAtPositionCallback","","",null,null],[3,"CGDataProvider","","",null,null],[3,"CGDataProviderRef","","",null,null],[11,"type_id","","",10,[[],["cftypeid",6]]],[11,"from_buffer","","Creates a data provider from the given reference-counted …",10,[[["send",8],["arc",3],["asref",8],["sync",8]]]],[11,"from_slice","","Creates a data prvider from a given slice. The data …",10,[[]]],[11,"from_custom_data","","Creates a data provider from the given raw pointer, …",10,[[["box",3],["box",3]]]],[11,"copy_data","","Creates a copy of the data from the underlying …",11,[[],["cfdata",3]]],[8,"CustomData","","Encapsulates custom data that can be wrapped.",null,null],[10,"ptr","","Returns a pointer to the start of the custom data. This …",12,[[]]],[10,"len","","Returns the length of this custom data. This value must …",12,[[],["usize",15]]],[0,"display","core_graphics","",null,null],[7,"CGRectNull","core_graphics::display","",null,null],[7,"CGRectInfinite","","",null,null],[7,"kCGDisplayShowDuplicateLowResolutionModes","","",null,null],[5,"CGDisplayModeRelease","","",null,null],[5,"CGMainDisplayID","","",null,null],[5,"CGDisplayIsActive","","",null,null],[5,"CGDisplayIsAlwaysInMirrorSet","","",null,null],[5,"CGDisplayIsAsleep","","",null,null],[5,"CGDisplayIsBuiltin","","",null,null],[5,"CGDisplayIsInHWMirrorSet","","",null,null],[5,"CGDisplayIsInMirrorSet","","",null,null],[5,"CGDisplayIsMain","","",null,null],[5,"CGDisplayIsOnline","","",null,null],[5,"CGDisplayIsStereo","","",null,null],[5,"CGDisplayMirrorsDisplay","","",null,null],[5,"CGDisplayPrimaryDisplay","","",null,null],[5,"CGDisplayRotation","","",null,null],[5,"CGDisplayScreenSize","","",null,null],[5,"CGDisplaySerialNumber","","",null,null],[5,"CGDisplayUnitNumber","","",null,null],[5,"CGDisplayUsesOpenGLAcceleration","","",null,null],[5,"CGDisplayVendorNumber","","",null,null],[5,"CGGetActiveDisplayList","","",null,null],[5,"CGGetDisplaysWithRect","","",null,null],[5,"CGDisplayModelNumber","","",null,null],[5,"CGDisplayPixelsHigh","","",null,null],[5,"CGDisplayPixelsWide","","",null,null],[5,"CGDisplayBounds","","",null,null],[5,"CGDisplayCreateImage","","",null,null],[5,"CGBeginDisplayConfiguration","","",null,null],[5,"CGCancelDisplayConfiguration","","",null,null],[5,"CGCompleteDisplayConfiguration","","",null,null],[5,"CGConfigureDisplayWithDisplayMode","","",null,null],[5,"CGConfigureDisplayMirrorOfDisplay","","",null,null],[5,"CGConfigureDisplayOrigin","","",null,null],[5,"CGDisplayCopyDisplayMode","","",null,null],[5,"CGDisplayModeGetHeight","","",null,null],[5,"CGDisplayModeGetWidth","","",null,null],[5,"CGDisplayModeGetPixelHeight","","",null,null],[5,"CGDisplayModeGetPixelWidth","","",null,null],[5,"CGDisplayModeGetRefreshRate","","",null,null],[5,"CGDisplayModeGetIOFlags","","",null,null],[5,"CGDisplayModeCopyPixelEncoding","","",null,null],[5,"CGDisplayCopyAllDisplayModes","","",null,null],[5,"CGDisplayHideCursor","","",null,null],[5,"CGDisplayShowCursor","","",null,null],[5,"CGDisplayMoveCursorToPoint","","",null,null],[5,"CGWarpMouseCursorPosition","","",null,null],[5,"CGAssociateMouseAndMouseCursorPosition","","",null,null],[5,"CGWindowListCopyWindowInfo","","",null,null],[5,"CGWindowListCreateImage","","",null,null],[5,"CGWindowListCreateImageFromArray","","",null,null],[6,"CGError","","",null,null],[6,"boolean_t","","",null,null],[3,"CGRect","","",null,null],[12,"origin","","",13,null],[12,"size","","",13,null],[3,"CGPoint","","",null,null],[12,"x","","",14,null],[12,"y","","",14,null],[3,"CGSize","","",null,null],[12,"width","","",15,null],[12,"height","","",15,null],[6,"CGDirectDisplayID","","",null,null],[6,"CGWindowID","","",null,null],[17,"kCGNullWindowID","","",null,null],[17,"kCGNullDirectDisplayID","","",null,null],[6,"CGWindowListOption","","",null,null],[17,"kCGWindowListOptionAll","","",null,null],[17,"kCGWindowListOptionOnScreenOnly","","",null,null],[17,"kCGWindowListOptionOnScreenAboveWindow","","",null,null],[17,"kCGWindowListOptionOnScreenBelowWindow","","",null,null],[17,"kCGWindowListOptionIncludingWindow","","",null,null],[17,"kCGWindowListExcludeDesktopElements","","",null,null],[6,"CGWindowImageOption","","",null,null],[17,"kCGWindowImageDefault","","",null,null],[17,"kCGWindowImageBoundsIgnoreFraming","","",null,null],[17,"kCGWindowImageShouldBeOpaque","","",null,null],[17,"kCGWindowImageOnlyShadows","","",null,null],[17,"kCGWindowImageBestResolution","","",null,null],[17,"kCGWindowImageNominalResolution","","",null,null],[17,"kDisplayModeValidFlag","","",null,null],[17,"kDisplayModeSafeFlag","","",null,null],[17,"kDisplayModeDefaultFlag","","",null,null],[17,"kDisplayModeAlwaysShowFlag","","",null,null],[17,"kDisplayModeNeverShowFlag","","",null,null],[17,"kDisplayModeNotResizeFlag","","",null,null],[17,"kDisplayModeRequiresPanFlag","","",null,null],[17,"kDisplayModeInterlacedFlag","","",null,null],[17,"kDisplayModeSimulscanFlag","","",null,null],[17,"kDisplayModeBuiltInFlag","","",null,null],[17,"kDisplayModeNotPresetFlag","","",null,null],[17,"kDisplayModeStretchedFlag","","",null,null],[17,"kDisplayModeNotGraphicsQualityFlag","","",null,null],[17,"kDisplayModeValidateAgainstDisplay","","",null,null],[17,"kDisplayModeTelevisionFlag","","",null,null],[17,"kDisplayModeValidForMirroringFlag","","",null,null],[17,"kDisplayModeAcceleratorBackedFlag","","",null,null],[17,"kDisplayModeValidForHiResFlag","","",null,null],[17,"kDisplayModeValidForAirPlayFlag","","",null,null],[17,"kDisplayModeNativeFlag","","",null,null],[17,"kDisplayModeSafetyFlags","","",null,null],[17,"IO1BitIndexedPixels","","",null,null],[17,"IO2BitIndexedPixels","","",null,null],[17,"IO4BitIndexedPixels","","",null,null],[17,"IO8BitIndexedPixels","","",null,null],[17,"IO16BitDirectPixels","","",null,null],[17,"IO32BitDirectPixels","","",null,null],[17,"kIO30BitDirectPixels","","",null,null],[17,"kIO64BitDirectPixels","","",null,null],[17,"kIO16BitFloatPixels","","",null,null],[17,"kIO32BitFloatPixels","","",null,null],[17,"IOYUV422Pixels","","",null,null],[17,"IO8BitOverlayPixels","","",null,null],[3,"CFDictionary","","",null,null],[6,"CFDictionaryRef","","",null,null],[5,"CFDictionaryGetValueIfPresent","","",null,[[],["u8",15]]],[3,"CFArray","","A heterogeneous immutable array.",null,null],[6,"CFArrayRef","","",null,null],[5,"CFArrayGetCount","","",null,[[],["isize",15]]],[5,"CFArrayGetValueAtIndex","","",null,[[["isize",15]]]],[6,"CFIndex","","",null,null],[5,"CFRelease","","",null,[[]]],[6,"CFTypeRef","","",null,null],[6,"CGDisplayConfigRef","","",null,null],[4,"CGConfigureOption","","",null,null],[13,"ConfigureForAppOnly","","",16,null],[13,"ConfigureForSession","","",16,null],[13,"ConfigurePermanently","","",16,null],[3,"CGDisplay","","",null,null],[12,"id","","",17,null],[3,"CGDisplayMode","","",null,null],[3,"CGDisplayModeRef","","",null,null],[11,"new","","",17,[[["cgdirectdisplayid",6]],["cgdisplay",3]]],[11,"main","","Returns the the main display.",17,[[],["cgdisplay",3]]],[11,"null_display","","A value that will never correspond to actual hardware.",17,[[],["cgdisplay",3]]],[11,"bounds","","Returns the bounds of a display in the global display …",17,[[],["cgrect",3]]],[11,"display_mode","","Returns information about a display\'s current …",17,[[],[["option",4],["cgdisplaymode",3]]]],[11,"begin_configuration","","Begins a new set of display configuration changes.",17,[[],[["cgdisplayconfigref",6],["cgerror",6],["result",4]]]],[11,"cancel_configuration","","Cancels a set of display configuration changes.",17,[[["cgdisplayconfigref",6]],[["result",4],["cgerror",6]]]],[11,"complete_configuration","","Completes a set of display configuration changes.",17,[[["cgdisplayconfigref",6],["cgconfigureoption",4]],[["result",4],["cgerror",6]]]],[11,"configure_display_with_display_mode","","Configures the display mode of a display.",17,[[["cgdisplayconfigref",6],["cgdisplaymode",3]],[["result",4],["cgerror",6]]]],[11,"configure_display_origin","","Configures the origin of a display in the global display …",17,[[["cgdisplayconfigref",6],["i32",15]],[["result",4],["cgerror",6]]]],[11,"configure_display_mirror_of_display","","Changes the configuration of a mirroring set.",17,[[["cgdisplayconfigref",6],["cgdisplay",3]],[["result",4],["cgerror",6]]]],[11,"image","","Returns an image containing the contents of the specified …",17,[[],[["cgimage",3],["option",4]]]],[11,"screenshot","","Returns a composite image based on a dynamically …",17,[[["cgrect",3],["cgwindowlistoption",6],["cgwindowid",6],["cgwindowimageoption",6]],[["cgimage",3],["option",4]]]],[11,"screenshot_from_windows","","Returns a composite image of the specified windows.",17,[[["cfarray",3],["cgrect",3],["cgwindowimageoption",6]],[["cgimage",3],["option",4]]]],[11,"window_list_info","","Generates and returns information about the selected …",17,[[["cgwindowlistoption",6],["option",4],["cgwindowid",6]],[["cfarray",3],["option",4]]]],[11,"is_active","","Returns a Boolean value indicating whether a display is …",17,[[],["bool",15]]],[11,"is_always_in_mirror_set","","Returns a boolean indicating whether a display is always …",17,[[],["bool",15]]],[11,"is_asleep","","Returns a boolean indicating whether a display is …",17,[[],["bool",15]]],[11,"is_builtin","","Returns a boolean indicating whether a display is …",17,[[],["bool",15]]],[11,"is_in_hw_mirror_set","","Returns a boolean indicating whether a display is in a …",17,[[],["bool",15]]],[11,"is_in_mirror_set","","Returns a boolean indicating whether a display is in a …",17,[[],["bool",15]]],[11,"is_main","","Returns a boolean indicating whether a display is the …",17,[[],["bool",15]]],[11,"is_online","","Returns a boolean indicating whether a display is …",17,[[],["bool",15]]],[11,"uses_open_gl_acceleration","","Returns a boolean indicating whether Quartz is using …",17,[[],["bool",15]]],[11,"is_stereo","","Returns a boolean indicating whether a display is running …",17,[[],["bool",15]]],[11,"mirrors_display","","For a secondary display in a mirroring set, returns the …",17,[[],["cgdirectdisplayid",6]]],[11,"primary_display","","Returns the primary display in a hardware mirroring set.",17,[[],["cgdirectdisplayid",6]]],[11,"rotation","","Returns the rotation angle of a display in degrees.",17,[[],["f64",15]]],[11,"screen_size","","Returns the width and height of a display in millimeters.",17,[[],["cgsize",3]]],[11,"serial_number","","Returns the serial number of a display monitor.",17,[[],["u32",15]]],[11,"unit_number","","Returns the logical unit number of a display.",17,[[],["u32",15]]],[11,"vendor_number","","Returns the vendor number of the specified display\'s …",17,[[],["u32",15]]],[11,"model_number","","Returns the model number of a display monitor.",17,[[],["u32",15]]],[11,"pixels_high","","Returns the display height in pixel units.",17,[[],["u64",15]]],[11,"pixels_wide","","Returns the display width in pixel units.",17,[[],["u64",15]]],[11,"active_displays","","Provides a list of displays that are active (or drawable).",17,[[],[["cgerror",6],["result",4],["vec",3]]]],[11,"active_display_count","","Provides count of displays that are active (or drawable).",17,[[],[["result",4],["u32",15],["cgerror",6]]]],[11,"hide_cursor","","Hides the mouse cursor, and increments the hide cursor …",17,[[],[["result",4],["cgerror",6]]]],[11,"show_cursor","","Decrements the hide cursor count, and shows the mouse …",17,[[],[["result",4],["cgerror",6]]]],[11,"move_cursor_to_point","","Moves the mouse cursor to a specified point relative to …",17,[[["cgpoint",3]],[["result",4],["cgerror",6]]]],[11,"warp_mouse_cursor_position","","Moves the mouse cursor without generating events.",17,[[["cgpoint",3]],[["result",4],["cgerror",6]]]],[11,"associate_mouse_and_mouse_cursor_position","","Connects or disconnects the mouse and cursor while an …",17,[[["bool",15]],[["result",4],["cgerror",6]]]],[11,"all_display_modes","","Returns all display modes for the specified display id.",18,[[["cgdirectdisplayid",6],["cfdictionaryref",6]],[["vec",3],["option",4]]]],[11,"height","","Returns the height of the specified display mode.",18,[[],["u64",15]]],[11,"width","","Returns the width of the specified display mode.",18,[[],["u64",15]]],[11,"pixel_height","","Returns the pixel height of the specified display mode.",18,[[],["u64",15]]],[11,"pixel_width","","Returns the pixel width of the specified display mode.",18,[[],["u64",15]]],[11,"refresh_rate","","",18,[[],["f64",15]]],[11,"io_flags","","Returns the I/O Kit flags of the specified display mode.",18,[[],["u32",15]]],[11,"pixel_encoding","","Returns the pixel encoding of the specified display mode.",18,[[],["cfstring",3]]],[11,"bit_depth","","Returns the number of bits per pixel of the specified …",18,[[],["usize",15]]],[0,"event","core_graphics","",null,null],[6,"CGEventField","core_graphics::event","",null,null],[6,"CGKeyCode","","",null,null],[6,"CGScrollEventUnit","","",null,null],[3,"CGEventFlags","","Flags for events",null,null],[18,"CGEventFlagNull","","",19,null],[18,"CGEventFlagAlphaShift","","",19,null],[18,"CGEventFlagShift","","",19,null],[18,"CGEventFlagControl","","",19,null],[18,"CGEventFlagAlternate","","",19,null],[18,"CGEventFlagCommand","","",19,null],[18,"CGEventFlagHelp","","",19,null],[18,"CGEventFlagSecondaryFn","","",19,null],[18,"CGEventFlagNumericPad","","",19,null],[18,"CGEventFlagNonCoalesced","","",19,null],[11,"empty","","Returns an empty set of flags",19,[[],["cgeventflags",3]]],[11,"all","","Returns the set containing all flags.",19,[[],["cgeventflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",19,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",19,[[["u64",15]],[["option",4],["cgeventflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",19,[[["u64",15]],["cgeventflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",19,[[["u64",15]],["cgeventflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",19,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",19,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",19,[[["cgeventflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",19,[[["cgeventflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",19,[[["cgeventflags",3]]]],[11,"remove","","Removes the specified flags in-place.",19,[[["cgeventflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",19,[[["cgeventflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",19,[[["bool",15],["cgeventflags",3]]]],[3,"KeyCode","","Key codes for keys that are independent of keyboard …",null,null],[18,"RETURN","","",20,null],[18,"TAB","","",20,null],[18,"SPACE","","",20,null],[18,"DELETE","","",20,null],[18,"ESCAPE","","",20,null],[18,"COMMAND","","",20,null],[18,"SHIFT","","",20,null],[18,"CAPS_LOCK","","",20,null],[18,"OPTION","","",20,null],[18,"CONTROL","","",20,null],[18,"RIGHT_COMMAND","","",20,null],[18,"RIGHT_SHIFT","","",20,null],[18,"RIGHT_OPTION","","",20,null],[18,"RIGHT_CONTROL","","",20,null],[18,"FUNCTION","","",20,null],[18,"VOLUME_UP","","",20,null],[18,"VOLUME_DOWN","","",20,null],[18,"MUTE","","",20,null],[18,"F1","","",20,null],[18,"F2","","",20,null],[18,"F3","","",20,null],[18,"F4","","",20,null],[18,"F5","","",20,null],[18,"F6","","",20,null],[18,"F7","","",20,null],[18,"F8","","",20,null],[18,"F9","","",20,null],[18,"F10","","",20,null],[18,"F11","","",20,null],[18,"F12","","",20,null],[18,"F13","","",20,null],[18,"F14","","",20,null],[18,"F15","","",20,null],[18,"F16","","",20,null],[18,"F17","","",20,null],[18,"F18","","",20,null],[18,"F19","","",20,null],[18,"F20","","",20,null],[18,"HELP","","",20,null],[18,"HOME","","",20,null],[18,"PAGE_UP","","",20,null],[18,"FORWARD_DELETE","","",20,null],[18,"END","","",20,null],[18,"PAGE_DOWN","","",20,null],[18,"LEFT_ARROW","","",20,null],[18,"RIGHT_ARROW","","",20,null],[18,"DOWN_ARROW","","",20,null],[18,"UP_ARROW","","",20,null],[3,"ScrollEventUnit","","",null,null],[18,"PIXEL","","",21,null],[18,"LINE","","",21,null],[4,"CGEventType","","Constants that specify the different types of input …",null,null],[13,"Null","","",22,null],[13,"LeftMouseDown","","",22,null],[13,"LeftMouseUp","","",22,null],[13,"RightMouseDown","","",22,null],[13,"RightMouseUp","","",22,null],[13,"MouseMoved","","",22,null],[13,"LeftMouseDragged","","",22,null],[13,"RightMouseDragged","","",22,null],[13,"KeyDown","","",22,null],[13,"KeyUp","","",22,null],[13,"FlagsChanged","","",22,null],[13,"ScrollWheel","","",22,null],[13,"TabletPointer","","",22,null],[13,"TabletProximity","","",22,null],[13,"OtherMouseDown","","",22,null],[13,"OtherMouseUp","","",22,null],[13,"OtherMouseDragged","","",22,null],[13,"TapDisabledByTimeout","","",22,null],[13,"TapDisabledByUserInput","","",22,null],[3,"EventField","","Constants used as keys to access specialized fields in …",null,null],[18,"MOUSE_EVENT_NUMBER","","Key to access an integer field that contains the mouse …",23,null],[18,"MOUSE_EVENT_CLICK_STATE","","Key to access an integer field that contains the mouse …",23,null],[18,"MOUSE_EVENT_PRESSURE","","Key to access a double field that contains the mouse …",23,null],[18,"MOUSE_EVENT_BUTTON_NUMBER","","Key to access an integer field that contains the mouse …",23,null],[18,"MOUSE_EVENT_DELTA_X","","Key to access an integer field that contains the …",23,null],[18,"MOUSE_EVENT_DELTA_Y","","Key to access an integer field that contains the vertical …",23,null],[18,"MOUSE_EVENT_INSTANT_MOUSER","","Key to access an integer field. The value is non-zero if …",23,null],[18,"MOUSE_EVENT_SUB_TYPE","","Key to access an integer field that encodes the mouse …",23,null],[18,"KEYBOARD_EVENT_AUTOREPEAT","","Key to access an integer field, non-zero when this is an …",23,null],[18,"KEYBOARD_EVENT_KEYCODE","","Key to access an integer field that contains the virtual …",23,null],[18,"KEYBOARD_EVENT_KEYBOARD_TYPE","","Key to access an integer field that contains the keyboard …",23,null],[18,"SCROLL_WHEEL_EVENT_DELTA_AXIS_1","","Key to access an integer field that contains scrolling …",23,null],[18,"SCROLL_WHEEL_EVENT_DELTA_AXIS_2","","Key to access an integer field that contains scrolling …",23,null],[18,"SCROLL_WHEEL_EVENT_FIXED_POINT_DELTA_AXIS_1","","Key to access a field that contains scrolling data. The …",23,null],[18,"SCROLL_WHEEL_EVENT_FIXED_POINT_DELTA_AXIS_2","","Key to access a field that contains scrolling data. The …",23,null],[18,"SCROLL_WHEEL_EVENT_POINT_DELTA_AXIS_1","","Key to access an integer field that contains pixel-based …",23,null],[18,"SCROLL_WHEEL_EVENT_POINT_DELTA_AXIS_2","","Key to access an integer field that contains pixel-based …",23,null],[18,"SCROLL_WHEEL_EVENT_INSTANT_MOUSER","","Key to access an integer field that indicates whether the …",23,null],[18,"TABLET_EVENT_POINT_X","","Key to access an integer field that contains the absolute …",23,null],[18,"TABLET_EVENT_POINT_Y","","Key to access an integer field that contains the absolute …",23,null],[18,"TABLET_EVENT_POINT_Z","","Key to access an integer field that contains the absolute …",23,null],[18,"TABLET_EVENT_POINT_BUTTONS","","Key to access an integer field that contains the tablet …",23,null],[18,"TABLET_EVENT_POINT_PRESSURE","","Key to access a double field that contains the tablet pen …",23,null],[18,"TABLET_EVENT_TILT_X","","Key to access a double field that contains the horizontal …",23,null],[18,"TABLET_EVENT_TILT_Y","","Key to access a double field that contains the vertical …",23,null],[18,"TABLET_EVENT_ROTATION","","Key to access a double field that contains the tablet pen …",23,null],[18,"TABLET_EVENT_TANGENTIAL_PRESSURE","","Key to access a double field that contains the tangential …",23,null],[18,"TABLET_EVENT_DEVICE_ID","","Key to access an integer field that contains the …",23,null],[18,"TABLET_EVENT_VENDOR_1","","Key to access an integer field that contains a …",23,null],[18,"TABLET_EVENT_VENDOR_2","","Key to access an integer field that contains a …",23,null],[18,"TABLET_EVENT_VENDOR_3","","Key to access an integer field that contains a …",23,null],[18,"TABLET_PROXIMITY_EVENT_VENDOR_ID","","Key to access an integer field that contains the …",23,null],[18,"TABLET_PROXIMITY_EVENT_TABLET_ID","","Key to access an integer field that contains the …",23,null],[18,"TABLET_PROXIMITY_EVENT_POINTER_ID","","Key to access an integer field that contains the …",23,null],[18,"TABLET_PROXIMITY_EVENT_DEVICE_ID","","Key to access an integer field that contains the …",23,null],[18,"TABLET_PROXIMITY_EVENT_SYSTEM_TABLET_ID","","Key to access an integer field that contains the …",23,null],[18,"TABLET_PROXIMITY_EVENT_VENDOR_POINTER_TYPE","","Key to access an integer field that contains the …",23,null],[18,"TABLET_PROXIMITY_EVENT_VENDOR_POINTER_SERIAL_NUMBER","","Key to access an integer field that contains the …",23,null],[18,"TABLET_PROXIMITY_EVENT_VENDOR_UNIQUE_ID","","Key to access an integer field that contains the …",23,null],[18,"TABLET_PROXIMITY_EVENT_CAPABILITY_MASK","","Key to access an integer field that contains the device …",23,null],[18,"TABLET_PROXIMITY_EVENT_POINTER_TYPE","","Key to access an integer field that contains the pointer …",23,null],[18,"TABLET_PROXIMITY_EVENT_ENTER_PROXIMITY","","Key to access an integer field that indicates whether the …",23,null],[18,"EVENT_TARGET_PROCESS_SERIAL_NUMBER","","Key to access a field that contains the event target …",23,null],[18,"EVENT_TARGET_UNIX_PROCESS_ID","","Key to access a field that contains the event target Unix …",23,null],[18,"EVENT_SOURCE_UNIX_PROCESS_ID","","Key to access a field that contains the event source Unix …",23,null],[18,"EVENT_SOURCE_USER_DATA","","Key to access a field that contains the event source …",23,null],[18,"EVENT_SOURCE_USER_ID","","Key to access a field that contains the event source Unix …",23,null],[18,"EVENT_SOURCE_GROUP_ID","","Key to access a field that contains the event source Unix …",23,null],[18,"EVENT_SOURCE_STATE_ID","","Key to access a field that contains the event source …",23,null],[18,"SCROLL_WHEEL_EVENT_IS_CONTINUOUS","","Key to access an integer field that indicates whether a …",23,null],[18,"MOUSE_EVENT_WINDOW_UNDER_MOUSE_POINTER","","Added in 10.5; made public in 10.7.",23,null],[18,"MOUSE_EVENT_WINDOW_UNDER_MOUSE_POINTER_THAT_CAN_HANDLE_THIS_EVENT","","",23,null],[4,"CGMouseButton","","",null,null],[13,"Left","","",24,null],[13,"Right","","",24,null],[13,"Center","","",24,null],[4,"CGEventTapLocation","","Possible tapping points for events.",null,null],[13,"HID","","",25,null],[13,"Session","","",25,null],[13,"AnnotatedSession","","",25,null],[3,"CGEvent","","",null,null],[3,"CGEventRef","","",null,null],[11,"type_id","","",26,[[],["cftypeid",6]]],[11,"new","","",26,[[["cgeventsource",3]],[["result",4],["cgevent",3]]]],[11,"new_keyboard_event","","",26,[[["bool",15],["cgeventsource",3],["cgkeycode",6]],[["result",4],["cgevent",3]]]],[11,"new_mouse_event","","",26,[[["cgpoint",3],["cgmousebutton",4],["cgeventsource",3],["cgeventtype",4]],[["result",4],["cgevent",3]]]],[11,"post","","",26,[[["cgeventtaplocation",4]]]],[11,"location","","",26,[[],["cgpoint",3]]],[11,"set_flags","","",26,[[["cgeventflags",3]]]],[11,"get_flags","","",26,[[],["cgeventflags",3]]],[11,"set_type","","",26,[[["cgeventtype",4]]]],[11,"get_type","","",26,[[],["cgeventtype",4]]],[11,"set_string_from_utf16_unchecked","","",26,[[]]],[11,"set_string","","",26,[[["str",15]]]],[11,"get_integer_value_field","","",26,[[["cgeventfield",6]],["i64",15]]],[11,"set_integer_value_field","","",26,[[["i64",15],["cgeventfield",6]]]],[11,"get_double_value_field","","",26,[[["cgeventfield",6]],["f64",15]]],[11,"set_double_value_field","","",26,[[["f64",15],["cgeventfield",6]]]],[0,"event_source","core_graphics","",null,null],[4,"CGEventSourceStateID","core_graphics::event_source","Possible source states of an event source.",null,null],[13,"Private","","",27,null],[13,"CombinedSessionState","","",27,null],[13,"HIDSystemState","","",27,null],[3,"CGEventSource","","",null,null],[3,"CGEventSourceRef","","",null,null],[11,"type_id","","",28,[[],["cftypeid",6]]],[11,"new","","",28,[[["cgeventsourcestateid",4]],["result",4]]],[0,"font","core_graphics","",null,null],[6,"CGGlyph","core_graphics::font","",null,null],[3,"CGFont","","",null,null],[3,"CGFontRef","","",null,null],[11,"type_id","","",29,[[],["cftypeid",6]]],[11,"from_data_provider","","",29,[[["cgdataprovider",3]],[["cgfont",3],["result",4]]]],[11,"from_name","","",29,[[["cfstring",3]],[["cgfont",3],["result",4]]]],[11,"create_copy_from_variations","","",29,[[["cfdictionary",3]],[["cgfont",3],["result",4]]]],[11,"postscript_name","","",29,[[],["cfstring",3]]],[11,"get_glyph_b_boxes","","",29,[[],["bool",15]]],[11,"get_glyph_advances","","",29,[[],["bool",15]]],[11,"get_units_per_em","","",29,[[],["c_int",6]]],[11,"copy_table_tags","","",29,[[],[["cfarray",3],["u32",15]]]],[11,"copy_table_for_tag","","",29,[[["u32",15]],[["option",4],["cfdata",3]]]],[0,"geometry","core_graphics","",null,null],[17,"CG_ZERO_POINT","core_graphics::geometry","",null,null],[17,"CG_ZERO_SIZE","","",null,null],[17,"CG_ZERO_RECT","","",null,null],[17,"CG_AFFINE_TRANSFORM_IDENTITY","","",null,null],[3,"CGSize","","",null,null],[12,"width","","",15,null],[12,"height","","",15,null],[3,"CGPoint","","",null,null],[12,"x","","",14,null],[12,"y","","",14,null],[3,"CGRect","","",null,null],[12,"origin","","",13,null],[12,"size","","",13,null],[3,"CGAffineTransform","","",null,null],[12,"a","","",30,null],[12,"b","","",30,null],[12,"c","","",30,null],[12,"d","","",30,null],[12,"tx","","",30,null],[12,"ty","","",30,null],[0,"gradient","core_graphics","",null,null],[3,"CGGradientDrawingOptions","core_graphics::gradient","",null,null],[18,"CGGradientDrawsBeforeStartLocation","","",31,null],[18,"CGGradientDrawsAfterEndLocation","","",31,null],[11,"empty","","Returns an empty set of flags",31,[[],["cggradientdrawingoptions",3]]],[11,"all","","Returns the set containing all flags.",31,[[],["cggradientdrawingoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",31,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",31,[[["u32",15]],[["option",4],["cggradientdrawingoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",31,[[["u32",15]],["cggradientdrawingoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",31,[[["u32",15]],["cggradientdrawingoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",31,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",31,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",31,[[["cggradientdrawingoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",31,[[["cggradientdrawingoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",31,[[["cggradientdrawingoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",31,[[["cggradientdrawingoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",31,[[["cggradientdrawingoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",31,[[["cggradientdrawingoptions",3],["bool",15]]]],[3,"CGGradient","","",null,null],[3,"CGGradientRef","","",null,null],[11,"create_with_color_components","","",32,[[["cgcolorspace",3],["usize",15]],["cggradient",3]]],[11,"create_with_colors","","",32,[[["cgcolorspace",3],["cfarray",3]],["cggradient",3]]],[0,"window","core_graphics","",null,null],[7,"kCGWindowNumber","core_graphics::window","",null,null],[7,"kCGWindowStoreType","","",null,null],[7,"kCGWindowLayer","","",null,null],[7,"kCGWindowBounds","","",null,null],[7,"kCGWindowSharingState","","",null,null],[7,"kCGWindowAlpha","","",null,null],[7,"kCGWindowOwnerPID","","",null,null],[7,"kCGWindowMemoryUsage","","",null,null],[7,"kCGWindowWorkspace","","",null,null],[7,"kCGWindowOwnerName","","",null,null],[7,"kCGWindowName","","",null,null],[7,"kCGWindowIsOnscreen","","",null,null],[7,"kCGWindowBackingLocationVideoMemory","","",null,null],[5,"CGWindowListCopyWindowInfo","","",null,null],[5,"CGWindowListCreate","","",null,null],[5,"CGWindowListCreateDescriptionFromArray","","",null,null],[5,"CGWindowListCreateImage","","",null,null],[5,"CGWindowListCreateImageFromArray","","",null,null],[6,"CGWindowID","","",null,null],[6,"CGWindowSharingType","","",null,null],[17,"kCGWindowSharingNone","","",null,null],[17,"kCGWindowSharingReadOnly","","",null,null],[17,"kCGWindowSharingReadWrite","","",null,null],[6,"CGWindowBackingType","","",null,null],[17,"kCGWindowBackingStoreRetained","","",null,null],[17,"kCGWindowBackingStoreNonretained","","",null,null],[17,"kCGWindowBackingStoreBuffered","","",null,null],[6,"CGWindowListOption","","",null,null],[17,"kCGWindowListOptionAll","","",null,null],[17,"kCGWindowListOptionOnScreenOnly","","",null,null],[17,"kCGWindowListOptionOnScreenAboveWindow","","",null,null],[17,"kCGWindowListOptionOnScreenBelowWindow","","",null,null],[17,"kCGWindowListOptionIncludingWindow","","",null,null],[17,"kCGWindowListOptionExcludeDesktopElements","","",null,null],[6,"CGWindowImageOption","","",null,null],[17,"kCGWindowImageDefault","","",null,null],[17,"kCGWindowImageBoundsIgnoreFraming","","",null,null],[17,"kCGWindowImageShouldBeOpaque","","",null,null],[17,"kCGWindowImageOnlyShadows","","",null,null],[17,"kCGWindowImageBestResolution","","",null,null],[17,"kCGWindowImageNominalResolution","","",null,null],[17,"kCGNullWindowID","","",null,null],[5,"copy_window_info","","",null,[[["cgwindowlistoption",6],["cgwindowid",6]],[["cfarray",3],["option",4]]]],[5,"create_window_list","","",null,[[["cgwindowlistoption",6],["cgwindowid",6]],[["cfarray",3],["option",4]]]],[5,"create_description_from_array","","",null,[[["cgwindowid",6],["cfarray",3]],[["option",4],["cfarray",3]]]],[5,"create_image","","",null,[[["cgwindowlistoption",6],["cgrect",3],["cgwindowimageoption",6],["cgwindowid",6]],[["cgimage",3],["option",4]]]],[5,"create_image_from_array","","",null,[[["cfarray",3],["cgrect",3],["cgwindowimageoption",6]],[["cgimage",3],["option",4]]]],[0,"private","core_graphics","Evil private APIs.",null,null],[3,"CGSRegion","core_graphics::private","",null,null],[11,"from_rect","","",33,[[["cgrect",3]],["cgsregion",3]]],[11,"from_rects","","",33,[[],["cgsregion",3]]],[3,"CGSSurface","","This should always be memory-safe; the window server …",null,null],[11,"from_ids","","",34,[[["c_int",6],["c_uint",6]],["cgssurface",3]]],[11,"id","","",34,[[],["c_uint",6]]],[11,"set_shape","","",34,[[["cgsregion",3]]]],[0,"image","core_graphics","",null,null],[4,"CGImageAlphaInfo","core_graphics::image","",null,null],[13,"CGImageAlphaNone","","",35,null],[13,"CGImageAlphaPremultipliedLast","","",35,null],[13,"CGImageAlphaPremultipliedFirst","","",35,null],[13,"CGImageAlphaLast","","",35,null],[13,"CGImageAlphaFirst","","",35,null],[13,"CGImageAlphaNoneSkipLast","","",35,null],[13,"CGImageAlphaNoneSkipFirst","","",35,null],[13,"CGImageAlphaOnly","","",35,null],[4,"CGImageByteOrderInfo","","",null,null],[13,"CGImageByteOrderMask","","",36,null],[13,"CGImageByteOrder16Little","","",36,null],[13,"CGImageByteOrder32Little","","",36,null],[13,"CGImageByteOrder16Big","","",36,null],[13,"CGImageByteOrder32Big","","",36,null],[3,"CGImage","","",null,null],[3,"CGImageRef","","",null,null],[11,"new","","",37,[[["cgcolorspace",3],["u32",15],["bool",15],["cgdataprovider",3],["size_t",6]]]],[11,"type_id","","",37,[[],["cftypeid",6]]],[11,"width","","",38,[[],["size_t",6]]],[11,"height","","",38,[[],["size_t",6]]],[11,"bits_per_component","","",38,[[],["size_t",6]]],[11,"bits_per_pixel","","",38,[[],["size_t",6]]],[11,"bytes_per_row","","",38,[[],["size_t",6]]],[11,"color_space","","",38,[[],["cgcolorspace",3]]],[11,"data","","Returns the raw image bytes wrapped in <code>CFData</code>. Note, the …",38,[[],["cfdata",3]]],[11,"cropped","","Returns a cropped image. If the <code>rect</code> specifies a …",38,[[["cgrect",3]],[["cgimage",3],["option",4]]]],[0,"path","core_graphics","",null,null],[3,"CGPath","core_graphics::path","",null,null],[3,"CGPathRef","","",null,null],[11,"from_rect","","",39,[[["option",4],["cgrect",3],["cgaffinetransform",3]],["cgpath",3]]],[11,"type_id","","",39,[[],["cftypeid",6]]],[11,"apply","","",39,[[]]],[4,"CGPathElementType","","",null,null],[13,"MoveToPoint","","",40,null],[13,"AddLineToPoint","","",40,null],[13,"AddQuadCurveToPoint","","",40,null],[13,"AddCurveToPoint","","",40,null],[13,"CloseSubpath","","",40,null],[3,"CGPathElementRef","","",null,null],[3,"CGPathElement","","",null,null],[12,"element_type","","",41,null],[11,"points","","",41,[[]]],[0,"sys","core_graphics","",null,null],[4,"CGImage","core_graphics::sys","",null,null],[6,"CGImageRef","","",null,null],[3,"__CGColor","","",null,null],[6,"CGColorRef","","",null,null],[4,"CGColorSpace","","",null,null],[6,"CGColorSpaceRef","","",null,null],[4,"CGPath","","",null,null],[6,"CGPathRef","","",null,null],[4,"CGDataProvider","","",null,null],[6,"CGDataProviderRef","","",null,null],[4,"CGFont","","",null,null],[6,"CGFontRef","","",null,null],[4,"CGContext","","",null,null],[6,"CGContextRef","","",null,null],[4,"CGGradient","","",null,null],[6,"CGGradientRef","","",null,null],[4,"CGEvent","","",null,null],[6,"CGEventRef","","",null,null],[4,"CGEventSource","","",null,null],[6,"CGEventSourceRef","","",null,null],[4,"CGDisplayMode","","",null,null],[6,"CGDisplayModeRef","","",null,null],[11,"from","core_graphics::color","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from_void","","",0,[[],["itemref",3]]],[11,"from_mut_void","","",0,[[],["itemmutref",3]]],[11,"from","core_graphics::color_space","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","core_graphics::context","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","core_graphics::data_provider","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","core_graphics::geometry","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","core_graphics::display","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from_void","","",43,[[],["itemref",3]]],[11,"from_mut_void","","",43,[[],["itemmutref",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from_void","","",44,[[],["itemref",3]]],[11,"from_mut_void","","",44,[[],["itemmutref",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","core_graphics::event","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","core_graphics::event_source","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","core_graphics::font","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","core_graphics::geometry","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","core_graphics::gradient","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","core_graphics::private","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","core_graphics::image","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","core_graphics::path","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","core_graphics::sys","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"as_concrete_TypeRef","core_graphics::display","",43,[[]]],[11,"wrap_under_get_rule","","",43,[[],["cfdictionary",3]]],[11,"as_CFTypeRef","","",43,[[]]],[11,"wrap_under_create_rule","","",43,[[],["cfdictionary",3]]],[11,"type_id","","",43,[[],["usize",15]]],[11,"as_concrete_TypeRef","","",44,[[]]],[11,"wrap_under_get_rule","","",44,[[],["cfarray",3]]],[11,"as_CFTypeRef","","",44,[[]]],[11,"wrap_under_create_rule","","",44,[[],["cfarray",3]]],[11,"type_id","","",44,[[],["usize",15]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"to_void","","",44,[[]]],[11,"to_void","","",43,[[]]],[11,"clone","","",43,[[],["cfdictionary",3]]],[11,"clone","","",44,[[],["cfarray",3]]],[11,"drop","","",43,[[]]],[11,"drop","","",44,[[]]],[11,"eq","","",43,[[["cfdictionary",3]],["bool",15]]],[11,"eq","","",44,[[["cfarray",3]],["bool",15]]],[11,"fmt","core_graphics::geometry","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",13,[[],["cgrect",3]]],[11,"default","","",14,[[],["cgpoint",3]]],[11,"default","","",30,[[],["cgaffinetransform",3]]],[11,"default","","",15,[[],["cgsize",3]]],[11,"clone","","",14,[[],["cgpoint",3]]],[11,"clone","","",30,[[],["cgaffinetransform",3]]],[11,"clone","","",15,[[],["cgsize",3]]],[11,"clone","","",13,[[],["cgrect",3]]],[11,"drop","core_graphics::color","",0,[[]]],[11,"drop","core_graphics::color_space","",1,[[]]],[11,"drop","core_graphics::context","",8,[[]]],[11,"drop","core_graphics::data_provider","",10,[[]]],[11,"drop","core_graphics::display","",18,[[]]],[11,"drop","core_graphics::event","",26,[[]]],[11,"drop","core_graphics::event_source","",28,[[]]],[11,"drop","core_graphics::font","",29,[[]]],[11,"drop","core_graphics::gradient","",32,[[]]],[11,"drop","core_graphics::private","",33,[[]]],[11,"drop","core_graphics::image","",37,[[]]],[11,"drop","core_graphics::path","",39,[[]]],[11,"as_ref","core_graphics::color_space","",1,[[],["cgcolorspaceref",3]]],[11,"as_ref","core_graphics::context","",8,[[],["cgcontextref",3]]],[11,"as_ref","core_graphics::data_provider","",10,[[],["cgdataproviderref",3]]],[11,"as_ref","core_graphics::display","",18,[[],["cgdisplaymoderef",3]]],[11,"as_ref","core_graphics::event","",26,[[],["cgeventref",3]]],[11,"as_ref","core_graphics::event_source","",28,[[],["cgeventsourceref",3]]],[11,"as_ref","core_graphics::font","",29,[[],["cgfontref",3]]],[11,"as_ref","core_graphics::gradient","",32,[[],["cggradientref",3]]],[11,"as_ref","core_graphics::image","",37,[[],["cgimageref",3]]],[11,"as_ref","core_graphics::path","",39,[[],["cgpathref",3]]],[11,"extend","core_graphics::event","",19,[[["intoiterator",8]]]],[11,"extend","core_graphics::gradient","",31,[[["intoiterator",8]]]],[11,"clone","core_graphics::color","",0,[[],["cgcolor",3]]],[11,"clone","core_graphics::color_space","",1,[[],["cgcolorspace",3]]],[11,"clone","core_graphics::context","",2,[[],["cgblendmode",4]]],[11,"clone","","",4,[[],["cglinecap",4]]],[11,"clone","","",5,[[],["cglinejoin",4]]],[11,"clone","","",6,[[],["cgpathdrawingmode",4]]],[11,"clone","","",7,[[],["cginterpolationquality",4]]],[11,"clone","","",8,[[],["cgcontext",3]]],[11,"clone","core_graphics::data_provider","",10,[[],["cgdataprovider",3]]],[11,"clone","core_graphics::display","",16,[[],["cgconfigureoption",4]]],[11,"clone","","",17,[[],["cgdisplay",3]]],[11,"clone","","",18,[[],["cgdisplaymode",3]]],[11,"clone","core_graphics::event","",19,[[],["cgeventflags",3]]],[11,"clone","","",22,[[],["cgeventtype",4]]],[11,"clone","","",24,[[],["cgmousebutton",4]]],[11,"clone","","",25,[[],["cgeventtaplocation",4]]],[11,"clone","","",26,[[],["cgevent",3]]],[11,"clone","core_graphics::event_source","",27,[[],["cgeventsourcestateid",4]]],[11,"clone","","",28,[[],["cgeventsource",3]]],[11,"clone","core_graphics::font","",29,[[],["cgfont",3]]],[11,"clone","core_graphics::gradient","",31,[[],["cggradientdrawingoptions",3]]],[11,"clone","","",32,[[],["cggradient",3]]],[11,"clone","core_graphics::image","",37,[[],["cgimage",3]]],[11,"clone","core_graphics::path","",39,[[],["cgpath",3]]],[11,"clone","","",40,[[],["cgpathelementtype",4]]],[11,"cmp","core_graphics::event","",19,[[["cgeventflags",3]],["ordering",4]]],[11,"cmp","core_graphics::gradient","",31,[[["cggradientdrawingoptions",3]],["ordering",4]]],[11,"eq","core_graphics::color","",0,[[["cgcolor",3]],["bool",15]]],[11,"eq","core_graphics::event","",19,[[["cgeventflags",3]],["bool",15]]],[11,"ne","","",19,[[["cgeventflags",3]],["bool",15]]],[11,"eq","core_graphics::gradient","",31,[[["cggradientdrawingoptions",3]],["bool",15]]],[11,"ne","","",31,[[["cggradientdrawingoptions",3]],["bool",15]]],[11,"eq","core_graphics::path","",40,[[["cgpathelementtype",4]],["bool",15]]],[11,"partial_cmp","core_graphics::event","",19,[[["cgeventflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["cgeventflags",3]],["bool",15]]],[11,"le","","",19,[[["cgeventflags",3]],["bool",15]]],[11,"gt","","",19,[[["cgeventflags",3]],["bool",15]]],[11,"ge","","",19,[[["cgeventflags",3]],["bool",15]]],[11,"partial_cmp","core_graphics::gradient","",31,[[["cggradientdrawingoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",31,[[["cggradientdrawingoptions",3]],["bool",15]]],[11,"le","","",31,[[["cggradientdrawingoptions",3]],["bool",15]]],[11,"gt","","",31,[[["cggradientdrawingoptions",3]],["bool",15]]],[11,"ge","","",31,[[["cggradientdrawingoptions",3]],["bool",15]]],[11,"to_owned","core_graphics::color_space","",42,[[],["cgcolorspace",3]]],[11,"to_owned","core_graphics::context","",9,[[],["cgcontext",3]]],[11,"to_owned","core_graphics::data_provider","",11,[[],["cgdataprovider",3]]],[11,"to_owned","core_graphics::display","",45,[[],["cgdisplaymode",3]]],[11,"to_owned","core_graphics::event","",46,[[],["cgevent",3]]],[11,"to_owned","core_graphics::event_source","",47,[[],["cgeventsource",3]]],[11,"to_owned","core_graphics::font","",48,[[],["cgfont",3]]],[11,"to_owned","core_graphics::gradient","",49,[[],["cggradient",3]]],[11,"to_owned","core_graphics::image","",38,[[],["cgimage",3]]],[11,"to_owned","core_graphics::path","",50,[[],["cgpath",3]]],[11,"deref","core_graphics::color_space","",1,[[],["cgcolorspaceref",3]]],[11,"deref","core_graphics::context","",8,[[],["cgcontextref",3]]],[11,"deref","core_graphics::data_provider","",10,[[],["cgdataproviderref",3]]],[11,"deref","core_graphics::display","",18,[[],["cgdisplaymoderef",3]]],[11,"deref","core_graphics::event","",26,[[],["cgeventref",3]]],[11,"deref","core_graphics::event_source","",28,[[],["cgeventsourceref",3]]],[11,"deref","core_graphics::font","",29,[[],["cgfontref",3]]],[11,"deref","core_graphics::gradient","",32,[[],["cggradientref",3]]],[11,"deref","core_graphics::image","",37,[[],["cgimageref",3]]],[11,"deref","core_graphics::path","",39,[[],["cgpathref",3]]],[11,"deref","","",51,[[],["cgpathelement",3]]],[11,"deref_mut","core_graphics::color_space","",1,[[],["cgcolorspaceref",3]]],[11,"deref_mut","core_graphics::context","",8,[[],["cgcontextref",3]]],[11,"deref_mut","core_graphics::data_provider","",10,[[],["cgdataproviderref",3]]],[11,"deref_mut","core_graphics::display","",18,[[],["cgdisplaymoderef",3]]],[11,"deref_mut","core_graphics::event","",26,[[],["cgeventref",3]]],[11,"deref_mut","core_graphics::event_source","",28,[[],["cgeventsourceref",3]]],[11,"deref_mut","core_graphics::font","",29,[[],["cgfontref",3]]],[11,"deref_mut","core_graphics::gradient","",32,[[],["cggradientref",3]]],[11,"deref_mut","core_graphics::image","",37,[[],["cgimageref",3]]],[11,"deref_mut","core_graphics::path","",39,[[],["cgpathref",3]]],[11,"fmt","core_graphics::context","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","core_graphics::display","",17,[[["formatter",3]],["result",6]]],[11,"fmt","core_graphics::event","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","core_graphics::event_source","",27,[[["formatter",3]],["result",6]]],[11,"fmt","core_graphics::gradient","",31,[[["formatter",3]],["result",6]]],[11,"fmt","core_graphics::path","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","core_graphics::event","Returns the set difference of the two sets of flags.",19,[[["cgeventflags",3]],["cgeventflags",3]]],[11,"sub","core_graphics::gradient","Returns the set difference of the two sets of flags.",31,[[["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]]],[11,"sub_assign","core_graphics::event","Disables all flags enabled in the set.",19,[[["cgeventflags",3]]]],[11,"sub_assign","core_graphics::gradient","Disables all flags enabled in the set.",31,[[["cggradientdrawingoptions",3]]]],[11,"not","core_graphics::event","Returns the complement of this set of flags.",19,[[],["cgeventflags",3]]],[11,"not","core_graphics::gradient","Returns the complement of this set of flags.",31,[[],["cggradientdrawingoptions",3]]],[11,"bitand","core_graphics::event","Returns the intersection between the two sets of flags.",19,[[["cgeventflags",3]],["cgeventflags",3]]],[11,"bitand","core_graphics::gradient","Returns the intersection between the two sets of flags.",31,[[["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]]],[11,"bitor","core_graphics::event","Returns the union of the two sets of flags.",19,[[["cgeventflags",3]],["cgeventflags",3]]],[11,"bitor","core_graphics::gradient","Returns the union of the two sets of flags.",31,[[["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]]],[11,"bitxor","core_graphics::event","Returns the left flags, but with all the right flags …",19,[[["cgeventflags",3]],["cgeventflags",3]]],[11,"bitxor","core_graphics::gradient","Returns the left flags, but with all the right flags …",31,[[["cggradientdrawingoptions",3]],["cggradientdrawingoptions",3]]],[11,"bitand_assign","core_graphics::event","Disables all flags disabled in the set.",19,[[["cgeventflags",3]]]],[11,"bitand_assign","core_graphics::gradient","Disables all flags disabled in the set.",31,[[["cggradientdrawingoptions",3]]]],[11,"bitor_assign","core_graphics::event","Adds the set of flags.",19,[[["cgeventflags",3]]]],[11,"bitor_assign","core_graphics::gradient","Adds the set of flags.",31,[[["cggradientdrawingoptions",3]]]],[11,"bitxor_assign","core_graphics::event","Toggles the set of flags.",19,[[["cgeventflags",3]]]],[11,"bitxor_assign","core_graphics::gradient","Toggles the set of flags.",31,[[["cggradientdrawingoptions",3]]]],[11,"hash","core_graphics::event","",19,[[]]],[11,"hash","core_graphics::gradient","",31,[[]]],[11,"borrow","core_graphics::color_space","",1,[[],["cgcolorspaceref",3]]],[11,"borrow","core_graphics::context","",8,[[],["cgcontextref",3]]],[11,"borrow","core_graphics::data_provider","",10,[[],["cgdataproviderref",3]]],[11,"borrow","core_graphics::display","",18,[[],["cgdisplaymoderef",3]]],[11,"borrow","core_graphics::event","",26,[[],["cgeventref",3]]],[11,"borrow","core_graphics::event_source","",28,[[],["cgeventsourceref",3]]],[11,"borrow","core_graphics::font","",29,[[],["cgfontref",3]]],[11,"borrow","core_graphics::gradient","",32,[[],["cggradientref",3]]],[11,"borrow","core_graphics::image","",37,[[],["cgimageref",3]]],[11,"borrow","core_graphics::path","",39,[[],["cgpathref",3]]],[11,"from_iter","core_graphics::event","",19,[[["intoiterator",8]],["cgeventflags",3]]],[11,"from_iter","core_graphics::gradient","",31,[[["intoiterator",8]],["cggradientdrawingoptions",3]]],[11,"fmt","core_graphics::event","",19,[[["formatter",3]],["result",6]]],[11,"fmt","core_graphics::gradient","",31,[[["formatter",3]],["result",6]]],[11,"fmt","core_graphics::event","",19,[[["formatter",3]],["result",6]]],[11,"fmt","core_graphics::gradient","",31,[[["formatter",3]],["result",6]]],[11,"fmt","core_graphics::event","",19,[[["formatter",3]],["result",6]]],[11,"fmt","core_graphics::gradient","",31,[[["formatter",3]],["result",6]]],[11,"fmt","core_graphics::event","",19,[[["formatter",3]],["result",6]]],[11,"fmt","core_graphics::gradient","",31,[[["formatter",3]],["result",6]]],[11,"as_concrete_TypeRef","core_graphics::color","",0,[[],["cgcolorref",6]]],[11,"wrap_under_get_rule","","",0,[[["cgcolorref",6]]]],[11,"as_CFTypeRef","","",0,[[],["cftyperef",6]]],[11,"wrap_under_create_rule","","",0,[[["cgcolorref",6]]]],[11,"type_id","","",0,[[],["cftypeid",6]]],[11,"to_void","","",0,[[]]],[11,"to_void","core_graphics","",63,[[]]],[11,"new","core_graphics::geometry","",13,[[["cgsize",3],["cgpoint",3]],["cgrect",3]]],[11,"inset","","",13,[[["cgsize",3]],["cgrect",3]]],[11,"from_dict_representation","","",13,[[["cfdictionary",3]],[["option",4],["cgrect",3]]]],[11,"is_empty","","",13,[[],["bool",15]]],[11,"is_intersects","","",13,[[["cgrect",3]],["bool",15]]],[11,"apply_transform","","",13,[[["cgaffinetransform",3]],["cgrect",3]]],[11,"new","","",14,[[["f64",15]],["cgpoint",3]]],[11,"apply_transform","","",14,[[["cgaffinetransform",3]],["cgpoint",3]]],[11,"new","","",15,[[["f64",15]],["cgsize",3]]],[11,"apply_transform","","",15,[[["cgaffinetransform",3]],["cgsize",3]]],[11,"from_CFType_pairs","core_graphics::display","",43,[[],["cfdictionary",3]]],[11,"to_untyped","","",43,[[],["cfdictionary",3]]],[11,"to_mutable","","Returns a <code>CFMutableDictionary</code> pointing to the same …",43,[[],["cfmutabledictionary",3]]],[11,"into_untyped","","Returns the same dictionary, but with the types reset to …",43,[[],["cfdictionary",3]]],[11,"len","","",43,[[],["usize",15]]],[11,"is_empty","","",43,[[],["bool",15]]],[11,"contains_key","","",43,[[],["bool",15]]],[11,"find","","",43,[[],[["itemref",3],["option",4]]]],[11,"get","","PanicsPanics if the key is not present in the dictionary. …",43,[[],["itemref",3]]],[11,"get_keys_and_values","","",43,[[]]],[11,"from_copyable","","Creates a new <code>CFArray</code> with the given elements, which must …",44,[[],["cfarray",3]]],[11,"from_CFTypes","","Creates a new <code>CFArray</code> with the given elements, which must …",44,[[],["cfarray",3]]],[11,"to_untyped","","",44,[[],["cfarray",3]]],[11,"into_untyped","","Returns the same array, but with the type reset to void …",44,[[],["cfarray",3]]],[11,"iter","","Iterates over the elements of this <code>CFArray</code>.",44,[[],["cfarrayiterator",3]]],[11,"len","","",44,[[],["isize",15]]],[11,"get_unchecked","","",44,[[["isize",15]],["itemref",3]]],[11,"get","","",44,[[["isize",15]],[["option",4],["itemref",3]]]],[11,"get_values","","",44,[[["cfrange",3]],[["vec",3],["global",3]]]],[11,"get_all_values","","",44,[[],[["vec",3],["global",3]]]],[11,"new","core_graphics::geometry","",30,[[["f64",15]],["cgaffinetransform",3]]],[11,"invert","","",30,[[],["cgaffinetransform",3]]]],"p":[[3,"CGColor"],[3,"CGColorSpace"],[4,"CGBlendMode"],[4,"CGTextDrawingMode"],[4,"CGLineCap"],[4,"CGLineJoin"],[4,"CGPathDrawingMode"],[4,"CGInterpolationQuality"],[3,"CGContext"],[3,"CGContextRef"],[3,"CGDataProvider"],[3,"CGDataProviderRef"],[8,"CustomData"],[3,"CGRect"],[3,"CGPoint"],[3,"CGSize"],[4,"CGConfigureOption"],[3,"CGDisplay"],[3,"CGDisplayMode"],[3,"CGEventFlags"],[3,"KeyCode"],[3,"ScrollEventUnit"],[4,"CGEventType"],[3,"EventField"],[4,"CGMouseButton"],[4,"CGEventTapLocation"],[3,"CGEvent"],[4,"CGEventSourceStateID"],[3,"CGEventSource"],[3,"CGFont"],[3,"CGAffineTransform"],[3,"CGGradientDrawingOptions"],[3,"CGGradient"],[3,"CGSRegion"],[3,"CGSSurface"],[4,"CGImageAlphaInfo"],[4,"CGImageByteOrderInfo"],[3,"CGImage"],[3,"CGImageRef"],[3,"CGPath"],[4,"CGPathElementType"],[3,"CGPathElement"],[3,"CGColorSpaceRef"],[3,"CFDictionary"],[3,"CFArray"],[3,"CGDisplayModeRef"],[3,"CGEventRef"],[3,"CGEventSourceRef"],[3,"CGFontRef"],[3,"CGGradientRef"],[3,"CGPathRef"],[3,"CGPathElementRef"],[4,"CGEvent"],[4,"CGEventSource"],[4,"CGDisplayMode"],[4,"CGImage"],[3,"__CGColor"],[4,"CGColorSpace"],[4,"CGPath"],[4,"CGDataProvider"],[4,"CGFont"],[4,"CGContext"],[4,"CGGradient"],[6,"CGColorRef"]]},\
"core_graphics_types":{"doc":"","i":[[0,"base","core_graphics_types","",null,null],[6,"boolean_t","core_graphics_types::base","",null,null],[6,"CGFloat","","",null,null],[6,"CGError","","",null,null],[6,"CGGlyph","","",null,null],[0,"geometry","core_graphics_types","",null,null],[17,"CG_ZERO_POINT","core_graphics_types::geometry","",null,null],[17,"CG_ZERO_SIZE","","",null,null],[17,"CG_ZERO_RECT","","",null,null],[17,"CG_AFFINE_TRANSFORM_IDENTITY","","",null,null],[3,"CGSize","","",null,null],[12,"width","","",0,null],[12,"height","","",0,null],[11,"new","","",0,[[["cgfloat",6]],["cgsize",3]]],[11,"apply_transform","","",0,[[["cgaffinetransform",3]],["cgsize",3]]],[3,"CGPoint","","",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[11,"new","","",1,[[["cgfloat",6]],["cgpoint",3]]],[11,"apply_transform","","",1,[[["cgaffinetransform",3]],["cgpoint",3]]],[3,"CGRect","","",null,null],[12,"origin","","",2,null],[12,"size","","",2,null],[11,"new","","",2,[[["cgpoint",3],["cgsize",3]],["cgrect",3]]],[11,"inset","","",2,[[["cgsize",3]],["cgrect",3]]],[11,"from_dict_representation","","",2,[[["cfdictionary",3]],[["option",4],["cgrect",3]]]],[11,"is_empty","","",2,[[],["bool",15]]],[11,"is_intersects","","",2,[[["cgrect",3]],["bool",15]]],[11,"apply_transform","","",2,[[["cgaffinetransform",3]],["cgrect",3]]],[3,"CGAffineTransform","","",null,null],[12,"a","","",3,null],[12,"b","","",3,null],[12,"c","","",3,null],[12,"d","","",3,null],[12,"tx","","",3,null],[12,"ty","","",3,null],[11,"new","","",3,[[["cgfloat",6]],["cgaffinetransform",3]]],[11,"invert","","",3,[[],["cgaffinetransform",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone","","",0,[[],["cgsize",3]]],[11,"clone","","",1,[[],["cgpoint",3]]],[11,"clone","","",2,[[],["cgrect",3]]],[11,"clone","","",3,[[],["cgaffinetransform",3]]],[11,"default","","",0,[[],["cgsize",3]]],[11,"default","","",1,[[],["cgpoint",3]]],[11,"default","","",2,[[],["cgrect",3]]],[11,"default","","",3,[[],["cgaffinetransform",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]]],"p":[[3,"CGSize"],[3,"CGPoint"],[3,"CGRect"],[3,"CGAffineTransform"]]},\
"core_video_sys":{"doc":"","i":[[0,"base","core_video_sys","",null,null],[7,"kCVZeroTime","core_video_sys::base","",null,null],[7,"kCVIndefiniteTime","","",null,null],[6,"CVOptionFlags","","",null,null],[6,"CVSMPTETimeType","","",null,null],[6,"CVSMPTETimeFlags","","",null,null],[6,"CVTimeFlags","","",null,null],[6,"CVTimeStampFlags","","",null,null],[17,"kCVSMPTETimeType24","","",null,null],[17,"kCVSMPTETimeType25","","",null,null],[17,"kCVSMPTETimeType30Drop","","",null,null],[17,"kCVSMPTETimeType30","","",null,null],[17,"kCVSMPTETimeType2997","","",null,null],[17,"kCVSMPTETimeType2997Drop","","",null,null],[17,"kCVSMPTETimeType60","","",null,null],[17,"kCVSMPTETimeType5994","","",null,null],[17,"kCVSMPTETimeValid","","",null,null],[17,"kCVSMPTETimeRunning","","",null,null],[17,"kCVTimeIsIndefinite","","",null,null],[3,"CVSMPTETime","","",null,null],[12,"subframes","","",0,null],[12,"subframeDivisor","","",0,null],[12,"counter","","",0,null],[12,"type_","","",0,null],[12,"flags","","",0,null],[12,"hours","","",0,null],[12,"minutes","","",0,null],[12,"seconds","","",0,null],[12,"frames","","",0,null],[3,"CVTime","","",null,null],[12,"timeValue","","",1,null],[12,"timeScale","","",1,null],[12,"flags","","",1,null],[3,"CVTimeStamp","","",null,null],[12,"version","","",2,null],[12,"videoTimeScale","","",2,null],[12,"videoTime","","",2,null],[12,"hostTime","","",2,null],[12,"rateScalar","","",2,null],[12,"videoRefreshPeriod","","",2,null],[12,"smpteTime","","",2,null],[12,"flags","","",2,null],[12,"reserved","","",2,null],[17,"kCVTimeStampVideoTimeValid","","",null,null],[17,"kCVTimeStampHostTimeValid","","",null,null],[17,"kCVTimeStampSMPTETimeValid","","",null,null],[17,"kCVTimeStampVideoRefreshPeriodValid","","",null,null],[17,"kCVTimeStampRateScalarValid","","",null,null],[17,"kCVTimeStampTopField","","",null,null],[17,"kCVTimeStampBottomField","","",null,null],[17,"kCVTimeStampVideoHostTimeValid","","",null,null],[17,"kCVTimeStampIsInterlaced","","",null,null],[0,"buffer","core_video_sys","",null,null],[7,"kCVBufferPropagatedAttachmentsKey","core_video_sys::buffer","",null,null],[7,"kCVBufferNonPropagatedAttachmentsKey","","",null,null],[7,"kCVBufferMovieTimeKey","","",null,null],[7,"kCVBufferTimeValueKey","","",null,null],[7,"kCVBufferTimeScaleKey","","",null,null],[5,"CVBufferRetain","","",null,null],[5,"CVBufferRelease","","",null,null],[5,"CVBufferSetAttachment","","",null,null],[5,"CVBufferGetAttachment","","",null,null],[5,"CVBufferRemoveAttachment","","",null,null],[5,"CVBufferRemoveAllAttachments","","",null,null],[5,"CVBufferGetAttachments","","",null,null],[5,"CVBufferSetAttachments","","",null,null],[5,"CVBufferPropagateAttachments","","",null,null],[4,"__CVBuffer","","",null,null],[6,"CVBufferRef","","",null,null],[6,"CVAttachmentMode","","",null,null],[17,"kCVAttachmentMode_ShouldNotPropagate","","",null,null],[17,"kCVAttachmentMode_ShouldPropagate","","",null,null],[0,"return_","core_video_sys","",null,null],[6,"CVReturn","core_video_sys::return_","",null,null],[17,"kCVReturnSuccess","","",null,null],[17,"kCVReturnFirst","","",null,null],[17,"kCVReturnError","","",null,null],[17,"kCVReturnInvalidArgument","","",null,null],[17,"kCVReturnAllocationFailed","","",null,null],[17,"kCVReturnUnsupported","","",null,null],[17,"kCVReturnInvalidDisplay","","",null,null],[17,"kCVReturnDisplayLinkAlreadyRunning","","",null,null],[17,"kCVReturnDisplayLinkNotRunning","","",null,null],[17,"kCVReturnDisplayLinkCallbacksNotSet","","",null,null],[17,"kCVReturnInvalidPixelFormat","","",null,null],[17,"kCVReturnInvalidSize","","",null,null],[17,"kCVReturnInvalidPixelBufferAttributes","","",null,null],[17,"kCVReturnPixelBufferNotOpenGLCompatible","","",null,null],[17,"kCVReturnPixelBufferNotMetalCompatible","","",null,null],[17,"kCVReturnWouldExceedAllocationThreshold","","",null,null],[17,"kCVReturnPoolAllocationFailed","","",null,null],[17,"kCVReturnInvalidPoolAttributes","","",null,null],[17,"kCVReturnRetry","","",null,null],[17,"kCVReturnLast","","",null,null],[0,"image_buffer","core_video_sys","",null,null],[6,"CVImageBufferRef","core_video_sys::image_buffer","",null,null],[0,"pixel_buffer","core_video_sys","",null,null],[7,"kCVPixelBufferPixelFormatTypeKey","core_video_sys::pixel_buffer","",null,null],[7,"kCVPixelBufferMemoryAllocatorKey","","",null,null],[7,"kCVPixelBufferWidthKey","","",null,null],[7,"kCVPixelBufferHeightKey","","",null,null],[7,"kCVPixelBufferExtendedPixelsLeftKey","","",null,null],[7,"kCVPixelBufferExtendedPixelsTopKey","","",null,null],[7,"kCVPixelBufferExtendedPixelsRightKey","","",null,null],[7,"kCVPixelBufferExtendedPixelsBottomKey","","",null,null],[7,"kCVPixelBufferBytesPerRowAlignmentKey","","",null,null],[7,"kCVPixelBufferCGBitmapContextCompatibilityKey","","",null,null],[7,"kCVPixelBufferCGImageCompatibilityKey","","",null,null],[7,"kCVPixelBufferOpenGLCompatibilityKey","","",null,null],[7,"kCVPixelBufferPlaneAlignmentKey","","",null,null],[7,"kCVPixelBufferIOSurfacePropertiesKey","","",null,null],[7,"kCVPixelBufferOpenGLESCompatibilityKey","","",null,null],[7,"kCVPixelBufferMetalCompatibilityKey","","",null,null],[7,"kCVPixelBufferOpenGLTextureCacheCompatibilityKey","","",null,null],[7,"kCVPixelBufferOpenGLESTextureCacheCompatibilityKey","","",null,null],[5,"CVBufferGetTypeID","","",null,null],[5,"CVPixelBufferRetain","","",null,null],[5,"CVPixelBufferRelease","","",null,null],[5,"CVPixelBufferCreateResolvedAttributesDictionary","","",null,null],[5,"CVPixelBufferCreate","","",null,null],[5,"CVPixelBufferLockBaseAddress","","",null,null],[5,"CVPixelBufferUnlockBaseAddress","","",null,null],[5,"CVPixelBufferGetWidth","","",null,null],[5,"CVPixelBufferGetHeight","","",null,null],[5,"CVPixelBufferGetPixelFormatType","","",null,null],[5,"CVPixelBufferGetBaseAddress","","",null,null],[5,"CVPixelBufferGetBytesPerRow","","",null,null],[5,"CVPixelBufferIsPlanar","","",null,null],[5,"CVPixelBufferGetPlaneCount","","",null,null],[5,"CVPixelBufferGetWidthOfPlane","","",null,null],[5,"CVPixelBufferGetHeightOfPlane","","",null,null],[5,"CVPixelBufferGetBaseAddressOfPlane","","",null,null],[5,"CVPixelBufferGetBytesPerRowOfPlane","","",null,null],[5,"CVPixelBufferGetExtendedPixels","","",null,null],[5,"CVPixelBufferFillExtendedPixels","","",null,null],[6,"CVPixelBufferLockFlags","","",null,null],[6,"CVPixelBufferRef","","",null,null],[17,"kCVPixelFormatType_1Monochrome","","",null,null],[17,"kCVPixelFormatType_2Indexed","","",null,null],[17,"kCVPixelFormatType_4Indexed","","",null,null],[17,"kCVPixelFormatType_8Indexed","","",null,null],[17,"kCVPixelFormatType_1IndexedGray_WhiteIsZero","","",null,null],[17,"kCVPixelFormatType_2IndexedGray_WhiteIsZero","","",null,null],[17,"kCVPixelFormatType_4IndexedGray_WhiteIsZero","","",null,null],[17,"kCVPixelFormatType_8IndexedGray_WhiteIsZero","","",null,null],[17,"kCVPixelFormatType_16BE555","","",null,null],[17,"kCVPixelFormatType_16LE555","","",null,null],[17,"kCVPixelFormatType_16LE5551","","",null,null],[17,"kCVPixelFormatType_16BE565","","",null,null],[17,"kCVPixelFormatType_16LE565","","",null,null],[17,"kCVPixelFormatType_24RGB","","",null,null],[17,"kCVPixelFormatType_24BGR","","",null,null],[17,"kCVPixelFormatType_32ARGB","","",null,null],[17,"kCVPixelFormatType_32BGRA","","",null,null],[17,"kCVPixelFormatType_32ABGR","","",null,null],[17,"kCVPixelFormatType_32RGBA","","",null,null],[17,"kCVPixelFormatType_64ARGB","","",null,null],[17,"kCVPixelFormatType_48RGB","","",null,null],[17,"kCVPixelFormatType_32AlphaGray","","",null,null],[17,"kCVPixelFormatType_16Gray","","",null,null],[17,"kCVPixelFormatType_30RGB","","",null,null],[17,"kCVPixelFormatType_422YpCbCr8","","",null,null],[17,"kCVPixelFormatType_4444YpCbCrA8","","",null,null],[17,"kCVPixelFormatType_4444YpCbCrA8R","","",null,null],[17,"kCVPixelFormatType_4444AYpCbCr8","","",null,null],[17,"kCVPixelFormatType_4444AYpCbCr16","","",null,null],[17,"kCVPixelFormatType_444YpCbCr8","","",null,null],[17,"kCVPixelFormatType_422YpCbCr16","","",null,null],[17,"kCVPixelFormatType_422YpCbCr10","","",null,null],[17,"kCVPixelFormatType_444YpCbCr10","","",null,null],[17,"kCVPixelFormatType_420YpCbCr8Planar","","",null,null],[17,"kCVPixelFormatType_420YpCbCr8PlanarFullRange","","",null,null],[17,"kCVPixelFormatType_422YpCbCr_4A_8BiPlanar","","",null,null],[17,"kCVPixelFormatType_420YpCbCr8BiPlanarVideoRange","","",null,null],[17,"kCVPixelFormatType_420YpCbCr8BiPlanarFullRange","","",null,null],[17,"kCVPixelFormatType_422YpCbCr8_yuvs","","",null,null],[17,"kCVPixelFormatType_422YpCbCr8FullRange","","",null,null],[17,"kCVPixelFormatType_OneComponent8","","",null,null],[17,"kCVPixelFormatType_TwoComponent8","","",null,null],[17,"kCVPixelFormatType_30RGBLEPackedWideGamut","","",null,null],[17,"kCVPixelFormatType_ARGB2101010LEPacked","","",null,null],[17,"kCVPixelFormatType_OneComponent16Half","","",null,null],[17,"kCVPixelFormatType_OneComponent32Float","","",null,null],[17,"kCVPixelFormatType_TwoComponent16Half","","",null,null],[17,"kCVPixelFormatType_TwoComponent32Float","","",null,null],[17,"kCVPixelFormatType_64RGBAHalf","","",null,null],[17,"kCVPixelFormatType_128RGBAFloat","","",null,null],[17,"kCVPixelFormatType_14Bayer_GRBG","","",null,null],[17,"kCVPixelFormatType_14Bayer_RGGB","","",null,null],[17,"kCVPixelFormatType_14Bayer_BGGR","","",null,null],[17,"kCVPixelFormatType_14Bayer_GBRG","","",null,null],[17,"kCVPixelFormatType_DisparityFloat16","","",null,null],[17,"kCVPixelFormatType_DisparityFloat32","","",null,null],[17,"kCVPixelFormatType_DepthFloat16","","",null,null],[17,"kCVPixelFormatType_DepthFloat32","","",null,null],[17,"kCVPixelFormatType_420YpCbCr10BiPlanarVideoRange","","",null,null],[17,"kCVPixelFormatType_422YpCbCr10BiPlanarVideoRange","","",null,null],[17,"kCVPixelFormatType_444YpCbCr10BiPlanarVideoRange","","",null,null],[17,"kCVPixelFormatType_420YpCbCr10BiPlanarFullRange","","",null,null],[17,"kCVPixelFormatType_422YpCbCr10BiPlanarFullRange","","",null,null],[17,"kCVPixelFormatType_444YpCbCr10BiPlanarFullRange","","",null,null],[17,"kCVPixelBufferLock_ReadOnly","","",null,null],[3,"CVPlanarComponentInfo","","",null,null],[12,"offset","","offset from main base address to base address of this …",3,null],[12,"rowBytes","","bytes per row of this plane, big-endian",3,null],[3,"CVPlanarPixelBufferInfo","","",null,null],[12,"componentInfo","","",4,null],[3,"CVPlanarPixelBufferInfo_YCbCrPlanar","","",null,null],[12,"componentInfoY","","",5,null],[12,"componentInfoCb","","",5,null],[12,"componentInfoCr","","",5,null],[3,"CVPlanarPixelBufferInfo_YCbCrBiPlanar","","",null,null],[12,"componentInfoY","","",6,null],[12,"componentInfoCbCr","","",6,null],[6,"CVPixelBufferReleaseBytesCallback","","",null,null],[6,"CVPixelBufferReleasePlanarBytesCallback","","",null,null],[0,"pixel_buffer_pool","core_video_sys","",null,null],[7,"kCVPixelBufferPoolMinimumBufferCountKey","core_video_sys::pixel_buffer_pool","",null,null],[7,"kCVPixelBufferPoolMaximumBufferAgeKey","","",null,null],[7,"kCVPixelBufferPoolAllocationThresholdKey","","",null,null],[7,"kCVPixelBufferPoolFreeBufferNotification","","",null,null],[5,"CVPixelBufferPoolGetTypeID","","",null,null],[5,"CVPixelBufferPoolRetain","","",null,null],[5,"CVPixelBufferPoolRelease","","",null,null],[5,"CVPixelBufferPoolCreate","","",null,null],[5,"CVPixelBufferPoolGetAttributes","","",null,null],[5,"CVPixelBufferPoolGetPixelBufferAttributes","","",null,null],[5,"CVPixelBufferPoolCreatePixelBuffer","","",null,null],[5,"CVPixelBufferPoolCreatePixelBufferWithAuxAttributes","","",null,null],[5,"CVPixelBufferPoolFlush","","",null,null],[6,"CVPixelBufferPoolRef","","",null,null],[6,"CVPixelBufferPoolFlushFlags","","",null,null],[17,"kCVPixelBufferPoolFlushExcessBuffers","","",null,null],[0,"pixel_format_description","core_video_sys","",null,null],[7,"kCVPixelFormatName","core_video_sys::pixel_format_description","",null,null],[7,"kCVPixelFormatConstant","","QuickTime/QuickDraw Pixel Format Type constant (OSType)",null,null],[7,"kCVPixelFormatCodecType","","This is the codec type constant, i.e. \'2vuy\' or …",null,null],[7,"kCVPixelFormatFourCC","","This is the equivalent Microsoft FourCC code for this …",null,null],[7,"kCVPixelFormatContainsAlpha","","kCFBooleanTrue indicates that the format contains alpha …",null,null],[7,"kCVPixelFormatContainsYCbCr","","kCFBooleanTrue indicates that the format contains YCbCr …",null,null],[7,"kCVPixelFormatContainsRGB","","kCFBooleanTrue indicates that the format contains RGB data",null,null],[7,"kCVPixelFormatComponentRange","","",null,null],[7,"kCVPixelFormatComponentRange_VideoRange","","",null,null],[7,"kCVPixelFormatComponentRange_FullRange","","",null,null],[7,"kCVPixelFormatComponentRange_WideRange","","",null,null],[7,"kCVPixelFormatPlanes","","All buffers have one or more image planes. Each plane may …",null,null],[7,"kCVPixelFormatBlockWidth","","",null,null],[7,"kCVPixelFormatBlockHeight","","",null,null],[7,"kCVPixelFormatBitsPerBlock","","This value must be present. For simple pixel formats this …",null,null],[7,"kCVPixelFormatBlockHorizontalAlignment","","Used to state requirements on block multiples.  v210 …",null,null],[7,"kCVPixelFormatBlockVerticalAlignment","","",null,null],[7,"kCVPixelFormatBlackBlock","","CFData containing the bit pattern for a block of black …",null,null],[7,"kCVPixelFormatHorizontalSubsampling","","Subsampling information for this plane.  Assumed to be …",null,null],[7,"kCVPixelFormatVerticalSubsampling","","",null,null],[7,"kCVPixelFormatOpenGLFormat","","If present, these two keys describe the OpenGL format and …",null,null],[7,"kCVPixelFormatOpenGLType","","",null,null],[7,"kCVPixelFormatOpenGLInternalFormat","","",null,null],[7,"kCVPixelFormatCGBitmapInfo","","CGBitmapInfo value, if required",null,null],[7,"kCVPixelFormatQDCompatibility","","Pixel format compatibility flags",null,null],[7,"kCVPixelFormatCGBitmapContextCompatibility","","",null,null],[7,"kCVPixelFormatCGImageCompatibility","","",null,null],[7,"kCVPixelFormatOpenGLCompatibility","","",null,null],[7,"kCVPixelFormatOpenGLESCompatibility","","",null,null],[7,"kCVPixelFormatFillExtendedPixelsCallback","","",null,null],[5,"CVPixelFormatDescriptionCreateWithPixelFormatType","","",null,null],[5,"CVPixelFormatDescriptionArrayCreateWithAllPixelFormatTypes","","",null,null],[5,"CVPixelFormatDescriptionRegisterDescriptionWithPixelFormatType","","",null,null],[6,"CVFillExtendedPixelsCallBack","","",null,null],[3,"CVFillExtendedPixelsCallBackData","","",null,null],[12,"version","","",7,null],[12,"fillCallBack","","",7,null],[12,"refCon","","",7,null],[0,"host_time","core_video_sys","",null,null],[5,"CVGetCurrentHostTime","core_video_sys::host_time","@function   CVGetCurrentHostTime @abstract   Retrieve the …",null,null],[5,"CVGetHostClockFrequency","","@function   CVGetHostClockFrequency @abstract   Retrieve …",null,null],[5,"CVGetHostClockMinimumTimeDelta","","@function   CVGetHostClockMinimumTimeDelta @abstract   …",null,null],[0,"display_link","core_video_sys","",null,null],[5,"CVDisplayLinkGetTypeID","core_video_sys::display_link","",null,null],[5,"CVDisplayLinkCreateWithCGDisplay","","",null,null],[5,"CVDisplayLinkGetNominalOutputVideoRefreshPeriod","","",null,null],[5,"CVDisplayLinkRelease","","",null,null],[4,"__CVDisplayLink","","",null,null],[6,"CVDisplayLinkRef","","",null,null],[0,"opengl_buffer","core_video_sys","",null,null],[7,"kCVOpenGLBufferWidth","core_video_sys::opengl_buffer","",null,null],[7,"kCVOpenGLBufferHeight","","",null,null],[7,"kCVOpenGLBufferTarget","","",null,null],[7,"kCVOpenGLBufferInternalFormat","","",null,null],[7,"kCVOpenGLBufferMaximumMipmapLevel","","",null,null],[5,"CVOpenGLBufferGetTypeID","","",null,null],[5,"CVOpenGLBufferRetain","","",null,null],[5,"CVOpenGLBufferRelease","","",null,null],[5,"CVOpenGLBufferCreate","","",null,null],[5,"CVOpenGLBufferGetAttributes","","",null,null],[5,"CVOpenGLBufferAttach","","",null,null],[6,"CVOpenGLBufferRef","","",null,null],[6,"CGLContextObj","","",null,null],[6,"CGLPixelFormatObj","","",null,null],[0,"opengl_buffer_pool","core_video_sys","",null,null],[7,"kCVOpenGLBufferPoolMinimumBufferCountKey","core_video_sys::opengl_buffer_pool","",null,null],[7,"kCVOpenGLBufferPoolMaximumBufferAgeKey","","",null,null],[5,"CVOpenGLBufferPoolGetTypeID","","",null,null],[5,"CVOpenGLBufferPoolRetain","","",null,null],[5,"CVOpenGLBufferPoolRelease","","",null,null],[5,"CVOpenGLBufferPoolCreate","","",null,null],[5,"CVOpenGLBufferPoolGetAttributes","","",null,null],[5,"CVOpenGLBufferPoolCreateOpenGLBuffer","","",null,null],[6,"CVOpenGLBufferPoolRef","","",null,null],[0,"opengl_texture","core_video_sys","",null,null],[5,"CVOpenGLTextureGetTypeID","core_video_sys::opengl_texture","",null,null],[5,"CVOpenGLTextureRetain","","",null,null],[5,"CVOpenGLTextureRelease","","",null,null],[5,"CVOpenGLTextureGetTarget","","",null,null],[5,"CVOpenGLTextureGetName","","",null,null],[5,"CVOpenGLTextureIsFlipped","","",null,null],[6,"CVOpenGLTextureRef","","",null,null],[0,"opengl_texture_cache","core_video_sys","",null,null],[7,"kCVOpenGLTextureCacheChromaSamplingModeKey","core_video_sys::opengl_texture_cache","",null,null],[7,"kCVOpenGLTextureCacheChromaSamplingModeAutomatic","","",null,null],[7,"kCVOpenGLTextureCacheChromaSamplingModeHighestQuality","","",null,null],[7,"kCVOpenGLTextureCacheChromaSamplingModeBestPerformance","","",null,null],[5,"CVOpenGLTextureCacheGetTypeID","","",null,null],[5,"CVOpenGLTextureCacheRetain","","",null,null],[5,"CVOpenGLTextureCacheRelease","","",null,null],[5,"CVOpenGLTextureCacheCreate","","",null,null],[5,"CVOpenGLTextureCacheCreateTextureFromImage","","",null,null],[5,"CVOpenGLTextureCacheFlush","","",null,null],[6,"CVOpenGLTextureCacheRef","","",null,null],[0,"open_gl_es_texture","core_video_sys","",null,null],[5,"CVOpenGLESTextureGetTypeID","core_video_sys::open_gl_es_texture","",null,null],[5,"CVOpenGLESTextureGetTarget","","",null,null],[5,"CVOpenGLESTextureGetName","","",null,null],[5,"CVOpenGLESTextureIsFlipped","","",null,null],[6,"CVOpenGLESTextureRef","","",null,null],[0,"open_gl_es_texture_cache","core_video_sys","",null,null],[5,"CVOpenGLESTextureCacheCreate","core_video_sys::open_gl_es_texture_cache","",null,null],[5,"CVOpenGLESTextureCacheCreateTextureFromImage","","",null,null],[6,"CVOpenGLESTextureCacheRef","","",null,null],[6,"CVEAGLContext","","",null,null],[11,"from","core_video_sys::base","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","core_video_sys::buffer","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","core_video_sys::pixel_buffer","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","core_video_sys::pixel_format_description","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","core_video_sys::display_link","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"clone","core_video_sys::base","",0,[[],["cvsmptetime",3]]],[11,"clone","","",1,[[],["cvtime",3]]],[11,"clone","","",2,[[],["cvtimestamp",3]]],[11,"clone","core_video_sys::buffer","",8,[[],["__cvbuffer",4]]],[11,"clone","core_video_sys::pixel_buffer","",3,[[],["cvplanarcomponentinfo",3]]],[11,"clone","","",4,[[],["cvplanarpixelbufferinfo",3]]],[11,"clone","","",5,[[],["cvplanarpixelbufferinfo_ycbcrplanar",3]]],[11,"clone","","",6,[[],["cvplanarpixelbufferinfo_ycbcrbiplanar",3]]],[11,"clone","core_video_sys::pixel_format_description","",7,[[],["cvfillextendedpixelscallbackdata",3]]],[11,"clone","core_video_sys::display_link","",9,[[],["__cvdisplaylink",4]]],[11,"fmt","core_video_sys::base","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","core_video_sys::buffer","",8,[[["formatter",3]],["result",6]]],[11,"fmt","core_video_sys::pixel_buffer","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","core_video_sys::pixel_format_description","",7,[[["formatter",3]],["result",6]]],[11,"fmt","core_video_sys::display_link","",9,[[["formatter",3]],["result",6]]]],"p":[[3,"CVSMPTETime"],[3,"CVTime"],[3,"CVTimeStamp"],[3,"CVPlanarComponentInfo"],[3,"CVPlanarPixelBufferInfo"],[3,"CVPlanarPixelBufferInfo_YCbCrPlanar"],[3,"CVPlanarPixelBufferInfo_YCbCrBiPlanar"],[3,"CVFillExtendedPixelsCallBackData"],[4,"__CVBuffer"],[4,"__CVDisplayLink"]]},\
"crc32fast":{"doc":"Example","i":[[3,"Hasher","crc32fast","Represents an in-progress CRC32 computation.",null,null],[11,"new","","Create a new <code>Hasher</code>.",0,[[]]],[11,"new_with_initial","","Create a new <code>Hasher</code> with an initial CRC32 state.",0,[[["u32",15]]]],[11,"update","","Process the given byte slice and update the hash state.",0,[[]]],[11,"finalize","","Finalize the hash state and return the computed CRC32 …",0,[[],["u32",15]]],[11,"reset","","Reset the hash state.",0,[[]]],[11,"combine","","Combine the hash state with the hash state for the …",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["hasher",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"write","","",0,[[]]],[11,"finish","","",0,[[],["u64",15]]]],"p":[[3,"Hasher"]]},\
"crossbeam_channel":{"doc":"Multi-producer multi-consumer channels for message …","i":[[5,"after","crossbeam_channel","Creates a receiver that delivers a message after a …",null,[[["duration",3]],[["instant",3],["receiver",3]]]],[5,"at","","Creates a receiver that delivers a message at a certain …",null,[[["instant",3]],[["instant",3],["receiver",3]]]],[5,"never","","Creates a receiver that never delivers messages.",null,[[],["receiver",3]]],[5,"tick","","Creates a receiver that delivers messages periodically.",null,[[["duration",3]],[["instant",3],["receiver",3]]]],[5,"bounded","","Creates a channel of bounded capacity.",null,[[["usize",15]]]],[5,"unbounded","","Creates a channel of unbounded capacity.",null,[[]]],[3,"IntoIter","","A blocking iterator over messages in a channel.",null,null],[3,"Iter","","A blocking iterator over messages in a channel.",null,null],[3,"TryIter","","A non-blocking iterator over messages in a channel.",null,null],[3,"Receiver","","The receiving side of a channel.",null,null],[3,"Sender","","The sending side of a channel.",null,null],[3,"Select","","Selects from a set of channel operations.",null,null],[3,"SelectedOperation","","A selected operation that needs to be completed.",null,null],[3,"ReadyTimeoutError","","An error returned from the <code>ready_timeout</code> method.",null,null],[3,"SelectTimeoutError","","An error returned from the <code>select_timeout</code> method.",null,null],[3,"TryReadyError","","An error returned from the <code>try_ready</code> method.",null,null],[3,"TrySelectError","","An error returned from the <code>try_select</code> method.",null,null],[3,"RecvError","","An error returned from the <code>recv</code> method.",null,null],[4,"RecvTimeoutError","","An error returned from the <code>recv_timeout</code> method.",null,null],[13,"Timeout","","A message could not be received because the channel is …",0,null],[13,"Disconnected","","The message could not be received because the channel is …",0,null],[4,"TryRecvError","","An error returned from the <code>try_recv</code> method.",null,null],[13,"Empty","","A message could not be received because the channel is …",1,null],[13,"Disconnected","","The message could not be received because the channel is …",1,null],[3,"SendError","","An error returned from the <code>send</code> method.",null,null],[12,"0","","",2,null],[4,"SendTimeoutError","","An error returned from the <code>send_timeout</code> method.",null,null],[13,"Timeout","","The message could not be sent because the channel is full …",3,null],[13,"Disconnected","","The message could not be sent because the channel is …",3,null],[4,"TrySendError","","An error returned from the <code>try_send</code> method.",null,null],[13,"Full","","The message could not be sent because the channel is full.",4,null],[13,"Disconnected","","The message could not be sent because the channel is …",4,null],[14,"select","","Selects from a set of channel operations.",null,null],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"drop","","",5,[[]]],[11,"drop","","",6,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",4,[[["senderror",3]],["trysenderror",4]]],[11,"from","","",3,[[["senderror",3]],["sendtimeouterror",4]]],[11,"from","","",1,[[["recverror",3]],["tryrecverror",4]]],[11,"from","","",0,[[["recverror",3]],["recvtimeouterror",4]]],[11,"into_iter","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"next","","",8,[[],["option",4]]],[11,"next","","",9,[[],["option",4]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",2,[[],["senderror",3]]],[11,"clone","","",4,[[],["trysenderror",4]]],[11,"clone","","",3,[[],["sendtimeouterror",4]]],[11,"clone","","",10,[[],["recverror",3]]],[11,"clone","","",1,[[],["tryrecverror",4]]],[11,"clone","","",0,[[],["recvtimeouterror",4]]],[11,"clone","","",11,[[],["tryselecterror",3]]],[11,"clone","","",12,[[],["selecttimeouterror",3]]],[11,"clone","","",13,[[],["tryreadyerror",3]]],[11,"clone","","",14,[[],["readytimeouterror",3]]],[11,"clone","","",15,[[],["select",3]]],[11,"default","","",15,[[],["select",3]]],[11,"eq","","",2,[[["senderror",3]],["bool",15]]],[11,"ne","","",2,[[["senderror",3]],["bool",15]]],[11,"eq","","",4,[[["trysenderror",4]],["bool",15]]],[11,"ne","","",4,[[["trysenderror",4]],["bool",15]]],[11,"eq","","",3,[[["sendtimeouterror",4]],["bool",15]]],[11,"ne","","",3,[[["sendtimeouterror",4]],["bool",15]]],[11,"eq","","",10,[[["recverror",3]],["bool",15]]],[11,"eq","","",1,[[["tryrecverror",4]],["bool",15]]],[11,"eq","","",0,[[["recvtimeouterror",4]],["bool",15]]],[11,"eq","","",11,[[["tryselecterror",3]],["bool",15]]],[11,"eq","","",12,[[["selecttimeouterror",3]],["bool",15]]],[11,"eq","","",13,[[["tryreadyerror",3]],["bool",15]]],[11,"eq","","",14,[[["readytimeouterror",3]],["bool",15]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"try_send","","Attempts to send a message into the channel without …",5,[[],[["result",4],["trysenderror",4]]]],[11,"send","","Blocks the current thread until a message is sent or the …",5,[[],[["result",4],["senderror",3]]]],[11,"send_timeout","","Waits for a message to be sent into the channel, but only …",5,[[["duration",3]],[["result",4],["sendtimeouterror",4]]]],[11,"send_deadline","","Waits for a message to be sent into the channel, but only …",5,[[["instant",3]],[["result",4],["sendtimeouterror",4]]]],[11,"is_empty","","Returns <code>true</code> if the channel is empty.",5,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if the channel is full.",5,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel.",5,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",5,[[],[["usize",15],["option",4]]]],[11,"same_channel","","Returns <code>true</code> if senders belong to the same channel.",5,[[["sender",3]],["bool",15]]],[11,"try_recv","","Attempts to receive a message from the channel without …",6,[[],[["tryrecverror",4],["result",4]]]],[11,"recv","","Blocks the current thread until a message is received or …",6,[[],[["recverror",3],["result",4]]]],[11,"recv_timeout","","Waits for a message to be received from the channel, but …",6,[[["duration",3]],[["recvtimeouterror",4],["result",4]]]],[11,"recv_deadline","","Waits for a message to be received from the channel, but …",6,[[["instant",3]],[["recvtimeouterror",4],["result",4]]]],[11,"is_empty","","Returns <code>true</code> if the channel is empty.",6,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if the channel is full.",6,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel.",6,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",6,[[],[["usize",15],["option",4]]]],[11,"iter","","A blocking iterator over messages in the channel.",6,[[],["iter",3]]],[11,"try_iter","","A non-blocking iterator over messages in the channel.",6,[[],["tryiter",3]]],[11,"same_channel","","Returns <code>true</code> if receivers belong to the same channel.",6,[[["receiver",3]],["bool",15]]],[11,"into_inner","","Unwraps the message.",2,[[]]],[11,"into_inner","","Unwraps the message.",4,[[]]],[11,"is_full","","Returns <code>true</code> if the send operation failed because the …",4,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if the send operation failed because the …",4,[[],["bool",15]]],[11,"into_inner","","Unwraps the message.",3,[[]]],[11,"is_timeout","","Returns <code>true</code> if the send operation timed out.",3,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if the send operation failed because the …",3,[[],["bool",15]]],[11,"is_empty","","Returns <code>true</code> if the receive operation failed because the …",1,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if the receive operation failed because the …",1,[[],["bool",15]]],[11,"is_timeout","","Returns <code>true</code> if the receive operation timed out.",0,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if the receive operation failed because the …",0,[[],["bool",15]]],[11,"new","","Creates an empty list of channel operations for selection.",15,[[],["select",3]]],[11,"send","","Adds a send operation.",15,[[["sender",3]],["usize",15]]],[11,"recv","","Adds a receive operation.",15,[[["receiver",3]],["usize",15]]],[11,"remove","","Removes a previously added operation.",15,[[["usize",15]]]],[11,"try_select","","Attempts to select one of the operations without blocking.",15,[[],[["tryselecterror",3],["result",4],["selectedoperation",3]]]],[11,"select","","Blocks until one of the operations becomes ready and …",15,[[],["selectedoperation",3]]],[11,"select_timeout","","Blocks for a limited time until one of the operations …",15,[[["duration",3]],[["selectedoperation",3],["result",4],["selecttimeouterror",3]]]],[11,"select_deadline","","Blocks until a given deadline, or until one of the …",15,[[["instant",3]],[["selectedoperation",3],["result",4],["selecttimeouterror",3]]]],[11,"try_ready","","Attempts to find a ready operation without blocking.",15,[[],[["result",4],["usize",15],["tryreadyerror",3]]]],[11,"ready","","Blocks until one of the operations becomes ready.",15,[[],["usize",15]]],[11,"ready_timeout","","Blocks for a limited time until one of the operations …",15,[[["duration",3]],[["result",4],["usize",15],["readytimeouterror",3]]]],[11,"ready_deadline","","Blocks until a given deadline, or until one of the …",15,[[["instant",3]],[["result",4],["usize",15],["readytimeouterror",3]]]],[11,"index","","Returns the index of the selected operation.",16,[[],["usize",15]]],[11,"send","","Completes the send operation.",16,[[["sender",3]],[["result",4],["senderror",3]]]],[11,"recv","","Completes the receive operation.",16,[[["receiver",3]],[["recverror",3],["result",4]]]]],"p":[[4,"RecvTimeoutError"],[4,"TryRecvError"],[3,"SendError"],[4,"SendTimeoutError"],[4,"TrySendError"],[3,"Sender"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"IntoIter"],[3,"RecvError"],[3,"TrySelectError"],[3,"SelectTimeoutError"],[3,"TryReadyError"],[3,"ReadyTimeoutError"],[3,"Select"],[3,"SelectedOperation"]]},\
"crossbeam_deque":{"doc":"Concurrent work-stealing deques.","i":[[3,"Injector","crossbeam_deque","An injector queue.",null,null],[4,"Steal","","Possible outcomes of a steal operation.",null,null],[13,"Empty","","The queue was empty at the time of stealing.",0,null],[13,"Success","","At least one task was successfully stolen.",0,null],[13,"Retry","","The steal operation needs to be retried.",0,null],[3,"Stealer","","A stealer handle of a worker queue.",null,null],[3,"Worker","","A worker queue.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"drop","","",3,[[]]],[11,"clone","","",2,[[],["stealer",3]]],[11,"clone","","",0,[[],["steal",4]]],[11,"default","","",3,[[]]],[11,"eq","","",0,[[["steal",4]],["bool",15]]],[11,"ne","","",0,[[["steal",4]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_iter","","Consumes items until a <code>Success</code> is found and returns it.",0,[[],["steal",4]]],[11,"new_fifo","","Creates a FIFO worker queue.",1,[[],["worker",3]]],[11,"new_lifo","","Creates a LIFO worker queue.",1,[[],["worker",3]]],[11,"stealer","","Creates a stealer for this queue.",1,[[],["stealer",3]]],[11,"is_empty","","Returns <code>true</code> if the queue is empty.",1,[[],["bool",15]]],[11,"len","","Returns the number of tasks in the deque.",1,[[],["usize",15]]],[11,"push","","Pushes a task into the queue.",1,[[]]],[11,"pop","","Pops a task from the queue.",1,[[],["option",4]]],[11,"is_empty","","Returns <code>true</code> if the queue is empty.",2,[[],["bool",15]]],[11,"steal","","Steals a task from the queue.",2,[[],["steal",4]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into another …",2,[[["worker",3]],["steal",4]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into another worker, …",2,[[["worker",3]],["steal",4]]],[11,"new","","Creates a new injector queue.",3,[[],["injector",3]]],[11,"push","","Pushes a task into the queue.",3,[[]]],[11,"steal","","Steals a task from the queue.",3,[[],["steal",4]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into a worker.",3,[[["worker",3]],["steal",4]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into a worker, and …",3,[[["worker",3]],["steal",4]]],[11,"is_empty","","Returns <code>true</code> if the queue is empty.",3,[[],["bool",15]]],[11,"len","","Returns the number of tasks in the queue.",3,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the queue was empty at the time of …",0,[[],["bool",15]]],[11,"is_success","","Returns <code>true</code> if at least one task was stolen.",0,[[],["bool",15]]],[11,"is_retry","","Returns <code>true</code> if the steal operation needs to be retried.",0,[[],["bool",15]]],[11,"success","","Returns the result of the operation, if successful.",0,[[],["option",4]]],[11,"or_else","","If no task was stolen, attempts another steal operation.",0,[[],["steal",4]]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]},\
"crossbeam_epoch":{"doc":"Epoch-based memory reclamation.","i":[[8,"Pointable","crossbeam_epoch","Types that are pointed to by a single word.",null,null],[18,"ALIGN","","The alignment of pointer.",0,null],[16,"Init","","The type for initializers.",0,null],[10,"init","","Initializes a with the given initializer.",0,[[],["usize",15]]],[10,"deref","","Dereferences the given pointer.",0,[[["usize",15]]]],[10,"deref_mut","","Mutably dereferences the given pointer.",0,[[["usize",15]]]],[10,"drop","","Drops the object pointed to by the given pointer.",0,[[["usize",15]]]],[3,"Atomic","","An atomic pointer that can be safely shared between …",null,null],[3,"CompareExchangeError","","The error returned on failed compare-and-swap operation.",null,null],[12,"current","","The value in the atomic pointer at the time of the failed …",1,null],[12,"new","","The new value, which the operation failed to store.",1,null],[3,"Owned","","An owned heap-allocated object.",null,null],[8,"Pointer","","A trait for either <code>Owned</code> or <code>Shared</code> pointers.",null,null],[10,"into_usize","","Returns the machine representation of the pointer.",2,[[],["usize",15]]],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer <code>data</code>.",2,[[["usize",15]]]],[3,"Shared","","A pointer to an object protected by the epoch GC.",null,null],[3,"Collector","","An epoch-based garbage collector.",null,null],[3,"LocalHandle","","A handle to a garbage collector.",null,null],[5,"unprotected","","Returns a reference to a dummy guard that allows …",null,[[],["guard",3]]],[3,"Guard","","A guard that keeps the current thread pinned.",null,null],[6,"CompareAndSetError","","The error returned on failed compare-and-set operation.",null,null],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",null,null],[10,"success","","The ordering of the operation when it succeeds.",3,[[],["ordering",4]]],[10,"failure","","The ordering of the operation when it fails.",3,[[],["ordering",4]]],[5,"default_collector","","Returns the default global collector.",null,[[],["collector",3]]],[5,"is_pinned","","Returns <code>true</code> if the current thread is pinned.",null,[[],["bool",15]]],[5,"pin","","Pins the current thread.",null,[[],["guard",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_usize","","",5,[[],["usize",15]]],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer <code>data</code>.",5,[[["usize",15]]]],[11,"into_usize","","",6,[[],["usize",15]]],[11,"from_usize","","",6,[[["usize",15]]]],[11,"drop","","",5,[[]]],[11,"drop","","",8,[[]]],[11,"drop","","",9,[[]]],[11,"as_mut","","",5,[[]]],[11,"as_ref","","",5,[[]]],[11,"from","","Returns a new atomic pointer pointing to <code>owned</code>.",4,[[["owned",3]]]],[11,"from","","",4,[[["box",3]]]],[11,"from","","",4,[[]]],[11,"from","","Returns a new atomic pointer pointing to <code>ptr</code>.",4,[[["shared",3]]]],[11,"from","","Returns a new atomic pointer pointing to <code>raw</code>.",4,[[]]],[11,"from","","",5,[[]]],[11,"from","","Returns a new owned pointer pointing to <code>b</code>.",5,[[["box",3]]]],[11,"from","","Returns a new pointer pointing to <code>raw</code>.",6,[[]]],[11,"clone","","Returns a copy of the atomic value.",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","Creates another reference to the same garbage collector.",7,[[]]],[11,"default","","",4,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"cmp","","",6,[[],["ordering",4]]],[11,"eq","","",6,[[],["bool",15]]],[11,"eq","","Checks if both handles point to the same collector.",7,[[["collector",3]],["bool",15]]],[11,"partial_cmp","","",6,[[],[["ordering",4],["option",4]]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[18,"ALIGN","","The alignment of pointer.",0,null],[11,"new","","Allocates <code>value</code> on the heap and returns a new atomic …",4,[[],["atomic",3]]],[11,"init","","Allocates <code>value</code> on the heap and returns a new atomic …",4,[[],["atomic",3]]],[11,"null","","Returns a new null atomic pointer.",4,[[],["atomic",3]]],[11,"load","","Loads a <code>Shared</code> from the atomic pointer.",4,[[["guard",3],["ordering",4]],["shared",3]]],[11,"load_consume","","Loads a <code>Shared</code> from the atomic pointer using a \\\"consume\\\" …",4,[[["guard",3]],["shared",3]]],[11,"store","","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer.",4,[[["pointer",8],["ordering",4]]]],[11,"swap","","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer, …",4,[[["pointer",8],["guard",3],["ordering",4]],["shared",3]]],[11,"compare_exchange","","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …",4,[[["guard",3],["shared",3],["ordering",4]],[["shared",3],["compareexchangeerror",3],["result",4]]]],[11,"compare_exchange_weak","","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …",4,[[["guard",3],["shared",3],["ordering",4]],[["shared",3],["compareexchangeerror",3],["result",4]]]],[11,"compare_and_set","","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …",4,[[["guard",3],["shared",3]],[["result",4],["shared",3],["compareandseterror",6]]]],[11,"compare_and_set_weak","","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …",4,[[["guard",3],["shared",3]],[["result",4],["shared",3],["compareandseterror",6]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current tag.",4,[[["usize",15],["guard",3],["ordering",4]],["shared",3]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current tag.",4,[[["usize",15],["guard",3],["ordering",4]],["shared",3]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current tag.",4,[[["usize",15],["guard",3],["ordering",4]],["shared",3]]],[11,"into_owned","","Takes ownership of the pointee.",4,[[],["owned",3]]],[11,"from_raw","","Returns a new owned pointer pointing to <code>raw</code>.",5,[[],["owned",3]]],[11,"into_box","","Converts the owned pointer into a <code>Box</code>.",5,[[],["box",3]]],[11,"new","","Allocates <code>value</code> on the heap and returns a new owned …",5,[[],["owned",3]]],[11,"init","","Allocates <code>value</code> on the heap and returns a new owned …",5,[[],["owned",3]]],[11,"into_shared","","Converts the owned pointer into a [<code>Shared</code>].",5,[[["guard",3]],["shared",3]]],[11,"tag","","Returns the tag stored within the pointer.",5,[[],["usize",15]]],[11,"with_tag","","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …",5,[[["usize",15]],["owned",3]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",6,[[]]],[11,"null","","Returns a new null pointer.",6,[[],["shared",3]]],[11,"is_null","","Returns <code>true</code> if the pointer is null.",6,[[],["bool",15]]],[11,"deref","","Dereferences the pointer.",6,[[]]],[11,"deref_mut","","Dereferences the pointer.",6,[[]]],[11,"as_ref","","Converts the pointer to a reference.",6,[[],["option",4]]],[11,"into_owned","","Takes ownership of the pointee.",6,[[],["owned",3]]],[11,"tag","","Returns the tag stored within the pointer.",6,[[],["usize",15]]],[11,"with_tag","","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …",6,[[["usize",15]],["shared",3]]],[11,"new","","Creates a new collector.",7,[[]]],[11,"register","","Registers a new handle for the collector.",7,[[],["localhandle",3]]],[11,"pin","","Pins the handle.",8,[[],["guard",3]]],[11,"is_pinned","","Returns <code>true</code> if the handle is pinned.",8,[[],["bool",15]]],[11,"collector","","Returns the <code>Collector</code> associated with this handle.",8,[[],["collector",3]]],[11,"defer","","Stores a function so that it can be executed at some …",9,[[]]],[11,"defer_unchecked","","Stores a function so that it can be executed at some …",9,[[]]],[11,"defer_destroy","","Stores a destructor for an object so that it can be …",9,[[["shared",3]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by …",9,[[]]],[11,"repin","","Unpins and then immediately re-pins the thread.",9,[[]]],[11,"repin_after","","Temporarily unpins the thread, executes the given …",9,[[]]],[11,"collector","","Returns the <code>Collector</code> associated with this guard.",9,[[],[["collector",3],["option",4]]]]],"p":[[8,"Pointable"],[3,"CompareExchangeError"],[8,"Pointer"],[8,"CompareAndSetOrdering"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","i":[[0,"atomic","crossbeam_utils","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types …",null,null],[16,"Val","","Type returned by <code>load_consume</code>.",0,null],[10,"load_consume","","Loads a value from the atomic using a \\\"consume\\\" memory …",0,[[]]],[0,"sync","crossbeam_utils","Thread synchronization primitives.",null,null],[3,"Parker","crossbeam_utils::sync","A thread parking primitive.",null,null],[3,"Unparker","","Unparks a thread parked by the associated [<code>Parker</code>].",null,null],[3,"ShardedLock","","A sharded reader-writer lock.",null,null],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a […",null,null],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a […",null,null],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of …",null,null],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",null,null],[5,"scope","crossbeam_utils::thread","Creates a new scope for spawning threads.",null,[[],["result",6]]],[3,"Scope","","A scope for spawning threads.",null,null],[11,"spawn","","Spawns a scoped thread.",1,[[],["scopedjoinhandle",3]]],[11,"builder","","Creates a builder that can configure a thread before …",1,[[],["scopedthreadbuilder",3]]],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",null,null],[11,"name","","Sets the name for the new thread.",2,[[["string",3]],["scopedthreadbuilder",3]]],[11,"stack_size","","Sets the size of the stack for the new thread.",2,[[["usize",15]],["scopedthreadbuilder",3]]],[11,"spawn","","Spawns a scoped thread with this configuration.",2,[[],[["result",6],["scopedjoinhandle",3]]]],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",null,null],[11,"join","","Waits for the thread to finish and returns its result.",3,[[],["result",6]]],[11,"thread","","Returns a handle to the underlying thread.",3,[[],["thread",3]]],[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[11,"from","crossbeam_utils::atomic","",4,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","crossbeam_utils","",5,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","crossbeam_utils::sync","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","crossbeam_utils::thread","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"drop","crossbeam_utils::sync","",11,[[]]],[11,"drop","","",12,[[]]],[11,"from","crossbeam_utils::atomic","",4,[[],["atomiccell",3]]],[11,"from","crossbeam_utils","",5,[[]]],[11,"from","crossbeam_utils::sync","",9,[[]]],[11,"clone","crossbeam_utils","",5,[[],["cachepadded",3]]],[11,"clone","crossbeam_utils::sync","",8,[[],["unparker",3]]],[11,"clone","","",12,[[],["waitgroup",3]]],[11,"default","crossbeam_utils::atomic","",4,[[],["atomiccell",3]]],[11,"default","crossbeam_utils","",5,[[],["cachepadded",3]]],[11,"default","","",6,[[],["backoff",3]]],[11,"default","crossbeam_utils::sync","",7,[[]]],[11,"default","","",9,[[],["shardedlock",3]]],[11,"default","","",12,[[]]],[11,"eq","crossbeam_utils","",5,[[["cachepadded",3]],["bool",15]]],[11,"ne","","",5,[[["cachepadded",3]],["bool",15]]],[11,"deref","","",5,[[]]],[11,"deref","crossbeam_utils::sync","",10,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","crossbeam_utils","",5,[[]]],[11,"deref_mut","crossbeam_utils::sync","",11,[[]]],[11,"fmt","crossbeam_utils::atomic","",4,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::sync","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::thread","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::sync","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"hash","crossbeam_utils","",5,[[]]],[11,"as_pthread_t","crossbeam_utils::thread","",3,[[],["rawpthread",6]]],[11,"into_pthread_t","","",3,[[],["rawpthread",6]]],[11,"new","crossbeam_utils::atomic","Creates a new atomic cell initialized with <code>val</code>.",4,[[],["atomiccell",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",4,[[]]],[11,"is_lock_free","","Returns <code>true</code> if operations on values of this type are …",4,[[],["bool",15]]],[11,"store","","Stores <code>val</code> into the atomic cell.",4,[[]]],[11,"swap","","Stores <code>val</code> into the atomic cell and returns the previous …",4,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this …",4,[[]]],[11,"take","","Takes the value of the atomic cell, leaving …",4,[[]]],[11,"load","","Loads a value from the atomic cell.",4,[[]]],[11,"compare_and_swap","","If the current value equals <code>current</code>, stores <code>new</code> into the …",4,[[]]],[11,"compare_exchange","","If the current value equals <code>current</code>, stores <code>new</code> into the …",4,[[],["result",4]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u8",15]],["u8",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u8",15]],["u8",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["u8",15]],["u8",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["u8",15]],["u8",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["u8",15]],["u8",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i8",15]],["i8",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i8",15]],["i8",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["i8",15]],["i8",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["i8",15]],["i8",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["i8",15]],["i8",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u16",15]],["u16",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u16",15]],["u16",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["u16",15]],["u16",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["u16",15]],["u16",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["u16",15]],["u16",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i16",15]],["i16",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i16",15]],["i16",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["i16",15]],["i16",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["i16",15]],["i16",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["i16",15]],["i16",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u32",15]],["u32",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u32",15]],["u32",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["u32",15]],["u32",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["u32",15]],["u32",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["u32",15]],["u32",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i32",15]],["i32",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i32",15]],["i32",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["i32",15]],["i32",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["i32",15]],["i32",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["i32",15]],["i32",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u64",15]],["u64",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u64",15]],["u64",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["u64",15]],["u64",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["u64",15]],["u64",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["u64",15]],["u64",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i64",15]],["i64",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i64",15]],["i64",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["i64",15]],["i64",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["i64",15]],["i64",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["i64",15]],["i64",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["usize",15]],["usize",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["usize",15]],["usize",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["usize",15]],["usize",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["usize",15]],["usize",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["usize",15]],["usize",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["isize",15]],["isize",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["isize",15]],["isize",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",4,[[["isize",15]],["isize",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",4,[[["isize",15]],["isize",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",4,[[["isize",15]],["isize",15]]],[11,"fetch_and","","Applies logical \\\"and\\\" to the current value and returns …",4,[[["bool",15]],["bool",15]]],[11,"fetch_or","","Applies logical \\\"or\\\" to the current value and returns the …",4,[[["bool",15]],["bool",15]]],[11,"fetch_xor","","Applies logical \\\"xor\\\" to the current value and returns …",4,[[["bool",15]],["bool",15]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",5,[[],["cachepadded",3]]],[11,"into_inner","","Returns the inner value.",5,[[]]],[11,"new","","Creates a new <code>Backoff</code>.",6,[[]]],[11,"reset","","Resets the <code>Backoff</code>.",6,[[]]],[11,"spin","","Backs off in a lock-free loop.",6,[[]]],[11,"snooze","","Backs off in a blocking loop.",6,[[]]],[11,"is_completed","","Returns <code>true</code> if exponential backoff has completed and …",6,[[],["bool",15]]],[11,"new","crossbeam_utils::sync","Creates a new <code>Parker</code>.",7,[[],["parker",3]]],[11,"park","","Blocks the current thread until the token is made …",7,[[]]],[11,"park_timeout","","Blocks the current thread until the token is made …",7,[[["duration",3]]]],[11,"park_deadline","","Blocks the current thread until the token is made …",7,[[["instant",3]]]],[11,"unparker","","Returns a reference to an associated [<code>Unparker</code>].",7,[[],["unparker",3]]],[11,"into_raw","","Converts a <code>Parker</code> into a raw pointer.",7,[[["parker",3]]]],[11,"from_raw","","Converts a raw pointer into a <code>Parker</code>.",7,[[],["parker",3]]],[11,"unpark","","Atomically makes the token available if it is not already.",8,[[]]],[11,"into_raw","","Converts an <code>Unparker</code> into a raw pointer.",8,[[["unparker",3]]]],[11,"from_raw","","Converts a raw pointer into an <code>Unparker</code>.",8,[[],["unparker",3]]],[11,"new","","Creates a new sharded reader-writer lock.",9,[[],["shardedlock",3]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",9,[[],["lockresult",6]]],[11,"is_poisoned","","Returns <code>true</code> if the lock is poisoned.",9,[[],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",9,[[],["lockresult",6]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",9,[[],[["trylockresult",6],["shardedlockreadguard",3]]]],[11,"read","","Locks with shared read access, blocking the current …",9,[[],[["lockresult",6],["shardedlockreadguard",3]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",9,[[],[["trylockresult",6],["shardedlockwriteguard",3]]]],[11,"write","","Locks with exclusive write access, blocking the current …",9,[[],[["lockresult",6],["shardedlockwriteguard",3]]]],[11,"new","","Creates a new wait group and returns the single reference …",12,[[]]],[11,"wait","","Drops this reference and waits until all other references …",12,[[]]]],"p":[[8,"AtomicConsume"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"AtomicCell"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"],[3,"WaitGroup"]]},\
"deflate":{"doc":"An implementation an encoder using DEFLATE compression …","i":[[0,"write","deflate","Encoders implementing a <code>Write</code> interface.",null,null],[3,"DeflateEncoder","deflate::write","A DEFLATE encoder/compressor.",null,null],[3,"ZlibEncoder","","A Zlib encoder/compressor.",null,null],[4,"Compression","deflate","An enum describing the level of compression to be used by …",null,null],[13,"Fast","","Fast minimal compression (<code>CompressionOptions::fast()</code>).",0,null],[13,"Default","","Default level (<code>CompressionOptions::default()</code>).",0,null],[13,"Best","","Higher compression level (<code>CompressionOptions::high()</code>).",0,null],[3,"CompressionOptions","","A struct describing the options for a compressor or …",null,null],[12,"max_hash_checks","","The maximum number of checks to make in the hash table …",1,null],[12,"lazy_if_less_than","","Only lazy match if we have a length less than this value.",1,null],[12,"matching_type","","Whether to use lazy or greedy matching.",1,null],[12,"special","","Force fixed/stored blocks (Not implemented yet).",1,null],[4,"SpecialOptions","","Enum allowing some special options (not implemented yet)!",null,null],[13,"Normal","","Compress normally.",2,null],[13,"_ForceFixed","","Force fixed Huffman tables. (Unimplemented!).",2,null],[13,"_ForceStored","","Force stored (uncompressed) blocks only. (Unimplemented!).",2,null],[4,"MatchingType","","An enum describing whether we use lazy or greedy matching.",null,null],[13,"Greedy","","Use greedy matching: the matching algorithm simply uses a …",3,null],[13,"Lazy","","Use lazy matching: after finding a match, the next input …",3,null],[5,"deflate_bytes_conf","","Compress the given slice of bytes with DEFLATE …",null,[[["into",8],["compressionoptions",3]],[["vec",3],["u8",15]]]],[5,"deflate_bytes","","Compress the given slice of bytes with DEFLATE …",null,[[],[["vec",3],["u8",15]]]],[5,"deflate_bytes_zlib_conf","","Compress the given slice of bytes with DEFLATE …",null,[[["into",8],["compressionoptions",3]],[["vec",3],["u8",15]]]],[5,"deflate_bytes_zlib","","Compress the given slice of bytes with DEFLATE …",null,[[],[["vec",3],["u8",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","deflate::write","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",4,[[]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",5,[[]]],[11,"from","deflate","",1,[[["compression",4]],["compressionoptions",3]]],[11,"clone","","",0,[[],["compression",4]]],[11,"clone","","",2,[[],["specialoptions",4]]],[11,"clone","","",1,[[],["compressionoptions",3]]],[11,"clone","","",3,[[],["matchingtype",4]]],[11,"default","","",0,[[],["compression",4]]],[11,"default","","",2,[[],["specialoptions",4]]],[11,"default","","Returns the options describing the default compression …",1,[[],["compressionoptions",3]]],[11,"cmp","","",0,[[["compression",4]],["ordering",4]]],[11,"cmp","","",3,[[["matchingtype",4]],["ordering",4]]],[11,"eq","","",0,[[["compression",4]],["bool",15]]],[11,"eq","","",2,[[["specialoptions",4]],["bool",15]]],[11,"eq","","",1,[[["compressionoptions",3]],["bool",15]]],[11,"ne","","",1,[[["compressionoptions",3]],["bool",15]]],[11,"eq","","",3,[[["matchingtype",4]],["bool",15]]],[11,"partial_cmp","","",0,[[["compression",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["matchingtype",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",3,[[]]],[11,"write","deflate::write","",4,[[],[["usize",15],["result",6]]]],[11,"flush","","Flush the encoder.",4,[[],["result",6]]],[11,"write","","",5,[[],[["usize",15],["result",6]]]],[11,"flush","","Flush the encoder.",5,[[],["result",6]]],[11,"high","deflate","Returns compression settings roughly corresponding to the …",1,[[],["compressionoptions",3]]],[11,"fast","","Returns  a fast set of compression settings",1,[[],["compressionoptions",3]]],[11,"huffman_only","","Returns a set of compression settings that makes the …",1,[[],["compressionoptions",3]]],[11,"rle","","Returns a set of compression settings that makes the …",1,[[],["compressionoptions",3]]],[11,"new","deflate::write","Creates a new encoder using the provided compression …",4,[[["into",8],["compressionoptions",3]],["deflateencoder",3]]],[11,"finish","","Encode all pending data to the contained writer, consume …",4,[[],["result",6]]],[11,"reset","","Resets the encoder (except the compression options), …",4,[[],["result",6]]],[11,"new","","Create a new <code>ZlibEncoder</code> using the provided compression …",5,[[["into",8],["compressionoptions",3]],["zlibencoder",3]]],[11,"finish","","Encode all pending data to the contained writer, consume …",5,[[],["result",6]]],[11,"reset","","Resets the encoder (except the compression options), …",5,[[],["result",6]]],[11,"checksum","","Return the adler32 checksum of the currently consumed …",5,[[],["u32",15]]]],"p":[[4,"Compression"],[3,"CompressionOptions"],[4,"SpecialOptions"],[4,"MatchingType"],[3,"DeflateEncoder"],[3,"ZlibEncoder"]]},\
"dispatch":{"doc":"Rust wrapper for Apple\'s Grand Central Dispatch (GCD).","i":[[0,"ffi","dispatch","Raw foreign function interface for libdispatch.",null,null],[5,"dispatch_get_global_queue","dispatch::ffi","",null,null],[5,"dispatch_queue_create","","",null,null],[5,"dispatch_queue_get_label","","",null,null],[5,"dispatch_set_target_queue","","",null,null],[5,"dispatch_main","","",null,null],[5,"dispatch_async_f","","",null,null],[5,"dispatch_sync_f","","",null,null],[5,"dispatch_after_f","","",null,null],[5,"dispatch_apply_f","","",null,null],[5,"dispatch_once_f","","",null,null],[5,"dispatch_group_async_f","","",null,null],[5,"dispatch_group_create","","",null,null],[5,"dispatch_group_enter","","",null,null],[5,"dispatch_group_leave","","",null,null],[5,"dispatch_group_notify_f","","",null,null],[5,"dispatch_group_wait","","",null,null],[5,"dispatch_get_context","","",null,null],[5,"dispatch_release","","",null,null],[5,"dispatch_resume","","",null,null],[5,"dispatch_retain","","",null,null],[5,"dispatch_set_context","","",null,null],[5,"dispatch_set_finalizer_f","","",null,null],[5,"dispatch_suspend","","",null,null],[5,"dispatch_semaphore_create","","",null,null],[5,"dispatch_semaphore_signal","","",null,null],[5,"dispatch_semaphore_wait","","",null,null],[5,"dispatch_barrier_async_f","","",null,null],[5,"dispatch_barrier_sync_f","","",null,null],[5,"dispatch_time","","",null,null],[3,"dispatch_object_s","","",null,null],[6,"dispatch_function_t","","",null,null],[6,"dispatch_semaphore_t","","",null,null],[6,"dispatch_group_t","","",null,null],[6,"dispatch_object_t","","",null,null],[6,"dispatch_once_t","","",null,null],[6,"dispatch_queue_t","","",null,null],[6,"dispatch_time_t","","",null,null],[6,"dispatch_queue_attr_t","","",null,null],[5,"dispatch_get_main_queue","","",null,[[],["dispatch_queue_t",6]]],[17,"DISPATCH_QUEUE_SERIAL","","",null,null],[7,"DISPATCH_QUEUE_CONCURRENT","","",null,null],[17,"DISPATCH_QUEUE_PRIORITY_HIGH","","",null,null],[17,"DISPATCH_QUEUE_PRIORITY_DEFAULT","","",null,null],[17,"DISPATCH_QUEUE_PRIORITY_LOW","","",null,null],[17,"DISPATCH_QUEUE_PRIORITY_BACKGROUND","","",null,null],[17,"DISPATCH_TIME_NOW","","",null,null],[17,"DISPATCH_TIME_FOREVER","","",null,null],[3,"Group","dispatch","A Grand Central Dispatch group.",null,null],[3,"GroupGuard","","An RAII guard which will leave a <code>Group</code> when dropped.",null,null],[3,"Once","","A predicate used to execute a closure only once for the …",null,null],[3,"Queue","","A Grand Central Dispatch queue.",null,null],[4,"QueueAttribute","","The type of a dispatch queue.",null,null],[13,"Serial","","The queue executes blocks serially in FIFO order.",0,null],[13,"Concurrent","","The queue executes blocks concurrently.",0,null],[4,"QueuePriority","","The priority of a global concurrent queue.",null,null],[13,"High","","The queue is scheduled for execution before any default …",1,null],[13,"Default","","The queue is scheduled for execution after all high …",1,null],[13,"Low","","The queue is scheduled for execution after all default …",1,null],[13,"Background","","The queue is scheduled for execution after all high …",1,null],[3,"SuspendGuard","","An RAII guard which will resume a suspended <code>Queue</code> when …",null,null],[3,"Semaphore","","A counting semaphore.",null,null],[3,"SemaphoreGuard","","An RAII guard which will signal a <code>Semaphore</code> when dropped.",null,null],[3,"WaitTimeout","","An error indicating a wait timed out.",null,null],[11,"from","dispatch::ffi","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","dispatch","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"drop","","",3,[[]]],[11,"drop","","",4,[[]]],[11,"drop","","",5,[[]]],[11,"drop","","",6,[[]]],[11,"drop","","",8,[[]]],[11,"drop","","",9,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",0,[[],["queueattribute",4]]],[11,"clone","","",1,[[],["queuepriority",4]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",10,[[],["waittimeout",3]]],[11,"eq","","",0,[[["queueattribute",4]],["bool",15]]],[11,"eq","","",1,[[["queuepriority",4]],["bool",15]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"create","","Creates a new dispatch <code>Group</code>.",3,[[],["group",3]]],[11,"enter","","Indicates that a closure has entered self, and increments …",3,[[],["groupguard",3]]],[11,"exec_async","","Submits a closure asynchronously to the given <code>Queue</code> and …",3,[[["queue",3]]]],[11,"notify","","Schedules a closure to be submitted to the given <code>Queue</code> …",3,[[["queue",3]]]],[11,"wait","","Waits synchronously for all tasks associated with self to …",3,[[]]],[11,"wait_timeout","","Waits for all tasks associated with self to complete …",3,[[["duration",3]],[["result",4],["waittimeout",3]]]],[11,"is_empty","","Returns whether self is currently empty.",3,[[],["bool",15]]],[11,"leave","","Drops self, leaving the <code>Group</code>.",4,[[]]],[11,"main","","Returns the serial dispatch <code>Queue</code> associated with the …",5,[[]]],[11,"global","","Returns a system-defined global concurrent <code>Queue</code> with the …",5,[[["queuepriority",4]]]],[11,"create","","Creates a new dispatch <code>Queue</code>.",5,[[["queueattribute",4],["str",15]]]],[11,"with_target_queue","","Creates a new dispatch <code>Queue</code> with the given target queue.",5,[[["queueattribute",4],["queue",3],["str",15]]]],[11,"label","","Returns the label that was specified for self.",5,[[],["str",15]]],[11,"exec_sync","","Submits a closure for execution on self and waits until …",5,[[]]],[11,"exec_async","","Submits a closure for asynchronous execution on self and …",5,[[]]],[11,"exec_after","","After the specified delay, submits a closure for …",5,[[["duration",3]]]],[11,"apply","","Submits a closure to be executed on self the given number …",5,[[["usize",15]]]],[11,"for_each","","Submits a closure to be executed on self for each element …",5,[[]]],[11,"map","","Submits a closure to be executed on self for each element …",5,[[["vec",3]],["vec",3]]],[11,"barrier_sync","","Submits a closure to be executed on self as a barrier and …",5,[[]]],[11,"barrier_async","","Submits a closure to be executed on self as a barrier and …",5,[[]]],[11,"suspend","","Suspends the invocation of blocks on self and returns a …",5,[[],["suspendguard",3]]],[11,"resume","","Drops self, allowing the suspended <code>Queue</code> to resume.",6,[[]]],[11,"new","","Creates a new <code>Once</code>.",7,[[],["once",3]]],[11,"call_once","","Executes a closure once, ensuring that no other closure …",7,[[]]],[11,"new","","Creates a new <code>Semaphore</code> with an initial value.",8,[[["u32",15]]]],[11,"wait","","Wait for (decrement) self.",8,[[]]],[11,"wait_timeout","","Wait for (decrement) self until the specified timeout has …",8,[[["duration",3]],[["result",4],["waittimeout",3]]]],[11,"signal","","Signal (increment) self.",8,[[],["bool",15]]],[11,"access","","Wait to access a resource protected by self. This …",8,[[],["semaphoreguard",3]]],[11,"access_timeout","","Wait until the specified timeout to access a resource …",8,[[["duration",3]],[["waittimeout",3],["semaphoreguard",3],["result",4]]]],[11,"signal","","Drops self, signaling the <code>Semaphore</code>.",9,[[]]]],"p":[[4,"QueueAttribute"],[4,"QueuePriority"],[3,"dispatch_object_s"],[3,"Group"],[3,"GroupGuard"],[3,"Queue"],[3,"SuspendGuard"],[3,"Once"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"WaitTimeout"]]},\
"either":{"doc":"The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","i":[[4,"Either","either","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …",null,null],[13,"Left","","A value of type <code>L</code>.",0,null],[13,"Right","","A value of type <code>R</code>.",0,null],[11,"is_left","","Return true if the value is the <code>Left</code> variant.",0,[[],["bool",15]]],[11,"is_right","","Return true if the value is the <code>Right</code> variant.",0,[[],["bool",15]]],[11,"left","","Convert the left side of <code>Either<L, R></code> to an <code>Option<L></code>.",0,[[],["option",4]]],[11,"right","","Convert the right side of <code>Either<L, R></code> to an <code>Option<R></code>.",0,[[],["option",4]]],[11,"as_ref","","Convert <code>&Either<L, R></code> to <code>Either<&L, &R></code>.",0,[[],["either",4]]],[11,"as_mut","","Convert <code>&mut Either<L, R></code> to <code>Either<&mut L, &mut R></code>.",0,[[],["either",4]]],[11,"flip","","Convert <code>Either<L, R></code> to <code>Either<R, L></code>.",0,[[],["either",4]]],[11,"map_left","","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …",0,[[],["either",4]]],[11,"map_right","","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …",0,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, …",0,[[]]],[11,"either_with","","Like <code>either</code>, but provide some context to whichever of the …",0,[[]]],[11,"left_and_then","","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …",0,[[],["either",4]]],[11,"right_and_then","","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …",0,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either",4]]],[11,"left_or","","Return left value or given value",0,[[]]],[11,"left_or_default","","Return left or a default",0,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[]]],[11,"right_or","","Return right value or given value",0,[[]]],[11,"right_or_default","","Return right or a default",0,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[]]],[11,"unwrap_left","","Returns the left value",0,[[]]],[11,"unwrap_right","","Returns the right value",0,[[]]],[11,"expect_left","","Returns the left value",0,[[["str",15]]]],[11,"expect_right","","Returns the right value",0,[[["str",15]]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[]]],[11,"map","","Map <code>f</code> over the contained value and return the result in …",0,[[],["either",4]]],[14,"try_left","","Macro for unwrapping the left side of an <code>Either</code>, which …",null,null],[14,"try_right","","Dual to <code>try_left!</code>, see its documentation for more …",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"into_iter","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"from","","",0,[[["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["either",4]],["bool",15]]],[11,"ne","","",0,[[["either",4]],["bool",15]]],[11,"cmp","","",0,[[["either",4]],["ordering",4]]],[11,"partial_cmp","","",0,[[["either",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["either",4]],["bool",15]]],[11,"le","","",0,[[["either",4]],["bool",15]]],[11,"gt","","",0,[[["either",4]],["bool",15]]],[11,"ge","","",0,[[["either",4]],["bool",15]]],[11,"hash","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"as_ref","","",0,[[],["str",15]]],[11,"as_ref","","",0,[[]]],[11,"as_mut","","",0,[[],["str",15]]],[11,"as_mut","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"into","","",0,[[],["result",4]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"fold","","",0,[[]]],[11,"count","","",0,[[],["usize",15]]],[11,"last","","",0,[[],["option",4]]],[11,"nth","","",0,[[["usize",15]],["option",4]]],[11,"collect","","",0,[[]]],[11,"all","","",0,[[],["bool",15]]],[11,"extend","","",0,[[]]],[11,"clone","","",0,[[],["either",4]]]],"p":[[4,"Either"]]},\
"event_loop":{"doc":"A Piston event loop for games and interactive applications","i":[[3,"EventSettings","event_loop","Stores event loop settings.",null,null],[12,"max_fps","","The maximum number of frames per second",0,null],[12,"ups","","The number of updates per second",0,null],[12,"ups_reset","","The number of delayed updates before skipping them to …",0,null],[12,"swap_buffers","","Enable or disable automatic swapping of buffers.",0,null],[12,"bench_mode","","Enable or disable benchmark mode. When enabled, it will …",0,null],[12,"lazy","","Enable or disable rendering only when receiving input. …",0,null],[11,"new","","Creates new with default settings.",0,[[],["eventsettings",3]]],[3,"Events","","An event loop iterator",null,null],[17,"DEFAULT_UPS","","The default updates per second.",null,null],[17,"DEFAULT_UPS_RESET","","The default delayed updates reset.",null,null],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second.",null,null],[11,"new","","Creates a new event iterator with default UPS and FPS …",1,[[["eventsettings",3]],["events",3]]],[11,"next","","Returns the next event.",1,[[],[["event",4],["option",4]]]],[8,"EventLoop","","Methods implemented for changing event loop settings.",null,null],[10,"get_event_settings","","Returns event loop settings.",2,[[],["eventsettings",3]]],[10,"set_event_settings","","Sets event loop settings.",2,[[["eventsettings",3]]]],[11,"set_ups","","The number of updates per second",2,[[["u64",15]]]],[11,"ups","","The number of updates per second",2,[[["u64",15]]]],[11,"set_ups_reset","","The number of delayed updates before skipping them to …",2,[[["u64",15]]]],[11,"ups_reset","","The number of delayed updates before skipping them to …",2,[[["u64",15]]]],[11,"set_max_fps","","The maximum number of frames per second",2,[[["u64",15]]]],[11,"max_fps","","The maximum number of frames per second",2,[[["u64",15]]]],[11,"set_swap_buffers","","Enable or disable automatic swapping of buffers.",2,[[["bool",15]]]],[11,"swap_buffers","","Enable or disable automatic swapping of buffers.",2,[[["bool",15]]]],[11,"set_bench_mode","","Enable or disable benchmark mode. When enabled, it will …",2,[[["bool",15]]]],[11,"bench_mode","","Enable or disable benchmark mode. When enabled, it will …",2,[[["bool",15]]]],[11,"set_lazy","","Enable or disable rendering only when receiving input. …",2,[[["bool",15]]]],[11,"lazy","","Enable or disable rendering only when receiving input. …",2,[[["bool",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"get_event_settings","","",0,[[]]],[11,"set_event_settings","","",0,[[]]],[11,"get_event_settings","","",1,[[],["eventsettings",3]]],[11,"set_event_settings","","",1,[[["eventsettings",3]]]],[11,"clone","","",0,[[],["eventsettings",3]]],[11,"clone","","",1,[[],["events",3]]],[11,"default","","",0,[[],["eventsettings",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"EventSettings"],[3,"Events"],[8,"EventLoop"]]},\
"float":{"doc":"Traits for generic floats in game programming","i":[[8,"Float","float","Convenience trait for floats.",null,null],[8,"Min","","Minimum value.",null,null],[10,"min","","Returns the minimum value of self or other.",0,[[]]],[8,"Max","","Maximum value.",null,null],[10,"max","","Returns the maximum value of self or other.",1,[[]]],[8,"Signum","","The sign of the number.",null,null],[10,"signum","","Returns number representing the sign of self",2,[[]]],[8,"Powf","","Floating number power.",null,null],[10,"powf","","Returns floating power of the number.",3,[[]]],[8,"Radians","","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",4,[[]]],[10,"_180","","Returns radians corresponding to 180 degrees.",4,[[]]],[10,"_360","","Returns radians corresponding to 360 degrees.",4,[[]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to …",4,[[]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to …",4,[[]]],[8,"One","","Number 1.",null,null],[10,"one","","Returns 1.",5,[[]]],[8,"Zero","","Number 0.",null,null],[10,"zero","","Returns 0.",6,[[]]],[8,"Sqrt","","Square root.",null,null],[10,"sqrt","","Returns square root.",7,[[]]],[8,"Trig","","Basic trigonometry functions",null,null],[10,"sin","","Returns sine of self.",8,[[]]],[10,"cos","","Returns cosine of self.",8,[[]]],[10,"tan","","Returns tangent of self.",8,[[]]],[10,"asin","","Returns inverse sine of self.",8,[[]]],[10,"acos","","Returns inverse cosine of self.",8,[[]]],[10,"atan","","Returns inverse tangent of self.",8,[[]]],[10,"atan2","","Returns the four quadrant arctangent of self (y) and …",8,[[]]],[10,"sinh","","Returns hyperbolic sine of self.",8,[[]]],[10,"cosh","","Returns hyperbolic cosine of self.",8,[[]]],[10,"tanh","","Returns hyperbolic tangent of self.",8,[[]]],[10,"asinh","","Returns inverse hyperbolic sine of self.",8,[[]]],[10,"acosh","","Returns inverse hyperbolic cosine of self.",8,[[]]],[10,"atanh","","Returns inverse hyperbolic tangent of self.",8,[[]]],[8,"Cast","","Casts into another type.",null,null],[10,"cast","","Casts into other type.",9,[[]]],[8,"FromPrimitive","","Trait for converting from different numeric types",null,null],[10,"from_f64","","from a f64",10,[[["f64",15]]]],[10,"from_f32","","from a f32",10,[[["f32",15]]]],[10,"from_isize","","from a isze",10,[[["isize",15]]]],[10,"from_u32","","from a u32",10,[[["u32",15]]]],[10,"from_i32","","from a i32",10,[[["i32",15]]]]],"p":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Powf"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]},\
"fnv":{"doc":"An implementation of the [Fowler–Noll–Vo hash function…","i":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[11,"with_key","","Create an FNV hasher starting with a state corresponding …",0,[[["u64",15]],["fnvhasher",3]]],[6,"FnvBuildHasher","","A builder for default FNV hashers.",null,null],[6,"FnvHashMap","","A <code>HashMap</code> using a default FNV hasher.",null,null],[6,"FnvHashSet","","A <code>HashSet</code> using a default FNV hasher.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",0,[[],["fnvhasher",3]]],[11,"finish","","",0,[[],["u64",15]]],[11,"write","","",0,[[]]]],"p":[[3,"FnvHasher"]]},\
"foreign_types":{"doc":"A framework for Rust wrappers over C APIs.","i":[[3,"Opaque","foreign_types","An opaque type used to define <code>ForeignTypeRef</code> types.",null,null],[8,"ForeignType","","A type implemented by wrappers over foreign types.",null,null],[16,"CType","","The raw C type.",0,null],[16,"Ref","","The type representing a reference to this type.",0,null],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,[[]]],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,[[]]],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed …",null,null],[16,"CType","","The raw C type.",1,null],[11,"from_ptr","","Constructs a shared instance of this type from its raw …",1,[[]]],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw …",1,[[]]],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,[[]]],[14,"foreign_type","","A macro to easily define wrappers for foreign types.",null,null],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]]],"p":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]},\
"foreign_types_shared":{"doc":"Internal crate used by foreign-types","i":[[3,"Opaque","foreign_types_shared","An opaque type used to define <code>ForeignTypeRef</code> types.",null,null],[8,"ForeignType","","A type implemented by wrappers over foreign types.",null,null],[16,"CType","","The raw C type.",0,null],[16,"Ref","","The type representing a reference to this type.",0,null],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,[[]]],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,[[]]],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed …",null,null],[16,"CType","","The raw C type.",1,null],[11,"from_ptr","","Constructs a shared instance of this type from its raw …",1,[[]]],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw …",1,[[]]],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]]],"p":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]},\
"gif":{"doc":"GIF en- and decoding library Build StatusGIF en- and …","i":[[3,"AnyExtension","gif","A newtype wrapper around an arbitrary extension ID.",null,null],[12,"0","","",0,null],[4,"Block","","Known GIF block labels.",null,null],[13,"Image","","Image block.",1,null],[13,"Extension","","Extension block.",1,null],[13,"Trailer","","Image trailer.",1,null],[4,"Extension","","Known GIF extension labels.",null,null],[13,"Text","","Plain Text extension.",2,null],[13,"Control","","Control extension.",2,null],[13,"Comment","","Comment extension.",2,null],[13,"Application","","Application extension.",2,null],[4,"DisposalMethod","","Disposal method",null,null],[13,"Any","","StreamingDecoder is not required to take any action.",3,null],[13,"Keep","","Do not dispose.",3,null],[13,"Background","","Restore to background color.",3,null],[13,"Previous","","Restore to previous.",3,null],[3,"Frame","","A GIF frame",null,null],[12,"delay","","Frame delay in units of 10 ms.",4,null],[12,"dispose","","Disposal method.",4,null],[12,"transparent","","Transparent index (if available).",4,null],[12,"needs_user_input","","True if the frame needs user input to be displayed.",4,null],[12,"top","","Offset from the top border of the canvas.",4,null],[12,"left","","Offset from the left border of the canvas.",4,null],[12,"width","","Width of the frame.",4,null],[12,"height","","Height of the frame.",4,null],[12,"interlaced","","True if the image is interlaced.",4,null],[12,"palette","","Frame local color palette if available.",4,null],[12,"buffer","","Buffer containing the image data. Only indices unless …",4,null],[3,"StreamingDecoder","","GIF decoder which supports streaming",null,null],[4,"Decoded","","Indicates whether a certain object has been decoded",null,null],[13,"Nothing","","Decoded nothing.",5,null],[13,"GlobalPalette","","Global palette.",5,null],[13,"BackgroundColor","","Index of the background color in the global palette.",5,null],[13,"Trailer","","Decoded the image trailer.",5,null],[13,"BlockStart","","The start of a block.",5,null],[13,"SubBlockFinished","","Decoded a sub-block. More sub-block are available.",5,null],[13,"BlockFinished","","Decoded the last (or only) sub-block of a block.",5,null],[13,"Frame","","Decoded all information of the next frame.",5,null],[13,"Data","","Decoded some data of the current frame.",5,null],[13,"DataEnd","","No more data available the current frame.",5,null],[4,"DecodingError","","Decoding error.",null,null],[13,"Format","","Returned if the image is found to be malformed.",6,null],[13,"Io","","Wraps <code>std::io::Error</code>.",6,null],[3,"DecodingFormatError","","An error returned in the case of the image not being …",null,null],[4,"ColorOutput","","Output mode for the image data",null,null],[13,"RGBA","","The decoder expands the image data to 32bit RGBA. This …",7,null],[13,"Indexed","","The decoder returns the raw indexed data.",7,null],[3,"MemoryLimit","","Memory limit in bytes. <code>MemoryLimit::Some(0)</code> means that …",null,null],[12,"0","","",8,null],[4,"Extensions","","Configures how extensions should be handled",null,null],[13,"Save","","Saves all extention data",9,null],[13,"Skip","","Skips the data of unknown extensions and extracts the …",9,null],[3,"DecodeOptions","","Options for opening a GIF decoder.",null,null],[3,"Decoder","","GIF decoder",null,null],[3,"Encoder","","GIF encoder.",null,null],[4,"ExtensionData","","Extension data.",null,null],[13,"Control","","Control extension. Use <code>ExtensionData::new_control_ext</code> to …",10,null],[12,"flags","gif::ExtensionData","Flags.",11,null],[12,"delay","","Frame delay.",11,null],[12,"trns","","Transparent index.",11,null],[13,"Repetitions","gif","Sets the number of repetitions",10,null],[4,"Repeat","","Number of repetitions",null,null],[13,"Finite","","Finite number of repetitions",12,null],[13,"Infinite","","Infinite number of repetitions",12,null],[4,"EncodingError","","Encoding error.",null,null],[13,"Format","","Returned if the to image is not encodable as a gif.",13,null],[13,"Io","","Wraps <code>std::io::Error</code>.",13,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"drop","","",18,[[]]],[11,"from","","",0,[[["extension",4]]]],[11,"from","","",6,[[["error",3]]]],[11,"from","","",6,[[["decodingformaterror",3]]]],[11,"from","","",13,[[["error",3]]]],[11,"clone","","",3,[[],["disposalmethod",4]]],[11,"clone","","",1,[[],["block",4]]],[11,"clone","","",0,[[],["anyextension",3]]],[11,"clone","","",2,[[],["extension",4]]],[11,"clone","","",4,[[],["frame",3]]],[11,"clone","","",7,[[],["coloroutput",4]]],[11,"clone","","",8,[[],["memorylimit",3]]],[11,"clone","","",16,[[],["decodeoptions",3]]],[11,"clone","","",12,[[],["repeat",4]]],[11,"default","","",4,[[],["frame",3]]],[11,"eq","","",3,[[["disposalmethod",4]],["bool",15]]],[11,"eq","","",1,[[["block",4]],["bool",15]]],[11,"eq","","",0,[[["anyextension",3]],["bool",15]]],[11,"ne","","",0,[[["anyextension",3]],["bool",15]]],[11,"eq","","",2,[[["extension",4]],["bool",15]]],[11,"eq","","",9,[[["extensions",4]],["bool",15]]],[11,"eq","","",7,[[["coloroutput",4]],["bool",15]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"source","","",14,[[],[["option",4],["error",8]]]],[11,"source","","",6,[[],[["option",4],["error",8]]]],[11,"source","","",13,[[],[["option",4],["error",8]]]],[11,"from_u8","","Converts <code>u8</code> to <code>Option<Self></code>",3,[[["u8",15]],[["option",4],["disposalmethod",4]]]],[11,"from_u8","","Converts <code>u8</code> to <code>Option<Self></code>",1,[[["u8",15]],[["option",4],["block",4]]]],[11,"into_known","","Decode the label as a known extension.",0,[[],[["extension",4],["option",4]]]],[11,"from_u8","","Converts <code>u8</code> to a <code>Extension</code> if it is known.",2,[[["u8",15]],[["extension",4],["option",4]]]],[11,"from_rgba","","Creates a frame from pixels in RGBA format.",4,[[["u16",15]],["frame",3]]],[11,"from_rgba_speed","","Creates a frame from pixels in RGBA format.",4,[[["u16",15],["i32",15]],["frame",3]]],[11,"from_palette_pixels","","Creates a frame from a palette and indexed pixels.",4,[[["option",4],["u16",15],["u8",15]],["frame",3]]],[11,"from_indexed_pixels","","Creates a frame from indexed pixels in the global palette.",4,[[["option",4],["u16",15],["u8",15]],["frame",3]]],[11,"from_rgb","","Creates a frame from pixels in RGB format.",4,[[["u16",15]],["frame",3]]],[11,"from_rgb_speed","","Creates a frame from pixels in RGB format.",4,[[["u16",15],["i32",15]],["frame",3]]],[11,"new","","Creates a new streaming decoder",15,[[],["streamingdecoder",3]]],[11,"update","","Updates the internal state of the decoder. ",15,[[],[["result",4],["decodingerror",4]]]],[11,"last_ext","","Returns the data of the last extension that has been …",15,[[]]],[11,"current_frame_mut","","Current frame info as a mutable ref.",15,[[],["frame",3]]],[11,"current_frame","","Current frame info as a ref.",15,[[],["frame",3]]],[11,"width","","Width of the image",15,[[],["u16",15]]],[11,"height","","Height of the image",15,[[],["u16",15]]],[11,"set_extensions","","Configure whether extensions are saved or skipped.",15,[[["extensions",4]]]],[11,"new","","Creates a new decoder builder",16,[[],["decodeoptions",3]]],[11,"set_color_output","","Configure how color data is decoded.",16,[[["coloroutput",4]]]],[11,"set_memory_limit","","Configure a memory limit for decoding.",16,[[["memorylimit",3]]]],[11,"check_frame_consistency","","Configure if frames must be within the screen descriptor.",16,[[["bool",15]]]],[11,"check_lzw_end_code","","Configure if LZW encoded blocks must end with a marker …",16,[[["bool",15]]]],[11,"read_info","","Reads the logical screen descriptor including the global …",16,[[["read",8]],[["result",4],["decoder",3],["decodingerror",4]]]],[11,"new","","Create a new decoder with default options.",17,[[],[["result",4],["decodingerror",4]]]],[11,"build","","Return a builder that allows configuring limits etc.",17,[[],["decodeoptions",3]]],[11,"next_frame_info","","Returns the next frame info",17,[[],[["result",4],["decodingerror",4],["option",4]]]],[11,"read_next_frame","","Reads the next frame from the image.",17,[[],[["result",4],["decodingerror",4],["option",4]]]],[11,"read_into_buffer","","Reads the data of the current frame into a pre-allocated …",17,[[],[["result",4],["decodingerror",4]]]],[11,"fill_buffer","","Reads data of the current frame into a pre-allocated …",17,[[],[["bool",15],["decodingerror",4],["result",4]]]],[11,"buffer_size","","Output buffer size",17,[[],["usize",15]]],[11,"line_length","","Line length of the current frame",17,[[],["usize",15]]],[11,"palette","","Returns the color palette relevant for the current (next) …",17,[[],[["result",4],["decodingerror",4]]]],[11,"global_palette","","The global color palette",17,[[],["option",4]]],[11,"width","","Width of the image",17,[[],["u16",15]]],[11,"height","","Height of the image",17,[[],["u16",15]]],[11,"bg_color","","Index of the background color in the global palette",17,[[],[["usize",15],["option",4]]]],[11,"new_control_ext","","Constructor for control extension data.",10,[[["u16",15],["u8",15],["bool",15],["disposalmethod",4],["option",4]],["extensiondata",4]]],[11,"new","","Creates a new encoder.",18,[[["u16",15]],[["result",4],["encodingerror",4]]]],[11,"set_repeat","","Write an extension block that signals a repeat behaviour.",18,[[["repeat",4]],[["result",4],["encodingerror",4]]]],[11,"write_global_palette","","Writes the global color palette.",18,[[],[["result",4],["encodingerror",4]]]],[11,"write_frame","","Writes a frame to the image.",18,[[["frame",3]],[["result",4],["encodingerror",4]]]],[11,"write_extension","","Writes an extension to the image.",18,[[["extensiondata",4]],[["result",4],["encodingerror",4]]]],[11,"write_raw_extension","","Writes a raw extension to the image.",18,[[["anyextension",3]],["result",6]]]],"p":[[3,"AnyExtension"],[4,"Block"],[4,"Extension"],[4,"DisposalMethod"],[3,"Frame"],[4,"Decoded"],[4,"DecodingError"],[4,"ColorOutput"],[3,"MemoryLimit"],[4,"Extensions"],[4,"ExtensionData"],[13,"Control"],[4,"Repeat"],[4,"EncodingError"],[3,"DecodingFormatError"],[3,"StreamingDecoder"],[3,"DecodeOptions"],[3,"Decoder"],[3,"Encoder"]]},\
"gl":{"doc":"UsageYou can import the pointer style loader and type …","i":[[0,"types","gl","",null,null],[6,"GLenum","gl::types","",null,null],[6,"GLboolean","","",null,null],[6,"GLbitfield","","",null,null],[6,"GLvoid","","",null,null],[6,"GLbyte","","",null,null],[6,"GLshort","","",null,null],[6,"GLint","","",null,null],[6,"GLclampx","","",null,null],[6,"GLubyte","","",null,null],[6,"GLushort","","",null,null],[6,"GLuint","","",null,null],[6,"GLsizei","","",null,null],[6,"GLfloat","","",null,null],[6,"GLclampf","","",null,null],[6,"GLdouble","","",null,null],[6,"GLclampd","","",null,null],[6,"GLeglImageOES","","",null,null],[6,"GLchar","","",null,null],[6,"GLcharARB","","",null,null],[6,"GLhandleARB","","",null,null],[6,"GLhalfARB","","",null,null],[6,"GLhalf","","",null,null],[6,"GLfixed","","",null,null],[6,"GLintptr","","",null,null],[6,"GLsizeiptr","","",null,null],[6,"GLint64","","",null,null],[6,"GLuint64","","",null,null],[6,"GLintptrARB","","",null,null],[6,"GLsizeiptrARB","","",null,null],[6,"GLint64EXT","","",null,null],[6,"GLuint64EXT","","",null,null],[4,"__GLsync","","",null,null],[6,"GLsync","","",null,null],[4,"_cl_context","","",null,null],[4,"_cl_event","","",null,null],[6,"GLDEBUGPROC","","",null,null],[6,"GLDEBUGPROCARB","","",null,null],[6,"GLDEBUGPROCKHR","","",null,null],[6,"GLDEBUGPROCAMD","","",null,null],[6,"GLhalfNV","","",null,null],[6,"GLvdpauSurfaceNV","","",null,null],[0,"ActiveShaderProgram","gl","",null,null],[5,"is_loaded","gl::ActiveShaderProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ActiveTexture","gl","",null,null],[5,"is_loaded","gl::ActiveTexture","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"AttachShader","gl","",null,null],[5,"is_loaded","gl::AttachShader","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BeginConditionalRender","gl","",null,null],[5,"is_loaded","gl::BeginConditionalRender","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BeginQuery","gl","",null,null],[5,"is_loaded","gl::BeginQuery","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BeginQueryIndexed","gl","",null,null],[5,"is_loaded","gl::BeginQueryIndexed","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BeginTransformFeedback","gl","",null,null],[5,"is_loaded","gl::BeginTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindAttribLocation","gl","",null,null],[5,"is_loaded","gl::BindAttribLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindBuffer","gl","",null,null],[5,"is_loaded","gl::BindBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindBufferBase","gl","",null,null],[5,"is_loaded","gl::BindBufferBase","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindBufferRange","gl","",null,null],[5,"is_loaded","gl::BindBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindBuffersBase","gl","",null,null],[5,"is_loaded","gl::BindBuffersBase","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindBuffersRange","gl","",null,null],[5,"is_loaded","gl::BindBuffersRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindFragDataLocation","gl","",null,null],[5,"is_loaded","gl::BindFragDataLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindFragDataLocationIndexed","gl","",null,null],[5,"is_loaded","gl::BindFragDataLocationIndexed","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindFramebuffer","gl","",null,null],[5,"is_loaded","gl::BindFramebuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindImageTexture","gl","",null,null],[5,"is_loaded","gl::BindImageTexture","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindImageTextures","gl","",null,null],[5,"is_loaded","gl::BindImageTextures","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindProgramPipeline","gl","",null,null],[5,"is_loaded","gl::BindProgramPipeline","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindRenderbuffer","gl","",null,null],[5,"is_loaded","gl::BindRenderbuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindSampler","gl","",null,null],[5,"is_loaded","gl::BindSampler","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindSamplers","gl","",null,null],[5,"is_loaded","gl::BindSamplers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindTexture","gl","",null,null],[5,"is_loaded","gl::BindTexture","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindTextureUnit","gl","",null,null],[5,"is_loaded","gl::BindTextureUnit","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindTextures","gl","",null,null],[5,"is_loaded","gl::BindTextures","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindTransformFeedback","gl","",null,null],[5,"is_loaded","gl::BindTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindVertexArray","gl","",null,null],[5,"is_loaded","gl::BindVertexArray","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindVertexBuffer","gl","",null,null],[5,"is_loaded","gl::BindVertexBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BindVertexBuffers","gl","",null,null],[5,"is_loaded","gl::BindVertexBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendColor","gl","",null,null],[5,"is_loaded","gl::BlendColor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendEquation","gl","",null,null],[5,"is_loaded","gl::BlendEquation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendEquationSeparate","gl","",null,null],[5,"is_loaded","gl::BlendEquationSeparate","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendEquationSeparatei","gl","",null,null],[5,"is_loaded","gl::BlendEquationSeparatei","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendEquationi","gl","",null,null],[5,"is_loaded","gl::BlendEquationi","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendFunc","gl","",null,null],[5,"is_loaded","gl::BlendFunc","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendFuncSeparate","gl","",null,null],[5,"is_loaded","gl::BlendFuncSeparate","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendFuncSeparatei","gl","",null,null],[5,"is_loaded","gl::BlendFuncSeparatei","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlendFunci","gl","",null,null],[5,"is_loaded","gl::BlendFunci","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlitFramebuffer","gl","",null,null],[5,"is_loaded","gl::BlitFramebuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BlitNamedFramebuffer","gl","",null,null],[5,"is_loaded","gl::BlitNamedFramebuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BufferData","gl","",null,null],[5,"is_loaded","gl::BufferData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BufferStorage","gl","",null,null],[5,"is_loaded","gl::BufferStorage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"BufferSubData","gl","",null,null],[5,"is_loaded","gl::BufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CheckFramebufferStatus","gl","",null,null],[5,"is_loaded","gl::CheckFramebufferStatus","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CheckNamedFramebufferStatus","gl","",null,null],[5,"is_loaded","gl::CheckNamedFramebufferStatus","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClampColor","gl","",null,null],[5,"is_loaded","gl::ClampColor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Clear","gl","",null,null],[5,"is_loaded","gl::Clear","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearBufferData","gl","",null,null],[5,"is_loaded","gl::ClearBufferData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearBufferSubData","gl","",null,null],[5,"is_loaded","gl::ClearBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearBufferfi","gl","",null,null],[5,"is_loaded","gl::ClearBufferfi","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearBufferfv","gl","",null,null],[5,"is_loaded","gl::ClearBufferfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearBufferiv","gl","",null,null],[5,"is_loaded","gl::ClearBufferiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearBufferuiv","gl","",null,null],[5,"is_loaded","gl::ClearBufferuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearColor","gl","",null,null],[5,"is_loaded","gl::ClearColor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearDepth","gl","",null,null],[5,"is_loaded","gl::ClearDepth","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearDepthf","gl","",null,null],[5,"is_loaded","gl::ClearDepthf","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearNamedBufferData","gl","",null,null],[5,"is_loaded","gl::ClearNamedBufferData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearNamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::ClearNamedBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearNamedFramebufferfi","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferfi","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearNamedFramebufferfv","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearNamedFramebufferiv","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearNamedFramebufferuiv","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearStencil","gl","",null,null],[5,"is_loaded","gl::ClearStencil","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearTexImage","gl","",null,null],[5,"is_loaded","gl::ClearTexImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClearTexSubImage","gl","",null,null],[5,"is_loaded","gl::ClearTexSubImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClientWaitSync","gl","",null,null],[5,"is_loaded","gl::ClientWaitSync","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ClipControl","gl","",null,null],[5,"is_loaded","gl::ClipControl","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ColorMask","gl","",null,null],[5,"is_loaded","gl::ColorMask","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ColorMaski","gl","",null,null],[5,"is_loaded","gl::ColorMaski","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ColorP3ui","gl","",null,null],[5,"is_loaded","gl::ColorP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ColorP3uiv","gl","",null,null],[5,"is_loaded","gl::ColorP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ColorP4ui","gl","",null,null],[5,"is_loaded","gl::ColorP4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ColorP4uiv","gl","",null,null],[5,"is_loaded","gl::ColorP4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompileShader","gl","",null,null],[5,"is_loaded","gl::CompileShader","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTexImage1D","gl","",null,null],[5,"is_loaded","gl::CompressedTexImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTexImage2D","gl","",null,null],[5,"is_loaded","gl::CompressedTexImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTexImage3D","gl","",null,null],[5,"is_loaded","gl::CompressedTexImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTexSubImage1D","gl","",null,null],[5,"is_loaded","gl::CompressedTexSubImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTexSubImage2D","gl","",null,null],[5,"is_loaded","gl::CompressedTexSubImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTexSubImage3D","gl","",null,null],[5,"is_loaded","gl::CompressedTexSubImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTextureSubImage1D","gl","",null,null],[5,"is_loaded","gl::CompressedTextureSubImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTextureSubImage2D","gl","",null,null],[5,"is_loaded","gl::CompressedTextureSubImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CompressedTextureSubImage3D","gl","",null,null],[5,"is_loaded","gl::CompressedTextureSubImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyBufferSubData","gl","",null,null],[5,"is_loaded","gl::CopyBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyImageSubData","gl","",null,null],[5,"is_loaded","gl::CopyImageSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyNamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::CopyNamedBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTexImage1D","gl","",null,null],[5,"is_loaded","gl::CopyTexImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTexImage2D","gl","",null,null],[5,"is_loaded","gl::CopyTexImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTexSubImage1D","gl","",null,null],[5,"is_loaded","gl::CopyTexSubImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTexSubImage2D","gl","",null,null],[5,"is_loaded","gl::CopyTexSubImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTexSubImage3D","gl","",null,null],[5,"is_loaded","gl::CopyTexSubImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTextureSubImage1D","gl","",null,null],[5,"is_loaded","gl::CopyTextureSubImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTextureSubImage2D","gl","",null,null],[5,"is_loaded","gl::CopyTextureSubImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CopyTextureSubImage3D","gl","",null,null],[5,"is_loaded","gl::CopyTextureSubImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateBuffers","gl","",null,null],[5,"is_loaded","gl::CreateBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateFramebuffers","gl","",null,null],[5,"is_loaded","gl::CreateFramebuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateProgram","gl","",null,null],[5,"is_loaded","gl::CreateProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateProgramPipelines","gl","",null,null],[5,"is_loaded","gl::CreateProgramPipelines","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateQueries","gl","",null,null],[5,"is_loaded","gl::CreateQueries","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateRenderbuffers","gl","",null,null],[5,"is_loaded","gl::CreateRenderbuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateSamplers","gl","",null,null],[5,"is_loaded","gl::CreateSamplers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateShader","gl","",null,null],[5,"is_loaded","gl::CreateShader","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateShaderProgramv","gl","",null,null],[5,"is_loaded","gl::CreateShaderProgramv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateTextures","gl","",null,null],[5,"is_loaded","gl::CreateTextures","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateTransformFeedbacks","gl","",null,null],[5,"is_loaded","gl::CreateTransformFeedbacks","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CreateVertexArrays","gl","",null,null],[5,"is_loaded","gl::CreateVertexArrays","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"CullFace","gl","",null,null],[5,"is_loaded","gl::CullFace","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DebugMessageCallback","gl","",null,null],[5,"is_loaded","gl::DebugMessageCallback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DebugMessageControl","gl","",null,null],[5,"is_loaded","gl::DebugMessageControl","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DebugMessageInsert","gl","",null,null],[5,"is_loaded","gl::DebugMessageInsert","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteBuffers","gl","",null,null],[5,"is_loaded","gl::DeleteBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteFramebuffers","gl","",null,null],[5,"is_loaded","gl::DeleteFramebuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteProgram","gl","",null,null],[5,"is_loaded","gl::DeleteProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteProgramPipelines","gl","",null,null],[5,"is_loaded","gl::DeleteProgramPipelines","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteQueries","gl","",null,null],[5,"is_loaded","gl::DeleteQueries","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteRenderbuffers","gl","",null,null],[5,"is_loaded","gl::DeleteRenderbuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteSamplers","gl","",null,null],[5,"is_loaded","gl::DeleteSamplers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteShader","gl","",null,null],[5,"is_loaded","gl::DeleteShader","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteSync","gl","",null,null],[5,"is_loaded","gl::DeleteSync","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteTextures","gl","",null,null],[5,"is_loaded","gl::DeleteTextures","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteTransformFeedbacks","gl","",null,null],[5,"is_loaded","gl::DeleteTransformFeedbacks","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DeleteVertexArrays","gl","",null,null],[5,"is_loaded","gl::DeleteVertexArrays","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DepthFunc","gl","",null,null],[5,"is_loaded","gl::DepthFunc","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DepthMask","gl","",null,null],[5,"is_loaded","gl::DepthMask","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DepthRange","gl","",null,null],[5,"is_loaded","gl::DepthRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DepthRangeArrayv","gl","",null,null],[5,"is_loaded","gl::DepthRangeArrayv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DepthRangeIndexed","gl","",null,null],[5,"is_loaded","gl::DepthRangeIndexed","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DepthRangef","gl","",null,null],[5,"is_loaded","gl::DepthRangef","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DetachShader","gl","",null,null],[5,"is_loaded","gl::DetachShader","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Disable","gl","",null,null],[5,"is_loaded","gl::Disable","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DisableVertexArrayAttrib","gl","",null,null],[5,"is_loaded","gl::DisableVertexArrayAttrib","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DisableVertexAttribArray","gl","",null,null],[5,"is_loaded","gl::DisableVertexAttribArray","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Disablei","gl","",null,null],[5,"is_loaded","gl::Disablei","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DispatchCompute","gl","",null,null],[5,"is_loaded","gl::DispatchCompute","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DispatchComputeIndirect","gl","",null,null],[5,"is_loaded","gl::DispatchComputeIndirect","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawArrays","gl","",null,null],[5,"is_loaded","gl::DrawArrays","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawArraysIndirect","gl","",null,null],[5,"is_loaded","gl::DrawArraysIndirect","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawArraysInstanced","gl","",null,null],[5,"is_loaded","gl::DrawArraysInstanced","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawArraysInstancedBaseInstance","gl","",null,null],[5,"is_loaded","gl::DrawArraysInstancedBaseInstance","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawBuffer","gl","",null,null],[5,"is_loaded","gl::DrawBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawBuffers","gl","",null,null],[5,"is_loaded","gl::DrawBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElements","gl","",null,null],[5,"is_loaded","gl::DrawElements","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElementsBaseVertex","gl","",null,null],[5,"is_loaded","gl::DrawElementsBaseVertex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElementsIndirect","gl","",null,null],[5,"is_loaded","gl::DrawElementsIndirect","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElementsInstanced","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstanced","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElementsInstancedBaseInstance","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstancedBaseInstance","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElementsInstancedBaseVertex","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstancedBaseVertex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawElementsInstancedBaseVertexBaseInstance","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstancedBaseVertexBaseInstance","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawRangeElements","gl","",null,null],[5,"is_loaded","gl::DrawRangeElements","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawRangeElementsBaseVertex","gl","",null,null],[5,"is_loaded","gl::DrawRangeElementsBaseVertex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawTransformFeedback","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawTransformFeedbackInstanced","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedbackInstanced","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawTransformFeedbackStream","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedbackStream","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"DrawTransformFeedbackStreamInstanced","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedbackStreamInstanced","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Enable","gl","",null,null],[5,"is_loaded","gl::Enable","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"EnableVertexArrayAttrib","gl","",null,null],[5,"is_loaded","gl::EnableVertexArrayAttrib","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"EnableVertexAttribArray","gl","",null,null],[5,"is_loaded","gl::EnableVertexAttribArray","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Enablei","gl","",null,null],[5,"is_loaded","gl::Enablei","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"EndConditionalRender","gl","",null,null],[5,"is_loaded","gl::EndConditionalRender","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"EndQuery","gl","",null,null],[5,"is_loaded","gl::EndQuery","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"EndQueryIndexed","gl","",null,null],[5,"is_loaded","gl::EndQueryIndexed","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"EndTransformFeedback","gl","",null,null],[5,"is_loaded","gl::EndTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FenceSync","gl","",null,null],[5,"is_loaded","gl::FenceSync","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Finish","gl","",null,null],[5,"is_loaded","gl::Finish","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Flush","gl","",null,null],[5,"is_loaded","gl::Flush","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FlushMappedBufferRange","gl","",null,null],[5,"is_loaded","gl::FlushMappedBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FlushMappedNamedBufferRange","gl","",null,null],[5,"is_loaded","gl::FlushMappedNamedBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferParameteri","gl","",null,null],[5,"is_loaded","gl::FramebufferParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferRenderbuffer","gl","",null,null],[5,"is_loaded","gl::FramebufferRenderbuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferTexture","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferTexture1D","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferTexture2D","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferTexture3D","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FramebufferTextureLayer","gl","",null,null],[5,"is_loaded","gl::FramebufferTextureLayer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"FrontFace","gl","",null,null],[5,"is_loaded","gl::FrontFace","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenBuffers","gl","",null,null],[5,"is_loaded","gl::GenBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenFramebuffers","gl","",null,null],[5,"is_loaded","gl::GenFramebuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenProgramPipelines","gl","",null,null],[5,"is_loaded","gl::GenProgramPipelines","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenQueries","gl","",null,null],[5,"is_loaded","gl::GenQueries","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenRenderbuffers","gl","",null,null],[5,"is_loaded","gl::GenRenderbuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenSamplers","gl","",null,null],[5,"is_loaded","gl::GenSamplers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenTextures","gl","",null,null],[5,"is_loaded","gl::GenTextures","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenTransformFeedbacks","gl","",null,null],[5,"is_loaded","gl::GenTransformFeedbacks","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenVertexArrays","gl","",null,null],[5,"is_loaded","gl::GenVertexArrays","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenerateMipmap","gl","",null,null],[5,"is_loaded","gl::GenerateMipmap","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GenerateTextureMipmap","gl","",null,null],[5,"is_loaded","gl::GenerateTextureMipmap","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveAtomicCounterBufferiv","gl","",null,null],[5,"is_loaded","gl::GetActiveAtomicCounterBufferiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveAttrib","gl","",null,null],[5,"is_loaded","gl::GetActiveAttrib","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveSubroutineName","gl","",null,null],[5,"is_loaded","gl::GetActiveSubroutineName","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveSubroutineUniformName","gl","",null,null],[5,"is_loaded","gl::GetActiveSubroutineUniformName","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveSubroutineUniformiv","gl","",null,null],[5,"is_loaded","gl::GetActiveSubroutineUniformiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveUniform","gl","",null,null],[5,"is_loaded","gl::GetActiveUniform","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveUniformBlockName","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformBlockName","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveUniformBlockiv","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformBlockiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveUniformName","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformName","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetActiveUniformsiv","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformsiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetAttachedShaders","gl","",null,null],[5,"is_loaded","gl::GetAttachedShaders","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetAttribLocation","gl","",null,null],[5,"is_loaded","gl::GetAttribLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetBooleani_v","gl","",null,null],[5,"is_loaded","gl::GetBooleani_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetBooleanv","gl","",null,null],[5,"is_loaded","gl::GetBooleanv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetBufferParameteri64v","gl","",null,null],[5,"is_loaded","gl::GetBufferParameteri64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetBufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetBufferParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetBufferPointerv","gl","",null,null],[5,"is_loaded","gl::GetBufferPointerv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetBufferSubData","gl","",null,null],[5,"is_loaded","gl::GetBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetCompressedTexImage","gl","",null,null],[5,"is_loaded","gl::GetCompressedTexImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetCompressedTextureImage","gl","",null,null],[5,"is_loaded","gl::GetCompressedTextureImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetCompressedTextureSubImage","gl","",null,null],[5,"is_loaded","gl::GetCompressedTextureSubImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetDebugMessageLog","gl","",null,null],[5,"is_loaded","gl::GetDebugMessageLog","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetDoublei_v","gl","",null,null],[5,"is_loaded","gl::GetDoublei_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetDoublev","gl","",null,null],[5,"is_loaded","gl::GetDoublev","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetError","gl","",null,null],[5,"is_loaded","gl::GetError","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetFloati_v","gl","",null,null],[5,"is_loaded","gl::GetFloati_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetFloatv","gl","",null,null],[5,"is_loaded","gl::GetFloatv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetFragDataIndex","gl","",null,null],[5,"is_loaded","gl::GetFragDataIndex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetFragDataLocation","gl","",null,null],[5,"is_loaded","gl::GetFragDataLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetFramebufferAttachmentParameteriv","gl","",null,null],[5,"is_loaded","gl::GetFramebufferAttachmentParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetFramebufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetFramebufferParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetGraphicsResetStatus","gl","",null,null],[5,"is_loaded","gl::GetGraphicsResetStatus","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetInteger64i_v","gl","",null,null],[5,"is_loaded","gl::GetInteger64i_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetInteger64v","gl","",null,null],[5,"is_loaded","gl::GetInteger64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetIntegeri_v","gl","",null,null],[5,"is_loaded","gl::GetIntegeri_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetIntegerv","gl","",null,null],[5,"is_loaded","gl::GetIntegerv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetInternalformati64v","gl","",null,null],[5,"is_loaded","gl::GetInternalformati64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetInternalformativ","gl","",null,null],[5,"is_loaded","gl::GetInternalformativ","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetMultisamplefv","gl","",null,null],[5,"is_loaded","gl::GetMultisamplefv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedBufferParameteri64v","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferParameteri64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedBufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedBufferPointerv","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferPointerv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedFramebufferAttachmentParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedFramebufferAttachmentParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedFramebufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedFramebufferParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetNamedRenderbufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedRenderbufferParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetObjectLabel","gl","",null,null],[5,"is_loaded","gl::GetObjectLabel","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetObjectPtrLabel","gl","",null,null],[5,"is_loaded","gl::GetObjectPtrLabel","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetPointerv","gl","",null,null],[5,"is_loaded","gl::GetPointerv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramBinary","gl","",null,null],[5,"is_loaded","gl::GetProgramBinary","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramInfoLog","gl","",null,null],[5,"is_loaded","gl::GetProgramInfoLog","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramInterfaceiv","gl","",null,null],[5,"is_loaded","gl::GetProgramInterfaceiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramPipelineInfoLog","gl","",null,null],[5,"is_loaded","gl::GetProgramPipelineInfoLog","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramPipelineiv","gl","",null,null],[5,"is_loaded","gl::GetProgramPipelineiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramResourceIndex","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceIndex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramResourceLocation","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramResourceLocationIndex","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceLocationIndex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramResourceName","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceName","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramResourceiv","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramStageiv","gl","",null,null],[5,"is_loaded","gl::GetProgramStageiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetProgramiv","gl","",null,null],[5,"is_loaded","gl::GetProgramiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryBufferObjecti64v","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjecti64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryBufferObjectiv","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjectiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryBufferObjectui64v","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjectui64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryBufferObjectuiv","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjectuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryIndexediv","gl","",null,null],[5,"is_loaded","gl::GetQueryIndexediv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryObjecti64v","gl","",null,null],[5,"is_loaded","gl::GetQueryObjecti64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryObjectiv","gl","",null,null],[5,"is_loaded","gl::GetQueryObjectiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryObjectui64v","gl","",null,null],[5,"is_loaded","gl::GetQueryObjectui64v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryObjectuiv","gl","",null,null],[5,"is_loaded","gl::GetQueryObjectuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetQueryiv","gl","",null,null],[5,"is_loaded","gl::GetQueryiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetRenderbufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetRenderbufferParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSamplerParameterIiv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameterIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSamplerParameterIuiv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameterIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSamplerParameterfv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSamplerParameteriv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetShaderInfoLog","gl","",null,null],[5,"is_loaded","gl::GetShaderInfoLog","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetShaderPrecisionFormat","gl","",null,null],[5,"is_loaded","gl::GetShaderPrecisionFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetShaderSource","gl","",null,null],[5,"is_loaded","gl::GetShaderSource","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetShaderiv","gl","",null,null],[5,"is_loaded","gl::GetShaderiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetString","gl","",null,null],[5,"is_loaded","gl::GetString","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetStringi","gl","",null,null],[5,"is_loaded","gl::GetStringi","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSubroutineIndex","gl","",null,null],[5,"is_loaded","gl::GetSubroutineIndex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSubroutineUniformLocation","gl","",null,null],[5,"is_loaded","gl::GetSubroutineUniformLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetSynciv","gl","",null,null],[5,"is_loaded","gl::GetSynciv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexImage","gl","",null,null],[5,"is_loaded","gl::GetTexImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexLevelParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTexLevelParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexLevelParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTexLevelParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexParameterIiv","gl","",null,null],[5,"is_loaded","gl::GetTexParameterIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexParameterIuiv","gl","",null,null],[5,"is_loaded","gl::GetTexParameterIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTexParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTexParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTexParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureImage","gl","",null,null],[5,"is_loaded","gl::GetTextureImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureLevelParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTextureLevelParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureLevelParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTextureLevelParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureParameterIiv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameterIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureParameterIuiv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameterIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTextureSubImage","gl","",null,null],[5,"is_loaded","gl::GetTextureSubImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTransformFeedbackVarying","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbackVarying","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTransformFeedbacki64_v","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbacki64_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTransformFeedbacki_v","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbacki_v","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetTransformFeedbackiv","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbackiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformBlockIndex","gl","",null,null],[5,"is_loaded","gl::GetUniformBlockIndex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformIndices","gl","",null,null],[5,"is_loaded","gl::GetUniformIndices","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformLocation","gl","",null,null],[5,"is_loaded","gl::GetUniformLocation","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformSubroutineuiv","gl","",null,null],[5,"is_loaded","gl::GetUniformSubroutineuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformdv","gl","",null,null],[5,"is_loaded","gl::GetUniformdv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformfv","gl","",null,null],[5,"is_loaded","gl::GetUniformfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformiv","gl","",null,null],[5,"is_loaded","gl::GetUniformiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetUniformuiv","gl","",null,null],[5,"is_loaded","gl::GetUniformuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexArrayIndexed64iv","gl","",null,null],[5,"is_loaded","gl::GetVertexArrayIndexed64iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexArrayIndexediv","gl","",null,null],[5,"is_loaded","gl::GetVertexArrayIndexediv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexArrayiv","gl","",null,null],[5,"is_loaded","gl::GetVertexArrayiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribIiv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribIuiv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribLdv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribLdv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribPointerv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribPointerv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribdv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribdv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribfv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetVertexAttribiv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnColorTable","gl","",null,null],[5,"is_loaded","gl::GetnColorTable","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnCompressedTexImage","gl","",null,null],[5,"is_loaded","gl::GetnCompressedTexImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnConvolutionFilter","gl","",null,null],[5,"is_loaded","gl::GetnConvolutionFilter","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnHistogram","gl","",null,null],[5,"is_loaded","gl::GetnHistogram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnMapdv","gl","",null,null],[5,"is_loaded","gl::GetnMapdv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnMapfv","gl","",null,null],[5,"is_loaded","gl::GetnMapfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnMapiv","gl","",null,null],[5,"is_loaded","gl::GetnMapiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnMinmax","gl","",null,null],[5,"is_loaded","gl::GetnMinmax","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnPixelMapfv","gl","",null,null],[5,"is_loaded","gl::GetnPixelMapfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnPixelMapuiv","gl","",null,null],[5,"is_loaded","gl::GetnPixelMapuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnPixelMapusv","gl","",null,null],[5,"is_loaded","gl::GetnPixelMapusv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnPolygonStipple","gl","",null,null],[5,"is_loaded","gl::GetnPolygonStipple","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnSeparableFilter","gl","",null,null],[5,"is_loaded","gl::GetnSeparableFilter","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnTexImage","gl","",null,null],[5,"is_loaded","gl::GetnTexImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnUniformdv","gl","",null,null],[5,"is_loaded","gl::GetnUniformdv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnUniformfv","gl","",null,null],[5,"is_loaded","gl::GetnUniformfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnUniformiv","gl","",null,null],[5,"is_loaded","gl::GetnUniformiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"GetnUniformuiv","gl","",null,null],[5,"is_loaded","gl::GetnUniformuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Hint","gl","",null,null],[5,"is_loaded","gl::Hint","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateBufferData","gl","",null,null],[5,"is_loaded","gl::InvalidateBufferData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateBufferSubData","gl","",null,null],[5,"is_loaded","gl::InvalidateBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateFramebuffer","gl","",null,null],[5,"is_loaded","gl::InvalidateFramebuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateNamedFramebufferData","gl","",null,null],[5,"is_loaded","gl::InvalidateNamedFramebufferData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateNamedFramebufferSubData","gl","",null,null],[5,"is_loaded","gl::InvalidateNamedFramebufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateSubFramebuffer","gl","",null,null],[5,"is_loaded","gl::InvalidateSubFramebuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateTexImage","gl","",null,null],[5,"is_loaded","gl::InvalidateTexImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"InvalidateTexSubImage","gl","",null,null],[5,"is_loaded","gl::InvalidateTexSubImage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsBuffer","gl","",null,null],[5,"is_loaded","gl::IsBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsEnabled","gl","",null,null],[5,"is_loaded","gl::IsEnabled","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsEnabledi","gl","",null,null],[5,"is_loaded","gl::IsEnabledi","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsFramebuffer","gl","",null,null],[5,"is_loaded","gl::IsFramebuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsProgram","gl","",null,null],[5,"is_loaded","gl::IsProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsProgramPipeline","gl","",null,null],[5,"is_loaded","gl::IsProgramPipeline","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsQuery","gl","",null,null],[5,"is_loaded","gl::IsQuery","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsRenderbuffer","gl","",null,null],[5,"is_loaded","gl::IsRenderbuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsSampler","gl","",null,null],[5,"is_loaded","gl::IsSampler","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsShader","gl","",null,null],[5,"is_loaded","gl::IsShader","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsSync","gl","",null,null],[5,"is_loaded","gl::IsSync","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsTexture","gl","",null,null],[5,"is_loaded","gl::IsTexture","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsTransformFeedback","gl","",null,null],[5,"is_loaded","gl::IsTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"IsVertexArray","gl","",null,null],[5,"is_loaded","gl::IsVertexArray","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"LineWidth","gl","",null,null],[5,"is_loaded","gl::LineWidth","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"LinkProgram","gl","",null,null],[5,"is_loaded","gl::LinkProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"LogicOp","gl","",null,null],[5,"is_loaded","gl::LogicOp","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MapBuffer","gl","",null,null],[5,"is_loaded","gl::MapBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MapBufferRange","gl","",null,null],[5,"is_loaded","gl::MapBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MapNamedBuffer","gl","",null,null],[5,"is_loaded","gl::MapNamedBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MapNamedBufferRange","gl","",null,null],[5,"is_loaded","gl::MapNamedBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MemoryBarrier","gl","",null,null],[5,"is_loaded","gl::MemoryBarrier","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MemoryBarrierByRegion","gl","",null,null],[5,"is_loaded","gl::MemoryBarrierByRegion","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MinSampleShading","gl","",null,null],[5,"is_loaded","gl::MinSampleShading","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiDrawArrays","gl","",null,null],[5,"is_loaded","gl::MultiDrawArrays","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiDrawArraysIndirect","gl","",null,null],[5,"is_loaded","gl::MultiDrawArraysIndirect","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiDrawElements","gl","",null,null],[5,"is_loaded","gl::MultiDrawElements","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiDrawElementsBaseVertex","gl","",null,null],[5,"is_loaded","gl::MultiDrawElementsBaseVertex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiDrawElementsIndirect","gl","",null,null],[5,"is_loaded","gl::MultiDrawElementsIndirect","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP1ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP1ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP1uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP1uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP2ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP2uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP3ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP3uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP4ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"MultiTexCoordP4uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedBufferData","gl","",null,null],[5,"is_loaded","gl::NamedBufferData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedBufferStorage","gl","",null,null],[5,"is_loaded","gl::NamedBufferStorage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::NamedBufferSubData","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferDrawBuffer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferDrawBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferDrawBuffers","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferDrawBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferParameteri","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferReadBuffer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferReadBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferRenderbuffer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferRenderbuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferTexture","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferTexture","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedFramebufferTextureLayer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferTextureLayer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedRenderbufferStorage","gl","",null,null],[5,"is_loaded","gl::NamedRenderbufferStorage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NamedRenderbufferStorageMultisample","gl","",null,null],[5,"is_loaded","gl::NamedRenderbufferStorageMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NormalP3ui","gl","",null,null],[5,"is_loaded","gl::NormalP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"NormalP3uiv","gl","",null,null],[5,"is_loaded","gl::NormalP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ObjectLabel","gl","",null,null],[5,"is_loaded","gl::ObjectLabel","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ObjectPtrLabel","gl","",null,null],[5,"is_loaded","gl::ObjectPtrLabel","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PatchParameterfv","gl","",null,null],[5,"is_loaded","gl::PatchParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PatchParameteri","gl","",null,null],[5,"is_loaded","gl::PatchParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PauseTransformFeedback","gl","",null,null],[5,"is_loaded","gl::PauseTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PixelStoref","gl","",null,null],[5,"is_loaded","gl::PixelStoref","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PixelStorei","gl","",null,null],[5,"is_loaded","gl::PixelStorei","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PointParameterf","gl","",null,null],[5,"is_loaded","gl::PointParameterf","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PointParameterfv","gl","",null,null],[5,"is_loaded","gl::PointParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PointParameteri","gl","",null,null],[5,"is_loaded","gl::PointParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PointParameteriv","gl","",null,null],[5,"is_loaded","gl::PointParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PointSize","gl","",null,null],[5,"is_loaded","gl::PointSize","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PolygonMode","gl","",null,null],[5,"is_loaded","gl::PolygonMode","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PolygonOffset","gl","",null,null],[5,"is_loaded","gl::PolygonOffset","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PopDebugGroup","gl","",null,null],[5,"is_loaded","gl::PopDebugGroup","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PrimitiveRestartIndex","gl","",null,null],[5,"is_loaded","gl::PrimitiveRestartIndex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramBinary","gl","",null,null],[5,"is_loaded","gl::ProgramBinary","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramParameteri","gl","",null,null],[5,"is_loaded","gl::ProgramParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform1uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform2uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform3uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniform4uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix2x3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix2x3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix2x4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix2x4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix3x2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix3x2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix3x4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix3x4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix4x2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix4x2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix4x3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProgramUniformMatrix4x3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ProvokingVertex","gl","",null,null],[5,"is_loaded","gl::ProvokingVertex","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"PushDebugGroup","gl","",null,null],[5,"is_loaded","gl::PushDebugGroup","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"QueryCounter","gl","",null,null],[5,"is_loaded","gl::QueryCounter","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ReadBuffer","gl","",null,null],[5,"is_loaded","gl::ReadBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ReadPixels","gl","",null,null],[5,"is_loaded","gl::ReadPixels","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ReadnPixels","gl","",null,null],[5,"is_loaded","gl::ReadnPixels","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ReleaseShaderCompiler","gl","",null,null],[5,"is_loaded","gl::ReleaseShaderCompiler","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"RenderbufferStorage","gl","",null,null],[5,"is_loaded","gl::RenderbufferStorage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"RenderbufferStorageMultisample","gl","",null,null],[5,"is_loaded","gl::RenderbufferStorageMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ResumeTransformFeedback","gl","",null,null],[5,"is_loaded","gl::ResumeTransformFeedback","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SampleCoverage","gl","",null,null],[5,"is_loaded","gl::SampleCoverage","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SampleMaski","gl","",null,null],[5,"is_loaded","gl::SampleMaski","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SamplerParameterIiv","gl","",null,null],[5,"is_loaded","gl::SamplerParameterIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SamplerParameterIuiv","gl","",null,null],[5,"is_loaded","gl::SamplerParameterIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SamplerParameterf","gl","",null,null],[5,"is_loaded","gl::SamplerParameterf","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SamplerParameterfv","gl","",null,null],[5,"is_loaded","gl::SamplerParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SamplerParameteri","gl","",null,null],[5,"is_loaded","gl::SamplerParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SamplerParameteriv","gl","",null,null],[5,"is_loaded","gl::SamplerParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Scissor","gl","",null,null],[5,"is_loaded","gl::Scissor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ScissorArrayv","gl","",null,null],[5,"is_loaded","gl::ScissorArrayv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ScissorIndexed","gl","",null,null],[5,"is_loaded","gl::ScissorIndexed","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ScissorIndexedv","gl","",null,null],[5,"is_loaded","gl::ScissorIndexedv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SecondaryColorP3ui","gl","",null,null],[5,"is_loaded","gl::SecondaryColorP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"SecondaryColorP3uiv","gl","",null,null],[5,"is_loaded","gl::SecondaryColorP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ShaderBinary","gl","",null,null],[5,"is_loaded","gl::ShaderBinary","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ShaderSource","gl","",null,null],[5,"is_loaded","gl::ShaderSource","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ShaderStorageBlockBinding","gl","",null,null],[5,"is_loaded","gl::ShaderStorageBlockBinding","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"StencilFunc","gl","",null,null],[5,"is_loaded","gl::StencilFunc","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"StencilFuncSeparate","gl","",null,null],[5,"is_loaded","gl::StencilFuncSeparate","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"StencilMask","gl","",null,null],[5,"is_loaded","gl::StencilMask","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"StencilMaskSeparate","gl","",null,null],[5,"is_loaded","gl::StencilMaskSeparate","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"StencilOp","gl","",null,null],[5,"is_loaded","gl::StencilOp","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"StencilOpSeparate","gl","",null,null],[5,"is_loaded","gl::StencilOpSeparate","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexBuffer","gl","",null,null],[5,"is_loaded","gl::TexBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexBufferRange","gl","",null,null],[5,"is_loaded","gl::TexBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP1ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP1ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP1uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP1uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP2ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP2uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP3ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP3uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP4ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexCoordP4uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexImage1D","gl","",null,null],[5,"is_loaded","gl::TexImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexImage2D","gl","",null,null],[5,"is_loaded","gl::TexImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexImage2DMultisample","gl","",null,null],[5,"is_loaded","gl::TexImage2DMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexImage3D","gl","",null,null],[5,"is_loaded","gl::TexImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexImage3DMultisample","gl","",null,null],[5,"is_loaded","gl::TexImage3DMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexParameterIiv","gl","",null,null],[5,"is_loaded","gl::TexParameterIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexParameterIuiv","gl","",null,null],[5,"is_loaded","gl::TexParameterIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexParameterf","gl","",null,null],[5,"is_loaded","gl::TexParameterf","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexParameterfv","gl","",null,null],[5,"is_loaded","gl::TexParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexParameteri","gl","",null,null],[5,"is_loaded","gl::TexParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexParameteriv","gl","",null,null],[5,"is_loaded","gl::TexParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexStorage1D","gl","",null,null],[5,"is_loaded","gl::TexStorage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexStorage2D","gl","",null,null],[5,"is_loaded","gl::TexStorage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexStorage2DMultisample","gl","",null,null],[5,"is_loaded","gl::TexStorage2DMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexStorage3D","gl","",null,null],[5,"is_loaded","gl::TexStorage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexStorage3DMultisample","gl","",null,null],[5,"is_loaded","gl::TexStorage3DMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexSubImage1D","gl","",null,null],[5,"is_loaded","gl::TexSubImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexSubImage2D","gl","",null,null],[5,"is_loaded","gl::TexSubImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TexSubImage3D","gl","",null,null],[5,"is_loaded","gl::TexSubImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureBarrier","gl","",null,null],[5,"is_loaded","gl::TextureBarrier","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureBuffer","gl","",null,null],[5,"is_loaded","gl::TextureBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureBufferRange","gl","",null,null],[5,"is_loaded","gl::TextureBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureParameterIiv","gl","",null,null],[5,"is_loaded","gl::TextureParameterIiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureParameterIuiv","gl","",null,null],[5,"is_loaded","gl::TextureParameterIuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureParameterf","gl","",null,null],[5,"is_loaded","gl::TextureParameterf","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureParameterfv","gl","",null,null],[5,"is_loaded","gl::TextureParameterfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureParameteri","gl","",null,null],[5,"is_loaded","gl::TextureParameteri","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureParameteriv","gl","",null,null],[5,"is_loaded","gl::TextureParameteriv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureStorage1D","gl","",null,null],[5,"is_loaded","gl::TextureStorage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureStorage2D","gl","",null,null],[5,"is_loaded","gl::TextureStorage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureStorage2DMultisample","gl","",null,null],[5,"is_loaded","gl::TextureStorage2DMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureStorage3D","gl","",null,null],[5,"is_loaded","gl::TextureStorage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureStorage3DMultisample","gl","",null,null],[5,"is_loaded","gl::TextureStorage3DMultisample","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureSubImage1D","gl","",null,null],[5,"is_loaded","gl::TextureSubImage1D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureSubImage2D","gl","",null,null],[5,"is_loaded","gl::TextureSubImage2D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureSubImage3D","gl","",null,null],[5,"is_loaded","gl::TextureSubImage3D","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TextureView","gl","",null,null],[5,"is_loaded","gl::TextureView","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TransformFeedbackBufferBase","gl","",null,null],[5,"is_loaded","gl::TransformFeedbackBufferBase","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TransformFeedbackBufferRange","gl","",null,null],[5,"is_loaded","gl::TransformFeedbackBufferRange","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"TransformFeedbackVaryings","gl","",null,null],[5,"is_loaded","gl::TransformFeedbackVaryings","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1d","gl","",null,null],[5,"is_loaded","gl::Uniform1d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1dv","gl","",null,null],[5,"is_loaded","gl::Uniform1dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1f","gl","",null,null],[5,"is_loaded","gl::Uniform1f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1fv","gl","",null,null],[5,"is_loaded","gl::Uniform1fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1i","gl","",null,null],[5,"is_loaded","gl::Uniform1i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1iv","gl","",null,null],[5,"is_loaded","gl::Uniform1iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1ui","gl","",null,null],[5,"is_loaded","gl::Uniform1ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform1uiv","gl","",null,null],[5,"is_loaded","gl::Uniform1uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2d","gl","",null,null],[5,"is_loaded","gl::Uniform2d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2dv","gl","",null,null],[5,"is_loaded","gl::Uniform2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2f","gl","",null,null],[5,"is_loaded","gl::Uniform2f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2fv","gl","",null,null],[5,"is_loaded","gl::Uniform2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2i","gl","",null,null],[5,"is_loaded","gl::Uniform2i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2iv","gl","",null,null],[5,"is_loaded","gl::Uniform2iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2ui","gl","",null,null],[5,"is_loaded","gl::Uniform2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform2uiv","gl","",null,null],[5,"is_loaded","gl::Uniform2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3d","gl","",null,null],[5,"is_loaded","gl::Uniform3d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3dv","gl","",null,null],[5,"is_loaded","gl::Uniform3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3f","gl","",null,null],[5,"is_loaded","gl::Uniform3f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3fv","gl","",null,null],[5,"is_loaded","gl::Uniform3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3i","gl","",null,null],[5,"is_loaded","gl::Uniform3i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3iv","gl","",null,null],[5,"is_loaded","gl::Uniform3iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3ui","gl","",null,null],[5,"is_loaded","gl::Uniform3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform3uiv","gl","",null,null],[5,"is_loaded","gl::Uniform3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4d","gl","",null,null],[5,"is_loaded","gl::Uniform4d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4dv","gl","",null,null],[5,"is_loaded","gl::Uniform4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4f","gl","",null,null],[5,"is_loaded","gl::Uniform4f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4fv","gl","",null,null],[5,"is_loaded","gl::Uniform4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4i","gl","",null,null],[5,"is_loaded","gl::Uniform4i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4iv","gl","",null,null],[5,"is_loaded","gl::Uniform4iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4ui","gl","",null,null],[5,"is_loaded","gl::Uniform4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Uniform4uiv","gl","",null,null],[5,"is_loaded","gl::Uniform4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformBlockBinding","gl","",null,null],[5,"is_loaded","gl::UniformBlockBinding","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix2dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix2fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix2x3dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix2x3fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix2x4dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix2x4fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix3dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix3fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix3x2dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix3x2fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix3x4dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix3x4fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix4dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix4fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix4x2dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix4x2fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix4x3dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformMatrix4x3fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UniformSubroutinesuiv","gl","",null,null],[5,"is_loaded","gl::UniformSubroutinesuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UnmapBuffer","gl","",null,null],[5,"is_loaded","gl::UnmapBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UnmapNamedBuffer","gl","",null,null],[5,"is_loaded","gl::UnmapNamedBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UseProgram","gl","",null,null],[5,"is_loaded","gl::UseProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"UseProgramStages","gl","",null,null],[5,"is_loaded","gl::UseProgramStages","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ValidateProgram","gl","",null,null],[5,"is_loaded","gl::ValidateProgram","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ValidateProgramPipeline","gl","",null,null],[5,"is_loaded","gl::ValidateProgramPipeline","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayAttribBinding","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribBinding","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayAttribFormat","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayAttribIFormat","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribIFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayAttribLFormat","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribLFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayBindingDivisor","gl","",null,null],[5,"is_loaded","gl::VertexArrayBindingDivisor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayElementBuffer","gl","",null,null],[5,"is_loaded","gl::VertexArrayElementBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayVertexBuffer","gl","",null,null],[5,"is_loaded","gl::VertexArrayVertexBuffer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexArrayVertexBuffers","gl","",null,null],[5,"is_loaded","gl::VertexArrayVertexBuffers","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib1d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib1dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib1f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib1fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib1s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1s","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib1sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1sv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib2d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib2dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib2f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib2fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib2s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2s","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib2sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2sv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib3d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib3dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib3f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib3fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib3s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3s","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib3sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3sv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Nbv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nbv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Niv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Niv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Nsv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nsv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Nub","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nub","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Nubv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nubv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Nuiv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nuiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4Nusv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nusv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4bv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4bv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4f","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4fv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4iv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4s","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4sv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4ubv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4ubv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttrib4usv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4usv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribBinding","gl","",null,null],[5,"is_loaded","gl::VertexAttribBinding","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribDivisor","gl","",null,null],[5,"is_loaded","gl::VertexAttribDivisor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribFormat","gl","",null,null],[5,"is_loaded","gl::VertexAttribFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI1i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI1iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI1ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI1uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI2i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI2iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI2ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI2uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI3i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI3iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI3ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI3uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4bv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4bv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4i","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4iv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4sv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4sv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4ubv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4ubv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribI4usv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4usv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribIFormat","gl","",null,null],[5,"is_loaded","gl::VertexAttribIFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribIPointer","gl","",null,null],[5,"is_loaded","gl::VertexAttribIPointer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL1d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL1d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL1dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL1dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL2d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL2d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL2dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL2dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL3d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL3d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL3dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL3dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL4d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL4d","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribL4dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL4dv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribLFormat","gl","",null,null],[5,"is_loaded","gl::VertexAttribLFormat","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribLPointer","gl","",null,null],[5,"is_loaded","gl::VertexAttribLPointer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP1ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP1ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP1uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP1uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP2ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP2uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP3ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP3uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP4ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribP4uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexAttribPointer","gl","",null,null],[5,"is_loaded","gl::VertexAttribPointer","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexBindingDivisor","gl","",null,null],[5,"is_loaded","gl::VertexBindingDivisor","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexP2ui","gl","",null,null],[5,"is_loaded","gl::VertexP2ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexP2uiv","gl","",null,null],[5,"is_loaded","gl::VertexP2uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexP3ui","gl","",null,null],[5,"is_loaded","gl::VertexP3ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexP3uiv","gl","",null,null],[5,"is_loaded","gl::VertexP3uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexP4ui","gl","",null,null],[5,"is_loaded","gl::VertexP4ui","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"VertexP4uiv","gl","",null,null],[5,"is_loaded","gl::VertexP4uiv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"Viewport","gl","",null,null],[5,"is_loaded","gl::Viewport","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ViewportArrayv","gl","",null,null],[5,"is_loaded","gl::ViewportArrayv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ViewportIndexedf","gl","",null,null],[5,"is_loaded","gl::ViewportIndexedf","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"ViewportIndexedfv","gl","",null,null],[5,"is_loaded","gl::ViewportIndexedfv","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[0,"WaitSync","gl","",null,null],[5,"is_loaded","gl::WaitSync","",null,[[],["bool",15]]],[5,"load_with","","",null,[[]]],[17,"ACTIVE_ATOMIC_COUNTER_BUFFERS","gl","",null,null],[17,"ACTIVE_ATTRIBUTES","","",null,null],[17,"ACTIVE_ATTRIBUTE_MAX_LENGTH","","",null,null],[17,"ACTIVE_PROGRAM","","",null,null],[17,"ACTIVE_RESOURCES","","",null,null],[17,"ACTIVE_SUBROUTINES","","",null,null],[17,"ACTIVE_SUBROUTINE_MAX_LENGTH","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORMS","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","","",null,null],[17,"ACTIVE_TEXTURE","","",null,null],[17,"ACTIVE_UNIFORMS","","",null,null],[17,"ACTIVE_UNIFORM_BLOCKS","","",null,null],[17,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","","",null,null],[17,"ACTIVE_UNIFORM_MAX_LENGTH","","",null,null],[17,"ACTIVE_VARIABLES","","",null,null],[17,"ALIASED_LINE_WIDTH_RANGE","","",null,null],[17,"ALL_BARRIER_BITS","","",null,null],[17,"ALL_SHADER_BITS","","",null,null],[17,"ALPHA","","",null,null],[17,"ALREADY_SIGNALED","","",null,null],[17,"ALWAYS","","",null,null],[17,"AND","","",null,null],[17,"AND_INVERTED","","",null,null],[17,"AND_REVERSE","","",null,null],[17,"ANY_SAMPLES_PASSED","","",null,null],[17,"ANY_SAMPLES_PASSED_CONSERVATIVE","","",null,null],[17,"ARRAY_BUFFER","","",null,null],[17,"ARRAY_BUFFER_BINDING","","",null,null],[17,"ARRAY_SIZE","","",null,null],[17,"ARRAY_STRIDE","","",null,null],[17,"ATOMIC_COUNTER_BARRIER_BIT","","",null,null],[17,"ATOMIC_COUNTER_BUFFER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_BINDING","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_DATA_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_START","","",null,null],[17,"ATTACHED_SHADERS","","",null,null],[17,"AUTO_GENERATE_MIPMAP","","",null,null],[17,"BACK","","",null,null],[17,"BACK_LEFT","","",null,null],[17,"BACK_RIGHT","","",null,null],[17,"BGR","","",null,null],[17,"BGRA","","",null,null],[17,"BGRA_INTEGER","","",null,null],[17,"BGR_INTEGER","","",null,null],[17,"BLEND","","",null,null],[17,"BLEND_COLOR","","",null,null],[17,"BLEND_DST","","",null,null],[17,"BLEND_DST_ALPHA","","",null,null],[17,"BLEND_DST_RGB","","",null,null],[17,"BLEND_EQUATION","","",null,null],[17,"BLEND_EQUATION_ALPHA","","",null,null],[17,"BLEND_EQUATION_RGB","","",null,null],[17,"BLEND_SRC","","",null,null],[17,"BLEND_SRC_ALPHA","","",null,null],[17,"BLEND_SRC_RGB","","",null,null],[17,"BLOCK_INDEX","","",null,null],[17,"BLUE","","",null,null],[17,"BLUE_INTEGER","","",null,null],[17,"BOOL","","",null,null],[17,"BOOL_VEC2","","",null,null],[17,"BOOL_VEC3","","",null,null],[17,"BOOL_VEC4","","",null,null],[17,"BUFFER","","",null,null],[17,"BUFFER_ACCESS","","",null,null],[17,"BUFFER_ACCESS_FLAGS","","",null,null],[17,"BUFFER_BINDING","","",null,null],[17,"BUFFER_DATA_SIZE","","",null,null],[17,"BUFFER_IMMUTABLE_STORAGE","","",null,null],[17,"BUFFER_MAPPED","","",null,null],[17,"BUFFER_MAP_LENGTH","","",null,null],[17,"BUFFER_MAP_OFFSET","","",null,null],[17,"BUFFER_MAP_POINTER","","",null,null],[17,"BUFFER_SIZE","","",null,null],[17,"BUFFER_STORAGE_FLAGS","","",null,null],[17,"BUFFER_UPDATE_BARRIER_BIT","","",null,null],[17,"BUFFER_USAGE","","",null,null],[17,"BUFFER_VARIABLE","","",null,null],[17,"BYTE","","",null,null],[17,"CAVEAT_SUPPORT","","",null,null],[17,"CCW","","",null,null],[17,"CLAMP_READ_COLOR","","",null,null],[17,"CLAMP_TO_BORDER","","",null,null],[17,"CLAMP_TO_EDGE","","",null,null],[17,"CLEAR","","",null,null],[17,"CLEAR_BUFFER","","",null,null],[17,"CLEAR_TEXTURE","","",null,null],[17,"CLIENT_MAPPED_BUFFER_BARRIER_BIT","","",null,null],[17,"CLIENT_STORAGE_BIT","","",null,null],[17,"CLIP_DEPTH_MODE","","",null,null],[17,"CLIP_DISTANCE0","","",null,null],[17,"CLIP_DISTANCE1","","",null,null],[17,"CLIP_DISTANCE2","","",null,null],[17,"CLIP_DISTANCE3","","",null,null],[17,"CLIP_DISTANCE4","","",null,null],[17,"CLIP_DISTANCE5","","",null,null],[17,"CLIP_DISTANCE6","","",null,null],[17,"CLIP_DISTANCE7","","",null,null],[17,"CLIP_ORIGIN","","",null,null],[17,"COLOR","","",null,null],[17,"COLOR_ATTACHMENT0","","",null,null],[17,"COLOR_ATTACHMENT1","","",null,null],[17,"COLOR_ATTACHMENT10","","",null,null],[17,"COLOR_ATTACHMENT11","","",null,null],[17,"COLOR_ATTACHMENT12","","",null,null],[17,"COLOR_ATTACHMENT13","","",null,null],[17,"COLOR_ATTACHMENT14","","",null,null],[17,"COLOR_ATTACHMENT15","","",null,null],[17,"COLOR_ATTACHMENT16","","",null,null],[17,"COLOR_ATTACHMENT17","","",null,null],[17,"COLOR_ATTACHMENT18","","",null,null],[17,"COLOR_ATTACHMENT19","","",null,null],[17,"COLOR_ATTACHMENT2","","",null,null],[17,"COLOR_ATTACHMENT20","","",null,null],[17,"COLOR_ATTACHMENT21","","",null,null],[17,"COLOR_ATTACHMENT22","","",null,null],[17,"COLOR_ATTACHMENT23","","",null,null],[17,"COLOR_ATTACHMENT24","","",null,null],[17,"COLOR_ATTACHMENT25","","",null,null],[17,"COLOR_ATTACHMENT26","","",null,null],[17,"COLOR_ATTACHMENT27","","",null,null],[17,"COLOR_ATTACHMENT28","","",null,null],[17,"COLOR_ATTACHMENT29","","",null,null],[17,"COLOR_ATTACHMENT3","","",null,null],[17,"COLOR_ATTACHMENT30","","",null,null],[17,"COLOR_ATTACHMENT31","","",null,null],[17,"COLOR_ATTACHMENT4","","",null,null],[17,"COLOR_ATTACHMENT5","","",null,null],[17,"COLOR_ATTACHMENT6","","",null,null],[17,"COLOR_ATTACHMENT7","","",null,null],[17,"COLOR_ATTACHMENT8","","",null,null],[17,"COLOR_ATTACHMENT9","","",null,null],[17,"COLOR_BUFFER_BIT","","",null,null],[17,"COLOR_CLEAR_VALUE","","",null,null],[17,"COLOR_COMPONENTS","","",null,null],[17,"COLOR_ENCODING","","",null,null],[17,"COLOR_LOGIC_OP","","",null,null],[17,"COLOR_RENDERABLE","","",null,null],[17,"COLOR_WRITEMASK","","",null,null],[17,"COMMAND_BARRIER_BIT","","",null,null],[17,"COMPARE_REF_TO_TEXTURE","","",null,null],[17,"COMPATIBLE_SUBROUTINES","","",null,null],[17,"COMPILE_STATUS","","",null,null],[17,"COMPRESSED_R11_EAC","","",null,null],[17,"COMPRESSED_RED","","",null,null],[17,"COMPRESSED_RED_RGTC1","","",null,null],[17,"COMPRESSED_RG","","",null,null],[17,"COMPRESSED_RG11_EAC","","",null,null],[17,"COMPRESSED_RGB","","",null,null],[17,"COMPRESSED_RGB8_ETC2","","",null,null],[17,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_RGBA","","",null,null],[17,"COMPRESSED_RGBA8_ETC2_EAC","","",null,null],[17,"COMPRESSED_RGBA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_RGB_BPTC_SIGNED_FLOAT","","",null,null],[17,"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","","",null,null],[17,"COMPRESSED_RG_RGTC2","","",null,null],[17,"COMPRESSED_SIGNED_R11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_RED_RGTC1","","",null,null],[17,"COMPRESSED_SIGNED_RG11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_RG_RGTC2","","",null,null],[17,"COMPRESSED_SRGB","","",null,null],[17,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","","",null,null],[17,"COMPRESSED_SRGB8_ETC2","","",null,null],[17,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_SRGB_ALPHA","","",null,null],[17,"COMPRESSED_SRGB_ALPHA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"COMPUTE_SHADER","","",null,null],[17,"COMPUTE_SHADER_BIT","","",null,null],[17,"COMPUTE_SUBROUTINE","","",null,null],[17,"COMPUTE_SUBROUTINE_UNIFORM","","",null,null],[17,"COMPUTE_TEXTURE","","",null,null],[17,"COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"CONDITION_SATISFIED","","",null,null],[17,"CONSTANT_ALPHA","","",null,null],[17,"CONSTANT_COLOR","","",null,null],[17,"CONTEXT_COMPATIBILITY_PROFILE_BIT","","",null,null],[17,"CONTEXT_CORE_PROFILE_BIT","","",null,null],[17,"CONTEXT_FLAGS","","",null,null],[17,"CONTEXT_FLAG_DEBUG_BIT","","",null,null],[17,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","","",null,null],[17,"CONTEXT_FLAG_ROBUST_ACCESS_BIT","","",null,null],[17,"CONTEXT_LOST","","",null,null],[17,"CONTEXT_PROFILE_MASK","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",null,null],[17,"COPY","","",null,null],[17,"COPY_INVERTED","","",null,null],[17,"COPY_READ_BUFFER","","",null,null],[17,"COPY_READ_BUFFER_BINDING","","",null,null],[17,"COPY_WRITE_BUFFER","","",null,null],[17,"COPY_WRITE_BUFFER_BINDING","","",null,null],[17,"CULL_FACE","","",null,null],[17,"CULL_FACE_MODE","","",null,null],[17,"CURRENT_PROGRAM","","",null,null],[17,"CURRENT_QUERY","","",null,null],[17,"CURRENT_VERTEX_ATTRIB","","",null,null],[17,"CW","","",null,null],[17,"DEBUG_CALLBACK_FUNCTION","","",null,null],[17,"DEBUG_CALLBACK_USER_PARAM","","",null,null],[17,"DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"DEBUG_LOGGED_MESSAGES","","",null,null],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","","",null,null],[17,"DEBUG_OUTPUT","","",null,null],[17,"DEBUG_OUTPUT_SYNCHRONOUS","","",null,null],[17,"DEBUG_SEVERITY_HIGH","","",null,null],[17,"DEBUG_SEVERITY_LOW","","",null,null],[17,"DEBUG_SEVERITY_MEDIUM","","",null,null],[17,"DEBUG_SEVERITY_NOTIFICATION","","",null,null],[17,"DEBUG_SOURCE_API","","",null,null],[17,"DEBUG_SOURCE_APPLICATION","","",null,null],[17,"DEBUG_SOURCE_OTHER","","",null,null],[17,"DEBUG_SOURCE_SHADER_COMPILER","","",null,null],[17,"DEBUG_SOURCE_THIRD_PARTY","","",null,null],[17,"DEBUG_SOURCE_WINDOW_SYSTEM","","",null,null],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","","",null,null],[17,"DEBUG_TYPE_ERROR","","",null,null],[17,"DEBUG_TYPE_MARKER","","",null,null],[17,"DEBUG_TYPE_OTHER","","",null,null],[17,"DEBUG_TYPE_PERFORMANCE","","",null,null],[17,"DEBUG_TYPE_POP_GROUP","","",null,null],[17,"DEBUG_TYPE_PORTABILITY","","",null,null],[17,"DEBUG_TYPE_PUSH_GROUP","","",null,null],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","","",null,null],[17,"DECR","","",null,null],[17,"DECR_WRAP","","",null,null],[17,"DELETE_STATUS","","",null,null],[17,"DEPTH","","",null,null],[17,"DEPTH24_STENCIL8","","",null,null],[17,"DEPTH32F_STENCIL8","","",null,null],[17,"DEPTH_ATTACHMENT","","",null,null],[17,"DEPTH_BUFFER_BIT","","",null,null],[17,"DEPTH_CLAMP","","",null,null],[17,"DEPTH_CLEAR_VALUE","","",null,null],[17,"DEPTH_COMPONENT","","",null,null],[17,"DEPTH_COMPONENT16","","",null,null],[17,"DEPTH_COMPONENT24","","",null,null],[17,"DEPTH_COMPONENT32","","",null,null],[17,"DEPTH_COMPONENT32F","","",null,null],[17,"DEPTH_COMPONENTS","","",null,null],[17,"DEPTH_FUNC","","",null,null],[17,"DEPTH_RANGE","","",null,null],[17,"DEPTH_RENDERABLE","","",null,null],[17,"DEPTH_STENCIL","","",null,null],[17,"DEPTH_STENCIL_ATTACHMENT","","",null,null],[17,"DEPTH_STENCIL_TEXTURE_MODE","","",null,null],[17,"DEPTH_TEST","","",null,null],[17,"DEPTH_WRITEMASK","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER_BINDING","","",null,null],[17,"DISPLAY_LIST","","",null,null],[17,"DITHER","","",null,null],[17,"DONT_CARE","","",null,null],[17,"DOUBLE","","",null,null],[17,"DOUBLEBUFFER","","",null,null],[17,"DOUBLE_MAT2","","",null,null],[17,"DOUBLE_MAT2x3","","",null,null],[17,"DOUBLE_MAT2x4","","",null,null],[17,"DOUBLE_MAT3","","",null,null],[17,"DOUBLE_MAT3x2","","",null,null],[17,"DOUBLE_MAT3x4","","",null,null],[17,"DOUBLE_MAT4","","",null,null],[17,"DOUBLE_MAT4x2","","",null,null],[17,"DOUBLE_MAT4x3","","",null,null],[17,"DOUBLE_VEC2","","",null,null],[17,"DOUBLE_VEC3","","",null,null],[17,"DOUBLE_VEC4","","",null,null],[17,"DRAW_BUFFER","","",null,null],[17,"DRAW_BUFFER0","","",null,null],[17,"DRAW_BUFFER1","","",null,null],[17,"DRAW_BUFFER10","","",null,null],[17,"DRAW_BUFFER11","","",null,null],[17,"DRAW_BUFFER12","","",null,null],[17,"DRAW_BUFFER13","","",null,null],[17,"DRAW_BUFFER14","","",null,null],[17,"DRAW_BUFFER15","","",null,null],[17,"DRAW_BUFFER2","","",null,null],[17,"DRAW_BUFFER3","","",null,null],[17,"DRAW_BUFFER4","","",null,null],[17,"DRAW_BUFFER5","","",null,null],[17,"DRAW_BUFFER6","","",null,null],[17,"DRAW_BUFFER7","","",null,null],[17,"DRAW_BUFFER8","","",null,null],[17,"DRAW_BUFFER9","","",null,null],[17,"DRAW_FRAMEBUFFER","","",null,null],[17,"DRAW_FRAMEBUFFER_BINDING","","",null,null],[17,"DRAW_INDIRECT_BUFFER","","",null,null],[17,"DRAW_INDIRECT_BUFFER_BINDING","","",null,null],[17,"DST_ALPHA","","",null,null],[17,"DST_COLOR","","",null,null],[17,"DYNAMIC_COPY","","",null,null],[17,"DYNAMIC_DRAW","","",null,null],[17,"DYNAMIC_READ","","",null,null],[17,"DYNAMIC_STORAGE_BIT","","",null,null],[17,"ELEMENT_ARRAY_BARRIER_BIT","","",null,null],[17,"ELEMENT_ARRAY_BUFFER","","",null,null],[17,"ELEMENT_ARRAY_BUFFER_BINDING","","",null,null],[17,"EQUAL","","",null,null],[17,"EQUIV","","",null,null],[17,"EXTENSIONS","","",null,null],[17,"FALSE","","",null,null],[17,"FASTEST","","",null,null],[17,"FILL","","",null,null],[17,"FILTER","","",null,null],[17,"FIRST_VERTEX_CONVENTION","","",null,null],[17,"FIXED","","",null,null],[17,"FIXED_ONLY","","",null,null],[17,"FLOAT","","",null,null],[17,"FLOAT_32_UNSIGNED_INT_24_8_REV","","",null,null],[17,"FLOAT_MAT2","","",null,null],[17,"FLOAT_MAT2x3","","",null,null],[17,"FLOAT_MAT2x4","","",null,null],[17,"FLOAT_MAT3","","",null,null],[17,"FLOAT_MAT3x2","","",null,null],[17,"FLOAT_MAT3x4","","",null,null],[17,"FLOAT_MAT4","","",null,null],[17,"FLOAT_MAT4x2","","",null,null],[17,"FLOAT_MAT4x3","","",null,null],[17,"FLOAT_VEC2","","",null,null],[17,"FLOAT_VEC3","","",null,null],[17,"FLOAT_VEC4","","",null,null],[17,"FRACTIONAL_EVEN","","",null,null],[17,"FRACTIONAL_ODD","","",null,null],[17,"FRAGMENT_INTERPOLATION_OFFSET_BITS","","",null,null],[17,"FRAGMENT_SHADER","","",null,null],[17,"FRAGMENT_SHADER_BIT","","",null,null],[17,"FRAGMENT_SHADER_DERIVATIVE_HINT","","",null,null],[17,"FRAGMENT_SUBROUTINE","","",null,null],[17,"FRAGMENT_SUBROUTINE_UNIFORM","","",null,null],[17,"FRAGMENT_TEXTURE","","",null,null],[17,"FRAMEBUFFER","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_LAYERED","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","","",null,null],[17,"FRAMEBUFFER_BARRIER_BIT","","",null,null],[17,"FRAMEBUFFER_BINDING","","",null,null],[17,"FRAMEBUFFER_BLEND","","",null,null],[17,"FRAMEBUFFER_COMPLETE","","",null,null],[17,"FRAMEBUFFER_DEFAULT","","",null,null],[17,"FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"FRAMEBUFFER_DEFAULT_HEIGHT","","",null,null],[17,"FRAMEBUFFER_DEFAULT_LAYERS","","",null,null],[17,"FRAMEBUFFER_DEFAULT_SAMPLES","","",null,null],[17,"FRAMEBUFFER_DEFAULT_WIDTH","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","","",null,null],[17,"FRAMEBUFFER_RENDERABLE","","",null,null],[17,"FRAMEBUFFER_RENDERABLE_LAYERED","","",null,null],[17,"FRAMEBUFFER_SRGB","","",null,null],[17,"FRAMEBUFFER_UNDEFINED","","",null,null],[17,"FRAMEBUFFER_UNSUPPORTED","","",null,null],[17,"FRONT","","",null,null],[17,"FRONT_AND_BACK","","",null,null],[17,"FRONT_FACE","","",null,null],[17,"FRONT_LEFT","","",null,null],[17,"FRONT_RIGHT","","",null,null],[17,"FULL_SUPPORT","","",null,null],[17,"FUNC_ADD","","",null,null],[17,"FUNC_REVERSE_SUBTRACT","","",null,null],[17,"FUNC_SUBTRACT","","",null,null],[17,"GEOMETRY_INPUT_TYPE","","",null,null],[17,"GEOMETRY_OUTPUT_TYPE","","",null,null],[17,"GEOMETRY_SHADER","","",null,null],[17,"GEOMETRY_SHADER_BIT","","",null,null],[17,"GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"GEOMETRY_SUBROUTINE","","",null,null],[17,"GEOMETRY_SUBROUTINE_UNIFORM","","",null,null],[17,"GEOMETRY_TEXTURE","","",null,null],[17,"GEOMETRY_VERTICES_OUT","","",null,null],[17,"GEQUAL","","",null,null],[17,"GET_TEXTURE_IMAGE_FORMAT","","",null,null],[17,"GET_TEXTURE_IMAGE_TYPE","","",null,null],[17,"GREATER","","",null,null],[17,"GREEN","","",null,null],[17,"GREEN_INTEGER","","",null,null],[17,"GUILTY_CONTEXT_RESET","","",null,null],[17,"HALF_FLOAT","","",null,null],[17,"HIGH_FLOAT","","",null,null],[17,"HIGH_INT","","",null,null],[17,"IMAGE_1D","","",null,null],[17,"IMAGE_1D_ARRAY","","",null,null],[17,"IMAGE_2D","","",null,null],[17,"IMAGE_2D_ARRAY","","",null,null],[17,"IMAGE_2D_MULTISAMPLE","","",null,null],[17,"IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"IMAGE_2D_RECT","","",null,null],[17,"IMAGE_3D","","",null,null],[17,"IMAGE_BINDING_ACCESS","","",null,null],[17,"IMAGE_BINDING_FORMAT","","",null,null],[17,"IMAGE_BINDING_LAYER","","",null,null],[17,"IMAGE_BINDING_LAYERED","","",null,null],[17,"IMAGE_BINDING_LEVEL","","",null,null],[17,"IMAGE_BINDING_NAME","","",null,null],[17,"IMAGE_BUFFER","","",null,null],[17,"IMAGE_CLASS_10_10_10_2","","",null,null],[17,"IMAGE_CLASS_11_11_10","","",null,null],[17,"IMAGE_CLASS_1_X_16","","",null,null],[17,"IMAGE_CLASS_1_X_32","","",null,null],[17,"IMAGE_CLASS_1_X_8","","",null,null],[17,"IMAGE_CLASS_2_X_16","","",null,null],[17,"IMAGE_CLASS_2_X_32","","",null,null],[17,"IMAGE_CLASS_2_X_8","","",null,null],[17,"IMAGE_CLASS_4_X_16","","",null,null],[17,"IMAGE_CLASS_4_X_32","","",null,null],[17,"IMAGE_CLASS_4_X_8","","",null,null],[17,"IMAGE_COMPATIBILITY_CLASS","","",null,null],[17,"IMAGE_CUBE","","",null,null],[17,"IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_TYPE","","",null,null],[17,"IMAGE_PIXEL_FORMAT","","",null,null],[17,"IMAGE_PIXEL_TYPE","","",null,null],[17,"IMAGE_TEXEL_SIZE","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_FORMAT","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_TYPE","","",null,null],[17,"INCR","","",null,null],[17,"INCR_WRAP","","",null,null],[17,"INFO_LOG_LENGTH","","",null,null],[17,"INNOCENT_CONTEXT_RESET","","",null,null],[17,"INT","","",null,null],[17,"INTERLEAVED_ATTRIBS","","",null,null],[17,"INTERNALFORMAT_ALPHA_SIZE","","",null,null],[17,"INTERNALFORMAT_ALPHA_TYPE","","",null,null],[17,"INTERNALFORMAT_BLUE_SIZE","","",null,null],[17,"INTERNALFORMAT_BLUE_TYPE","","",null,null],[17,"INTERNALFORMAT_DEPTH_SIZE","","",null,null],[17,"INTERNALFORMAT_DEPTH_TYPE","","",null,null],[17,"INTERNALFORMAT_GREEN_SIZE","","",null,null],[17,"INTERNALFORMAT_GREEN_TYPE","","",null,null],[17,"INTERNALFORMAT_PREFERRED","","",null,null],[17,"INTERNALFORMAT_RED_SIZE","","",null,null],[17,"INTERNALFORMAT_RED_TYPE","","",null,null],[17,"INTERNALFORMAT_SHARED_SIZE","","",null,null],[17,"INTERNALFORMAT_STENCIL_SIZE","","",null,null],[17,"INTERNALFORMAT_STENCIL_TYPE","","",null,null],[17,"INTERNALFORMAT_SUPPORTED","","",null,null],[17,"INT_2_10_10_10_REV","","",null,null],[17,"INT_IMAGE_1D","","",null,null],[17,"INT_IMAGE_1D_ARRAY","","",null,null],[17,"INT_IMAGE_2D","","",null,null],[17,"INT_IMAGE_2D_ARRAY","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_IMAGE_2D_RECT","","",null,null],[17,"INT_IMAGE_3D","","",null,null],[17,"INT_IMAGE_BUFFER","","",null,null],[17,"INT_IMAGE_CUBE","","",null,null],[17,"INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"INT_SAMPLER_1D","","",null,null],[17,"INT_SAMPLER_1D_ARRAY","","",null,null],[17,"INT_SAMPLER_2D","","",null,null],[17,"INT_SAMPLER_2D_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_RECT","","",null,null],[17,"INT_SAMPLER_3D","","",null,null],[17,"INT_SAMPLER_BUFFER","","",null,null],[17,"INT_SAMPLER_CUBE","","",null,null],[17,"INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"INT_VEC2","","",null,null],[17,"INT_VEC3","","",null,null],[17,"INT_VEC4","","",null,null],[17,"INVALID_ENUM","","",null,null],[17,"INVALID_FRAMEBUFFER_OPERATION","","",null,null],[17,"INVALID_INDEX","","",null,null],[17,"INVALID_OPERATION","","",null,null],[17,"INVALID_VALUE","","",null,null],[17,"INVERT","","",null,null],[17,"ISOLINES","","",null,null],[17,"IS_PER_PATCH","","",null,null],[17,"IS_ROW_MAJOR","","",null,null],[17,"KEEP","","",null,null],[17,"LAST_VERTEX_CONVENTION","","",null,null],[17,"LAYER_PROVOKING_VERTEX","","",null,null],[17,"LEFT","","",null,null],[17,"LEQUAL","","",null,null],[17,"LESS","","",null,null],[17,"LINE","","",null,null],[17,"LINEAR","","",null,null],[17,"LINEAR_MIPMAP_LINEAR","","",null,null],[17,"LINEAR_MIPMAP_NEAREST","","",null,null],[17,"LINES","","",null,null],[17,"LINES_ADJACENCY","","",null,null],[17,"LINE_LOOP","","",null,null],[17,"LINE_SMOOTH","","",null,null],[17,"LINE_SMOOTH_HINT","","",null,null],[17,"LINE_STRIP","","",null,null],[17,"LINE_STRIP_ADJACENCY","","",null,null],[17,"LINE_WIDTH","","",null,null],[17,"LINE_WIDTH_GRANULARITY","","",null,null],[17,"LINE_WIDTH_RANGE","","",null,null],[17,"LINK_STATUS","","",null,null],[17,"LOCATION","","",null,null],[17,"LOCATION_COMPONENT","","",null,null],[17,"LOCATION_INDEX","","",null,null],[17,"LOGIC_OP_MODE","","",null,null],[17,"LOSE_CONTEXT_ON_RESET","","",null,null],[17,"LOWER_LEFT","","",null,null],[17,"LOW_FLOAT","","",null,null],[17,"LOW_INT","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MANUAL_GENERATE_MIPMAP","","",null,null],[17,"MAP_COHERENT_BIT","","",null,null],[17,"MAP_FLUSH_EXPLICIT_BIT","","",null,null],[17,"MAP_INVALIDATE_BUFFER_BIT","","",null,null],[17,"MAP_INVALIDATE_RANGE_BIT","","",null,null],[17,"MAP_PERSISTENT_BIT","","",null,null],[17,"MAP_READ_BIT","","",null,null],[17,"MAP_UNSYNCHRONIZED_BIT","","",null,null],[17,"MAP_WRITE_BIT","","",null,null],[17,"MATRIX_STRIDE","","",null,null],[17,"MAX","","",null,null],[17,"MAX_3D_TEXTURE_SIZE","","",null,null],[17,"MAX_ARRAY_TEXTURE_LAYERS","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"MAX_CLIP_DISTANCES","","",null,null],[17,"MAX_COLOR_ATTACHMENTS","","",null,null],[17,"MAX_COLOR_TEXTURE_SAMPLES","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMBINED_CLIP_AND_CULL_DISTANCES","","",null,null],[17,"MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_DIMENSIONS","","",null,null],[17,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","","",null,null],[17,"MAX_COMBINED_SHADER_OUTPUT_RESOURCES","","",null,null],[17,"MAX_COMBINED_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMBINED_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMPUTE_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMPUTE_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMPUTE_SHARED_MEMORY_SIZE","","",null,null],[17,"MAX_COMPUTE_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMPUTE_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_COUNT","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_INVOCATIONS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"MAX_CUBE_MAP_TEXTURE_SIZE","","",null,null],[17,"MAX_CULL_DISTANCES","","",null,null],[17,"MAX_DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"MAX_DEBUG_LOGGED_MESSAGES","","",null,null],[17,"MAX_DEBUG_MESSAGE_LENGTH","","",null,null],[17,"MAX_DEPTH","","",null,null],[17,"MAX_DEPTH_TEXTURE_SAMPLES","","",null,null],[17,"MAX_DRAW_BUFFERS","","",null,null],[17,"MAX_DUAL_SOURCE_DRAW_BUFFERS","","",null,null],[17,"MAX_ELEMENTS_INDICES","","",null,null],[17,"MAX_ELEMENTS_VERTICES","","",null,null],[17,"MAX_ELEMENT_INDEX","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTERS","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_FRAGMENT_IMAGE_UNIFORMS","","",null,null],[17,"MAX_FRAGMENT_INPUT_COMPONENTS","","",null,null],[17,"MAX_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_VECTORS","","",null,null],[17,"MAX_FRAMEBUFFER_HEIGHT","","",null,null],[17,"MAX_FRAMEBUFFER_LAYERS","","",null,null],[17,"MAX_FRAMEBUFFER_SAMPLES","","",null,null],[17,"MAX_FRAMEBUFFER_WIDTH","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTERS","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_GEOMETRY_IMAGE_UNIFORMS","","",null,null],[17,"MAX_GEOMETRY_INPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_VERTICES","","",null,null],[17,"MAX_GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_HEIGHT","","",null,null],[17,"MAX_IMAGE_SAMPLES","","",null,null],[17,"MAX_IMAGE_UNITS","","",null,null],[17,"MAX_INTEGER_SAMPLES","","",null,null],[17,"MAX_LABEL_LENGTH","","",null,null],[17,"MAX_LAYERS","","",null,null],[17,"MAX_NAME_LENGTH","","",null,null],[17,"MAX_NUM_ACTIVE_VARIABLES","","",null,null],[17,"MAX_NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"MAX_PATCH_VERTICES","","",null,null],[17,"MAX_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"MAX_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MAX_RECTANGLE_TEXTURE_SIZE","","",null,null],[17,"MAX_RENDERBUFFER_SIZE","","",null,null],[17,"MAX_SAMPLES","","",null,null],[17,"MAX_SAMPLE_MASK_WORDS","","",null,null],[17,"MAX_SERVER_WAIT_TIMEOUT","","",null,null],[17,"MAX_SHADER_STORAGE_BLOCK_SIZE","","",null,null],[17,"MAX_SHADER_STORAGE_BUFFER_BINDINGS","","",null,null],[17,"MAX_SUBROUTINES","","",null,null],[17,"MAX_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_CONTROL_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_CONTROL_INPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_BLOCKS","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_EVALUATION_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_EVALUATION_INPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_GEN_LEVEL","","",null,null],[17,"MAX_TESS_PATCH_COMPONENTS","","",null,null],[17,"MAX_TEXTURE_BUFFER_SIZE","","",null,null],[17,"MAX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TEXTURE_LOD_BIAS","","",null,null],[17,"MAX_TEXTURE_SIZE","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_BUFFERS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","","",null,null],[17,"MAX_UNIFORM_BLOCK_SIZE","","",null,null],[17,"MAX_UNIFORM_BUFFER_BINDINGS","","",null,null],[17,"MAX_UNIFORM_LOCATIONS","","",null,null],[17,"MAX_VARYING_COMPONENTS","","",null,null],[17,"MAX_VARYING_FLOATS","","",null,null],[17,"MAX_VARYING_VECTORS","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTERS","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_VERTEX_ATTRIBS","","",null,null],[17,"MAX_VERTEX_ATTRIB_BINDINGS","","",null,null],[17,"MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"MAX_VERTEX_ATTRIB_STRIDE","","",null,null],[17,"MAX_VERTEX_IMAGE_UNIFORMS","","",null,null],[17,"MAX_VERTEX_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_VERTEX_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_VERTEX_STREAMS","","",null,null],[17,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_VERTEX_UNIFORM_BLOCKS","","",null,null],[17,"MAX_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_VERTEX_UNIFORM_VECTORS","","",null,null],[17,"MAX_VIEWPORTS","","",null,null],[17,"MAX_VIEWPORT_DIMS","","",null,null],[17,"MAX_WIDTH","","",null,null],[17,"MEDIUM_FLOAT","","",null,null],[17,"MEDIUM_INT","","",null,null],[17,"MIN","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"MIN_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"MIN_MAP_BUFFER_ALIGNMENT","","",null,null],[17,"MIN_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"MIN_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MIN_SAMPLE_SHADING_VALUE","","",null,null],[17,"MIPMAP","","",null,null],[17,"MIRRORED_REPEAT","","",null,null],[17,"MIRROR_CLAMP_TO_EDGE","","",null,null],[17,"MULTISAMPLE","","",null,null],[17,"NAME_LENGTH","","",null,null],[17,"NAND","","",null,null],[17,"NEAREST","","",null,null],[17,"NEAREST_MIPMAP_LINEAR","","",null,null],[17,"NEAREST_MIPMAP_NEAREST","","",null,null],[17,"NEGATIVE_ONE_TO_ONE","","",null,null],[17,"NEVER","","",null,null],[17,"NICEST","","",null,null],[17,"NONE","","",null,null],[17,"NOOP","","",null,null],[17,"NOR","","",null,null],[17,"NOTEQUAL","","",null,null],[17,"NO_ERROR","","",null,null],[17,"NO_RESET_NOTIFICATION","","",null,null],[17,"NUM_ACTIVE_VARIABLES","","",null,null],[17,"NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"NUM_COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"NUM_EXTENSIONS","","",null,null],[17,"NUM_PROGRAM_BINARY_FORMATS","","",null,null],[17,"NUM_SAMPLE_COUNTS","","",null,null],[17,"NUM_SHADER_BINARY_FORMATS","","",null,null],[17,"NUM_SHADING_LANGUAGE_VERSIONS","","",null,null],[17,"OBJECT_TYPE","","",null,null],[17,"OFFSET","","",null,null],[17,"ONE","","",null,null],[17,"ONE_MINUS_CONSTANT_ALPHA","","",null,null],[17,"ONE_MINUS_CONSTANT_COLOR","","",null,null],[17,"ONE_MINUS_DST_ALPHA","","",null,null],[17,"ONE_MINUS_DST_COLOR","","",null,null],[17,"ONE_MINUS_SRC1_ALPHA","","",null,null],[17,"ONE_MINUS_SRC1_COLOR","","",null,null],[17,"ONE_MINUS_SRC_ALPHA","","",null,null],[17,"ONE_MINUS_SRC_COLOR","","",null,null],[17,"OR","","",null,null],[17,"OR_INVERTED","","",null,null],[17,"OR_REVERSE","","",null,null],[17,"OUT_OF_MEMORY","","",null,null],[17,"PACK_ALIGNMENT","","",null,null],[17,"PACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"PACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"PACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"PACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"PACK_IMAGE_HEIGHT","","",null,null],[17,"PACK_LSB_FIRST","","",null,null],[17,"PACK_ROW_LENGTH","","",null,null],[17,"PACK_SKIP_IMAGES","","",null,null],[17,"PACK_SKIP_PIXELS","","",null,null],[17,"PACK_SKIP_ROWS","","",null,null],[17,"PACK_SWAP_BYTES","","",null,null],[17,"PATCHES","","",null,null],[17,"PATCH_DEFAULT_INNER_LEVEL","","",null,null],[17,"PATCH_DEFAULT_OUTER_LEVEL","","",null,null],[17,"PATCH_VERTICES","","",null,null],[17,"PIXEL_BUFFER_BARRIER_BIT","","",null,null],[17,"PIXEL_PACK_BUFFER","","",null,null],[17,"PIXEL_PACK_BUFFER_BINDING","","",null,null],[17,"PIXEL_UNPACK_BUFFER","","",null,null],[17,"PIXEL_UNPACK_BUFFER_BINDING","","",null,null],[17,"POINT","","",null,null],[17,"POINTS","","",null,null],[17,"POINT_FADE_THRESHOLD_SIZE","","",null,null],[17,"POINT_SIZE","","",null,null],[17,"POINT_SIZE_GRANULARITY","","",null,null],[17,"POINT_SIZE_RANGE","","",null,null],[17,"POINT_SPRITE_COORD_ORIGIN","","",null,null],[17,"POLYGON_MODE","","",null,null],[17,"POLYGON_OFFSET_FACTOR","","",null,null],[17,"POLYGON_OFFSET_FILL","","",null,null],[17,"POLYGON_OFFSET_LINE","","",null,null],[17,"POLYGON_OFFSET_POINT","","",null,null],[17,"POLYGON_OFFSET_UNITS","","",null,null],[17,"POLYGON_SMOOTH","","",null,null],[17,"POLYGON_SMOOTH_HINT","","",null,null],[17,"PRIMITIVES_GENERATED","","",null,null],[17,"PRIMITIVE_RESTART","","",null,null],[17,"PRIMITIVE_RESTART_FIXED_INDEX","","",null,null],[17,"PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","","",null,null],[17,"PRIMITIVE_RESTART_INDEX","","",null,null],[17,"PROGRAM","","",null,null],[17,"PROGRAM_BINARY_FORMATS","","",null,null],[17,"PROGRAM_BINARY_LENGTH","","",null,null],[17,"PROGRAM_BINARY_RETRIEVABLE_HINT","","",null,null],[17,"PROGRAM_INPUT","","",null,null],[17,"PROGRAM_OUTPUT","","",null,null],[17,"PROGRAM_PIPELINE","","",null,null],[17,"PROGRAM_PIPELINE_BINDING","","",null,null],[17,"PROGRAM_POINT_SIZE","","",null,null],[17,"PROGRAM_SEPARABLE","","",null,null],[17,"PROVOKING_VERTEX","","",null,null],[17,"PROXY_TEXTURE_1D","","",null,null],[17,"PROXY_TEXTURE_1D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D","","",null,null],[17,"PROXY_TEXTURE_2D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"PROXY_TEXTURE_3D","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"PROXY_TEXTURE_RECTANGLE","","",null,null],[17,"QUADS","","",null,null],[17,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","","",null,null],[17,"QUERY","","",null,null],[17,"QUERY_BUFFER","","",null,null],[17,"QUERY_BUFFER_BARRIER_BIT","","",null,null],[17,"QUERY_BUFFER_BINDING","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT_INVERTED","","",null,null],[17,"QUERY_BY_REGION_WAIT","","",null,null],[17,"QUERY_BY_REGION_WAIT_INVERTED","","",null,null],[17,"QUERY_COUNTER_BITS","","",null,null],[17,"QUERY_NO_WAIT","","",null,null],[17,"QUERY_NO_WAIT_INVERTED","","",null,null],[17,"QUERY_RESULT","","",null,null],[17,"QUERY_RESULT_AVAILABLE","","",null,null],[17,"QUERY_RESULT_NO_WAIT","","",null,null],[17,"QUERY_TARGET","","",null,null],[17,"QUERY_WAIT","","",null,null],[17,"QUERY_WAIT_INVERTED","","",null,null],[17,"R11F_G11F_B10F","","",null,null],[17,"R16","","",null,null],[17,"R16F","","",null,null],[17,"R16I","","",null,null],[17,"R16UI","","",null,null],[17,"R16_SNORM","","",null,null],[17,"R32F","","",null,null],[17,"R32I","","",null,null],[17,"R32UI","","",null,null],[17,"R3_G3_B2","","",null,null],[17,"R8","","",null,null],[17,"R8I","","",null,null],[17,"R8UI","","",null,null],[17,"R8_SNORM","","",null,null],[17,"RASTERIZER_DISCARD","","",null,null],[17,"READ_BUFFER","","",null,null],[17,"READ_FRAMEBUFFER","","",null,null],[17,"READ_FRAMEBUFFER_BINDING","","",null,null],[17,"READ_ONLY","","",null,null],[17,"READ_PIXELS","","",null,null],[17,"READ_PIXELS_FORMAT","","",null,null],[17,"READ_PIXELS_TYPE","","",null,null],[17,"READ_WRITE","","",null,null],[17,"RED","","",null,null],[17,"RED_INTEGER","","",null,null],[17,"REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"RENDERBUFFER","","",null,null],[17,"RENDERBUFFER_ALPHA_SIZE","","",null,null],[17,"RENDERBUFFER_BINDING","","",null,null],[17,"RENDERBUFFER_BLUE_SIZE","","",null,null],[17,"RENDERBUFFER_DEPTH_SIZE","","",null,null],[17,"RENDERBUFFER_GREEN_SIZE","","",null,null],[17,"RENDERBUFFER_HEIGHT","","",null,null],[17,"RENDERBUFFER_INTERNAL_FORMAT","","",null,null],[17,"RENDERBUFFER_RED_SIZE","","",null,null],[17,"RENDERBUFFER_SAMPLES","","",null,null],[17,"RENDERBUFFER_STENCIL_SIZE","","",null,null],[17,"RENDERBUFFER_WIDTH","","",null,null],[17,"RENDERER","","",null,null],[17,"REPEAT","","",null,null],[17,"REPLACE","","",null,null],[17,"RESET_NOTIFICATION_STRATEGY","","",null,null],[17,"RG","","",null,null],[17,"RG16","","",null,null],[17,"RG16F","","",null,null],[17,"RG16I","","",null,null],[17,"RG16UI","","",null,null],[17,"RG16_SNORM","","",null,null],[17,"RG32F","","",null,null],[17,"RG32I","","",null,null],[17,"RG32UI","","",null,null],[17,"RG8","","",null,null],[17,"RG8I","","",null,null],[17,"RG8UI","","",null,null],[17,"RG8_SNORM","","",null,null],[17,"RGB","","",null,null],[17,"RGB10","","",null,null],[17,"RGB10_A2","","",null,null],[17,"RGB10_A2UI","","",null,null],[17,"RGB12","","",null,null],[17,"RGB16","","",null,null],[17,"RGB16F","","",null,null],[17,"RGB16I","","",null,null],[17,"RGB16UI","","",null,null],[17,"RGB16_SNORM","","",null,null],[17,"RGB32F","","",null,null],[17,"RGB32I","","",null,null],[17,"RGB32UI","","",null,null],[17,"RGB4","","",null,null],[17,"RGB5","","",null,null],[17,"RGB565","","",null,null],[17,"RGB5_A1","","",null,null],[17,"RGB8","","",null,null],[17,"RGB8I","","",null,null],[17,"RGB8UI","","",null,null],[17,"RGB8_SNORM","","",null,null],[17,"RGB9_E5","","",null,null],[17,"RGBA","","",null,null],[17,"RGBA12","","",null,null],[17,"RGBA16","","",null,null],[17,"RGBA16F","","",null,null],[17,"RGBA16I","","",null,null],[17,"RGBA16UI","","",null,null],[17,"RGBA16_SNORM","","",null,null],[17,"RGBA2","","",null,null],[17,"RGBA32F","","",null,null],[17,"RGBA32I","","",null,null],[17,"RGBA32UI","","",null,null],[17,"RGBA4","","",null,null],[17,"RGBA8","","",null,null],[17,"RGBA8I","","",null,null],[17,"RGBA8UI","","",null,null],[17,"RGBA8_SNORM","","",null,null],[17,"RGBA_INTEGER","","",null,null],[17,"RGB_INTEGER","","",null,null],[17,"RG_INTEGER","","",null,null],[17,"RIGHT","","",null,null],[17,"SAMPLER","","",null,null],[17,"SAMPLER_1D","","",null,null],[17,"SAMPLER_1D_ARRAY","","",null,null],[17,"SAMPLER_1D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_1D_SHADOW","","",null,null],[17,"SAMPLER_2D","","",null,null],[17,"SAMPLER_2D_ARRAY","","",null,null],[17,"SAMPLER_2D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"SAMPLER_2D_RECT","","",null,null],[17,"SAMPLER_2D_RECT_SHADOW","","",null,null],[17,"SAMPLER_2D_SHADOW","","",null,null],[17,"SAMPLER_3D","","",null,null],[17,"SAMPLER_BINDING","","",null,null],[17,"SAMPLER_BUFFER","","",null,null],[17,"SAMPLER_CUBE","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_CUBE_SHADOW","","",null,null],[17,"SAMPLES","","",null,null],[17,"SAMPLES_PASSED","","",null,null],[17,"SAMPLE_ALPHA_TO_COVERAGE","","",null,null],[17,"SAMPLE_ALPHA_TO_ONE","","",null,null],[17,"SAMPLE_BUFFERS","","",null,null],[17,"SAMPLE_COVERAGE","","",null,null],[17,"SAMPLE_COVERAGE_INVERT","","",null,null],[17,"SAMPLE_COVERAGE_VALUE","","",null,null],[17,"SAMPLE_MASK","","",null,null],[17,"SAMPLE_MASK_VALUE","","",null,null],[17,"SAMPLE_POSITION","","",null,null],[17,"SAMPLE_SHADING","","",null,null],[17,"SCISSOR_BOX","","",null,null],[17,"SCISSOR_TEST","","",null,null],[17,"SEPARATE_ATTRIBS","","",null,null],[17,"SET","","",null,null],[17,"SHADER","","",null,null],[17,"SHADER_BINARY_FORMATS","","",null,null],[17,"SHADER_COMPILER","","",null,null],[17,"SHADER_IMAGE_ACCESS_BARRIER_BIT","","",null,null],[17,"SHADER_IMAGE_ATOMIC","","",null,null],[17,"SHADER_IMAGE_LOAD","","",null,null],[17,"SHADER_IMAGE_STORE","","",null,null],[17,"SHADER_SOURCE_LENGTH","","",null,null],[17,"SHADER_STORAGE_BARRIER_BIT","","",null,null],[17,"SHADER_STORAGE_BLOCK","","",null,null],[17,"SHADER_STORAGE_BUFFER","","",null,null],[17,"SHADER_STORAGE_BUFFER_BINDING","","",null,null],[17,"SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"SHADER_STORAGE_BUFFER_SIZE","","",null,null],[17,"SHADER_STORAGE_BUFFER_START","","",null,null],[17,"SHADER_TYPE","","",null,null],[17,"SHADING_LANGUAGE_VERSION","","",null,null],[17,"SHORT","","",null,null],[17,"SIGNALED","","",null,null],[17,"SIGNED_NORMALIZED","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","","",null,null],[17,"SMOOTH_LINE_WIDTH_GRANULARITY","","",null,null],[17,"SMOOTH_LINE_WIDTH_RANGE","","",null,null],[17,"SMOOTH_POINT_SIZE_GRANULARITY","","",null,null],[17,"SMOOTH_POINT_SIZE_RANGE","","",null,null],[17,"SRC1_ALPHA","","",null,null],[17,"SRC1_COLOR","","",null,null],[17,"SRC_ALPHA","","",null,null],[17,"SRC_ALPHA_SATURATE","","",null,null],[17,"SRC_COLOR","","",null,null],[17,"SRGB","","",null,null],[17,"SRGB8","","",null,null],[17,"SRGB8_ALPHA8","","",null,null],[17,"SRGB_ALPHA","","",null,null],[17,"SRGB_READ","","",null,null],[17,"SRGB_WRITE","","",null,null],[17,"STACK_OVERFLOW","","",null,null],[17,"STACK_UNDERFLOW","","",null,null],[17,"STATIC_COPY","","",null,null],[17,"STATIC_DRAW","","",null,null],[17,"STATIC_READ","","",null,null],[17,"STENCIL","","",null,null],[17,"STENCIL_ATTACHMENT","","",null,null],[17,"STENCIL_BACK_FAIL","","",null,null],[17,"STENCIL_BACK_FUNC","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_PASS","","",null,null],[17,"STENCIL_BACK_REF","","",null,null],[17,"STENCIL_BACK_VALUE_MASK","","",null,null],[17,"STENCIL_BACK_WRITEMASK","","",null,null],[17,"STENCIL_BUFFER_BIT","","",null,null],[17,"STENCIL_CLEAR_VALUE","","",null,null],[17,"STENCIL_COMPONENTS","","",null,null],[17,"STENCIL_FAIL","","",null,null],[17,"STENCIL_FUNC","","",null,null],[17,"STENCIL_INDEX","","",null,null],[17,"STENCIL_INDEX1","","",null,null],[17,"STENCIL_INDEX16","","",null,null],[17,"STENCIL_INDEX4","","",null,null],[17,"STENCIL_INDEX8","","",null,null],[17,"STENCIL_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_PASS_DEPTH_PASS","","",null,null],[17,"STENCIL_REF","","",null,null],[17,"STENCIL_RENDERABLE","","",null,null],[17,"STENCIL_TEST","","",null,null],[17,"STENCIL_VALUE_MASK","","",null,null],[17,"STENCIL_WRITEMASK","","",null,null],[17,"STEREO","","",null,null],[17,"STREAM_COPY","","",null,null],[17,"STREAM_DRAW","","",null,null],[17,"STREAM_READ","","",null,null],[17,"SUBPIXEL_BITS","","",null,null],[17,"SYNC_CONDITION","","",null,null],[17,"SYNC_FENCE","","",null,null],[17,"SYNC_FLAGS","","",null,null],[17,"SYNC_FLUSH_COMMANDS_BIT","","",null,null],[17,"SYNC_GPU_COMMANDS_COMPLETE","","",null,null],[17,"SYNC_STATUS","","",null,null],[17,"TESS_CONTROL_OUTPUT_VERTICES","","",null,null],[17,"TESS_CONTROL_SHADER","","",null,null],[17,"TESS_CONTROL_SHADER_BIT","","",null,null],[17,"TESS_CONTROL_SUBROUTINE","","",null,null],[17,"TESS_CONTROL_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_CONTROL_TEXTURE","","",null,null],[17,"TESS_EVALUATION_SHADER","","",null,null],[17,"TESS_EVALUATION_SHADER_BIT","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_EVALUATION_TEXTURE","","",null,null],[17,"TESS_GEN_MODE","","",null,null],[17,"TESS_GEN_POINT_MODE","","",null,null],[17,"TESS_GEN_SPACING","","",null,null],[17,"TESS_GEN_VERTEX_ORDER","","",null,null],[17,"TEXTURE","","",null,null],[17,"TEXTURE0","","",null,null],[17,"TEXTURE1","","",null,null],[17,"TEXTURE10","","",null,null],[17,"TEXTURE11","","",null,null],[17,"TEXTURE12","","",null,null],[17,"TEXTURE13","","",null,null],[17,"TEXTURE14","","",null,null],[17,"TEXTURE15","","",null,null],[17,"TEXTURE16","","",null,null],[17,"TEXTURE17","","",null,null],[17,"TEXTURE18","","",null,null],[17,"TEXTURE19","","",null,null],[17,"TEXTURE2","","",null,null],[17,"TEXTURE20","","",null,null],[17,"TEXTURE21","","",null,null],[17,"TEXTURE22","","",null,null],[17,"TEXTURE23","","",null,null],[17,"TEXTURE24","","",null,null],[17,"TEXTURE25","","",null,null],[17,"TEXTURE26","","",null,null],[17,"TEXTURE27","","",null,null],[17,"TEXTURE28","","",null,null],[17,"TEXTURE29","","",null,null],[17,"TEXTURE3","","",null,null],[17,"TEXTURE30","","",null,null],[17,"TEXTURE31","","",null,null],[17,"TEXTURE4","","",null,null],[17,"TEXTURE5","","",null,null],[17,"TEXTURE6","","",null,null],[17,"TEXTURE7","","",null,null],[17,"TEXTURE8","","",null,null],[17,"TEXTURE9","","",null,null],[17,"TEXTURE_1D","","",null,null],[17,"TEXTURE_1D_ARRAY","","",null,null],[17,"TEXTURE_2D","","",null,null],[17,"TEXTURE_2D_ARRAY","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_3D","","",null,null],[17,"TEXTURE_ALPHA_SIZE","","",null,null],[17,"TEXTURE_ALPHA_TYPE","","",null,null],[17,"TEXTURE_BASE_LEVEL","","",null,null],[17,"TEXTURE_BINDING_1D","","",null,null],[17,"TEXTURE_BINDING_1D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D","","",null,null],[17,"TEXTURE_BINDING_2D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_BINDING_3D","","",null,null],[17,"TEXTURE_BINDING_BUFFER","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP_ARRAY","","",null,null],[17,"TEXTURE_BINDING_RECTANGLE","","",null,null],[17,"TEXTURE_BLUE_SIZE","","",null,null],[17,"TEXTURE_BLUE_TYPE","","",null,null],[17,"TEXTURE_BORDER_COLOR","","",null,null],[17,"TEXTURE_BUFFER","","",null,null],[17,"TEXTURE_BUFFER_BINDING","","",null,null],[17,"TEXTURE_BUFFER_DATA_STORE_BINDING","","",null,null],[17,"TEXTURE_BUFFER_OFFSET","","",null,null],[17,"TEXTURE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"TEXTURE_BUFFER_SIZE","","",null,null],[17,"TEXTURE_COMPARE_FUNC","","",null,null],[17,"TEXTURE_COMPARE_MODE","","",null,null],[17,"TEXTURE_COMPRESSED","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"TEXTURE_COMPRESSED_IMAGE_SIZE","","",null,null],[17,"TEXTURE_COMPRESSION_HINT","","",null,null],[17,"TEXTURE_CUBE_MAP","","",null,null],[17,"TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Z","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Z","","",null,null],[17,"TEXTURE_CUBE_MAP_SEAMLESS","","",null,null],[17,"TEXTURE_DEPTH","","",null,null],[17,"TEXTURE_DEPTH_SIZE","","",null,null],[17,"TEXTURE_DEPTH_TYPE","","",null,null],[17,"TEXTURE_FETCH_BARRIER_BIT","","",null,null],[17,"TEXTURE_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"TEXTURE_GATHER","","",null,null],[17,"TEXTURE_GATHER_SHADOW","","",null,null],[17,"TEXTURE_GREEN_SIZE","","",null,null],[17,"TEXTURE_GREEN_TYPE","","",null,null],[17,"TEXTURE_HEIGHT","","",null,null],[17,"TEXTURE_IMAGE_FORMAT","","",null,null],[17,"TEXTURE_IMAGE_TYPE","","",null,null],[17,"TEXTURE_IMMUTABLE_FORMAT","","",null,null],[17,"TEXTURE_IMMUTABLE_LEVELS","","",null,null],[17,"TEXTURE_INTERNAL_FORMAT","","",null,null],[17,"TEXTURE_LOD_BIAS","","",null,null],[17,"TEXTURE_MAG_FILTER","","",null,null],[17,"TEXTURE_MAX_LEVEL","","",null,null],[17,"TEXTURE_MAX_LOD","","",null,null],[17,"TEXTURE_MIN_FILTER","","",null,null],[17,"TEXTURE_MIN_LOD","","",null,null],[17,"TEXTURE_RECTANGLE","","",null,null],[17,"TEXTURE_RED_SIZE","","",null,null],[17,"TEXTURE_RED_TYPE","","",null,null],[17,"TEXTURE_SAMPLES","","",null,null],[17,"TEXTURE_SHADOW","","",null,null],[17,"TEXTURE_SHARED_SIZE","","",null,null],[17,"TEXTURE_STENCIL_SIZE","","",null,null],[17,"TEXTURE_SWIZZLE_A","","",null,null],[17,"TEXTURE_SWIZZLE_B","","",null,null],[17,"TEXTURE_SWIZZLE_G","","",null,null],[17,"TEXTURE_SWIZZLE_R","","",null,null],[17,"TEXTURE_SWIZZLE_RGBA","","",null,null],[17,"TEXTURE_TARGET","","",null,null],[17,"TEXTURE_UPDATE_BARRIER_BIT","","",null,null],[17,"TEXTURE_VIEW","","",null,null],[17,"TEXTURE_VIEW_MIN_LAYER","","",null,null],[17,"TEXTURE_VIEW_MIN_LEVEL","","",null,null],[17,"TEXTURE_VIEW_NUM_LAYERS","","",null,null],[17,"TEXTURE_VIEW_NUM_LEVELS","","",null,null],[17,"TEXTURE_WIDTH","","",null,null],[17,"TEXTURE_WRAP_R","","",null,null],[17,"TEXTURE_WRAP_S","","",null,null],[17,"TEXTURE_WRAP_T","","",null,null],[17,"TIMEOUT_EXPIRED","","",null,null],[17,"TIMEOUT_IGNORED","","",null,null],[17,"TIMESTAMP","","",null,null],[17,"TIME_ELAPSED","","",null,null],[17,"TOP_LEVEL_ARRAY_SIZE","","",null,null],[17,"TOP_LEVEL_ARRAY_STRIDE","","",null,null],[17,"TRANSFORM_FEEDBACK","","",null,null],[17,"TRANSFORM_FEEDBACK_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_BARRIER_BIT","","",null,null],[17,"TRANSFORM_FEEDBACK_BINDING","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_BINDING","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_INDEX","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_MODE","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_SIZE","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_START","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_STRIDE","","",null,null],[17,"TRANSFORM_FEEDBACK_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYINGS","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","","",null,null],[17,"TRIANGLES","","",null,null],[17,"TRIANGLES_ADJACENCY","","",null,null],[17,"TRIANGLE_FAN","","",null,null],[17,"TRIANGLE_STRIP","","",null,null],[17,"TRIANGLE_STRIP_ADJACENCY","","",null,null],[17,"TRUE","","",null,null],[17,"TYPE","","",null,null],[17,"UNDEFINED_VERTEX","","",null,null],[17,"UNIFORM","","",null,null],[17,"UNIFORM_ARRAY_STRIDE","","",null,null],[17,"UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"UNIFORM_BARRIER_BIT","","",null,null],[17,"UNIFORM_BLOCK","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","","",null,null],[17,"UNIFORM_BLOCK_BINDING","","",null,null],[17,"UNIFORM_BLOCK_DATA_SIZE","","",null,null],[17,"UNIFORM_BLOCK_INDEX","","",null,null],[17,"UNIFORM_BLOCK_NAME_LENGTH","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"UNIFORM_BUFFER","","",null,null],[17,"UNIFORM_BUFFER_BINDING","","",null,null],[17,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"UNIFORM_BUFFER_SIZE","","",null,null],[17,"UNIFORM_BUFFER_START","","",null,null],[17,"UNIFORM_IS_ROW_MAJOR","","",null,null],[17,"UNIFORM_MATRIX_STRIDE","","",null,null],[17,"UNIFORM_NAME_LENGTH","","",null,null],[17,"UNIFORM_OFFSET","","",null,null],[17,"UNIFORM_SIZE","","",null,null],[17,"UNIFORM_TYPE","","",null,null],[17,"UNKNOWN_CONTEXT_RESET","","",null,null],[17,"UNPACK_ALIGNMENT","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"UNPACK_IMAGE_HEIGHT","","",null,null],[17,"UNPACK_LSB_FIRST","","",null,null],[17,"UNPACK_ROW_LENGTH","","",null,null],[17,"UNPACK_SKIP_IMAGES","","",null,null],[17,"UNPACK_SKIP_PIXELS","","",null,null],[17,"UNPACK_SKIP_ROWS","","",null,null],[17,"UNPACK_SWAP_BYTES","","",null,null],[17,"UNSIGNALED","","",null,null],[17,"UNSIGNED_BYTE","","",null,null],[17,"UNSIGNED_BYTE_2_3_3_REV","","",null,null],[17,"UNSIGNED_BYTE_3_3_2","","",null,null],[17,"UNSIGNED_INT","","",null,null],[17,"UNSIGNED_INT_10F_11F_11F_REV","","",null,null],[17,"UNSIGNED_INT_10_10_10_2","","",null,null],[17,"UNSIGNED_INT_24_8","","",null,null],[17,"UNSIGNED_INT_2_10_10_10_REV","","",null,null],[17,"UNSIGNED_INT_5_9_9_9_REV","","",null,null],[17,"UNSIGNED_INT_8_8_8_8","","",null,null],[17,"UNSIGNED_INT_8_8_8_8_REV","","",null,null],[17,"UNSIGNED_INT_ATOMIC_COUNTER","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_RECT","","",null,null],[17,"UNSIGNED_INT_IMAGE_3D","","",null,null],[17,"UNSIGNED_INT_IMAGE_BUFFER","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_RECT","","",null,null],[17,"UNSIGNED_INT_SAMPLER_3D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_BUFFER","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_VEC2","","",null,null],[17,"UNSIGNED_INT_VEC3","","",null,null],[17,"UNSIGNED_INT_VEC4","","",null,null],[17,"UNSIGNED_NORMALIZED","","",null,null],[17,"UNSIGNED_SHORT","","",null,null],[17,"UNSIGNED_SHORT_1_5_5_5_REV","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4_REV","","",null,null],[17,"UNSIGNED_SHORT_5_5_5_1","","",null,null],[17,"UNSIGNED_SHORT_5_6_5","","",null,null],[17,"UNSIGNED_SHORT_5_6_5_REV","","",null,null],[17,"UPPER_LEFT","","",null,null],[17,"VALIDATE_STATUS","","",null,null],[17,"VENDOR","","",null,null],[17,"VERSION","","",null,null],[17,"VERTEX_ARRAY","","",null,null],[17,"VERTEX_ARRAY_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BARRIER_BIT","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_DIVISOR","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_ENABLED","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_INTEGER","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_LONG","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_NORMALIZED","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_POINTER","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_SIZE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_STRIDE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_TYPE","","",null,null],[17,"VERTEX_ATTRIB_BINDING","","",null,null],[17,"VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"VERTEX_BINDING_BUFFER","","",null,null],[17,"VERTEX_BINDING_DIVISOR","","",null,null],[17,"VERTEX_BINDING_OFFSET","","",null,null],[17,"VERTEX_BINDING_STRIDE","","",null,null],[17,"VERTEX_PROGRAM_POINT_SIZE","","",null,null],[17,"VERTEX_SHADER","","",null,null],[17,"VERTEX_SHADER_BIT","","",null,null],[17,"VERTEX_SUBROUTINE","","",null,null],[17,"VERTEX_SUBROUTINE_UNIFORM","","",null,null],[17,"VERTEX_TEXTURE","","",null,null],[17,"VIEWPORT","","",null,null],[17,"VIEWPORT_BOUNDS_RANGE","","",null,null],[17,"VIEWPORT_INDEX_PROVOKING_VERTEX","","",null,null],[17,"VIEWPORT_SUBPIXEL_BITS","","",null,null],[17,"VIEW_CLASS_128_BITS","","",null,null],[17,"VIEW_CLASS_16_BITS","","",null,null],[17,"VIEW_CLASS_24_BITS","","",null,null],[17,"VIEW_CLASS_32_BITS","","",null,null],[17,"VIEW_CLASS_48_BITS","","",null,null],[17,"VIEW_CLASS_64_BITS","","",null,null],[17,"VIEW_CLASS_8_BITS","","",null,null],[17,"VIEW_CLASS_96_BITS","","",null,null],[17,"VIEW_CLASS_BPTC_FLOAT","","",null,null],[17,"VIEW_CLASS_BPTC_UNORM","","",null,null],[17,"VIEW_CLASS_RGTC1_RED","","",null,null],[17,"VIEW_CLASS_RGTC2_RG","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGB","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT3_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT5_RGBA","","",null,null],[17,"VIEW_COMPATIBILITY_CLASS","","",null,null],[17,"WAIT_FAILED","","",null,null],[17,"WRITE_ONLY","","",null,null],[17,"XOR","","",null,null],[17,"ZERO","","",null,null],[17,"ZERO_TO_ONE","","",null,null],[5,"ActiveShaderProgram","","",null,[[["gluint",6]]]],[5,"ActiveTexture","","Fallbacks: ActiveTextureARB",null,[[["glenum",6]]]],[5,"AttachShader","","Fallbacks: AttachObjectARB",null,[[["gluint",6]]]],[5,"BeginConditionalRender","","Fallbacks: BeginConditionalRenderNV",null,[[["glenum",6],["gluint",6]]]],[5,"BeginQuery","","Fallbacks: BeginQueryARB",null,[[["gluint",6],["glenum",6]]]],[5,"BeginQueryIndexed","","",null,[[["gluint",6],["glenum",6]]]],[5,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT, …",null,[[["glenum",6]]]],[5,"BindAttribLocation","","Fallbacks: BindAttribLocationARB",null,[[["gluint",6]]]],[5,"BindBuffer","","Fallbacks: BindBufferARB",null,[[["gluint",6],["glenum",6]]]],[5,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV",null,[[["gluint",6],["glenum",6]]]],[5,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV",null,[[["glintptr",6],["glenum",6],["glsizeiptr",6],["gluint",6]]]],[5,"BindBuffersBase","","",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"BindBuffersRange","","",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"BindFragDataLocation","","Fallbacks: BindFragDataLocationEXT",null,[[["gluint",6]]]],[5,"BindFragDataLocationIndexed","","Fallbacks: BindFragDataLocationIndexedEXT",null,[[["gluint",6]]]],[5,"BindFramebuffer","","",null,[[["gluint",6],["glenum",6]]]],[5,"BindImageTexture","","",null,[[["glint",6],["glboolean",6],["glenum",6],["gluint",6]]]],[5,"BindImageTextures","","",null,[[["glsizei",6],["gluint",6]]]],[5,"BindProgramPipeline","","",null,[[["gluint",6]]]],[5,"BindRenderbuffer","","",null,[[["gluint",6],["glenum",6]]]],[5,"BindSampler","","",null,[[["gluint",6]]]],[5,"BindSamplers","","",null,[[["glsizei",6],["gluint",6]]]],[5,"BindTexture","","Fallbacks: BindTextureEXT",null,[[["gluint",6],["glenum",6]]]],[5,"BindTextureUnit","","",null,[[["gluint",6]]]],[5,"BindTextures","","",null,[[["glsizei",6],["gluint",6]]]],[5,"BindTransformFeedback","","",null,[[["gluint",6],["glenum",6]]]],[5,"BindVertexArray","","Fallbacks: BindVertexArrayOES",null,[[["gluint",6]]]],[5,"BindVertexBuffer","","",null,[[["glsizei",6],["glintptr",6],["gluint",6]]]],[5,"BindVertexBuffers","","",null,[[["glsizei",6],["gluint",6]]]],[5,"BlendColor","","Fallbacks: BlendColorEXT",null,[[["glfloat",6]]]],[5,"BlendEquation","","Fallbacks: BlendEquationEXT",null,[[["glenum",6]]]],[5,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT",null,[[["glenum",6]]]],[5,"BlendEquationSeparatei","","Fallbacks: BlendEquationSeparateIndexedAMD, …",null,[[["glenum",6],["gluint",6]]]],[5,"BlendEquationi","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, …",null,[[["glenum",6],["gluint",6]]]],[5,"BlendFunc","","",null,[[["glenum",6]]]],[5,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR",null,[[["glenum",6]]]],[5,"BlendFuncSeparatei","","Fallbacks: BlendFuncSeparateIndexedAMD, …",null,[[["glenum",6],["gluint",6]]]],[5,"BlendFunci","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, …",null,[[["glenum",6],["gluint",6]]]],[5,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV",null,[[["glenum",6],["glint",6],["glbitfield",6]]]],[5,"BlitNamedFramebuffer","","",null,[[["glint",6],["glenum",6],["glbitfield",6],["gluint",6]]]],[5,"BufferData","","Fallbacks: BufferDataARB",null,[[["glsizeiptr",6],["glenum",6]]]],[5,"BufferStorage","","Fallbacks: BufferStorageEXT",null,[[["glsizeiptr",6],["glbitfield",6],["glenum",6]]]],[5,"BufferSubData","","Fallbacks: BufferSubDataARB",null,[[["glsizeiptr",6],["glintptr",6],["glenum",6]]]],[5,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT",null,[[["glenum",6]],["glenum",6]]],[5,"CheckNamedFramebufferStatus","","",null,[[["glenum",6],["gluint",6]],["glenum",6]]],[5,"ClampColor","","Fallbacks: ClampColorARB",null,[[["glenum",6]]]],[5,"Clear","","",null,[[["glbitfield",6]]]],[5,"ClearBufferData","","",null,[[["glenum",6]]]],[5,"ClearBufferSubData","","",null,[[["glintptr",6],["glenum",6],["glsizeiptr",6]]]],[5,"ClearBufferfi","","",null,[[["glfloat",6],["glint",6],["glenum",6]]]],[5,"ClearBufferfv","","",null,[[["glint",6],["glenum",6]]]],[5,"ClearBufferiv","","",null,[[["glint",6],["glenum",6]]]],[5,"ClearBufferuiv","","",null,[[["glint",6],["glenum",6]]]],[5,"ClearColor","","",null,[[["glfloat",6]]]],[5,"ClearDepth","","",null,[[["gldouble",6]]]],[5,"ClearDepthf","","Fallbacks: ClearDepthfOES",null,[[["glfloat",6]]]],[5,"ClearNamedBufferData","","",null,[[["glenum",6],["gluint",6]]]],[5,"ClearNamedBufferSubData","","",null,[[["glintptr",6],["glenum",6],["glsizeiptr",6],["gluint",6]]]],[5,"ClearNamedFramebufferfi","","",null,[[["glint",6],["glenum",6],["glfloat",6],["gluint",6]]]],[5,"ClearNamedFramebufferfv","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"ClearNamedFramebufferiv","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"ClearNamedFramebufferuiv","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"ClearStencil","","",null,[[["glint",6]]]],[5,"ClearTexImage","","Fallbacks: ClearTexImageEXT",null,[[["glint",6],["glenum",6],["gluint",6]]]],[5,"ClearTexSubImage","","Fallbacks: ClearTexSubImageEXT",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE",null,[[["gluint64",6],["glsync",6],["glbitfield",6]],["glenum",6]]],[5,"ClipControl","","Fallbacks: ClipControlEXT",null,[[["glenum",6]]]],[5,"ColorMask","","",null,[[["glboolean",6]]]],[5,"ColorMaski","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, …",null,[[["glboolean",6],["gluint",6]]]],[5,"ColorP3ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"ColorP3uiv","","",null,[[["glenum",6]]]],[5,"ColorP4ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"ColorP4uiv","","",null,[[["glenum",6]]]],[5,"CompileShader","","Fallbacks: CompileShaderARB",null,[[["gluint",6]]]],[5,"CompressedTexImage1D","","Fallbacks: CompressedTexImage1DARB",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"CompressedTexSubImage1D","","Fallbacks: CompressedTexSubImage1DARB",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"CompressedTextureSubImage1D","","",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"CompressedTextureSubImage2D","","",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"CompressedTextureSubImage3D","","",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV",null,[[["glsizeiptr",6],["glintptr",6],["glenum",6]]]],[5,"CopyImageSubData","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"CopyNamedBufferSubData","","",null,[[["glsizeiptr",6],["glintptr",6],["gluint",6]]]],[5,"CopyTexImage1D","","Fallbacks: CopyTexImage1DEXT",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"CopyTexSubImage1D","","Fallbacks: CopyTexSubImage1DEXT",null,[[["glsizei",6],["glint",6],["glenum",6]]]],[5,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"CopyTextureSubImage1D","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"CopyTextureSubImage2D","","",null,[[["glint",6],["glsizei",6],["gluint",6]]]],[5,"CopyTextureSubImage3D","","",null,[[["glint",6],["glsizei",6],["gluint",6]]]],[5,"CreateBuffers","","",null,[[["glsizei",6]]]],[5,"CreateFramebuffers","","",null,[[["glsizei",6]]]],[5,"CreateProgram","","Fallbacks: CreateProgramObjectARB",null,[[],["gluint",6]]],[5,"CreateProgramPipelines","","",null,[[["glsizei",6]]]],[5,"CreateQueries","","",null,[[["glsizei",6],["glenum",6]]]],[5,"CreateRenderbuffers","","",null,[[["glsizei",6]]]],[5,"CreateSamplers","","",null,[[["glsizei",6]]]],[5,"CreateShader","","Fallbacks: CreateShaderObjectARB",null,[[["glenum",6]],["gluint",6]]],[5,"CreateShaderProgramv","","",null,[[["glsizei",6],["glenum",6]],["gluint",6]]],[5,"CreateTextures","","",null,[[["glsizei",6],["glenum",6]]]],[5,"CreateTransformFeedbacks","","",null,[[["glsizei",6]]]],[5,"CreateVertexArrays","","",null,[[["glsizei",6]]]],[5,"CullFace","","",null,[[["glenum",6]]]],[5,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, …",null,[[["gldebugproc",6]]]],[5,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR",null,[[["glboolean",6],["glsizei",6],["glenum",6]]]],[5,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"DeleteBuffers","","Fallbacks: DeleteBuffersARB",null,[[["glsizei",6]]]],[5,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT",null,[[["glsizei",6]]]],[5,"DeleteProgram","","",null,[[["gluint",6]]]],[5,"DeleteProgramPipelines","","",null,[[["glsizei",6]]]],[5,"DeleteQueries","","Fallbacks: DeleteQueriesARB",null,[[["glsizei",6]]]],[5,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT",null,[[["glsizei",6]]]],[5,"DeleteSamplers","","",null,[[["glsizei",6]]]],[5,"DeleteShader","","",null,[[["gluint",6]]]],[5,"DeleteSync","","Fallbacks: DeleteSyncAPPLE",null,[[["glsync",6]]]],[5,"DeleteTextures","","",null,[[["glsizei",6]]]],[5,"DeleteTransformFeedbacks","","Fallbacks: DeleteTransformFeedbacksNV",null,[[["glsizei",6]]]],[5,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES",null,[[["glsizei",6]]]],[5,"DepthFunc","","",null,[[["glenum",6]]]],[5,"DepthMask","","",null,[[["glboolean",6]]]],[5,"DepthRange","","",null,[[["gldouble",6]]]],[5,"DepthRangeArrayv","","",null,[[["glsizei",6],["gluint",6]]]],[5,"DepthRangeIndexed","","",null,[[["gldouble",6],["gluint",6]]]],[5,"DepthRangef","","Fallbacks: DepthRangefOES",null,[[["glfloat",6]]]],[5,"DetachShader","","Fallbacks: DetachObjectARB",null,[[["gluint",6]]]],[5,"Disable","","",null,[[["glenum",6]]]],[5,"DisableVertexArrayAttrib","","",null,[[["gluint",6]]]],[5,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB",null,[[["gluint",6]]]],[5,"Disablei","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, …",null,[[["gluint",6],["glenum",6]]]],[5,"DispatchCompute","","",null,[[["gluint",6]]]],[5,"DispatchComputeIndirect","","",null,[[["glintptr",6]]]],[5,"DrawArrays","","Fallbacks: DrawArraysEXT",null,[[["glsizei",6],["glint",6],["glenum",6]]]],[5,"DrawArraysIndirect","","",null,[[["glenum",6]]]],[5,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE, …",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"DrawArraysInstancedBaseInstance","","Fallbacks: DrawArraysInstancedBaseInstanceEXT",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"DrawBuffer","","",null,[[["glenum",6]]]],[5,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT",null,[[["glsizei",6]]]],[5,"DrawElements","","",null,[[["glsizei",6],["glenum",6]]]],[5,"DrawElementsBaseVertex","","Fallbacks: DrawElementsBaseVertexEXT, …",null,[[["glsizei",6],["glint",6],["glenum",6]]]],[5,"DrawElementsIndirect","","",null,[[["glenum",6]]]],[5,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE, …",null,[[["glsizei",6],["glenum",6]]]],[5,"DrawElementsInstancedBaseInstance","","Fallbacks: DrawElementsInstancedBaseInstanceEXT",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"DrawElementsInstancedBaseVertex","","Fallbacks: DrawElementsInstancedBaseVertexEXT, …",null,[[["glsizei",6],["glint",6],["glenum",6]]]],[5,"DrawElementsInstancedBaseVertexBaseInstance","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"DrawRangeElementsBaseVertex","","Fallbacks: DrawRangeElementsBaseVertexEXT, …",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"DrawTransformFeedback","","Fallbacks: DrawTransformFeedbackEXT, …",null,[[["gluint",6],["glenum",6]]]],[5,"DrawTransformFeedbackInstanced","","Fallbacks: DrawTransformFeedbackInstancedEXT",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"DrawTransformFeedbackStream","","",null,[[["gluint",6],["glenum",6]]]],[5,"DrawTransformFeedbackStreamInstanced","","",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"Enable","","",null,[[["glenum",6]]]],[5,"EnableVertexArrayAttrib","","",null,[[["gluint",6]]]],[5,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB",null,[[["gluint",6]]]],[5,"Enablei","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, …",null,[[["gluint",6],["glenum",6]]]],[5,"EndConditionalRender","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX",null,[[]]],[5,"EndQuery","","Fallbacks: EndQueryARB",null,[[["glenum",6]]]],[5,"EndQueryIndexed","","",null,[[["gluint",6],["glenum",6]]]],[5,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV",null,[[]]],[5,"FenceSync","","Fallbacks: FenceSyncAPPLE",null,[[["glbitfield",6],["glenum",6]],["glsync",6]]],[5,"Finish","","",null,[[]]],[5,"Flush","","",null,[[]]],[5,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE, …",null,[[["glsizeiptr",6],["glintptr",6],["glenum",6]]]],[5,"FlushMappedNamedBufferRange","","",null,[[["glsizeiptr",6],["glintptr",6],["gluint",6]]]],[5,"FramebufferParameteri","","",null,[[["glint",6],["glenum",6]]]],[5,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT",null,[[["gluint",6],["glenum",6]]]],[5,"FramebufferTexture","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, …",null,[[["gluint",6],["glint",6],["glenum",6]]]],[5,"FramebufferTexture1D","","Fallbacks: FramebufferTexture1DEXT",null,[[["gluint",6],["glint",6],["glenum",6]]]],[5,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT",null,[[["gluint",6],["glint",6],["glenum",6]]]],[5,"FramebufferTexture3D","","Fallbacks: FramebufferTexture3DEXT",null,[[["glint",6],["glenum",6],["gluint",6]]]],[5,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB, …",null,[[["glint",6],["glenum",6],["gluint",6]]]],[5,"FrontFace","","",null,[[["glenum",6]]]],[5,"GenBuffers","","Fallbacks: GenBuffersARB",null,[[["glsizei",6]]]],[5,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT",null,[[["glsizei",6]]]],[5,"GenProgramPipelines","","",null,[[["glsizei",6]]]],[5,"GenQueries","","Fallbacks: GenQueriesARB",null,[[["glsizei",6]]]],[5,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT",null,[[["glsizei",6]]]],[5,"GenSamplers","","",null,[[["glsizei",6]]]],[5,"GenTextures","","",null,[[["glsizei",6]]]],[5,"GenTransformFeedbacks","","Fallbacks: GenTransformFeedbacksNV",null,[[["glsizei",6]]]],[5,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES",null,[[["glsizei",6]]]],[5,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT",null,[[["glenum",6]]]],[5,"GenerateTextureMipmap","","",null,[[["gluint",6]]]],[5,"GetActiveAtomicCounterBufferiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB",null,[[["glsizei",6],["gluint",6]]]],[5,"GetActiveSubroutineName","","",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"GetActiveSubroutineUniformName","","",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"GetActiveSubroutineUniformiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetActiveUniform","","Fallbacks: GetActiveUniformARB",null,[[["glsizei",6],["gluint",6]]]],[5,"GetActiveUniformBlockName","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetActiveUniformBlockiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetActiveUniformName","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetActiveUniformsiv","","",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"GetAttachedShaders","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetAttribLocation","","Fallbacks: GetAttribLocationARB",null,[[["gluint",6]],["glint",6]]],[5,"GetBooleani_v","","Fallbacks: GetBooleanIndexedvEXT",null,[[["gluint",6],["glenum",6]]]],[5,"GetBooleanv","","",null,[[["glenum",6]]]],[5,"GetBufferParameteri64v","","",null,[[["glenum",6]]]],[5,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB",null,[[["glenum",6]]]],[5,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES",null,[[["glenum",6]]]],[5,"GetBufferSubData","","Fallbacks: GetBufferSubDataARB",null,[[["glsizeiptr",6],["glintptr",6],["glenum",6]]]],[5,"GetCompressedTexImage","","Fallbacks: GetCompressedTexImageARB",null,[[["glint",6],["glenum",6]]]],[5,"GetCompressedTextureImage","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"GetCompressedTextureSubImage","","",null,[[["glint",6],["glsizei",6],["gluint",6]]]],[5,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR",null,[[["glsizei",6],["gluint",6]],["gluint",6]]],[5,"GetDoublei_v","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT",null,[[["gluint",6],["glenum",6]]]],[5,"GetDoublev","","",null,[[["glenum",6]]]],[5,"GetError","","",null,[[],["glenum",6]]],[5,"GetFloati_v","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, …",null,[[["gluint",6],["glenum",6]]]],[5,"GetFloatv","","",null,[[["glenum",6]]]],[5,"GetFragDataIndex","","Fallbacks: GetFragDataIndexEXT",null,[[["gluint",6]],["glint",6]]],[5,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT",null,[[["gluint",6]],["glint",6]]],[5,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT",null,[[["glenum",6]]]],[5,"GetFramebufferParameteriv","","",null,[[["glenum",6]]]],[5,"GetGraphicsResetStatus","","Fallbacks: GetGraphicsResetStatusEXT, …",null,[[],["glenum",6]]],[5,"GetInteger64i_v","","",null,[[["gluint",6],["glenum",6]]]],[5,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE",null,[[["glenum",6]]]],[5,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT",null,[[["gluint",6],["glenum",6]]]],[5,"GetIntegerv","","",null,[[["glenum",6]]]],[5,"GetInternalformati64v","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetInternalformativ","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetMultisamplefv","","Fallbacks: GetMultisamplefvNV",null,[[["gluint",6],["glenum",6]]]],[5,"GetNamedBufferParameteri64v","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetNamedBufferParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetNamedBufferPointerv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetNamedBufferSubData","","",null,[[["glsizeiptr",6],["glintptr",6],["gluint",6]]]],[5,"GetNamedFramebufferAttachmentParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetNamedFramebufferParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetNamedRenderbufferParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR",null,[[["glsizei",6]]]],[5,"GetPointerv","","Fallbacks: GetPointervEXT, GetPointervKHR",null,[[["glenum",6]]]],[5,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES",null,[[["glsizei",6],["gluint",6]]]],[5,"GetProgramInfoLog","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetProgramInterfaceiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetProgramPipelineInfoLog","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetProgramPipelineiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetProgramResourceIndex","","",null,[[["glenum",6],["gluint",6]],["gluint",6]]],[5,"GetProgramResourceLocation","","",null,[[["glenum",6],["gluint",6]],["glint",6]]],[5,"GetProgramResourceLocationIndex","","",null,[[["glenum",6],["gluint",6]],["glint",6]]],[5,"GetProgramResourceName","","",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"GetProgramResourceiv","","",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"GetProgramStageiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetProgramiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetQueryBufferObjecti64v","","",null,[[["glenum",6],["glintptr",6],["gluint",6]]]],[5,"GetQueryBufferObjectiv","","",null,[[["glenum",6],["glintptr",6],["gluint",6]]]],[5,"GetQueryBufferObjectui64v","","",null,[[["glenum",6],["glintptr",6],["gluint",6]]]],[5,"GetQueryBufferObjectuiv","","",null,[[["glenum",6],["glintptr",6],["gluint",6]]]],[5,"GetQueryIndexediv","","",null,[[["gluint",6],["glenum",6]]]],[5,"GetQueryObjecti64v","","Fallbacks: GetQueryObjecti64vEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetQueryObjectiv","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetQueryObjectui64v","","Fallbacks: GetQueryObjectui64vEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB",null,[[["glenum",6],["gluint",6]]]],[5,"GetQueryiv","","Fallbacks: GetQueryivARB",null,[[["glenum",6]]]],[5,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT",null,[[["glenum",6]]]],[5,"GetSamplerParameterIiv","","Fallbacks: GetSamplerParameterIivEXT, …",null,[[["glenum",6],["gluint",6]]]],[5,"GetSamplerParameterIuiv","","Fallbacks: GetSamplerParameterIuivEXT, …",null,[[["glenum",6],["gluint",6]]]],[5,"GetSamplerParameterfv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetSamplerParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetShaderInfoLog","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetShaderPrecisionFormat","","",null,[[["glenum",6]]]],[5,"GetShaderSource","","Fallbacks: GetShaderSourceARB",null,[[["glsizei",6],["gluint",6]]]],[5,"GetShaderiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetString","","",null,[[["glenum",6]]]],[5,"GetStringi","","",null,[[["gluint",6],["glenum",6]]]],[5,"GetSubroutineIndex","","",null,[[["glenum",6],["gluint",6]],["gluint",6]]],[5,"GetSubroutineUniformLocation","","",null,[[["glenum",6],["gluint",6]],["glint",6]]],[5,"GetSynciv","","Fallbacks: GetSyncivAPPLE",null,[[["glsizei",6],["glsync",6],["glenum",6]]]],[5,"GetTexImage","","",null,[[["glint",6],["glenum",6]]]],[5,"GetTexLevelParameterfv","","",null,[[["glint",6],["glenum",6]]]],[5,"GetTexLevelParameteriv","","",null,[[["glint",6],["glenum",6]]]],[5,"GetTexParameterIiv","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES",null,[[["glenum",6]]]],[5,"GetTexParameterIuiv","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES",null,[[["glenum",6]]]],[5,"GetTexParameterfv","","",null,[[["glenum",6]]]],[5,"GetTexParameteriv","","",null,[[["glenum",6]]]],[5,"GetTextureImage","","",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"GetTextureLevelParameterfv","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"GetTextureLevelParameteriv","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"GetTextureParameterIiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetTextureParameterIuiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetTextureParameterfv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetTextureParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetTextureSubImage","","",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT",null,[[["glsizei",6],["gluint",6]]]],[5,"GetTransformFeedbacki64_v","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetTransformFeedbacki_v","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetTransformFeedbackiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetUniformBlockIndex","","",null,[[["gluint",6]],["gluint",6]]],[5,"GetUniformIndices","","",null,[[["glsizei",6],["gluint",6]]]],[5,"GetUniformLocation","","Fallbacks: GetUniformLocationARB",null,[[["gluint",6]],["glint",6]]],[5,"GetUniformSubroutineuiv","","",null,[[["glint",6],["glenum",6]]]],[5,"GetUniformdv","","",null,[[["glint",6],["gluint",6]]]],[5,"GetUniformfv","","Fallbacks: GetUniformfvARB",null,[[["glint",6],["gluint",6]]]],[5,"GetUniformiv","","Fallbacks: GetUniformivARB",null,[[["glint",6],["gluint",6]]]],[5,"GetUniformuiv","","Fallbacks: GetUniformuivEXT",null,[[["glint",6],["gluint",6]]]],[5,"GetVertexArrayIndexed64iv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexArrayIndexediv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexArrayiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribLdv","","Fallbacks: GetVertexAttribLdvEXT",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB, …",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribdv","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV",null,[[["glenum",6],["gluint",6]]]],[5,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV",null,[[["glenum",6],["gluint",6]]]],[5,"GetnColorTable","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnCompressedTexImage","","",null,[[["glsizei",6],["glint",6],["glenum",6]]]],[5,"GetnConvolutionFilter","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnHistogram","","",null,[[["glboolean",6],["glsizei",6],["glenum",6]]]],[5,"GetnMapdv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnMapfv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnMapiv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnMinmax","","",null,[[["glboolean",6],["glsizei",6],["glenum",6]]]],[5,"GetnPixelMapfv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnPixelMapuiv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnPixelMapusv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnPolygonStipple","","",null,[[["glsizei",6]]]],[5,"GetnSeparableFilter","","",null,[[["glsizei",6],["glenum",6]]]],[5,"GetnTexImage","","",null,[[["glsizei",6],["glint",6],["glenum",6]]]],[5,"GetnUniformdv","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"GetnUniformfv","","Fallbacks: GetnUniformfvEXT, GetnUniformfvKHR",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"GetnUniformiv","","Fallbacks: GetnUniformivEXT, GetnUniformivKHR",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"GetnUniformuiv","","Fallbacks: GetnUniformuivKHR",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"Hint","","",null,[[["glenum",6]]]],[5,"InvalidateBufferData","","",null,[[["gluint",6]]]],[5,"InvalidateBufferSubData","","",null,[[["glsizeiptr",6],["glintptr",6],["gluint",6]]]],[5,"InvalidateFramebuffer","","",null,[[["glsizei",6],["glenum",6]]]],[5,"InvalidateNamedFramebufferData","","",null,[[["glsizei",6],["gluint",6]]]],[5,"InvalidateNamedFramebufferSubData","","",null,[[["glint",6],["glsizei",6],["gluint",6]]]],[5,"InvalidateSubFramebuffer","","",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"InvalidateTexImage","","",null,[[["glint",6],["gluint",6]]]],[5,"InvalidateTexSubImage","","",null,[[["glint",6],["glsizei",6],["gluint",6]]]],[5,"IsBuffer","","Fallbacks: IsBufferARB",null,[[["gluint",6]],["glboolean",6]]],[5,"IsEnabled","","",null,[[["glenum",6]],["glboolean",6]]],[5,"IsEnabledi","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, …",null,[[["gluint",6],["glenum",6]],["glboolean",6]]],[5,"IsFramebuffer","","Fallbacks: IsFramebufferEXT",null,[[["gluint",6]],["glboolean",6]]],[5,"IsProgram","","",null,[[["gluint",6]],["glboolean",6]]],[5,"IsProgramPipeline","","",null,[[["gluint",6]],["glboolean",6]]],[5,"IsQuery","","Fallbacks: IsQueryARB",null,[[["gluint",6]],["glboolean",6]]],[5,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT",null,[[["gluint",6]],["glboolean",6]]],[5,"IsSampler","","",null,[[["gluint",6]],["glboolean",6]]],[5,"IsShader","","",null,[[["gluint",6]],["glboolean",6]]],[5,"IsSync","","Fallbacks: IsSyncAPPLE",null,[[["glsync",6]],["glboolean",6]]],[5,"IsTexture","","",null,[[["gluint",6]],["glboolean",6]]],[5,"IsTransformFeedback","","Fallbacks: IsTransformFeedbackNV",null,[[["gluint",6]],["glboolean",6]]],[5,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES",null,[[["gluint",6]],["glboolean",6]]],[5,"LineWidth","","",null,[[["glfloat",6]]]],[5,"LinkProgram","","Fallbacks: LinkProgramARB",null,[[["gluint",6]]]],[5,"LogicOp","","",null,[[["glenum",6]]]],[5,"MapBuffer","","Fallbacks: MapBufferARB, MapBufferOES",null,[[["glenum",6]]]],[5,"MapBufferRange","","Fallbacks: MapBufferRangeEXT",null,[[["glintptr",6],["glenum",6],["glsizeiptr",6],["glbitfield",6]]]],[5,"MapNamedBuffer","","",null,[[["glenum",6],["gluint",6]]]],[5,"MapNamedBufferRange","","",null,[[["glintptr",6],["glsizeiptr",6],["glbitfield",6],["gluint",6]]]],[5,"MemoryBarrier","","Fallbacks: MemoryBarrierEXT",null,[[["glbitfield",6]]]],[5,"MemoryBarrierByRegion","","",null,[[["glbitfield",6]]]],[5,"MinSampleShading","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES",null,[[["glfloat",6]]]],[5,"MultiDrawArrays","","Fallbacks: MultiDrawArraysEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"MultiDrawArraysIndirect","","Fallbacks: MultiDrawArraysIndirectAMD, …",null,[[["glsizei",6],["glenum",6]]]],[5,"MultiDrawElements","","Fallbacks: MultiDrawElementsEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"MultiDrawElementsBaseVertex","","Fallbacks: MultiDrawElementsBaseVertexEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"MultiDrawElementsIndirect","","Fallbacks: MultiDrawElementsIndirectAMD, …",null,[[["glsizei",6],["glenum",6]]]],[5,"MultiTexCoordP1ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"MultiTexCoordP1uiv","","",null,[[["glenum",6]]]],[5,"MultiTexCoordP2ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"MultiTexCoordP2uiv","","",null,[[["glenum",6]]]],[5,"MultiTexCoordP3ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"MultiTexCoordP3uiv","","",null,[[["glenum",6]]]],[5,"MultiTexCoordP4ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"MultiTexCoordP4uiv","","",null,[[["glenum",6]]]],[5,"NamedBufferData","","",null,[[["glsizeiptr",6],["glenum",6],["gluint",6]]]],[5,"NamedBufferStorage","","Fallbacks: NamedBufferStorageEXT",null,[[["glsizeiptr",6],["glbitfield",6],["gluint",6]]]],[5,"NamedBufferSubData","","Fallbacks: NamedBufferSubDataEXT",null,[[["glsizeiptr",6],["glintptr",6],["gluint",6]]]],[5,"NamedFramebufferDrawBuffer","","",null,[[["glenum",6],["gluint",6]]]],[5,"NamedFramebufferDrawBuffers","","",null,[[["glsizei",6],["gluint",6]]]],[5,"NamedFramebufferParameteri","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"NamedFramebufferReadBuffer","","",null,[[["glenum",6],["gluint",6]]]],[5,"NamedFramebufferRenderbuffer","","",null,[[["glenum",6],["gluint",6]]]],[5,"NamedFramebufferTexture","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"NamedFramebufferTextureLayer","","",null,[[["glint",6],["glenum",6],["gluint",6]]]],[5,"NamedRenderbufferStorage","","",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"NamedRenderbufferStorageMultisample","","",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"NormalP3ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"NormalP3uiv","","",null,[[["glenum",6]]]],[5,"ObjectLabel","","Fallbacks: ObjectLabelKHR",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR",null,[[["glsizei",6]]]],[5,"PatchParameterfv","","",null,[[["glenum",6]]]],[5,"PatchParameteri","","Fallbacks: PatchParameteriEXT, PatchParameteriOES",null,[[["glint",6],["glenum",6]]]],[5,"PauseTransformFeedback","","Fallbacks: PauseTransformFeedbackNV",null,[[]]],[5,"PixelStoref","","",null,[[["glfloat",6],["glenum",6]]]],[5,"PixelStorei","","",null,[[["glint",6],["glenum",6]]]],[5,"PointParameterf","","Fallbacks: PointParameterfARB, PointParameterfEXT, …",null,[[["glfloat",6],["glenum",6]]]],[5,"PointParameterfv","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, …",null,[[["glenum",6]]]],[5,"PointParameteri","","Fallbacks: PointParameteriNV",null,[[["glint",6],["glenum",6]]]],[5,"PointParameteriv","","Fallbacks: PointParameterivNV",null,[[["glenum",6]]]],[5,"PointSize","","",null,[[["glfloat",6]]]],[5,"PolygonMode","","Fallbacks: PolygonModeNV",null,[[["glenum",6]]]],[5,"PolygonOffset","","",null,[[["glfloat",6]]]],[5,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR",null,[[]]],[5,"PrimitiveRestartIndex","","",null,[[["gluint",6]]]],[5,"ProgramBinary","","Fallbacks: ProgramBinaryOES",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform1d","","",null,[[["gldouble",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform1dv","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform1f","","Fallbacks: ProgramUniform1fEXT",null,[[["glfloat",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform1fv","","Fallbacks: ProgramUniform1fvEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform1i","","Fallbacks: ProgramUniform1iEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform1iv","","Fallbacks: ProgramUniform1ivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform1ui","","Fallbacks: ProgramUniform1uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform1uiv","","Fallbacks: ProgramUniform1uivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform2d","","",null,[[["glint",6],["gldouble",6],["gluint",6]]]],[5,"ProgramUniform2dv","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform2f","","Fallbacks: ProgramUniform2fEXT",null,[[["glfloat",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform2fv","","Fallbacks: ProgramUniform2fvEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform2i","","Fallbacks: ProgramUniform2iEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform2iv","","Fallbacks: ProgramUniform2ivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform2ui","","Fallbacks: ProgramUniform2uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform2uiv","","Fallbacks: ProgramUniform2uivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform3d","","",null,[[["glint",6],["gldouble",6],["gluint",6]]]],[5,"ProgramUniform3dv","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform3f","","Fallbacks: ProgramUniform3fEXT",null,[[["glfloat",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform3fv","","Fallbacks: ProgramUniform3fvEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform3i","","Fallbacks: ProgramUniform3iEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform3iv","","Fallbacks: ProgramUniform3ivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform3ui","","Fallbacks: ProgramUniform3uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform3uiv","","Fallbacks: ProgramUniform3uivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform4d","","",null,[[["glint",6],["gldouble",6],["gluint",6]]]],[5,"ProgramUniform4dv","","",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform4f","","Fallbacks: ProgramUniform4fEXT",null,[[["glfloat",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform4fv","","Fallbacks: ProgramUniform4fvEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform4i","","Fallbacks: ProgramUniform4iEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform4iv","","Fallbacks: ProgramUniform4ivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniform4ui","","Fallbacks: ProgramUniform4uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"ProgramUniform4uiv","","Fallbacks: ProgramUniform4uivEXT",null,[[["glsizei",6],["glint",6],["gluint",6]]]],[5,"ProgramUniformMatrix2dv","","",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix2fv","","Fallbacks: ProgramUniformMatrix2fvEXT",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix2x3dv","","",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix2x3fv","","Fallbacks: ProgramUniformMatrix2x3fvEXT",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix2x4dv","","",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix2x4fv","","Fallbacks: ProgramUniformMatrix2x4fvEXT",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix3dv","","",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix3fv","","Fallbacks: ProgramUniformMatrix3fvEXT",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix3x2dv","","",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix3x2fv","","Fallbacks: ProgramUniformMatrix3x2fvEXT",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix3x4dv","","",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix3x4fv","","Fallbacks: ProgramUniformMatrix3x4fvEXT",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix4dv","","",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix4fv","","Fallbacks: ProgramUniformMatrix4fvEXT",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix4x2dv","","",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix4x2fv","","Fallbacks: ProgramUniformMatrix4x2fvEXT",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix4x3dv","","",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProgramUniformMatrix4x3fv","","Fallbacks: ProgramUniformMatrix4x3fvEXT",null,[[["glint",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"ProvokingVertex","","Fallbacks: ProvokingVertexEXT",null,[[["glenum",6]]]],[5,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR",null,[[["gluint",6],["glsizei",6],["glenum",6]]]],[5,"QueryCounter","","Fallbacks: QueryCounterEXT",null,[[["glenum",6],["gluint",6]]]],[5,"ReadBuffer","","",null,[[["glenum",6]]]],[5,"ReadPixels","","",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"ReadnPixels","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"ReleaseShaderCompiler","","",null,[[]]],[5,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT, …",null,[[["glsizei",6],["glenum",6]]]],[5,"ResumeTransformFeedback","","Fallbacks: ResumeTransformFeedbackNV",null,[[]]],[5,"SampleCoverage","","Fallbacks: SampleCoverageARB",null,[[["glfloat",6],["glboolean",6]]]],[5,"SampleMaski","","",null,[[["glbitfield",6],["gluint",6]]]],[5,"SamplerParameterIiv","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES",null,[[["glenum",6],["gluint",6]]]],[5,"SamplerParameterIuiv","","Fallbacks: SamplerParameterIuivEXT, …",null,[[["glenum",6],["gluint",6]]]],[5,"SamplerParameterf","","",null,[[["glenum",6],["glfloat",6],["gluint",6]]]],[5,"SamplerParameterfv","","",null,[[["glenum",6],["gluint",6]]]],[5,"SamplerParameteri","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"SamplerParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"Scissor","","",null,[[["glsizei",6],["glint",6]]]],[5,"ScissorArrayv","","Fallbacks: ScissorArrayvNV, ScissorArrayvOES",null,[[["glsizei",6],["gluint",6]]]],[5,"ScissorIndexed","","Fallbacks: ScissorIndexedNV, ScissorIndexedOES",null,[[["glint",6],["glsizei",6],["gluint",6]]]],[5,"ScissorIndexedv","","Fallbacks: ScissorIndexedvNV, ScissorIndexedvOES",null,[[["gluint",6]]]],[5,"SecondaryColorP3ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"SecondaryColorP3uiv","","",null,[[["glenum",6]]]],[5,"ShaderBinary","","",null,[[["glsizei",6],["glenum",6]]]],[5,"ShaderSource","","Fallbacks: ShaderSourceARB",null,[[["glsizei",6],["gluint",6]]]],[5,"ShaderStorageBlockBinding","","",null,[[["gluint",6]]]],[5,"StencilFunc","","",null,[[["gluint",6],["glint",6],["glenum",6]]]],[5,"StencilFuncSeparate","","",null,[[["gluint",6],["glint",6],["glenum",6]]]],[5,"StencilMask","","",null,[[["gluint",6]]]],[5,"StencilMaskSeparate","","",null,[[["gluint",6],["glenum",6]]]],[5,"StencilOp","","",null,[[["glenum",6]]]],[5,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI",null,[[["glenum",6]]]],[5,"TexBuffer","","Fallbacks: TexBufferARB, TexBufferEXT, TexBufferOES",null,[[["gluint",6],["glenum",6]]]],[5,"TexBufferRange","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES",null,[[["glintptr",6],["glenum",6],["glsizeiptr",6],["gluint",6]]]],[5,"TexCoordP1ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"TexCoordP1uiv","","",null,[[["glenum",6]]]],[5,"TexCoordP2ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"TexCoordP2uiv","","",null,[[["glenum",6]]]],[5,"TexCoordP3ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"TexCoordP3uiv","","",null,[[["glenum",6]]]],[5,"TexCoordP4ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"TexCoordP4uiv","","",null,[[["glenum",6]]]],[5,"TexImage1D","","",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"TexImage2D","","",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"TexImage2DMultisample","","",null,[[["glboolean",6],["glsizei",6],["glenum",6]]]],[5,"TexImage3D","","Fallbacks: TexImage3DEXT",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"TexImage3DMultisample","","",null,[[["glboolean",6],["glsizei",6],["glenum",6]]]],[5,"TexParameterIiv","","Fallbacks: TexParameterIivEXT, TexParameterIivOES",null,[[["glenum",6]]]],[5,"TexParameterIuiv","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES",null,[[["glenum",6]]]],[5,"TexParameterf","","",null,[[["glfloat",6],["glenum",6]]]],[5,"TexParameterfv","","",null,[[["glenum",6]]]],[5,"TexParameteri","","",null,[[["glint",6],["glenum",6]]]],[5,"TexParameteriv","","",null,[[["glenum",6]]]],[5,"TexStorage1D","","Fallbacks: TexStorage1DEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"TexStorage2D","","Fallbacks: TexStorage2DEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"TexStorage2DMultisample","","",null,[[["glboolean",6],["glsizei",6],["glenum",6]]]],[5,"TexStorage3D","","Fallbacks: TexStorage3DEXT",null,[[["glsizei",6],["glenum",6]]]],[5,"TexStorage3DMultisample","","Fallbacks: TexStorage3DMultisampleOES",null,[[["glboolean",6],["glsizei",6],["glenum",6]]]],[5,"TexSubImage1D","","Fallbacks: TexSubImage1DEXT",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT",null,[[["glint",6],["glenum",6],["glsizei",6]]]],[5,"TextureBarrier","","",null,[[]]],[5,"TextureBuffer","","",null,[[["glenum",6],["gluint",6]]]],[5,"TextureBufferRange","","",null,[[["glintptr",6],["glenum",6],["glsizeiptr",6],["gluint",6]]]],[5,"TextureParameterIiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"TextureParameterIuiv","","",null,[[["glenum",6],["gluint",6]]]],[5,"TextureParameterf","","",null,[[["glenum",6],["glfloat",6],["gluint",6]]]],[5,"TextureParameterfv","","",null,[[["glenum",6],["gluint",6]]]],[5,"TextureParameteri","","",null,[[["glenum",6],["glint",6],["gluint",6]]]],[5,"TextureParameteriv","","",null,[[["glenum",6],["gluint",6]]]],[5,"TextureStorage1D","","",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"TextureStorage2D","","",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"TextureStorage2DMultisample","","",null,[[["glenum",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"TextureStorage3D","","",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"TextureStorage3DMultisample","","",null,[[["glenum",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"TextureSubImage1D","","",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"TextureSubImage2D","","",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"TextureSubImage3D","","",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"TextureView","","Fallbacks: TextureViewEXT, TextureViewOES",null,[[["glenum",6],["gluint",6]]]],[5,"TransformFeedbackBufferBase","","",null,[[["gluint",6]]]],[5,"TransformFeedbackBufferRange","","",null,[[["glsizeiptr",6],["glintptr",6],["gluint",6]]]],[5,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT",null,[[["glenum",6],["glsizei",6],["gluint",6]]]],[5,"Uniform1d","","",null,[[["glint",6],["gldouble",6]]]],[5,"Uniform1dv","","",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform1f","","Fallbacks: Uniform1fARB",null,[[["glint",6],["glfloat",6]]]],[5,"Uniform1fv","","Fallbacks: Uniform1fvARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform1i","","Fallbacks: Uniform1iARB",null,[[["glint",6]]]],[5,"Uniform1iv","","Fallbacks: Uniform1ivARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform1ui","","Fallbacks: Uniform1uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"Uniform1uiv","","Fallbacks: Uniform1uivEXT",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform2d","","",null,[[["glint",6],["gldouble",6]]]],[5,"Uniform2dv","","",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform2f","","Fallbacks: Uniform2fARB",null,[[["glint",6],["glfloat",6]]]],[5,"Uniform2fv","","Fallbacks: Uniform2fvARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform2i","","Fallbacks: Uniform2iARB",null,[[["glint",6]]]],[5,"Uniform2iv","","Fallbacks: Uniform2ivARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform2ui","","Fallbacks: Uniform2uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"Uniform2uiv","","Fallbacks: Uniform2uivEXT",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform3d","","",null,[[["glint",6],["gldouble",6]]]],[5,"Uniform3dv","","",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform3f","","Fallbacks: Uniform3fARB",null,[[["glint",6],["glfloat",6]]]],[5,"Uniform3fv","","Fallbacks: Uniform3fvARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform3i","","Fallbacks: Uniform3iARB",null,[[["glint",6]]]],[5,"Uniform3iv","","Fallbacks: Uniform3ivARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform3ui","","Fallbacks: Uniform3uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"Uniform3uiv","","Fallbacks: Uniform3uivEXT",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform4d","","",null,[[["glint",6],["gldouble",6]]]],[5,"Uniform4dv","","",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform4f","","Fallbacks: Uniform4fARB",null,[[["glint",6],["glfloat",6]]]],[5,"Uniform4fv","","Fallbacks: Uniform4fvARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform4i","","Fallbacks: Uniform4iARB",null,[[["glint",6]]]],[5,"Uniform4iv","","Fallbacks: Uniform4ivARB",null,[[["glsizei",6],["glint",6]]]],[5,"Uniform4ui","","Fallbacks: Uniform4uiEXT",null,[[["glint",6],["gluint",6]]]],[5,"Uniform4uiv","","Fallbacks: Uniform4uivEXT",null,[[["glsizei",6],["glint",6]]]],[5,"UniformBlockBinding","","",null,[[["gluint",6]]]],[5,"UniformMatrix2dv","","",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix2x3dv","","",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix2x4dv","","",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix3dv","","",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix3x2dv","","",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix3x4dv","","",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix4dv","","",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix4x2dv","","",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix4x3dv","","",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV",null,[[["glsizei",6],["glint",6],["glboolean",6]]]],[5,"UniformSubroutinesuiv","","",null,[[["glsizei",6],["glenum",6]]]],[5,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES",null,[[["glenum",6]],["glboolean",6]]],[5,"UnmapNamedBuffer","","",null,[[["gluint",6]],["glboolean",6]]],[5,"UseProgram","","Fallbacks: UseProgramObjectARB",null,[[["gluint",6]]]],[5,"UseProgramStages","","",null,[[["glbitfield",6],["gluint",6]]]],[5,"ValidateProgram","","Fallbacks: ValidateProgramARB",null,[[["gluint",6]]]],[5,"ValidateProgramPipeline","","",null,[[["gluint",6]]]],[5,"VertexArrayAttribBinding","","",null,[[["gluint",6]]]],[5,"VertexArrayAttribFormat","","",null,[[["glint",6],["glenum",6],["glboolean",6],["gluint",6]]]],[5,"VertexArrayAttribIFormat","","",null,[[["glint",6],["glenum",6],["gluint",6]]]],[5,"VertexArrayAttribLFormat","","",null,[[["glint",6],["glenum",6],["gluint",6]]]],[5,"VertexArrayBindingDivisor","","",null,[[["gluint",6]]]],[5,"VertexArrayElementBuffer","","",null,[[["gluint",6]]]],[5,"VertexArrayVertexBuffer","","",null,[[["glsizei",6],["glintptr",6],["gluint",6]]]],[5,"VertexArrayVertexBuffers","","",null,[[["glsizei",6],["gluint",6]]]],[5,"VertexAttrib1d","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttrib1dv","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV",null,[[["gluint",6]]]],[5,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV",null,[[["glfloat",6],["gluint",6]]]],[5,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV",null,[[["gluint",6]]]],[5,"VertexAttrib1s","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV",null,[[["glshort",6],["gluint",6]]]],[5,"VertexAttrib1sv","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV",null,[[["gluint",6]]]],[5,"VertexAttrib2d","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttrib2dv","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV",null,[[["gluint",6]]]],[5,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV",null,[[["glfloat",6],["gluint",6]]]],[5,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV",null,[[["gluint",6]]]],[5,"VertexAttrib2s","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV",null,[[["glshort",6],["gluint",6]]]],[5,"VertexAttrib2sv","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV",null,[[["gluint",6]]]],[5,"VertexAttrib3d","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttrib3dv","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV",null,[[["gluint",6]]]],[5,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV",null,[[["glfloat",6],["gluint",6]]]],[5,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV",null,[[["gluint",6]]]],[5,"VertexAttrib3s","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV",null,[[["glshort",6],["gluint",6]]]],[5,"VertexAttrib3sv","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV",null,[[["gluint",6]]]],[5,"VertexAttrib4Nbv","","Fallbacks: VertexAttrib4NbvARB",null,[[["gluint",6]]]],[5,"VertexAttrib4Niv","","Fallbacks: VertexAttrib4NivARB",null,[[["gluint",6]]]],[5,"VertexAttrib4Nsv","","Fallbacks: VertexAttrib4NsvARB",null,[[["gluint",6]]]],[5,"VertexAttrib4Nub","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV",null,[[["glubyte",6],["gluint",6]]]],[5,"VertexAttrib4Nubv","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV",null,[[["gluint",6]]]],[5,"VertexAttrib4Nuiv","","Fallbacks: VertexAttrib4NuivARB",null,[[["gluint",6]]]],[5,"VertexAttrib4Nusv","","Fallbacks: VertexAttrib4NusvARB",null,[[["gluint",6]]]],[5,"VertexAttrib4bv","","Fallbacks: VertexAttrib4bvARB",null,[[["gluint",6]]]],[5,"VertexAttrib4d","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttrib4dv","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV",null,[[["gluint",6]]]],[5,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV",null,[[["glfloat",6],["gluint",6]]]],[5,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV",null,[[["gluint",6]]]],[5,"VertexAttrib4iv","","Fallbacks: VertexAttrib4ivARB",null,[[["gluint",6]]]],[5,"VertexAttrib4s","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV",null,[[["glshort",6],["gluint",6]]]],[5,"VertexAttrib4sv","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV",null,[[["gluint",6]]]],[5,"VertexAttrib4ubv","","Fallbacks: VertexAttrib4ubvARB",null,[[["gluint",6]]]],[5,"VertexAttrib4uiv","","Fallbacks: VertexAttrib4uivARB",null,[[["gluint",6]]]],[5,"VertexAttrib4usv","","Fallbacks: VertexAttrib4usvARB",null,[[["gluint",6]]]],[5,"VertexAttribBinding","","",null,[[["gluint",6]]]],[5,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE, …",null,[[["gluint",6]]]],[5,"VertexAttribFormat","","",null,[[["glint",6],["glenum",6],["glboolean",6],["gluint",6]]]],[5,"VertexAttribI1i","","Fallbacks: VertexAttribI1iEXT",null,[[["glint",6],["gluint",6]]]],[5,"VertexAttribI1iv","","Fallbacks: VertexAttribI1ivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI1ui","","Fallbacks: VertexAttribI1uiEXT",null,[[["gluint",6]]]],[5,"VertexAttribI1uiv","","Fallbacks: VertexAttribI1uivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI2i","","Fallbacks: VertexAttribI2iEXT",null,[[["glint",6],["gluint",6]]]],[5,"VertexAttribI2iv","","Fallbacks: VertexAttribI2ivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI2ui","","Fallbacks: VertexAttribI2uiEXT",null,[[["gluint",6]]]],[5,"VertexAttribI2uiv","","Fallbacks: VertexAttribI2uivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI3i","","Fallbacks: VertexAttribI3iEXT",null,[[["glint",6],["gluint",6]]]],[5,"VertexAttribI3iv","","Fallbacks: VertexAttribI3ivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI3ui","","Fallbacks: VertexAttribI3uiEXT",null,[[["gluint",6]]]],[5,"VertexAttribI3uiv","","Fallbacks: VertexAttribI3uivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4bv","","Fallbacks: VertexAttribI4bvEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT",null,[[["glint",6],["gluint",6]]]],[5,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4sv","","Fallbacks: VertexAttribI4svEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4ubv","","Fallbacks: VertexAttribI4ubvEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT",null,[[["gluint",6]]]],[5,"VertexAttribI4usv","","Fallbacks: VertexAttribI4usvEXT",null,[[["gluint",6]]]],[5,"VertexAttribIFormat","","",null,[[["glint",6],["glenum",6],["gluint",6]]]],[5,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"VertexAttribL1d","","Fallbacks: VertexAttribL1dEXT",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttribL1dv","","Fallbacks: VertexAttribL1dvEXT",null,[[["gluint",6]]]],[5,"VertexAttribL2d","","Fallbacks: VertexAttribL2dEXT",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttribL2dv","","Fallbacks: VertexAttribL2dvEXT",null,[[["gluint",6]]]],[5,"VertexAttribL3d","","Fallbacks: VertexAttribL3dEXT",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttribL3dv","","Fallbacks: VertexAttribL3dvEXT",null,[[["gluint",6]]]],[5,"VertexAttribL4d","","Fallbacks: VertexAttribL4dEXT",null,[[["gldouble",6],["gluint",6]]]],[5,"VertexAttribL4dv","","Fallbacks: VertexAttribL4dvEXT",null,[[["gluint",6]]]],[5,"VertexAttribLFormat","","",null,[[["glint",6],["glenum",6],["gluint",6]]]],[5,"VertexAttribLPointer","","Fallbacks: VertexAttribLPointerEXT",null,[[["glint",6],["glenum",6],["glsizei",6],["gluint",6]]]],[5,"VertexAttribP1ui","","",null,[[["glenum",6],["glboolean",6],["gluint",6]]]],[5,"VertexAttribP1uiv","","",null,[[["glenum",6],["glboolean",6],["gluint",6]]]],[5,"VertexAttribP2ui","","",null,[[["glenum",6],["glboolean",6],["gluint",6]]]],[5,"VertexAttribP2uiv","","",null,[[["glenum",6],["glboolean",6],["gluint",6]]]],[5,"VertexAttribP3ui","","",null,[[["glenum",6],["glboolean",6],["gluint",6]]]],[5,"VertexAttribP3uiv","","",null,[[["glenum",6],["glboolean",6],["gluint",6]]]],[5,"VertexAttribP4ui","","",null,[[["glenum",6],["glboolean",6],["gluint",6]]]],[5,"VertexAttribP4uiv","","",null,[[["glenum",6],["glboolean",6],["gluint",6]]]],[5,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB",null,[[["glint",6],["glenum",6],["glboolean",6],["glsizei",6],["gluint",6]]]],[5,"VertexBindingDivisor","","",null,[[["gluint",6]]]],[5,"VertexP2ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"VertexP2uiv","","",null,[[["glenum",6]]]],[5,"VertexP3ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"VertexP3uiv","","",null,[[["glenum",6]]]],[5,"VertexP4ui","","",null,[[["gluint",6],["glenum",6]]]],[5,"VertexP4uiv","","",null,[[["glenum",6]]]],[5,"Viewport","","",null,[[["glsizei",6],["glint",6]]]],[5,"ViewportArrayv","","Fallbacks: ViewportArrayvNV, ViewportArrayvOES",null,[[["glsizei",6],["gluint",6]]]],[5,"ViewportIndexedf","","Fallbacks: ViewportIndexedfOES, ViewportIndexedfNV",null,[[["glfloat",6],["gluint",6]]]],[5,"ViewportIndexedfv","","Fallbacks: ViewportIndexedfvOES, ViewportIndexedfvNV",null,[[["gluint",6]]]],[5,"WaitSync","","Fallbacks: WaitSyncAPPLE",null,[[["gluint64",6],["glsync",6],["glbitfield",6]]]],[3,"FnPtr","","",null,null],[11,"new","","Creates a <code>FnPtr</code> from a load attempt.",0,[[],["fnptr",3]]],[5,"load_with","","Load each OpenGL symbol using a custom load function. …",null,[[]]],[11,"from","gl::types","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","gl","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"FnPtr"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"]]},\
"glutin":{"doc":"The purpose of this library is to provide an OpenGL …","i":[[0,"platform","glutin","Contains traits with platform-specific methods in them.",null,null],[0,"macos","glutin::platform","Platform-specific methods for macOS.",null,null],[8,"WindowExtMacOS","glutin::platform::macos","Additional methods on <code>Window</code> that are specific to MacOS.",null,null],[10,"ns_window","","Returns a pointer to the cocoa <code>NSWindow</code> that is used by …",0,[[]]],[10,"ns_view","","Returns a pointer to the cocoa <code>NSView</code> that is used by …",0,[[]]],[10,"simple_fullscreen","","Returns whether or not the window is in simple fullscreen …",0,[[],["bool",15]]],[10,"set_simple_fullscreen","","Toggles a fullscreen mode that doesn\'t require a new …",0,[[["bool",15]],["bool",15]]],[10,"has_shadow","","Returns whether or not the window has shadow.",0,[[],["bool",15]]],[10,"set_has_shadow","","Sets whether or not the window has shadow.",0,[[["bool",15]]]],[4,"ActivationPolicy","","Corresponds to <code>NSApplicationActivationPolicy</code>.",null,null],[13,"Regular","","Corresponds to <code>NSApplicationActivationPolicyRegular</code>.",1,null],[13,"Accessory","","Corresponds to <code>NSApplicationActivationPolicyAccessory</code>.",1,null],[13,"Prohibited","","Corresponds to <code>NSApplicationActivationPolicyProhibited</code>.",1,null],[8,"WindowBuilderExtMacOS","","Additional methods on <code>WindowBuilder</code> that are specific to …",null,null],[10,"with_activation_policy","","Sets the activation policy for the window being built.",2,[[["activationpolicy",4]],["windowbuilder",3]]],[10,"with_movable_by_window_background","","Enables click-and-drag behavior for the entire window, …",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_titlebar_transparent","","Makes the titlebar transparent and allows the content to …",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_title_hidden","","Hides the window title.",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_titlebar_hidden","","Hides the window titlebar.",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_titlebar_buttons_hidden","","Hides the window titlebar buttons.",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_fullsize_content_view","","Makes the window content appear behind the titlebar.",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_resize_increments","","Build window with <code>resizeIncrements</code> property. Values must …",2,[[["logicalsize",3],["f64",15]],["windowbuilder",3]]],[10,"with_disallow_hidpi","","",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_has_shadow","","",2,[[["bool",15]],["windowbuilder",3]]],[8,"MonitorHandleExtMacOS","","Additional methods on <code>MonitorHandle</code> that are specific to …",null,null],[10,"native_id","","Returns the identifier of the monitor for Cocoa.",3,[[],["u32",15]]],[10,"ns_screen","","Returns a pointer to the NSScreen representing this …",3,[[],["option",4]]],[8,"EventLoopWindowTargetExtMacOS","","Additional methods on <code>EventLoopWindowTarget</code> that are …",null,null],[10,"hide_application","","Hide the entire application. In most applications this is …",4,[[]]],[10,"hide_other_applications","","Hide the other applications. In most applications this is …",4,[[]]],[0,"run_return","glutin::platform","Platform-specific methods for event loops independent …",null,null],[8,"EventLoopExtRunReturn","glutin::platform::run_return","Additional methods on <code>EventLoop</code> to return control flow to …",null,null],[16,"UserEvent","","A type provided by the user that can be passed through …",5,null],[10,"run_return","","Initializes the <code>winit</code> event loop.",5,[[]]],[8,"ContextTraitExt","glutin::platform","Platform-specific extensions for OpenGL <code>Context</code>s.",null,null],[16,"Handle","","Raw context handle.",6,null],[10,"raw_handle","","Returns the raw context handle.",6,[[]]],[10,"get_egl_display","","Returns a pointer to the <code>EGLDisplay</code> object of EGL that is …",6,[[],["option",4]]],[3,"Context","glutin","Represents an OpenGL <code>Context</code>.",null,null],[3,"PossiblyCurrent","","A type that <code>Context</code>s which might possibly be currently …",null,null],[4,"NotCurrent","","A type that <code>Context</code>s which are not currently current on …",null,null],[8,"ContextCurrentState","","A trait implemented on both <code>NotCurrent</code> and <code>PossiblyCurrent</code>…",null,null],[6,"WindowedContext","","Represents an OpenGL <code>Context</code> and the <code>Window</code> with which it …",null,null],[6,"RawContext","","Represents an OpenGL <code>Context</code> which has an underlying …",null,null],[3,"ContextWrapper","","A context which has an underlying window, which may or …",null,null],[0,"dpi","","UI scaling is important, so read the docs for this module …",null,null],[8,"Pixel","glutin::dpi","",null,null],[10,"from_f64","","",7,[[["f64",15]]]],[11,"cast","","",7,[[]]],[5,"validate_scale_factor","","Checks that the scale factor is a normal positive <code>f64</code>.",null,[[["f64",15]],["bool",15]]],[3,"LogicalPosition","","A position represented in logical pixels.",null,null],[12,"x","","",8,null],[12,"y","","",8,null],[3,"PhysicalPosition","","A position represented in physical pixels.",null,null],[12,"x","","",9,null],[12,"y","","",9,null],[3,"LogicalSize","","A size represented in logical pixels.",null,null],[12,"width","","",10,null],[12,"height","","",10,null],[3,"PhysicalSize","","A size represented in physical pixels.",null,null],[12,"width","","",11,null],[12,"height","","",11,null],[4,"Size","","A size that\'s either physical or logical.",null,null],[13,"Physical","","",12,null],[13,"Logical","","",12,null],[4,"Position","","A position that\'s either physical or logical.",null,null],[13,"Physical","","",13,null],[13,"Logical","","",13,null],[0,"error","glutin","",null,null],[4,"ExternalError","glutin::error","An error whose cause it outside Winit\'s control.",null,null],[13,"NotSupported","","The operation is not supported by the backend.",14,null],[13,"Os","","The OS cannot perform the operation.",14,null],[3,"NotSupportedError","","The error type for when the requested operation is not …",null,null],[3,"OsError","","The error type for when the OS cannot perform the …",null,null],[0,"event","glutin","The <code>Event</code> enum and assorted supporting types.",null,null],[4,"Event","glutin::event","Describes a generic event.",null,null],[13,"NewEvents","","Emitted when new events arrive from the OS to be …",15,null],[13,"WindowEvent","","Emitted when the OS sends an event to a winit window.",15,null],[12,"window_id","glutin::event::Event","",16,null],[12,"event","","",16,null],[13,"DeviceEvent","glutin::event","Emitted when the OS sends an event to a device.",15,null],[12,"device_id","glutin::event::Event","",17,null],[12,"event","","",17,null],[13,"UserEvent","glutin::event","Emitted when an event is sent from …",15,null],[13,"Suspended","","Emitted when the application has been suspended.",15,null],[13,"Resumed","","Emitted when the application has been resumed.",15,null],[13,"MainEventsCleared","","Emitted when all of the event loop\'s input events have …",15,null],[13,"RedrawRequested","","Emitted after <code>MainEventsCleared</code> when a window should be …",15,null],[13,"RedrawEventsCleared","","Emitted after all <code>RedrawRequested</code> events have been …",15,null],[13,"LoopDestroyed","","Emitted when the event loop is being shut down.",15,null],[4,"StartCause","","Describes the reason the event loop is resuming.",null,null],[13,"ResumeTimeReached","","Sent if the time specified by <code>ControlFlow::WaitUntil</code> has …",18,null],[12,"start","glutin::event::StartCause","",19,null],[12,"requested_resume","","",19,null],[13,"WaitCancelled","glutin::event","Sent if the OS has new events to send to the window, …",18,null],[12,"start","glutin::event::StartCause","",20,null],[12,"requested_resume","","",20,null],[13,"Poll","glutin::event","Sent if the event loop is being resumed after the loop\'s …",18,null],[13,"Init","","Sent once, immediately after <code>run</code> is called. Indicates …",18,null],[4,"WindowEvent","","Describes an event from a <code>Window</code>.",null,null],[13,"Resized","","The size of the window has changed. Contains the client …",21,null],[13,"Moved","","The position of the window has changed. Contains the …",21,null],[13,"CloseRequested","","The window has been requested to close.",21,null],[13,"Destroyed","","The window has been destroyed.",21,null],[13,"DroppedFile","","A file has been dropped into the window.",21,null],[13,"HoveredFile","","A file is being hovered over the window.",21,null],[13,"HoveredFileCancelled","","A file was hovered, but has exited the window.",21,null],[13,"ReceivedCharacter","","The window received a unicode character.",21,null],[13,"Focused","","The window gained or lost focus.",21,null],[13,"KeyboardInput","","An event from the keyboard has been received.",21,null],[12,"device_id","glutin::event::WindowEvent","",22,null],[12,"input","","",22,null],[12,"is_synthetic","","If <code>true</code>, the event was generated synthetically by winit …",22,null],[13,"ModifiersChanged","glutin::event","The keyboard modifiers have changed.",21,null],[13,"CursorMoved","","The cursor has moved on the window.",21,null],[12,"device_id","glutin::event::WindowEvent","",23,null],[12,"position","","(x,y) coords in pixels relative to the top-left corner of …",23,null],[12,"modifiers","","",23,null],[13,"CursorEntered","glutin::event","The cursor has entered the window.",21,null],[12,"device_id","glutin::event::WindowEvent","",24,null],[13,"CursorLeft","glutin::event","The cursor has left the window.",21,null],[12,"device_id","glutin::event::WindowEvent","",25,null],[13,"MouseWheel","glutin::event","A mouse wheel movement or touchpad scroll occurred.",21,null],[12,"device_id","glutin::event::WindowEvent","",26,null],[12,"delta","","",26,null],[12,"phase","","",26,null],[12,"modifiers","","",26,null],[13,"MouseInput","glutin::event","An mouse button press has been received.",21,null],[12,"device_id","glutin::event::WindowEvent","",27,null],[12,"state","","",27,null],[12,"button","","",27,null],[12,"modifiers","","",27,null],[13,"TouchpadPressure","glutin::event","Touchpad pressure event.",21,null],[12,"device_id","glutin::event::WindowEvent","",28,null],[12,"pressure","","",28,null],[12,"stage","","",28,null],[13,"AxisMotion","glutin::event","Motion on some analog axis. May report data redundant to …",21,null],[12,"device_id","glutin::event::WindowEvent","",29,null],[12,"axis","","",29,null],[12,"value","","",29,null],[13,"Touch","glutin::event","Touch event has been received",21,null],[13,"ScaleFactorChanged","","The window\'s scale factor has changed.",21,null],[12,"scale_factor","glutin::event::WindowEvent","",30,null],[12,"new_inner_size","","",30,null],[13,"ThemeChanged","glutin::event","The system window theme has changed.",21,null],[3,"DeviceId","","Identifier of an input device.",null,null],[4,"DeviceEvent","","Represents raw hardware events that are not associated …",null,null],[13,"Added","","",31,null],[13,"Removed","","",31,null],[13,"MouseMotion","","Change in physical position of a pointing device.",31,null],[12,"delta","glutin::event::DeviceEvent","(x, y) change in position in unspecified units.",32,null],[13,"MouseWheel","glutin::event","Physical scroll event",31,null],[12,"delta","glutin::event::DeviceEvent","",33,null],[13,"Motion","glutin::event","Motion on some analog axis.  This event will be reported …",31,null],[12,"axis","glutin::event::DeviceEvent","",34,null],[12,"value","","",34,null],[13,"Button","glutin::event","",31,null],[12,"button","glutin::event::DeviceEvent","",35,null],[12,"state","","",35,null],[13,"Key","glutin::event","",31,null],[13,"Text","","",31,null],[12,"codepoint","glutin::event::DeviceEvent","",36,null],[3,"KeyboardInput","glutin::event","Describes a keyboard input event.",null,null],[12,"scancode","","Identifies the physical key pressed",37,null],[12,"state","","",37,null],[12,"virtual_keycode","","Identifies the semantic meaning of the key",37,null],[12,"modifiers","","Modifier keys active at the time of this input.",37,null],[4,"TouchPhase","","Describes touch-screen input state.",null,null],[13,"Started","","",38,null],[13,"Moved","","",38,null],[13,"Ended","","",38,null],[13,"Cancelled","","",38,null],[3,"Touch","","Represents a touch event",null,null],[12,"device_id","","",39,null],[12,"phase","","",39,null],[12,"location","","",39,null],[12,"force","","Describes how hard the screen was pressed. May be <code>None</code> if …",39,null],[12,"id","","Unique identifier of a finger.",39,null],[4,"Force","","Describes the force of a touch event",null,null],[13,"Calibrated","","On iOS, the force is calibrated so that the same number …",40,null],[12,"force","glutin::event::Force","The force of the touch, where a value of 1.0 represents …",41,null],[12,"max_possible_force","","The maximum possible force for a touch.",41,null],[12,"altitude_angle","","The altitude (in radians) of the stylus.",41,null],[13,"Normalized","glutin::event","If the platform reports the force as normalized, we have …",40,null],[6,"ScanCode","","Hardware-dependent keyboard scan code.",null,null],[6,"AxisId","","Identifier for a specific analog axis on some device.",null,null],[6,"ButtonId","","Identifier for a specific button on some device.",null,null],[4,"ElementState","","Describes the input state of a key.",null,null],[13,"Pressed","","",42,null],[13,"Released","","",42,null],[4,"MouseButton","","Describes a button of a mouse controller.",null,null],[13,"Left","","",43,null],[13,"Right","","",43,null],[13,"Middle","","",43,null],[13,"Other","","",43,null],[4,"MouseScrollDelta","","Describes a difference in the mouse scroll wheel state.",null,null],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal and …",44,null],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and vertical …",44,null],[4,"VirtualKeyCode","","Symbolic name for a keyboard key.",null,null],[13,"Key1","","The \'1\' key over the letters.",45,null],[13,"Key2","","The \'2\' key over the letters.",45,null],[13,"Key3","","The \'3\' key over the letters.",45,null],[13,"Key4","","The \'4\' key over the letters.",45,null],[13,"Key5","","The \'5\' key over the letters.",45,null],[13,"Key6","","The \'6\' key over the letters.",45,null],[13,"Key7","","The \'7\' key over the letters.",45,null],[13,"Key8","","The \'8\' key over the letters.",45,null],[13,"Key9","","The \'9\' key over the letters.",45,null],[13,"Key0","","The \'0\' key over the \'O\' and \'P\' keys.",45,null],[13,"A","","",45,null],[13,"B","","",45,null],[13,"C","","",45,null],[13,"D","","",45,null],[13,"E","","",45,null],[13,"F","","",45,null],[13,"G","","",45,null],[13,"H","","",45,null],[13,"I","","",45,null],[13,"J","","",45,null],[13,"K","","",45,null],[13,"L","","",45,null],[13,"M","","",45,null],[13,"N","","",45,null],[13,"O","","",45,null],[13,"P","","",45,null],[13,"Q","","",45,null],[13,"R","","",45,null],[13,"S","","",45,null],[13,"T","","",45,null],[13,"U","","",45,null],[13,"V","","",45,null],[13,"W","","",45,null],[13,"X","","",45,null],[13,"Y","","",45,null],[13,"Z","","",45,null],[13,"Escape","","The Escape key, next to F1.",45,null],[13,"F1","","",45,null],[13,"F2","","",45,null],[13,"F3","","",45,null],[13,"F4","","",45,null],[13,"F5","","",45,null],[13,"F6","","",45,null],[13,"F7","","",45,null],[13,"F8","","",45,null],[13,"F9","","",45,null],[13,"F10","","",45,null],[13,"F11","","",45,null],[13,"F12","","",45,null],[13,"F13","","",45,null],[13,"F14","","",45,null],[13,"F15","","",45,null],[13,"F16","","",45,null],[13,"F17","","",45,null],[13,"F18","","",45,null],[13,"F19","","",45,null],[13,"F20","","",45,null],[13,"F21","","",45,null],[13,"F22","","",45,null],[13,"F23","","",45,null],[13,"F24","","",45,null],[13,"Snapshot","","Print Screen/SysRq.",45,null],[13,"Scroll","","Scroll Lock.",45,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",45,null],[13,"Insert","","<code>Insert</code>, next to Backspace.",45,null],[13,"Home","","",45,null],[13,"Delete","","",45,null],[13,"End","","",45,null],[13,"PageDown","","",45,null],[13,"PageUp","","",45,null],[13,"Left","","",45,null],[13,"Up","","",45,null],[13,"Right","","",45,null],[13,"Down","","",45,null],[13,"Back","","The Backspace key, right over Enter.",45,null],[13,"Return","","The Enter key.",45,null],[13,"Space","","The space bar.",45,null],[13,"Compose","","The \\\"Compose\\\" key on Linux.",45,null],[13,"Caret","","",45,null],[13,"Numlock","","",45,null],[13,"Numpad0","","",45,null],[13,"Numpad1","","",45,null],[13,"Numpad2","","",45,null],[13,"Numpad3","","",45,null],[13,"Numpad4","","",45,null],[13,"Numpad5","","",45,null],[13,"Numpad6","","",45,null],[13,"Numpad7","","",45,null],[13,"Numpad8","","",45,null],[13,"Numpad9","","",45,null],[13,"NumpadAdd","","",45,null],[13,"NumpadDivide","","",45,null],[13,"NumpadDecimal","","",45,null],[13,"NumpadComma","","",45,null],[13,"NumpadEnter","","",45,null],[13,"NumpadEquals","","",45,null],[13,"NumpadMultiply","","",45,null],[13,"NumpadSubtract","","",45,null],[13,"AbntC1","","",45,null],[13,"AbntC2","","",45,null],[13,"Apostrophe","","",45,null],[13,"Apps","","",45,null],[13,"Asterisk","","",45,null],[13,"At","","",45,null],[13,"Ax","","",45,null],[13,"Backslash","","",45,null],[13,"Calculator","","",45,null],[13,"Capital","","",45,null],[13,"Colon","","",45,null],[13,"Comma","","",45,null],[13,"Convert","","",45,null],[13,"Equals","","",45,null],[13,"Grave","","",45,null],[13,"Kana","","",45,null],[13,"Kanji","","",45,null],[13,"LAlt","","",45,null],[13,"LBracket","","",45,null],[13,"LControl","","",45,null],[13,"LShift","","",45,null],[13,"LWin","","",45,null],[13,"Mail","","",45,null],[13,"MediaSelect","","",45,null],[13,"MediaStop","","",45,null],[13,"Minus","","",45,null],[13,"Mute","","",45,null],[13,"MyComputer","","",45,null],[13,"NavigateForward","","",45,null],[13,"NavigateBackward","","",45,null],[13,"NextTrack","","",45,null],[13,"NoConvert","","",45,null],[13,"OEM102","","",45,null],[13,"Period","","",45,null],[13,"PlayPause","","",45,null],[13,"Plus","","",45,null],[13,"Power","","",45,null],[13,"PrevTrack","","",45,null],[13,"RAlt","","",45,null],[13,"RBracket","","",45,null],[13,"RControl","","",45,null],[13,"RShift","","",45,null],[13,"RWin","","",45,null],[13,"Semicolon","","",45,null],[13,"Slash","","",45,null],[13,"Sleep","","",45,null],[13,"Stop","","",45,null],[13,"Sysrq","","",45,null],[13,"Tab","","",45,null],[13,"Underline","","",45,null],[13,"Unlabeled","","",45,null],[13,"VolumeDown","","",45,null],[13,"VolumeUp","","",45,null],[13,"Wake","","",45,null],[13,"WebBack","","",45,null],[13,"WebFavorites","","",45,null],[13,"WebForward","","",45,null],[13,"WebHome","","",45,null],[13,"WebRefresh","","",45,null],[13,"WebSearch","","",45,null],[13,"WebStop","","",45,null],[13,"Yen","","",45,null],[13,"Copy","","",45,null],[13,"Paste","","",45,null],[13,"Cut","","",45,null],[3,"ModifiersState","","Represents the current state of the keyboard modifiers",null,null],[0,"event_loop","glutin","The <code>EventLoop</code> struct and assorted supporting types, …",null,null],[3,"EventLoop","glutin::event_loop","Provides a way to retrieve events from the system and …",null,null],[3,"EventLoopWindowTarget","","Target that associates windows with an <code>EventLoop</code>.",null,null],[4,"ControlFlow","","Set by the user callback given to the <code>EventLoop::run</code> …",null,null],[13,"Poll","","When the current loop iteration finishes, immediately …",46,null],[13,"Wait","","When the current loop iteration finishes, suspend the …",46,null],[13,"WaitUntil","","When the current loop iteration finishes, suspend the …",46,null],[13,"Exit","","Send a <code>LoopDestroyed</code> event and stop the event loop. This …",46,null],[3,"EventLoopProxy","","Used to send custom events to <code>EventLoop</code>.",null,null],[3,"EventLoopClosed","","The error that is returned when an <code>EventLoopProxy</code> …",null,null],[12,"0","","",47,null],[0,"monitor","glutin","Types useful for interacting with a user\'s monitors.",null,null],[3,"VideoMode","glutin::monitor","Describes a fullscreen video mode of a monitor.",null,null],[3,"MonitorHandle","","Handle to a monitor.",null,null],[0,"window","glutin","The <code>Window</code> struct and associated types.",null,null],[3,"Window","glutin::window","Represents a window.",null,null],[3,"WindowId","","Identifier of a window. Unique for each window.",null,null],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[12,"window","","The attributes to use to create the window.",48,null],[3,"WindowAttributes","","Attributes to use when creating a window.",null,null],[12,"inner_size","","The dimensions of the window. If this is <code>None</code>, some …",49,null],[12,"min_inner_size","","The minimum dimensions a window can be, If this is <code>None</code>, …",49,null],[12,"max_inner_size","","The maximum dimensions a window can be, If this is <code>None</code>, …",49,null],[12,"resizable","","Whether the window is resizable or not.",49,null],[12,"fullscreen","","Whether the window should be set as fullscreen upon …",49,null],[12,"title","","The title of the window in the title bar.",49,null],[12,"maximized","","Whether the window should be maximized upon creation.",49,null],[12,"visible","","Whether the window should be immediately visible upon …",49,null],[12,"transparent","","Whether the the window should be transparent. If this is …",49,null],[12,"decorations","","Whether the window should have borders and bars.",49,null],[12,"always_on_top","","Whether the window should always be on top of other …",49,null],[12,"window_icon","","The window icon.",49,null],[4,"CursorIcon","","Describes the appearance of the mouse cursor.",null,null],[13,"Default","","The platform-dependent default cursor.",50,null],[13,"Crosshair","","A simple crosshair.",50,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",50,null],[13,"Arrow","","Self explanatory.",50,null],[13,"Move","","Indicates something is to be moved.",50,null],[13,"Text","","Indicates text that may be selected or edited.",50,null],[13,"Wait","","Program busy indicator.",50,null],[13,"Help","","Help indicator (often rendered as a \\\"?\\\")",50,null],[13,"Progress","","Progress indicator. Shows that processing is being done. …",50,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",50,null],[13,"ContextMenu","","",50,null],[13,"Cell","","",50,null],[13,"VerticalText","","",50,null],[13,"Alias","","",50,null],[13,"Copy","","",50,null],[13,"NoDrop","","",50,null],[13,"Grab","","Indicates something can be grabbed.",50,null],[13,"Grabbing","","Indicates something is grabbed.",50,null],[13,"AllScroll","","",50,null],[13,"ZoomIn","","",50,null],[13,"ZoomOut","","",50,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the …",50,null],[13,"NResize","","",50,null],[13,"NeResize","","",50,null],[13,"NwResize","","",50,null],[13,"SResize","","",50,null],[13,"SeResize","","",50,null],[13,"SwResize","","",50,null],[13,"WResize","","",50,null],[13,"EwResize","","",50,null],[13,"NsResize","","",50,null],[13,"NeswResize","","",50,null],[13,"NwseResize","","",50,null],[13,"ColResize","","",50,null],[13,"RowResize","","",50,null],[4,"Fullscreen","","Fullscreen modes.",null,null],[13,"Exclusive","","",51,null],[13,"Borderless","","Providing <code>None</code> to <code>Borderless</code> will fullscreen on the …",51,null],[4,"Theme","","",null,null],[13,"Light","","",52,null],[13,"Dark","","",52,null],[4,"UserAttentionType","","Platform-specific<strong>X11:</strong> Sets the WM\'s <code>XUrgencyHint</code>. No …",null,null],[13,"Critical","","Platform-specific<strong>macOS:</strong> Bounces the dock icon until the …",53,null],[13,"Informational","","Platform-specific<strong>macOS:</strong> Bounces the dock icon once.<strong>…",53,null],[4,"BadIcon","","An error produced when using <code>Icon::from_rgba</code> with invalid …",null,null],[13,"ByteCountNotDivisibleBy4","","Produced when the length of the <code>rgba</code> argument isn\'t …",54,null],[12,"byte_count","glutin::window::BadIcon","",55,null],[13,"DimensionsVsPixelCount","glutin::window","Produced when the number of pixels (<code>rgba.len() / 4</code>) isn\'t …",54,null],[12,"width","glutin::window::BadIcon","",56,null],[12,"height","","",56,null],[12,"width_x_height","","",56,null],[12,"pixel_count","","",56,null],[13,"OsError","glutin::window","Produced when underlying OS functionality failed to …",54,null],[3,"Icon","","An icon used for the window titlebar, taskbar, etc.",null,null],[0,"platform","glutin","Contains traits with platform-specific methods in them.",null,null],[0,"macos","glutin::platform","",null,null],[8,"WindowExtMacOS","glutin::platform::macos","Additional methods on <code>Window</code> that are specific to MacOS.",null,null],[10,"ns_window","","Returns a pointer to the cocoa <code>NSWindow</code> that is used by …",0,[[]]],[10,"ns_view","","Returns a pointer to the cocoa <code>NSView</code> that is used by …",0,[[]]],[10,"simple_fullscreen","","Returns whether or not the window is in simple fullscreen …",0,[[],["bool",15]]],[10,"set_simple_fullscreen","","Toggles a fullscreen mode that doesn\'t require a new …",0,[[["bool",15]],["bool",15]]],[10,"has_shadow","","Returns whether or not the window has shadow.",0,[[],["bool",15]]],[10,"set_has_shadow","","Sets whether or not the window has shadow.",0,[[["bool",15]]]],[4,"ActivationPolicy","","Corresponds to <code>NSApplicationActivationPolicy</code>.",null,null],[13,"Regular","","Corresponds to <code>NSApplicationActivationPolicyRegular</code>.",1,null],[13,"Accessory","","Corresponds to <code>NSApplicationActivationPolicyAccessory</code>.",1,null],[13,"Prohibited","","Corresponds to <code>NSApplicationActivationPolicyProhibited</code>.",1,null],[8,"WindowBuilderExtMacOS","","Additional methods on <code>WindowBuilder</code> that are specific to …",null,null],[10,"with_activation_policy","","Sets the activation policy for the window being built.",2,[[["activationpolicy",4]],["windowbuilder",3]]],[10,"with_movable_by_window_background","","Enables click-and-drag behavior for the entire window, …",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_titlebar_transparent","","Makes the titlebar transparent and allows the content to …",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_title_hidden","","Hides the window title.",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_titlebar_hidden","","Hides the window titlebar.",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_titlebar_buttons_hidden","","Hides the window titlebar buttons.",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_fullsize_content_view","","Makes the window content appear behind the titlebar.",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_resize_increments","","Build window with <code>resizeIncrements</code> property. Values must …",2,[[["logicalsize",3],["f64",15]],["windowbuilder",3]]],[10,"with_disallow_hidpi","","",2,[[["bool",15]],["windowbuilder",3]]],[10,"with_has_shadow","","",2,[[["bool",15]],["windowbuilder",3]]],[8,"MonitorHandleExtMacOS","","Additional methods on <code>MonitorHandle</code> that are specific to …",null,null],[10,"native_id","","Returns the identifier of the monitor for Cocoa.",3,[[],["u32",15]]],[10,"ns_screen","","Returns a pointer to the NSScreen representing this …",3,[[],["option",4]]],[8,"EventLoopWindowTargetExtMacOS","","Additional methods on <code>EventLoopWindowTarget</code> that are …",null,null],[10,"hide_application","","Hide the entire application. In most applications this is …",4,[[]]],[10,"hide_other_applications","","Hide the other applications. In most applications this is …",4,[[]]],[0,"run_return","glutin::platform","",null,null],[8,"EventLoopExtRunReturn","glutin::platform::run_return","Additional methods on <code>EventLoop</code> to return control flow to …",null,null],[16,"UserEvent","","A type provided by the user that can be passed through …",5,null],[10,"run_return","","Initializes the <code>winit</code> event loop.",5,[[]]],[3,"ContextBuilder","glutin","An object that allows you to build <code>Context</code>s, <code>RawContext<T></code>…",null,null],[12,"gl_attr","","The attributes to use to create the context.",57,null],[12,"pf_reqs","","The pixel format requirements",57,null],[11,"new","","Initializes a new <code>ContextBuilder</code> with default values.",57,[[]]],[11,"with_gl","","Sets how the backend should choose the OpenGL API and …",57,[[["glrequest",4]]]],[11,"with_gl_profile","","Sets the desired OpenGL <code>Context</code> profile.",57,[[["glprofile",4]]]],[11,"with_gl_debug_flag","","Sets the <em>debug</em> flag for the OpenGL <code>Context</code>.",57,[[["bool",15]]]],[11,"with_gl_robustness","","Sets the robustness of the OpenGL <code>Context</code>. See the docs of…",57,[[["robustness",4]]]],[11,"with_vsync","","Requests that the window has vsync enabled.",57,[[["bool",15]]]],[11,"with_shared_lists","","Share the display lists with the given <code>Context</code>.",57,[[["context",3]],[["contextbuilder",3],["contextcurrentstate",8]]]],[11,"with_multisampling","","Sets the multisampling level to request. A value of <code>0</code> …",57,[[["u16",15]]]],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",57,[[["u8",15]]]],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",57,[[["u8",15]]]],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",57,[[["u8",15]]]],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",57,[[]]],[11,"with_srgb","","Sets whether sRGB should be enabled on the window.",57,[[["bool",15]]]],[11,"with_double_buffer","","Sets whether double buffering should be enabled.",57,[[["bool",15],["option",4]]]],[11,"with_hardware_acceleration","","Sets whether hardware acceleration is required.",57,[[["bool",15],["option",4]]]],[4,"CreationError","","Error that can happen while creating a window or a …",null,null],[13,"OsError","","",58,null],[13,"NotSupported","","",58,null],[13,"NoBackendAvailable","","",58,null],[13,"RobustnessNotSupported","","",58,null],[13,"OpenGlVersionNotSupported","","",58,null],[13,"NoAvailablePixelFormat","","",58,null],[13,"PlatformSpecific","","",58,null],[13,"Window","","",58,null],[13,"CreationErrors","","We received multiple errors, instead of one.",58,null],[4,"ContextError","","Error that can happen when manipulating an OpenGL <code>Context</code>.",null,null],[13,"OsError","","General platform error.",59,null],[13,"IoError","","",59,null],[13,"ContextLost","","",59,null],[13,"FunctionUnavailable","","",59,null],[4,"Api","","All APIs related to OpenGL that you can possibly get …",null,null],[13,"OpenGl","","The classical OpenGL. Available on Windows, Unix …",60,null],[13,"OpenGlEs","","OpenGL embedded system. Available on Unix operating …",60,null],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",60,null],[4,"GlProfile","","Describes the requested OpenGL <code>Context</code> profiles.",null,null],[13,"Compatibility","","Include all the immediate more functions and definitions.",61,null],[13,"Core","","Include all the future-compatible functions and …",61,null],[4,"GlRequest","","Describes the OpenGL API and version that are being …",null,null],[13,"Latest","","Request the latest version of the \\\"best\\\" API of this …",62,null],[13,"Specific","","Request a specific version of a specific API.",62,null],[13,"GlThenGles","","If OpenGL is available, create an OpenGL <code>Context</code> with the …",62,null],[12,"opengl_version","glutin::GlRequest","The version to use for OpenGL.",63,null],[12,"opengles_version","","The version to use for OpenGL ES.",63,null],[11,"to_gl_version","glutin","Extract the desktop GL version, if any.",62,[[],["option",4]]],[7,"GL_CORE","","The minimum core profile GL context. Useful for getting …",null,null],[4,"Robustness","","Specifies the tolerance of the OpenGL <code>Context</code> to faults. …",null,null],[13,"NotRobust","","Not everything is checked. Your application can crash if …",64,null],[13,"NoError","","The driver doesn\'t check anything. This option is very …",64,null],[13,"RobustNoResetNotification","","Everything is checked to avoid any crash. The driver will …",64,null],[13,"TryRobustNoResetNotification","","Same as <code>RobustNoResetNotification</code> but the context …",64,null],[13,"RobustLoseContextOnReset","","Everything is checked to avoid any crash. If a problem …",64,null],[13,"TryRobustLoseContextOnReset","","Same as <code>RobustLoseContextOnReset</code> but the context creation …",64,null],[4,"ReleaseBehavior","","The behavior of the driver when you change the current …",null,null],[13,"None","","Doesn\'t do anything. Most notably doesn\'t flush.",65,null],[13,"Flush","","Flushes the context that was previously current as if …",65,null],[3,"PixelFormat","","Describes a possible format.",null,null],[12,"hardware_accelerated","","",66,null],[12,"color_bits","","The number of color bits. Does not include alpha bits.",66,null],[12,"alpha_bits","","",66,null],[12,"depth_bits","","",66,null],[12,"stencil_bits","","",66,null],[12,"stereoscopy","","",66,null],[12,"double_buffer","","",66,null],[12,"multisampling","","<code>None</code> if multisampling is disabled, otherwise <code>Some(N)</code> …",66,null],[12,"srgb","","",66,null],[3,"PixelFormatRequirements","","Describes how the backend should choose a pixel format.",null,null],[12,"hardware_accelerated","","If true, only hardware-accelerated formats will be …",67,null],[12,"color_bits","","Minimum number of bits for the color buffer, excluding …",67,null],[12,"float_color_buffer","","If true, the color buffer must be in a floating point …",67,null],[12,"alpha_bits","","Minimum number of bits for the alpha in the color buffer. …",67,null],[12,"depth_bits","","Minimum number of bits for the depth buffer. <code>None</code> means …",67,null],[12,"stencil_bits","","Minimum number of stencil bits. <code>None</code> means \\\"don\'t care\\\". …",67,null],[12,"double_buffer","","If true, only double-buffered formats will be considered. …",67,null],[12,"multisampling","","Contains the minimum number of samples per pixel in the …",67,null],[12,"stereoscopy","","If true, only stereoscopic formats will be considered. If …",67,null],[12,"srgb","","If true, only sRGB-capable formats will be considered. If …",67,null],[12,"release_behavior","","The behavior when changing the current context. Default …",67,null],[3,"GlAttributes","","Attributes to use when creating an OpenGL <code>Context</code>.",null,null],[12,"sharing","","An existing context with which some OpenGL objects get …",68,null],[12,"version","","Version to try create. See <code>GlRequest</code> for more infos.",68,null],[12,"profile","","OpenGL profile to use.",68,null],[12,"debug","","Whether to enable the <code>debug</code> flag of the context.",68,null],[12,"robustness","","How the OpenGL <code>Context</code> should detect errors.",68,null],[12,"vsync","","Whether to use vsync. If vsync is enabled, calling …",68,null],[11,"map_sharing","","Turns the <code>sharing</code> parameter into another type by calling …",68,[[],["glattributes",3]]],[3,"Rect","","",null,null],[12,"x","","",69,null],[12,"y","","",69,null],[12,"width","","",69,null],[12,"height","","",69,null],[11,"from","glutin::platform::macos","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","glutin","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","glutin::dpi","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","glutin::error","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","glutin::event","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","glutin::event_loop","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","glutin::monitor","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","glutin::window","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","glutin","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"fmt","glutin::error","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event_loop","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::error","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::monitor","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::error","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::window","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::error","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::window","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::dpi","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::window","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::window","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::dpi","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::dpi","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::monitor","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event_loop","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::window","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::dpi","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event_loop","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::window","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::dpi","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event_loop","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::window","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::dpi","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::window","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::platform::macos","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event_loop","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::monitor","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::event","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::window","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","glutin::error","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"ns_window","glutin::window","",83,[[]]],[11,"ns_view","","",83,[[]]],[11,"simple_fullscreen","","",83,[[],["bool",15]]],[11,"set_simple_fullscreen","","",83,[[["bool",15]],["bool",15]]],[11,"has_shadow","","",83,[[],["bool",15]]],[11,"set_has_shadow","","",83,[[["bool",15]]]],[11,"hash","glutin::event","",77,[[]]],[11,"hash","","",43,[[]]],[11,"hash","glutin::monitor","",81,[[]]],[11,"hash","glutin::event","",45,[[]]],[11,"hash","glutin::window","",84,[[]]],[11,"hash","glutin::event","",38,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",42,[[]]],[11,"hash","glutin::event_loop","",47,[[]]],[11,"hash","glutin::window","",50,[[]]],[11,"hash","glutin::dpi","",11,[[]]],[11,"hash","glutin::event","",76,[[]]],[11,"deref","glutin::event_loop","",78,[[],["eventloopwindowtarget",3]]],[11,"partial_cmp","glutin::event","",77,[[["modifiersstate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",77,[[["modifiersstate",3]],["bool",15]]],[11,"le","","",77,[[["modifiersstate",3]],["bool",15]]],[11,"gt","","",77,[[["modifiersstate",3]],["bool",15]]],[11,"ge","","",77,[[["modifiersstate",3]],["bool",15]]],[11,"partial_cmp","glutin::window","",84,[[["windowid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",84,[[["windowid",3]],["bool",15]]],[11,"le","","",84,[[["windowid",3]],["bool",15]]],[11,"gt","","",84,[[["windowid",3]],["bool",15]]],[11,"ge","","",84,[[["windowid",3]],["bool",15]]],[11,"partial_cmp","glutin::monitor","",82,[[["monitorhandle",3]],[["option",4],["ordering",4]]]],[11,"lt","","",82,[[["monitorhandle",3]],["bool",15]]],[11,"le","","",82,[[["monitorhandle",3]],["bool",15]]],[11,"gt","","",82,[[["monitorhandle",3]],["bool",15]]],[11,"ge","","",82,[[["monitorhandle",3]],["bool",15]]],[11,"partial_cmp","glutin::event","",76,[[["deviceid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",76,[[["deviceid",3]],["bool",15]]],[11,"le","","",76,[[["deviceid",3]],["bool",15]]],[11,"gt","","",76,[[["deviceid",3]],["bool",15]]],[11,"ge","","",76,[[["deviceid",3]],["bool",15]]],[11,"partial_cmp","","",45,[[["virtualkeycode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","glutin::monitor","",81,[[["videomode",3]],[["option",4],["ordering",4]]]],[11,"fmt","glutin::event","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","glutin::dpi","",9,[[],["physicalposition",3]]],[11,"from","","",12,[[["logicalsize",3]],["size",4]]],[11,"from","","",13,[[["physicalposition",3]],["position",4]]],[11,"from","","",10,[[],["logicalsize",3]]],[11,"from","","",13,[[["logicalposition",3]],["position",4]]],[11,"from","","",10,[[],["logicalsize",3]]],[11,"from","","",11,[[],["physicalsize",3]]],[11,"from","","",12,[[["physicalsize",3]],["size",4]]],[11,"from","","",9,[[],["physicalposition",3]]],[11,"from","","",11,[[],["physicalsize",3]]],[11,"from","","",8,[[],["logicalposition",3]]],[11,"from","","",8,[[],["logicalposition",3]]],[11,"default","glutin::platform::macos","",1,[[],["activationpolicy",4]]],[11,"default","glutin::window","",49,[[],["windowattributes",3]]],[11,"default","glutin::event","",77,[[],["modifiersstate",3]]],[11,"default","glutin::window","",50,[[],["cursoricon",4]]],[11,"default","","",53,[[],["userattentiontype",4]]],[11,"default","","",48,[[],["windowbuilder",3]]],[11,"default","glutin::event_loop","",46,[[],["controlflow",4]]],[11,"clone","glutin::window","",49,[[],["windowattributes",3]]],[11,"clone","glutin::dpi","",8,[[],["logicalposition",3]]],[11,"clone","glutin::event","",76,[[],["deviceid",3]]],[11,"clone","glutin::monitor","",81,[[],["videomode",3]]],[11,"clone","glutin::event","",77,[[],["modifiersstate",3]]],[11,"clone","","",38,[[],["touchphase",4]]],[11,"clone","glutin::event_loop","",46,[[],["controlflow",4]]],[11,"clone","glutin::event","",42,[[],["elementstate",4]]],[11,"clone","glutin::window","",85,[[],["icon",3]]],[11,"clone","glutin::dpi","",11,[[],["physicalsize",3]]],[11,"clone","glutin::platform::macos","",1,[[],["activationpolicy",4]]],[11,"clone","glutin::window","",50,[[],["cursoricon",4]]],[11,"clone","glutin::event","",15,[[],["event",4]]],[11,"clone","glutin::window","",51,[[],["fullscreen",4]]],[11,"clone","glutin::event","",31,[[],["deviceevent",4]]],[11,"clone","glutin::dpi","",13,[[],["position",4]]],[11,"clone","glutin::event_loop","",47,[[],["eventloopclosed",3]]],[11,"clone","glutin::window","",52,[[],["theme",4]]],[11,"clone","glutin::event","",18,[[],["startcause",4]]],[11,"clone","","",43,[[],["mousebutton",4]]],[11,"clone","glutin::window","",53,[[],["userattentiontype",4]]],[11,"clone","glutin::event","",39,[[],["touch",3]]],[11,"clone","glutin::error","",74,[[],["notsupportederror",3]]],[11,"clone","glutin::dpi","",12,[[],["size",4]]],[11,"clone","glutin::event","",45,[[],["virtualkeycode",4]]],[11,"clone","glutin::monitor","",82,[[],["monitorhandle",3]]],[11,"clone","glutin::window","",48,[[],["windowbuilder",3]]],[11,"clone","glutin::dpi","",10,[[],["logicalsize",3]]],[11,"clone","glutin::event","",21,[[],["windowevent",4]]],[11,"clone","glutin::dpi","",9,[[],["physicalposition",3]]],[11,"clone","glutin::window","",84,[[],["windowid",3]]],[11,"clone","glutin::event","",44,[[],["mousescrolldelta",4]]],[11,"clone","","",40,[[],["force",4]]],[11,"clone","glutin::event_loop","",80,[[],["eventloopproxy",3]]],[11,"clone","glutin::event","",37,[[],["keyboardinput",3]]],[11,"from_iter","","",77,[[],["modifiersstate",3]]],[11,"with_activation_policy","glutin::window","",48,[[["activationpolicy",4]],["windowbuilder",3]]],[11,"with_movable_by_window_background","","",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_titlebar_transparent","","",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_titlebar_hidden","","",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_titlebar_buttons_hidden","","",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_title_hidden","","",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_fullsize_content_view","","",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_resize_increments","","",48,[[["logicalsize",3],["f64",15]],["windowbuilder",3]]],[11,"with_disallow_hidpi","","",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_has_shadow","","",48,[[["bool",15]],["windowbuilder",3]]],[11,"cmp","glutin::monitor","",82,[[["monitorhandle",3]],["ordering",4]]],[11,"cmp","glutin::event","",45,[[["virtualkeycode",4]],["ordering",4]]],[11,"cmp","glutin::monitor","",81,[[["videomode",3]],["ordering",4]]],[11,"cmp","glutin::event","",77,[[["modifiersstate",3]],["ordering",4]]],[11,"cmp","","",76,[[["deviceid",3]],["ordering",4]]],[11,"cmp","glutin::window","",84,[[["windowid",3]],["ordering",4]]],[11,"bitxor_assign","glutin::event","Toggles the set of flags.",77,[[["modifiersstate",3]]]],[11,"run_return","glutin::event_loop","",78,[[]]],[11,"raw_window_handle","glutin::window","Returns a <code>raw_window_handle::RawWindowHandle</code> for the …",83,[[],["rawwindowhandle",4]]],[11,"fmt","glutin::event","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"native_id","glutin::monitor","",82,[[],["u32",15]]],[11,"ns_screen","","",82,[[],["option",4]]],[11,"sub_assign","glutin::event","Disables all flags enabled in the set.",77,[[["modifiersstate",3]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",77,[[["modifiersstate",3]],["modifiersstate",3]]],[11,"bitor","","Returns the union of the two sets of flags.",77,[[["modifiersstate",3]],["modifiersstate",3]]],[11,"not","","Returns the complement of this set of flags.",77,[[],["modifiersstate",3]]],[11,"source","glutin::window","",54,[[],[["option",4],["error",8]]]],[11,"extend","glutin::event","",77,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",77,[[["modifiersstate",3]],["modifiersstate",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",77,[[["modifiersstate",3]],["modifiersstate",3]]],[11,"bitor_assign","","Adds the set of flags.",77,[[["modifiersstate",3]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",77,[[["modifiersstate",3]]]],[11,"into","glutin::dpi","",11,[[]]],[11,"into","","",11,[[]]],[11,"into","","",10,[[]]],[11,"into","","",8,[[]]],[11,"into","","",9,[[]]],[11,"into","","",10,[[]]],[11,"into","","",8,[[]]],[11,"into","","",9,[[]]],[11,"hide_application","glutin::event_loop","",79,[[]]],[11,"hide_other_applications","","",79,[[]]],[11,"drop","glutin::window","",83,[[]]],[11,"eq","glutin::event","",39,[[["touch",3]],["bool",15]]],[11,"ne","","",39,[[["touch",3]],["bool",15]]],[11,"eq","","",37,[[["keyboardinput",3]],["bool",15]]],[11,"ne","","",37,[[["keyboardinput",3]],["bool",15]]],[11,"eq","glutin::window","",51,[[["fullscreen",4]],["bool",15]]],[11,"ne","","",51,[[["fullscreen",4]],["bool",15]]],[11,"eq","glutin::platform::macos","",1,[[["activationpolicy",4]],["bool",15]]],[11,"eq","glutin::event","",76,[[["deviceid",3]],["bool",15]]],[11,"ne","","",76,[[["deviceid",3]],["bool",15]]],[11,"eq","glutin::window","",50,[[["cursoricon",4]],["bool",15]]],[11,"eq","glutin::event","",44,[[["mousescrolldelta",4]],["bool",15]]],[11,"ne","","",44,[[["mousescrolldelta",4]],["bool",15]]],[11,"eq","glutin::event_loop","",47,[[["eventloopclosed",3]],["bool",15]]],[11,"ne","","",47,[[["eventloopclosed",3]],["bool",15]]],[11,"eq","glutin::window","",84,[[["windowid",3]],["bool",15]]],[11,"ne","","",84,[[["windowid",3]],["bool",15]]],[11,"eq","glutin::event","",43,[[["mousebutton",4]],["bool",15]]],[11,"ne","","",43,[[["mousebutton",4]],["bool",15]]],[11,"eq","","",77,[[["modifiersstate",3]],["bool",15]]],[11,"ne","","",77,[[["modifiersstate",3]],["bool",15]]],[11,"eq","","",31,[[["deviceevent",4]],["bool",15]]],[11,"ne","","",31,[[["deviceevent",4]],["bool",15]]],[11,"eq","","",40,[[["force",4]],["bool",15]]],[11,"ne","","",40,[[["force",4]],["bool",15]]],[11,"eq","","",45,[[["virtualkeycode",4]],["bool",15]]],[11,"eq","glutin::monitor","",82,[[["monitorhandle",3]],["bool",15]]],[11,"ne","","",82,[[["monitorhandle",3]],["bool",15]]],[11,"eq","glutin::event","",42,[[["elementstate",4]],["bool",15]]],[11,"eq","glutin::dpi","",11,[[["physicalsize",3]],["bool",15]]],[11,"ne","","",11,[[["physicalsize",3]],["bool",15]]],[11,"eq","","",8,[[["logicalposition",3]],["bool",15]]],[11,"ne","","",8,[[["logicalposition",3]],["bool",15]]],[11,"eq","glutin::event","",21,[[["windowevent",4]],["bool",15]]],[11,"ne","","",21,[[["windowevent",4]],["bool",15]]],[11,"eq","glutin::window","",52,[[["theme",4]],["bool",15]]],[11,"eq","","",53,[[["userattentiontype",4]],["bool",15]]],[11,"eq","glutin::monitor","",81,[[["videomode",3]],["bool",15]]],[11,"ne","","",81,[[["videomode",3]],["bool",15]]],[11,"eq","glutin::dpi","",10,[[["logicalsize",3]],["bool",15]]],[11,"ne","","",10,[[["logicalsize",3]],["bool",15]]],[11,"eq","glutin::event","",18,[[["startcause",4]],["bool",15]]],[11,"ne","","",18,[[["startcause",4]],["bool",15]]],[11,"eq","glutin::event_loop","",46,[[["controlflow",4]],["bool",15]]],[11,"ne","","",46,[[["controlflow",4]],["bool",15]]],[11,"eq","glutin::dpi","",13,[[["position",4]],["bool",15]]],[11,"ne","","",13,[[["position",4]],["bool",15]]],[11,"eq","","",12,[[["size",4]],["bool",15]]],[11,"ne","","",12,[[["size",4]],["bool",15]]],[11,"eq","glutin::event","",38,[[["touchphase",4]],["bool",15]]],[11,"eq","glutin::dpi","",9,[[["physicalposition",3]],["bool",15]]],[11,"ne","","",9,[[["physicalposition",3]],["bool",15]]],[11,"eq","glutin::event","",15,[[["event",4]],["bool",15]]],[11,"ne","","",15,[[["event",4]],["bool",15]]],[11,"raw_handle","glutin","",70,[[]]],[11,"get_egl_display","","",70,[[],["option",4]]],[11,"from","","",58,[[["oserror",3]]]],[11,"clone","","",71,[[],["possiblycurrent",3]]],[11,"clone","","",72,[[],["notcurrent",4]]],[11,"clone","","",57,[[],["contextbuilder",3]]],[11,"clone","","",60,[[],["api",4]]],[11,"clone","","",61,[[],["glprofile",4]]],[11,"clone","","",62,[[],["glrequest",4]]],[11,"clone","","",64,[[],["robustness",4]]],[11,"clone","","",65,[[],["releasebehavior",4]]],[11,"clone","","",66,[[],["pixelformat",3]]],[11,"clone","","",67,[[],["pixelformatrequirements",3]]],[11,"clone","","",68,[[],["glattributes",3]]],[11,"clone","","",69,[[],["rect",3]]],[11,"default","","",67,[[],["pixelformatrequirements",3]]],[11,"default","","",68,[[],["glattributes",3]]],[11,"eq","","",60,[[["api",4]],["bool",15]]],[11,"eq","","",61,[[["glprofile",4]],["bool",15]]],[11,"eq","","",64,[[["robustness",4]],["bool",15]]],[11,"eq","","",65,[[["releasebehavior",4]],["bool",15]]],[11,"eq","","",69,[[["rect",3]],["bool",15]]],[11,"ne","","",69,[[["rect",3]],["bool",15]]],[11,"deref","","",73,[[]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",58,[[],["str",15]]],[11,"cause","","",58,[[],[["error",8],["option",4]]]],[11,"description","","",59,[[],["str",15]]],[11,"make_current","","See <code>ContextWrapper::make_current</code>.",70,[[],[["context",3],["result",4]]]],[11,"make_not_current","","See <code>ContextWrapper::make_not_current</code>.",70,[[],[["result",4],["context",3]]]],[11,"treat_as_not_current","","See <code>ContextWrapper::treat_as_not_current</code>.",70,[[],[["context",3],["notcurrent",4]]]],[11,"treat_as_current","","See <code>ContextWrapper::treat_as_current</code>.",70,[[],[["context",3],["possiblycurrent",3]]]],[11,"is_current","","See <code>ContextWrapper::is_current</code>.",70,[[],["bool",15]]],[11,"get_api","","See <code>ContextWrapper::get_api</code>.",70,[[],["api",4]]],[11,"get_proc_address","","See <code>ContextWrapper::get_proc_address</code>.",70,[[["str",15]]]],[11,"build_headless","","Builds the given GL context.",57,[[["u32",15],["physicalsize",3],["eventloopwindowtarget",3]],[["result",4],["context",3],["creationerror",4]]]],[11,"window","","Borrow the inner <code>W</code>.",73,[[],["window",3]]],[11,"split","","Split the <code>Window</code> apart from the OpenGL <code>Context</code>. Should …",73,[[]]],[11,"window","","Borrow the inner <code>W</code>.",86,[[],["window",3]]],[11,"split","","Split the <code>Window</code> apart from the OpenGL <code>Context</code>. Should …",86,[[]]],[11,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",73,[[],[["result",4],["contexterror",4]]]],[11,"swap_buffers_with_damage","","Swaps the buffers in case of double or triple buffering …",73,[[],[["result",4],["contexterror",4]]]],[11,"swap_buffers_with_damage_supported","","Returns whether or not swap_buffer_with_damage is …",73,[[],["bool",15]]],[11,"get_pixel_format","","Returns the pixel format of the main framebuffer of the …",73,[[],["pixelformat",3]]],[11,"resize","","Resize the context.",73,[[["u32",15],["physicalsize",3]]]],[11,"context","","Borrow the inner GL <code>Context</code>.",73,[[],["context",3]]],[11,"make_current","","Sets this context as the current context. The previously …",73,[[],[["contextwrapper",3],["result",4]]]],[11,"make_not_current","","If this context is current, makes this context not …",73,[[],[["contextwrapper",3],["result",4]]]],[11,"treat_as_not_current","","Treats this context as not current, even if it is …",73,[[],[["contextwrapper",3],["notcurrent",4]]]],[11,"treat_as_current","","Treats this context as current, even if it is not …",73,[[],[["contextwrapper",3],["possiblycurrent",3]]]],[11,"is_current","","Returns true if this context is the current one in this …",73,[[],["bool",15]]],[11,"get_api","","Returns the OpenGL API being used.",73,[[],["api",4]]],[11,"get_proc_address","","Returns the address of an OpenGL function.",73,[[["str",15]]]],[11,"build_windowed","","Builds the given window along with the associated GL …",57,[[["windowbuilder",3],["eventloopwindowtarget",3]],[["creationerror",4],["result",4],["windowedcontext",6]]]],[11,"new","glutin::dpi","",8,[[],["logicalposition",3]]],[11,"from_physical","","",8,[[["f64",15]],["logicalposition",3]]],[11,"to_physical","","",8,[[["f64",15]],["physicalposition",3]]],[11,"cast","","",8,[[],["logicalposition",3]]],[11,"new","","",9,[[],["physicalposition",3]]],[11,"from_logical","","",9,[[["f64",15]],["physicalposition",3]]],[11,"to_logical","","",9,[[["f64",15]],["logicalposition",3]]],[11,"cast","","",9,[[],["physicalposition",3]]],[11,"new","","",10,[[],["logicalsize",3]]],[11,"from_physical","","",10,[[["f64",15]],["logicalsize",3]]],[11,"to_physical","","",10,[[["f64",15]],["physicalsize",3]]],[11,"cast","","",10,[[],["logicalsize",3]]],[11,"new","","",11,[[],["physicalsize",3]]],[11,"from_logical","","",11,[[["f64",15]],["physicalsize",3]]],[11,"to_logical","","",11,[[["f64",15]],["logicalsize",3]]],[11,"cast","","",11,[[],["physicalsize",3]]],[11,"new","","",12,[[],["size",4]]],[11,"to_logical","","",12,[[["f64",15]],["logicalsize",3]]],[11,"to_physical","","",12,[[["f64",15]],["physicalsize",3]]],[11,"new","","",13,[[],["position",4]]],[11,"to_logical","","",13,[[["f64",15]],["logicalposition",3]]],[11,"to_physical","","",13,[[["f64",15]],["physicalposition",3]]],[11,"map_nonuser_event","glutin::event","",15,[[],[["event",4],["event",4],["result",4]]]],[11,"to_static","","If the event doesn\'t contain a reference, turn it into an …",15,[[],[["option",4],["event",4]]]],[11,"to_static","","",21,[[],[["option",4],["windowevent",4]]]],[11,"dummy","","Returns a dummy <code>DeviceId</code>, useful for unit testing. The …",76,[[],["deviceid",3]]],[11,"normalized","","Returns the force normalized to the range between 0.0 and …",40,[[],["f64",15]]],[11,"shift","","Returns <code>true</code> if the shift key is pressed.",77,[[],["bool",15]]],[11,"ctrl","","Returns <code>true</code> if the control key is pressed.",77,[[],["bool",15]]],[11,"alt","","Returns <code>true</code> if the alt key is pressed.",77,[[],["bool",15]]],[11,"logo","","Returns <code>true</code> if the logo key is pressed.",77,[[],["bool",15]]],[18,"SHIFT","","The \\\"shift\\\" key.",77,null],[18,"CTRL","","The \\\"control\\\" key.",77,null],[18,"ALT","","The \\\"alt\\\" key.",77,null],[18,"LOGO","","This is the \\\"windows\\\" key on PC and \\\"command\\\" key on Mac.",77,null],[11,"empty","","Returns an empty set of flags",77,[[],["modifiersstate",3]]],[11,"all","","Returns the set containing all flags.",77,[[],["modifiersstate",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",77,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",77,[[["u32",15]],[["modifiersstate",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",77,[[["u32",15]],["modifiersstate",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",77,[[["u32",15]],["modifiersstate",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",77,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",77,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",77,[[["modifiersstate",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",77,[[["modifiersstate",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",77,[[["modifiersstate",3]]]],[11,"remove","","Removes the specified flags in-place.",77,[[["modifiersstate",3]]]],[11,"toggle","","Toggles the specified flags in-place.",77,[[["modifiersstate",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",77,[[["bool",15],["modifiersstate",3]]]],[11,"new","glutin::event_loop","Builds a new event loop with a <code>()</code> as the user event type.",78,[[],["eventloop",3]]],[11,"with_user_event","","Builds a new event loop.",78,[[],["eventloop",3]]],[11,"run","","Hijacks the calling thread and initializes the winit …",78,[[]]],[11,"create_proxy","","Creates an <code>EventLoopProxy</code> that can be used to dispatch …",78,[[],["eventloopproxy",3]]],[11,"available_monitors","","Returns the list of all the monitors available on the …",79,[[]]],[11,"primary_monitor","","Returns the primary monitor of the system.",79,[[],[["option",4],["monitorhandle",3]]]],[11,"send_event","","Send an event to the <code>EventLoop</code> from which this proxy was …",80,[[],[["result",4],["eventloopclosed",3]]]],[11,"size","glutin::monitor","Returns the resolution of this video mode.",81,[[],[["physicalsize",3],["u32",15]]]],[11,"bit_depth","","Returns the bit depth of this video mode, as in how many …",81,[[],["u16",15]]],[11,"refresh_rate","","Returns the refresh rate of this video mode. <strong>Note</strong>: the …",81,[[],["u16",15]]],[11,"monitor","","Returns the monitor that this video mode is valid for. …",81,[[],["monitorhandle",3]]],[11,"name","","Returns a human-readable name of the monitor.",82,[[],[["option",4],["string",3]]]],[11,"size","","Returns the monitor\'s resolution.",82,[[],[["physicalsize",3],["u32",15]]]],[11,"position","","Returns the top-left corner position of the monitor …",82,[[],[["physicalposition",3],["i32",15]]]],[11,"scale_factor","","Returns the scale factor that can be used to map logical …",82,[[],["f64",15]]],[11,"video_modes","","Returns all fullscreen video modes supported by this …",82,[[]]],[11,"new","glutin::window","Creates a new Window for platforms where this is …",83,[[["eventloopwindowtarget",3]],[["result",4],["window",3],["oserror",3]]]],[11,"id","","Returns an identifier unique to the window.",83,[[],["windowid",3]]],[11,"scale_factor","","Returns the scale factor that can be used to map logical …",83,[[],["f64",15]]],[11,"request_redraw","","Emits a <code>WindowEvent::RedrawRequested</code> event in the …",83,[[]]],[11,"inner_position","","Returns the position of the top-left hand corner of the …",83,[[],[["result",4],["notsupportederror",3],["physicalposition",3]]]],[11,"outer_position","","Returns the position of the top-left hand corner of the …",83,[[],[["result",4],["notsupportederror",3],["physicalposition",3]]]],[11,"set_outer_position","","Modifies the position of the window.",83,[[]]],[11,"inner_size","","Returns the physical size of the window\'s client area.",83,[[],[["physicalsize",3],["u32",15]]]],[11,"set_inner_size","","Modifies the inner size of the window.",83,[[]]],[11,"outer_size","","Returns the physical size of the entire window.",83,[[],[["physicalsize",3],["u32",15]]]],[11,"set_min_inner_size","","Sets a minimum dimension size for the window.",83,[[["option",4]]]],[11,"set_max_inner_size","","Sets a maximum dimension size for the window.",83,[[["option",4]]]],[11,"set_title","","Modifies the title of the window.",83,[[["str",15]]]],[11,"set_visible","","Modifies the window\'s visibility.",83,[[["bool",15]]]],[11,"set_resizable","","Sets whether the window is resizable or not.",83,[[["bool",15]]]],[11,"set_minimized","","Sets the window to minimized or back",83,[[["bool",15]]]],[11,"set_maximized","","Sets the window to maximized or back.",83,[[["bool",15]]]],[11,"set_fullscreen","","Sets the window to fullscreen or back.",83,[[["option",4],["fullscreen",4]]]],[11,"fullscreen","","Gets the window\'s current fullscreen state.",83,[[],[["option",4],["fullscreen",4]]]],[11,"set_decorations","","Turn window decorations on or off.",83,[[["bool",15]]]],[11,"set_always_on_top","","Change whether or not the window will always be on top of …",83,[[["bool",15]]]],[11,"set_window_icon","","Sets the window icon. On Windows and X11, this is …",83,[[["icon",3],["option",4]]]],[11,"set_ime_position","","Sets location of IME candidate box in client area …",83,[[]]],[11,"request_user_attention","","Requests user attention to the window, this has no effect …",83,[[["option",4],["userattentiontype",4]]]],[11,"set_cursor_icon","","Modifies the cursor icon of the window.",83,[[["cursoricon",4]]]],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",83,[[],[["externalerror",4],["result",4]]]],[11,"set_cursor_grab","","Grabs the cursor, preventing it from leaving the window.",83,[[["bool",15]],[["externalerror",4],["result",4]]]],[11,"set_cursor_visible","","Modifies the cursor\'s visibility.",83,[[["bool",15]]]],[11,"current_monitor","","Returns the monitor on which the window currently resides.",83,[[],[["option",4],["monitorhandle",3]]]],[11,"available_monitors","","Returns the list of all the monitors available on the …",83,[[]]],[11,"primary_monitor","","Returns the primary monitor of the system.",83,[[],[["option",4],["monitorhandle",3]]]],[11,"dummy","","Returns a dummy <code>WindowId</code>, useful for unit testing. The …",84,[[],["windowid",3]]],[11,"new","","Initializes a new <code>WindowBuilder</code> with default values.",48,[[],["windowbuilder",3]]],[11,"with_inner_size","","Requests the window to be of specific dimensions.",48,[[],["windowbuilder",3]]],[11,"with_min_inner_size","","Sets a minimum dimension size for the window.",48,[[],["windowbuilder",3]]],[11,"with_max_inner_size","","Sets a maximum dimension size for the window.",48,[[],["windowbuilder",3]]],[11,"with_resizable","","Sets whether the window is resizable or not.",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_title","","Requests a specific title for the window.",48,[[],["windowbuilder",3]]],[11,"with_fullscreen","","Sets the window fullscreen state.",48,[[["option",4],["fullscreen",4]],["windowbuilder",3]]],[11,"with_maximized","","Requests maximized mode.",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_visible","","Sets whether the window will be initially hidden or …",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_transparent","","Sets whether the background of the window should be …",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_decorations","","Sets whether the window should have a border, a title …",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_always_on_top","","Sets whether or not the window will always be on top of …",48,[[["bool",15]],["windowbuilder",3]]],[11,"with_window_icon","","Sets the window icon.",48,[[["icon",3],["option",4]],["windowbuilder",3]]],[11,"build","","Builds the window.",48,[[["eventloopwindowtarget",3]],[["result",4],["window",3],["oserror",3]]]],[11,"from_rgba","","Creates an <code>Icon</code> from 32bpp RGBA data.",85,[[["u32",15],["global",3],["u8",15],["vec",3]],[["icon",3],["badicon",4],["result",4]]]]],"p":[[8,"WindowExtMacOS"],[4,"ActivationPolicy"],[8,"WindowBuilderExtMacOS"],[8,"MonitorHandleExtMacOS"],[8,"EventLoopWindowTargetExtMacOS"],[8,"EventLoopExtRunReturn"],[8,"ContextTraitExt"],[8,"Pixel"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[4,"Size"],[4,"Position"],[4,"ExternalError"],[4,"Event"],[13,"WindowEvent"],[13,"DeviceEvent"],[4,"StartCause"],[13,"ResumeTimeReached"],[13,"WaitCancelled"],[4,"WindowEvent"],[13,"KeyboardInput"],[13,"CursorMoved"],[13,"CursorEntered"],[13,"CursorLeft"],[13,"MouseWheel"],[13,"MouseInput"],[13,"TouchpadPressure"],[13,"AxisMotion"],[13,"ScaleFactorChanged"],[4,"DeviceEvent"],[13,"MouseMotion"],[13,"MouseWheel"],[13,"Motion"],[13,"Button"],[13,"Text"],[3,"KeyboardInput"],[4,"TouchPhase"],[3,"Touch"],[4,"Force"],[13,"Calibrated"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"ControlFlow"],[3,"EventLoopClosed"],[3,"WindowBuilder"],[3,"WindowAttributes"],[4,"CursorIcon"],[4,"Fullscreen"],[4,"Theme"],[4,"UserAttentionType"],[4,"BadIcon"],[13,"ByteCountNotDivisibleBy4"],[13,"DimensionsVsPixelCount"],[3,"ContextBuilder"],[4,"CreationError"],[4,"ContextError"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[13,"GlThenGles"],[4,"Robustness"],[4,"ReleaseBehavior"],[3,"PixelFormat"],[3,"PixelFormatRequirements"],[3,"GlAttributes"],[3,"Rect"],[3,"Context"],[3,"PossiblyCurrent"],[4,"NotCurrent"],[3,"ContextWrapper"],[3,"NotSupportedError"],[3,"OsError"],[3,"DeviceId"],[3,"ModifiersState"],[3,"EventLoop"],[3,"EventLoopWindowTarget"],[3,"EventLoopProxy"],[3,"VideoMode"],[3,"MonitorHandle"],[3,"Window"],[3,"WindowId"],[3,"Icon"],[6,"WindowedContext"]]},\
"glutin_gles2_sys":{"doc":"","i":[],"p":[]},\
"glutin_window":{"doc":"A Glutin window back-end for the Piston game engine.","i":[[4,"OpenGL","glutin_window","",null,null],[13,"V2_0","","",0,null],[13,"V2_1","","",0,null],[13,"V3_0","","",0,null],[13,"V3_1","","",0,null],[13,"V3_2","","",0,null],[13,"V3_3","","",0,null],[13,"V4_0","","",0,null],[13,"V4_1","","",0,null],[13,"V4_2","","",0,null],[13,"V4_3","","",0,null],[13,"V4_4","","",0,null],[13,"V4_5","","",0,null],[3,"GlutinWindow","","Contains stuff for game window.",null,null],[12,"ctx","","The window.",1,null],[11,"new","","Creates a new game window for Glutin.",1,[[["windowsettings",3]],[["box",3],["result",4]]]],[11,"from_raw","","Creates a game window from a pre-existing Glutin event …",1,[[["userevent",4],["eventloop",3],["windowsettings",3],["windowbuilder",3]],[["box",3],["result",4]]]],[5,"map_key","","Maps Glutin\'s key to Piston\'s key.",null,[[["virtualkeycode",4]],["key",4]]],[5,"map_mouse","","Maps Glutin\'s mouse button to Piston\'s mouse button.",null,[[["mousebutton",4]],["mousebutton",4]]],[4,"UserEvent","","Custom events for the glutin event loop",null,null],[13,"WakeUp","","Do nothing, just spin the event loop",2,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",0,[[],["opengl",4]]],[11,"into","","",0,[[],["version",3]]],[11,"partial_cmp","","",0,[[["opengl",4]],[["option",4],["ordering",4]]]],[11,"cmp","","",0,[[["opengl",4]],["ordering",4]]],[11,"eq","","",0,[[["opengl",4]],["bool",15]]],[11,"from_str","","",0,[[["str",15]],[["opengl",4],["result",4]]]],[11,"eq","","",2,[[["userevent",4]],["bool",15]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"size","","",1,[[],["size",3]]],[11,"draw_size","","",1,[[],["size",3]]],[11,"should_close","","",1,[[],["bool",15]]],[11,"set_should_close","","",1,[[["bool",15]]]],[11,"swap_buffers","","",1,[[]]],[11,"wait_event","","",1,[[],["event",4]]],[11,"wait_event_timeout","","",1,[[["duration",3]],[["option",4],["event",4]]]],[11,"poll_event","","",1,[[],[["option",4],["event",4]]]],[11,"build_from_window_settings","","",1,[[["windowsettings",3]],[["box",3],["result",4]]]],[11,"get_title","","",1,[[],["string",3]]],[11,"set_title","","",1,[[["string",3]]]],[11,"get_exit_on_esc","","",1,[[],["bool",15]]],[11,"set_exit_on_esc","","",1,[[["bool",15]]]],[11,"get_automatic_close","","",1,[[],["bool",15]]],[11,"set_automatic_close","","",1,[[["bool",15]]]],[11,"set_capture_cursor","","",1,[[["bool",15]]]],[11,"show","","",1,[[]]],[11,"hide","","",1,[[]]],[11,"get_position","","",1,[[],[["position",3],["option",4]]]],[11,"set_position","","",1,[[["position",3],["into",8]]]],[11,"set_size","","",1,[[["into",8],["size",3]]]],[11,"get_proc_address","","",1,[[["str",15]],["procaddress",6]]],[11,"is_current","","",1,[[],["bool",15]]],[11,"make_current","","",1,[[]]],[11,"from_api","","Creates a new <code>OpenGL</code> version from graphics API version.",0,[[["version",3]],[["opengl",4],["option",4]]]],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,[[]]],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,[[],["glsl",4]]]],"p":[[4,"OpenGL"],[3,"GlutinWindow"],[4,"UserEvent"]]},\
"graphics":{"doc":"A library for 2D graphics that works with multiple …","i":[[0,"draw_state","graphics","Graphics draw state.",null,null],[3,"DrawState","graphics::draw_state","Graphics draw state used for blending, clipping and …",null,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this …",0,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",0,null],[12,"blend","","Blend function to use. If None, blending is disabled.",0,null],[11,"new_alpha","","Uses alpha blending.",0,[[],["drawstate",3]]],[11,"new_clip","","Draws to stencil buffer with value 255. This can be used …",0,[[],["drawstate",3]]],[11,"new_increment","","Increases stencil buffer. This can be used for nested …",0,[[],["drawstate",3]]],[11,"new_inside","","Tests against stencil buffer with value 255. Draws inside …",0,[[],["drawstate",3]]],[11,"new_outside","","Tests against stencil buffer with value 255. Draws …",0,[[],["drawstate",3]]],[11,"blend","","Sets blending.",0,[[["blend",4]],["drawstate",3]]],[11,"scissor","","Sets scissor <code>[x, y, w, h]</code>.",0,[[],["drawstate",3]]],[4,"Blend","","The blend setting to use when drawing.",null,null],[13,"Alpha","","Alpha blending (allows semi-transparent pixels).",1,null],[13,"Add","","Additive blending.",1,null],[13,"Lighter","","Additive blending with alpha channel.",1,null],[13,"Multiply","","Multiply color components.",1,null],[13,"Invert","","Invert colors when rendering a white shape.",1,null],[4,"Stencil","","Stencil buffer settings.",null,null],[13,"Clip","","Draw to stencil buffer.",2,null],[13,"Inside","","Draw pixels that have stencil value.",2,null],[13,"Outside","","Draw pixels that does not have stencil value.",2,null],[13,"Increment","","Increment stencil buffer.",2,null],[0,"character","graphics","A text character",null,null],[3,"Character","graphics::character","Holds rendered character data.",null,null],[12,"offset","","The offset of character.",3,null],[12,"advance_size","","The advance size of character, including space.",3,null],[12,"atlas_offset","","The offset of character within texture atlas.",3,null],[12,"atlas_size","","The size of character within texture atlas.",3,null],[12,"texture","","The texture of the character.",3,null],[11,"left","","The left offset.",3,[[],["scalar",6]]],[11,"top","","The top offset.",3,[[],["scalar",6]]],[11,"advance_width","","Gets width of character, including space to the next one.",3,[[],["scalar",6]]],[11,"advance_height","","Sets height of character, including space to the next one.",3,[[],["scalar",6]]],[8,"CharacterCache","","Stores characters in a buffer and loads them by demand.",null,null],[16,"Texture","","The texture type associated with the character cache.",4,null],[16,"Error","","The error type associated with the character cache.",4,null],[10,"character","","Get reference to character.",4,[[["fontsize",6],["char",15]],[["result",4],["character",3]]]],[11,"width","","Return the width for some given text.",4,[[["fontsize",6],["str",15]],[["result",4],["scalar",6]]]],[0,"context","graphics","Transformation context",null,null],[3,"Context","graphics::context","Drawing 2d context.",null,null],[12,"viewport","","Viewport information.",5,null],[12,"view","","View transformation.",5,null],[12,"transform","","Current transformation.",5,null],[12,"draw_state","","Current draw state settings.",5,null],[11,"new","","Creates a new drawing context.",5,[[],["context",3]]],[11,"new_viewport","","Creates a new context with absolute transform in point …",5,[[["viewport",3]],["context",3]]],[11,"new_abs","","Creates a new drawing context in absolute coordinates.",5,[[["scalar",6]],["context",3]]],[11,"view","","Moves the current transform to the view coordinate system.",5,[[]]],[11,"reset","","Moves the current transform to the default coordinate …",5,[[]]],[11,"store_view","","Stores the current transform as new view.",5,[[]]],[11,"get_view_size","","Computes the current view size.",5,[[],["vec2d",6]]],[0,"color","graphics","Helper methods for colors",null,null],[17,"BLACK","graphics::color","Black color.",null,null],[17,"BLUE","","Blue color.",null,null],[17,"CYAN","","Cyan color.",null,null],[17,"GRAY","","Gray color.",null,null],[17,"GREEN","","Green color.",null,null],[17,"LIME","","Lime color.",null,null],[17,"MAGENTA","","Magenta color.",null,null],[17,"MAROON","","Maroon color.",null,null],[17,"NAVY","","Navy color.",null,null],[17,"OLIVE","","Olive color.",null,null],[17,"PURPLE","","Purple color.",null,null],[17,"RED","","Red color.",null,null],[17,"SILVER","","Silver color.",null,null],[17,"TEAL","","Teal color.",null,null],[17,"WHITE","","White color.",null,null],[17,"YELLOW","","Yellow color.",null,null],[17,"TRANSPARENT","","Transparent color.",null,null],[5,"grey","","Returns a grey color",null,[[["colorcomponent",6]],["color",6]]],[5,"alpha","","Returns a semi-transparent white color",null,[[["colorcomponent",6]],["color",6]]],[5,"hex","","Converts from hexadecimal color format",null,[[["str",15]],["color",6]]],[5,"gamma_srgb_to_linear","","Converts gamma (brightness) from sRGB to linear color …",null,[[["color",6]],["color",6]]],[5,"gamma_linear_to_srgb","","Converts gamma (brightness) of a color from linear color …",null,[[["color",6]],["color",6]]],[0,"polygon","graphics","Draw polygon",null,null],[3,"Polygon","graphics::polygon","A polygon",null,null],[12,"color","","The color of the polygon",6,null],[11,"new","","Creates new polygon",6,[[["color",6]],["polygon",3]]],[11,"color","","Sets color.",6,[[["color",6]]]],[11,"draw","","Draws polygon using the default method.",6,[[["drawstate",3],["matrix2d",6],["polygon",6]]]],[11,"draw_tri","","Draws polygon using triangulation.",6,[[["drawstate",3],["matrix2d",6],["polygon",6]]]],[11,"draw_tween_lerp","","Draws tweened polygon with linear interpolation, using …",6,[[["polygons",6],["drawstate",3],["scalar",6],["matrix2d",6]]]],[11,"draw_tween_lerp_tri","","Draws tweened polygon with linear interpolation, using …",6,[[["polygons",6],["drawstate",3],["scalar",6],["matrix2d",6]]]],[0,"line","graphics","Draw Line",null,null],[4,"Shape","graphics::line","The shape of the line",null,null],[13,"Square","","Square edges",7,null],[13,"Round","","Round edges",7,null],[13,"Bevel","","Bevel edges",7,null],[3,"Line","","A colored line with a default border radius",null,null],[12,"color","","The line color",8,null],[12,"radius","","The line radius",8,null],[12,"shape","","The line shape",8,null],[11,"new","","Creates a new line",8,[[["color",6],["radius",6]],["line",3]]],[11,"new_round","","Creates a new line",8,[[["color",6],["radius",6]],["line",3]]],[11,"color","","Sets color.",8,[[["color",6]]]],[11,"radius","","Sets radius.",8,[[["radius",6]]]],[11,"width","","Sets width.",8,[[["width",6]]]],[11,"shape","","Sets shape.",8,[[["shape",4]]]],[11,"draw_from_to","","Draws line using default method between points.",8,[[["vec2d",6],["drawstate",3],["into",8],["matrix2d",6]]]],[11,"draw","","Draws line using default method.",8,[[["matrix2d",6],["drawstate",3],["into",8],["line",6]]]],[11,"draw_tri","","Draws line using triangulation.",8,[[["matrix2d",6],["drawstate",3],["into",8],["line",6]]]],[11,"draw_arrow","","Draws an arrow",8,[[["line",6],["matrix2d",6],["drawstate",3],["scalar",6],["into",8]]]],[0,"circle_arc","graphics","Draw an arc",null,null],[3,"CircleArc","graphics::circle_arc","A curved line",null,null],[12,"color","","The arcs color",9,null],[12,"radius","","The radius of the arc (Thickness of the drawing, not the …",9,null],[12,"start","","The start of the arc in radians",9,null],[12,"end","","The end of the arc in radians",9,null],[12,"resolution","","The resolution for the arc.",9,null],[11,"new","","Creates a new arc",9,[[["color",6],["radius",6],["scalar",6]],["circlearc",3]]],[11,"color","","Sets the arcs color.",9,[[["color",6]]]],[11,"radius","","Sets the radius of the arc (Thickness of the arc, not the …",9,[[["radius",6]]]],[11,"start","","Sets the start of the arc (in radians).",9,[[["scalar",6]]]],[11,"end","","Sets the end of the arc (in radians).",9,[[["scalar",6]]]],[11,"resolution","","Sets the resolution of the arcs smoothness.",9,[[["resolution",6]]]],[11,"draw","","Draws circle arc using default method.",9,[[["into",8],["drawstate",3],["rectangle",6],["matrix2d",6]]]],[11,"draw_tri","","Draws circle arc using triangulation.",9,[[["into",8],["drawstate",3],["rectangle",6],["matrix2d",6]]]],[0,"ellipse","graphics","Draw ellipse",null,null],[3,"Border","graphics::ellipse","Ellipse border",null,null],[12,"color","","The border color",10,null],[12,"radius","","The border radius",10,null],[3,"Ellipse","","An ellipse with filled color",null,null],[12,"color","","The ellipse color",11,null],[12,"border","","The ellipse border",11,null],[12,"resolution","","The resolution for the shape, 360 degrees.",11,null],[11,"new","","Creates a new ellipse",11,[[["color",6]],["ellipse",3]]],[11,"new_border","","Creates a new ellipse border",11,[[["color",6],["radius",6]],["ellipse",3]]],[11,"color","","Sets ellipse color.",11,[[["color",6]]]],[11,"border","","Sets ellipse border.",11,[[["border",3]]]],[11,"maybe_border","","Sets optional ellipse border.",11,[[["option",4],["border",3]]]],[11,"resolution","","Sets resolution of the ellipse smoothness.",11,[[["resolution",6]]]],[11,"draw_from_to","","Draws ellipse by corners using default method.",11,[[["drawstate",3],["into",8],["vec2d",6],["matrix2d",6]]]],[11,"draw","","Draws ellipse using default method.",11,[[["into",8],["drawstate",3],["rectangle",6],["matrix2d",6]]]],[11,"draw_tri","","Draws ellipse using triangulation.",11,[[["into",8],["drawstate",3],["rectangle",6],["matrix2d",6]]]],[0,"rectangle","graphics","Draw rectangle",null,null],[5,"rectangle_by_corners","graphics::rectangle","Create <code>types::Rectangle</code> by the two opposite corners.",null,[[["scalar",6]],["rectangle",6]]],[5,"centered","","Use x, y, half-width, half-height",null,[[["rectangle",6]],["rectangle",6]]],[5,"centered_square","","Create <code>types::Rectangle</code> for a square with a center in (<code>x</code>, …",null,[[["scalar",6]],["rectangle",6]]],[5,"square","","Create <code>types::Rectangle</code> for a square with a top-left …",null,[[["scalar",6]],["rectangle",6]]],[4,"Shape","","The shape of the rectangle corners",null,null],[13,"Square","","Square corners",12,null],[13,"Round","","Round corners, with resolution per corner.",12,null],[13,"Bevel","","Bevel corners",12,null],[3,"Border","","The border of the rectangle",null,null],[12,"color","","The color of the border",13,null],[12,"radius","","The radius of the border. The half-width of the line by …",13,null],[3,"Rectangle","","A filled rectangle",null,null],[12,"color","","The rectangle color",14,null],[12,"shape","","The roundness of the rectangle",14,null],[12,"border","","The border",14,null],[11,"new","","Creates a new rectangle.",14,[[["color",6]],["rectangle",3]]],[11,"new_round","","Creates a new rectangle with rounded corners.",14,[[["color",6],["radius",6]],["rectangle",3]]],[11,"new_border","","Creates a new rectangle border.",14,[[["color",6],["radius",6]],["rectangle",3]]],[11,"new_round_border","","Creates a new rectangle border with rounded corners.",14,[[["color",6],["radius",6]],["rectangle",3]]],[11,"color","","Sets color.",14,[[["color",6]]]],[11,"shape","","Sets shape of the corners.",14,[[["shape",4]]]],[11,"border","","Sets border properties.",14,[[["border",3]]]],[11,"maybe_border","","Sets optional border.",14,[[["option",4],["border",3]]]],[11,"draw_from_to","","Draws the rectangle by corners using the default method.",14,[[["vec2d",6],["drawstate",3],["into",8],["matrix2d",6]]]],[11,"draw","","Draws the rectangle using the default method.",14,[[["into",8],["rectangle",6],["drawstate",3],["matrix2d",6]]]],[11,"draw_tri","","Draws the rectangle using triangulation.",14,[[["into",8],["rectangle",6],["drawstate",3],["matrix2d",6]]]],[0,"image","graphics","Draw an image",null,null],[3,"Image","graphics::image","An image",null,null],[12,"color","","The color",15,null],[12,"rectangle","","The rectangle to draw image inside",15,null],[12,"source_rectangle","","The image source rectangle",15,null],[11,"new","","Creates a new image",15,[[],["image",3]]],[11,"new_color","","Creates a new colored image",15,[[["color",6]],["image",3]]],[11,"color","","Sets color.",15,[[["color",6]]]],[11,"maybe_color","","Sets optional color.",15,[[["color",6],["option",4]]]],[11,"rect","","Sets rectangle.",15,[[["into",8],["rectangle",6]]]],[11,"maybe_rect","","Sets optional rectangle.",15,[[["into",8],["rectangle",6],["option",4]]]],[11,"src_rect","","Sets source rectangle.",15,[[["sourcerectangle",6]]]],[11,"maybe_src_rect","","Sets optional source rectangle.",15,[[["option",4],["sourcerectangle",6]]]],[11,"draw","","Draws image using default method.",15,[[["matrix2d",6],["drawstate",3]]]],[11,"draw_tri","","Draws image using triangulation.",15,[[["matrix2d",6],["drawstate",3]]]],[5,"draw_many","","Draws many images.",null,[[["color",6],["matrix2d",6],["drawstate",3]]]],[0,"types","graphics","Contains type aliases used in this library",null,null],[6,"Area","graphics::types","The type used for area.",null,null],[6,"Color","","[red, green, blue, alpha]",null,null],[6,"ColorComponent","","The type used for color component.",null,null],[6,"Line","","[x1, y1, x2, y2]",null,null],[6,"SourceRectangle","","[x, y, w, h]",null,null],[6,"Polygon","","[p0, p1, ...]",null,null],[6,"Polygons","","A slice of polygons.",null,null],[6,"Radius","","The type used for radius.",null,null],[6,"Resolution","","The type used for resolution.",null,null],[6,"Ray","","[x, y, dir_x, dir_y]",null,null],[6,"Rectangle","","Rectangle dimensions: [x, y, w, h]",null,null],[6,"Triangle","","[x1, y1, x2, y2, x3, y3]",null,null],[6,"Width","","The type used for width.",null,null],[6,"FontSize","","The type used for font size.",null,null],[0,"modular_index","graphics","Helper functions for computing modular index safely.",null,null],[5,"offset","graphics::modular_index","Computes modular offset safely for indices.",null,[[["usize",15],["isize",15]],["usize",15]]],[5,"previous","","Computes previous modular index safely.",null,[[["usize",15]],["usize",15]]],[5,"next","","Computes next modular index safely.",null,[[["usize",15]],["usize",15]]],[0,"text","graphics","Draw text",null,null],[3,"Text","graphics::text","Renders text",null,null],[12,"color","","The color",16,null],[12,"font_size","","The font size",16,null],[12,"round","","Whether or not the text\'s position should be rounded (to …",16,null],[11,"new","","Creates a new text with black color",16,[[["fontsize",6]],["text",3]]],[11,"new_color","","Creates a new colored text",16,[[["color",6],["fontsize",6]],["text",3]]],[11,"round","","A builder method indicating that the Text\'s position …",16,[[],["text",3]]],[11,"draw","","Draws text with a character cache",16,[[["drawstate",3],["matrix2d",6],["str",15]],["result",4]]],[0,"triangulation","graphics","Methods for converting shapes into triangles.",null,null],[5,"tx","graphics::triangulation","Transformed x coordinate as f32.",null,[[["matrix2d",6],["scalar",6]],["f32",15]]],[5,"ty","","Transformed y coordinate as f32.",null,[[["matrix2d",6],["scalar",6]],["f32",15]]],[5,"with_lerp_polygons_tri_list","","Streams tweened polygons using linear interpolation.",null,[[["scalar",6],["matrix2d",6],["polygons",6]]]],[5,"with_ellipse_tri_list","","Streams an ellipse specified by a resolution.",null,[[["rectangle",6],["resolution",6],["matrix2d",6]]]],[5,"with_round_border_line_tri_list","","Streams a round border line.",null,[[["line",6],["resolution",6],["matrix2d",6],["radius",6]]]],[5,"with_round_rectangle_tri_list","","Streams a round rectangle.",null,[[["resolution",6],["rectangle",6],["matrix2d",6],["radius",6]]]],[5,"stream_polygon_tri_list","","Streams a polygon into tri list. Uses buffers that fit …",null,[[["matrix2d",6]]]],[5,"with_ellipse_border_tri_list","","Streams an ellipse border specified by a resolution.",null,[[["resolution",6],["rectangle",6],["matrix2d",6],["radius",6]]]],[5,"with_arc_tri_list","","Streams an arc between the two radian boundaries.",null,[[["radius",6],["resolution",6],["rectangle",6],["matrix2d",6],["scalar",6]]]],[5,"with_round_rectangle_border_tri_list","","Streams a round rectangle border.",null,[[["resolution",6],["rectangle",6],["matrix2d",6],["radius",6]]]],[5,"stream_quad_tri_list","","Streams a quad into tri list.",null,[[["matrix2d",6]]]],[5,"with_polygon_tri_list","","Splits polygon into convex segments. Create a buffer that …",null,[[["matrix2d",6],["polygon",6]]]],[5,"rect_tri_list_xy","","Creates triangle list vertices from rectangle.",null,[[["rectangle",6],["matrix2d",6]]]],[5,"rect_border_tri_list_xy","","Creates triangle list vertices from rectangle.",null,[[["rectangle",6],["matrix2d",6],["radius",6]]]],[5,"rect_tri_list_uv","","Creates triangle list texture coords from image.",null,[[["sourcerectangle",6]]]],[0,"math","graphics","Various methods for computing with vectors.",null,null],[5,"multiply","graphics::math","Multiplies two matrices.",null,[[]]],[5,"dot","","Computes the dot product.",null,[[]]],[5,"cross","","Computes the cross product.",null,[[]]],[5,"add","","Adds two vectors.",null,[[]]],[5,"sub","","Subtracts \'b\' from \'a\'.",null,[[]]],[5,"cast","","Converts to another vector type.",null,[[]]],[5,"mul","","Multiplies two vectors component wise.",null,[[]]],[5,"mul_scalar","","Multiplies the vector with a scalar.",null,[[]]],[5,"square_len","","Computes the square length of a vector.",null,[[]]],[5,"transform_pos","","Transforms a 2D position through matrix.",null,[[]]],[5,"transform_vec","","Transforms a 2D vector through matrix.",null,[[]]],[5,"invert","","Computes the inverse of a 2x3 matrix.",null,[[]]],[6,"Scalar","","The type used for scalars.",null,null],[6,"Matrix2d","","The type used for matrices.",null,null],[6,"Vec2d","","The type used for 2D vectors.",null,null],[6,"Vec3d","","The type used for 3D vectors.",null,null],[5,"perp","","Creates a perpendicular vector.",null,[[]]],[5,"abs_transform","","Transforms from normalized to absolute coordinates.",null,[[],["matrix2d",6]]],[5,"translate","","Creates a translation matrix.",null,[[["vec2d",6]],["matrix2d",6]]],[5,"rotate_radians","","Creates a rotation matrix.",null,[[],["matrix2d",6]]],[5,"orient","","Orients x axis to look at point.",null,[[],["matrix2d",6]]],[5,"scale","","Create a scale matrix.",null,[[],["matrix2d",6]]],[5,"shear","","Create a shear matrix.",null,[[["vec2d",6]],["matrix2d",6]]],[5,"identity","","Create an identity matrix.",null,[[],["matrix2d",6]]],[5,"get_scale","","Extract scale information from matrix.",null,[[["matrix2d",6]],["vec2d",6]]],[5,"separation","","Compute the shortest vector from point to ray. A ray …",null,[[["ray",6],["vec2d",6]],["vec2d",6]]],[5,"least_separation_4","","Returns the least separation out of four. Each seperation …",null,[[["vec2d",6]],["vec2d",6]]],[5,"margin_rectangle","","Shrinks a rectangle by a factor on all sides.",null,[[["rectangle",6]],["rectangle",6]]],[5,"relative_rectangle","","Computes a relative rectangle using the rectangle as a …",null,[[["rectangle",6],["vec2d",6]],["rectangle",6]]],[5,"overlap_rectangle","","Computes overlap between two rectangles. The area of the …",null,[[["rectangle",6]],[["option",4],["rectangle",6]]]],[5,"relative_source_rectangle","","Computes a relative source rectangle using the source …",null,[[["sourcerectangle",6]],["sourcerectangle",6]]],[5,"modular_offset","","Computes modular offset safely for numbers.",null,[[],[["copy",8],["rem",8],["add",8]]]],[5,"area_centroid","","Computes the area and centroid of a simple polygon.",null,[[["polygon",6]]]],[5,"area","","Computes area of a simple polygon.",null,[[["polygon",6]]]],[5,"centroid","","Computes centroid of a simple polygon.",null,[[["polygon",6]],["vec2d",6]]],[5,"line_side","","Returns a number that tells which side it is relative to …",null,[[["line",6],["vec2d",6]]]],[5,"inside_triangle","","Returns true if point is inside triangle.",null,[[["vec2d",6],["triangle",6]],["bool",15]]],[5,"triangle_face","","Returns true if triangle is clockwise.",null,[[["triangle",6]],["bool",15]]],[5,"to_barycentric","","Transforms from cartesian coordinates to barycentric.",null,[[["vec2d",6],["triangle",6]],["vec3d",6]]],[5,"from_barycentric","","Transforms from barycentric coordinates to cartesian.",null,[[["vec3d",6],["triangle",6]],["vec2d",6]]],[5,"hsv","","Transform color with hue, saturation and value.",null,[[["color",6],["f32",15]],["color",6]]],[0,"grid","graphics","A flat grid with square cells.",null,null],[3,"Grid","graphics::grid","Represents a flat grid with square cells.",null,null],[12,"cols","","Number of columns.",17,null],[12,"rows","","Number of rows.",17,null],[12,"units","","The width and height of each grid cell.",17,null],[3,"GridCells","","Iterates through the cells of a grid as (u32, u32).",null,null],[11,"draw","","Draws the grid.",17,[[["matrix2d",6],["line",3],["drawstate",3]]]],[11,"cells","","Get a GridIterator for the grid",17,[[],["gridcells",3]]],[11,"cell_position","","Get on-screen position of a grid cell",17,[[],["vec2d",6]]],[11,"x_pos","","Get on-screen x position of a grid cell",17,[[],["scalar",6]]],[11,"y_pos","","Get on-screen y position of a grid cell",17,[[],["scalar",6]]],[0,"glyph_cache","graphics","Implementations of the <code>CharacterCache</code> trait.",null,null],[0,"rusttype","graphics::glyph_cache","Glyph caching using the RustType library.",null,null],[17,"ATLAS_SIZE","graphics::glyph_cache::rusttype","The minimum atlas size.",null,null],[3,"GlyphCache","","A struct used for caching rendered font.",null,null],[12,"font","","The font.",18,null],[12,"factory","","The factory used to create textures.",18,null],[11,"from_font","","Constructs a GlyphCache from a Font.",18,[[["font",4],["texturesettings",3]]]],[11,"new","","Constructor for a GlyphCache.",18,[[["texturesettings",3]],[["result",6],["glyphcache",3]]]],[11,"from_bytes","","Creates a GlyphCache for a font stored in memory.",18,[[["texturesettings",3]],[["glyphcache",3],["result",4]]]],[11,"preload_chars","","Load all characters in the <code>chars</code> iterator for <code>size</code>",18,[[["fontsize",6]],["result",4]]],[11,"preload_printable_ascii","","Load all the printable ASCII characters for <code>size</code>. …",18,[[["fontsize",6]],["result",4]]],[11,"opt_character","","Return <code>ch</code> for <code>size</code> if it\'s already cached. Don\'t load. …",18,[[["fontsize",6],["char",15]],[["option",4],["character",3]]]],[0,"texture_packer","graphics","Texture packing.",null,null],[3,"TexturePacker","graphics::texture_packer","A texture packer using a skyline heuristic.",null,null],[12,"textures","","Stores current texture atlas and previously created ones.",19,null],[12,"atlas","","The index to the current texture atlas.",19,null],[12,"skyline","","Texture atlas offsets from left to right.",19,null],[11,"new","","Returns a new <code>TexturePacker</code>.",19,[[],["texturepacker",3]]],[11,"create","","Create a new texture atlas with an initial tile.",19,[[],["usize",15]]],[11,"update","","Update current texture atlas.",19,[[["usize",15]]]],[11,"find_space","","Returns the index of atlas offset in skyline with room …",19,[[],[["usize",15],["option",4]]]],[0,"radians","graphics","Reexport radians helper trait from vecmath",null,null],[8,"Radians","graphics::radians","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",20,[[]]],[10,"_180","","Returns radians corresponding to 180 degrees.",20,[[]]],[10,"_360","","Returns radians corresponding to 360 degrees.",20,[[]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to …",20,[[]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to …",20,[[]]],[8,"ImageSize","graphics","Implemented by all images to be used with generic …",null,null],[10,"get_size","","Get the image size.",21,[[]]],[11,"get_width","","Gets the image width.",21,[[],["u32",15]]],[11,"get_height","","Gets the image height.",21,[[],["u32",15]]],[3,"Viewport","","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels. <code>[x, y, width height]</code> where <code>(x, y)</code> is …",22,null],[12,"draw_size","","The size of frame buffer in pixels.",22,null],[12,"window_size","","The size of window in points.",22,null],[8,"Graphics","","Implemented by all graphics back-ends.",null,null],[16,"Texture","","The texture type associated with the back-end.",23,null],[10,"clear_color","","Clears background with a color.",23,[[["color",6]]]],[10,"clear_stencil","","Clears stencil buffer with a value, usually 0.",23,[[["u8",15]]]],[10,"tri_list","","Renders list of 2d triangles using a solid color.",23,[[["drawstate",3]]]],[10,"tri_list_c","","Same as <code>tri_list</code>, but with individual vertex colors.",23,[[["drawstate",3]]]],[10,"tri_list_uv","","Renders list of 2d triangles using a color and a texture.",23,[[["drawstate",3]]]],[10,"tri_list_uv_c","","Same as <code>tri_list_uv</code>, but with individual vertex colors.",23,[[["drawstate",3]]]],[11,"rectangle","","Draws a rectangle.",23,[[["into",8],["rectangle",6],["drawstate",3],["rectangle",3],["matrix2d",6]]]],[11,"polygon","","Draws a polygon.",23,[[["polygon",6],["drawstate",3],["polygon",3],["matrix2d",6]]]],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",23,[[["polygons",6],["polygon",3],["drawstate",3],["scalar",6],["matrix2d",6]]]],[11,"image","","Draws image.",23,[[["drawstate",3],["matrix2d",6],["image",3]]]],[11,"ellipse","","Draws ellipse.",23,[[["into",8],["rectangle",6],["drawstate",3],["ellipse",3],["matrix2d",6]]]],[11,"line","","Draws line.",23,[[["matrix2d",6],["line",3],["drawstate",3],["line",6],["into",8]]]],[11,"circle_arc","","Draws circle arc.",23,[[["into",8],["rectangle",6],["drawstate",3],["matrix2d",6],["circlearc",3]]]],[8,"SourceRectangled","","Should be implemented by contexts that have source …",null,null],[10,"src_rect","","Adds a source rectangle.",24,[[["scalar",6]]]],[10,"src_rel","","Moves to a relative source rectangle using the current …",24,[[["scalar",6]]]],[10,"src_flip_h","","Flips the source rectangle horizontally.",24,[[]]],[10,"src_flip_v","","Flips the source rectangle vertically.",24,[[]]],[10,"src_flip_hv","","Flips the source rectangle horizontally and vertically.",24,[[]]],[8,"Rectangled","","Should be implemented by contexts that have rectangle …",null,null],[10,"margin","","Shrinks the current rectangle equally by all sides.",25,[[["scalar",6]]]],[11,"expand","","Expands the current rectangle equally by all sides.",25,[[["scalar",6]]]],[10,"rel","","Moves to a relative rectangle using the current rectangle …",25,[[["scalar",6]]]],[8,"Transformed","","Implemented by contexts that can transform.",null,null],[10,"append_transform","","Appends transform to the current one.",26,[[["matrix2d",6]]]],[10,"prepend_transform","","Prepends transform to the current one.",26,[[["matrix2d",6]]]],[10,"trans","","Translate x and y in local coordinates.",26,[[["scalar",6]]]],[11,"rot_deg","","Rotates degrees in local coordinates.",26,[[["scalar",6]]]],[10,"rot_rad","","Rotate radians in local coordinates.",26,[[["scalar",6]]]],[10,"orient","","Orients x axis to look at point locally.",26,[[["scalar",6]]]],[10,"scale","","Scales in local coordinates.",26,[[["scalar",6]]]],[11,"trans_pos","","Translate position in local coordinates.",26,[[["vec2d",6],["into",8]]]],[11,"orient_pos","","Orients x axis to look at point locally.",26,[[["vec2d",6],["into",8]]]],[11,"scale_pos","","Scales in local coordinates.",26,[[["vec2d",6],["into",8]]]],[11,"zoom","","Scales in both directions in local coordinates.",26,[[["scalar",6]]]],[11,"flip_v","","Flips vertically in local coordinates.",26,[[]]],[11,"flip_h","","Flips horizontally in local coordinates.",26,[[]]],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",26,[[]]],[10,"shear","","Shears in local coordinates.",26,[[["scalar",6]]]],[11,"shear_pos","","Shears in local coordinates.",26,[[["vec2d",6],["into",8]]]],[8,"Colored","","Implemented by contexts that contains color.",null,null],[10,"mul_rgba","","Multiplies with red, green, blue and alpha values.",27,[[["colorcomponent",6]]]],[11,"tint","","Mixes the current color with white.",27,[[["colorcomponent",6]]]],[11,"shade","","Mixes the current color with black.",27,[[["colorcomponent",6]]]],[11,"hue_deg","","Rotates hue by degrees.",27,[[["colorcomponent",6]]]],[10,"hue_rad","","Rotates hue by radians.",27,[[["colorcomponent",6]]]],[8,"Radians","","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",20,[[]]],[10,"_180","","Returns radians corresponding to 180 degrees.",20,[[]]],[10,"_360","","Returns radians corresponding to 360 degrees.",20,[[]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to …",20,[[]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to …",20,[[]]],[17,"BACK_END_MAX_VERTEX_COUNT","","Any triangulation method called on the back-end never …",null,null],[5,"clear","","Clears the screen.",null,[[["color",6]]]],[5,"image","","Draws image.",null,[[["matrix2d",6]]]],[5,"ellipse_from_to","","Draws ellipse by corners.",null,[[["into",8],["vec2d",6],["color",6],["matrix2d",6]]]],[5,"ellipse","","Draws ellipse.",null,[[["into",8],["rectangle",6],["color",6],["matrix2d",6]]]],[5,"circle_arc","","Draws arc",null,[[["into",8],["rectangle",6],["scalar",6],["color",6],["matrix2d",6],["radius",6]]]],[5,"rectangle_from_to","","Draws rectangle.",null,[[["into",8],["vec2d",6],["color",6],["matrix2d",6]]]],[5,"rectangle","","Draws rectangle.",null,[[["into",8],["rectangle",6],["color",6],["matrix2d",6]]]],[5,"polygon","","Draws polygon.",null,[[["polygon",6],["matrix2d",6],["color",6]]]],[5,"line_from_to","","Draws line between points.",null,[[["into",8],["color",6],["vec2d",6],["matrix2d",6],["radius",6]]]],[5,"line","","Draws line.",null,[[["line",6],["matrix2d",6],["color",6],["into",8],["radius",6]]]],[5,"text","","Draws text.",null,[[["fontsize",6],["color",6],["matrix2d",6],["str",15]],["result",4]]],[11,"from","graphics::draw_state","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","graphics::character","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","graphics::context","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","graphics::polygon","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","graphics::line","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","graphics::circle_arc","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","graphics::ellipse","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","graphics::rectangle","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","graphics::image","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","graphics::text","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","graphics::grid","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","graphics::glyph_cache::rusttype","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","graphics::texture_packer","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","graphics","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"eq","","",22,[[["viewport",3]],["bool",15]]],[11,"ne","","",22,[[["viewport",3]],["bool",15]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",22,[[],["viewport",3]]],[11,"src_rect","","",29,[[["scalar",6]]]],[11,"src_rel","","",29,[[["scalar",6]]]],[11,"src_flip_h","","",29,[[]]],[11,"src_flip_v","","",29,[[]]],[11,"src_flip_hv","","",29,[[]]],[11,"margin","","",30,[[["scalar",6]]]],[11,"rel","","",30,[[["scalar",6]]]],[11,"append_transform","","",31,[[["matrix2d",6]]]],[11,"prepend_transform","","",31,[[["matrix2d",6]]]],[11,"trans","","",31,[[["scalar",6]]]],[11,"rot_rad","","",31,[[["scalar",6]]]],[11,"orient","","",31,[[["scalar",6]]]],[11,"scale","","",31,[[["scalar",6]]]],[11,"shear","","",31,[[["scalar",6]]]],[11,"append_transform","graphics::context","",5,[[["matrix2d",6]]]],[11,"prepend_transform","","",5,[[["matrix2d",6]]]],[11,"trans","","",5,[[["scalar",6]]]],[11,"rot_rad","","",5,[[["scalar",6]]]],[11,"orient","","",5,[[["scalar",6]]]],[11,"scale","","",5,[[["scalar",6]]]],[11,"shear","","",5,[[["scalar",6]]]],[11,"mul_rgba","graphics","",32,[[["colorcomponent",6]]]],[11,"hue_rad","","",32,[[["colorcomponent",6]]]],[11,"mul_rgba","graphics::line","",8,[[["colorcomponent",6]]]],[11,"hue_rad","","",8,[[["colorcomponent",6]]]],[11,"mul_rgba","graphics::ellipse","",11,[[["colorcomponent",6]]]],[11,"hue_rad","","",11,[[["colorcomponent",6]]]],[11,"mul_rgba","graphics::rectangle","",14,[[["colorcomponent",6]]]],[11,"hue_rad","","",14,[[["colorcomponent",6]]]],[11,"character","graphics::glyph_cache::rusttype","",18,[[["fontsize",6],["char",15]],[["result",4],["character",3]]]],[11,"next","graphics::grid","",28,[[],["option",4]]],[11,"clone","graphics::draw_state","",0,[[],["drawstate",3]]],[11,"clone","","",1,[[],["blend",4]]],[11,"clone","","",2,[[],["stencil",4]]],[11,"clone","graphics::character","",3,[[],["character",3]]],[11,"clone","graphics::context","",5,[[],["context",3]]],[11,"clone","graphics::polygon","",6,[[],["polygon",3]]],[11,"clone","graphics::line","",7,[[],["shape",4]]],[11,"clone","","",8,[[],["line",3]]],[11,"clone","graphics::circle_arc","",9,[[],["circlearc",3]]],[11,"clone","graphics::ellipse","",10,[[],["border",3]]],[11,"clone","","",11,[[],["ellipse",3]]],[11,"clone","graphics::rectangle","",12,[[],["shape",4]]],[11,"clone","","",13,[[],["border",3]]],[11,"clone","","",14,[[],["rectangle",3]]],[11,"clone","graphics::image","",15,[[],["image",3]]],[11,"clone","graphics::text","",16,[[],["text",3]]],[11,"clone","graphics::grid","",17,[[],["grid",3]]],[11,"clone","","",28,[[],["gridcells",3]]],[11,"default","graphics::draw_state","",0,[[]]],[11,"eq","","",0,[[["drawstate",3]],["bool",15]]],[11,"ne","","",0,[[["drawstate",3]],["bool",15]]],[11,"eq","","",1,[[["blend",4]],["bool",15]]],[11,"eq","","",2,[[["stencil",4]],["bool",15]]],[11,"ne","","",2,[[["stencil",4]],["bool",15]]],[11,"partial_cmp","","",0,[[["drawstate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["drawstate",3]],["bool",15]]],[11,"le","","",0,[[["drawstate",3]],["bool",15]]],[11,"gt","","",0,[[["drawstate",3]],["bool",15]]],[11,"ge","","",0,[[["drawstate",3]],["bool",15]]],[11,"partial_cmp","","",1,[[["blend",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["stencil",4]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["stencil",4]],["bool",15]]],[11,"le","","",2,[[["stencil",4]],["bool",15]]],[11,"gt","","",2,[[["stencil",4]],["bool",15]]],[11,"ge","","",2,[[["stencil",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","graphics::grid","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"rectangle","graphics","Draws a rectangle.",23,[[["into",8],["rectangle",6],["drawstate",3],["rectangle",3],["matrix2d",6]]]],[11,"polygon","","Draws a polygon.",23,[[["polygon",6],["drawstate",3],["polygon",3],["matrix2d",6]]]],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",23,[[["polygons",6],["polygon",3],["drawstate",3],["scalar",6],["matrix2d",6]]]],[11,"image","","Draws image.",23,[[["drawstate",3],["matrix2d",6],["image",3]]]],[11,"ellipse","","Draws ellipse.",23,[[["into",8],["rectangle",6],["drawstate",3],["ellipse",3],["matrix2d",6]]]],[11,"line","","Draws line.",23,[[["matrix2d",6],["line",3],["drawstate",3],["line",6],["into",8]]]],[11,"circle_arc","","Draws circle arc.",23,[[["into",8],["rectangle",6],["drawstate",3],["matrix2d",6],["circlearc",3]]]],[11,"expand","","Expands the current rectangle equally by all sides.",25,[[["scalar",6]]]],[11,"rot_deg","","Rotates degrees in local coordinates.",26,[[["scalar",6]]]],[11,"trans_pos","","Translate position in local coordinates.",26,[[["vec2d",6],["into",8]]]],[11,"orient_pos","","Orients x axis to look at point locally.",26,[[["vec2d",6],["into",8]]]],[11,"scale_pos","","Scales in local coordinates.",26,[[["vec2d",6],["into",8]]]],[11,"zoom","","Scales in both directions in local coordinates.",26,[[["scalar",6]]]],[11,"flip_v","","Flips vertically in local coordinates.",26,[[]]],[11,"flip_h","","Flips horizontally in local coordinates.",26,[[]]],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",26,[[]]],[11,"shear_pos","","Shears in local coordinates.",26,[[["vec2d",6],["into",8]]]],[11,"tint","","Mixes the current color with white.",27,[[["colorcomponent",6]]]],[11,"shade","","Mixes the current color with black.",27,[[["colorcomponent",6]]]],[11,"hue_deg","","Rotates hue by degrees.",27,[[["colorcomponent",6]]]],[11,"abs_transform","","Computes absolute transform for 2D graphics, which uses a …",22,[[]]]],"p":[[3,"DrawState"],[4,"Blend"],[4,"Stencil"],[3,"Character"],[8,"CharacterCache"],[3,"Context"],[3,"Polygon"],[4,"Shape"],[3,"Line"],[3,"CircleArc"],[3,"Border"],[3,"Ellipse"],[4,"Shape"],[3,"Border"],[3,"Rectangle"],[3,"Image"],[3,"Text"],[3,"Grid"],[3,"GlyphCache"],[3,"TexturePacker"],[8,"Radians"],[8,"ImageSize"],[3,"Viewport"],[8,"Graphics"],[8,"SourceRectangled"],[8,"Rectangled"],[8,"Transformed"],[8,"Colored"],[3,"GridCells"],[6,"SourceRectangle"],[6,"Rectangle"],[6,"Matrix2d"],[6,"Color"]]},\
"graphics_api_version":{"doc":"A library for storing graphics API versions.","i":[[17,"OPENGL","graphics_api_version","A graphics API developed by Khronos Group. See …",null,null],[17,"VULKAN","","A graphics API developed by Khronos Group. See …",null,null],[17,"DIRECTX","","A graphics API developed by Microsoft. See …",null,null],[17,"METAL","","A graphics API developed by Apple. See …",null,null],[3,"Version","","Stores graphics API version.",null,null],[12,"api","","A string identifying the API.",0,null],[12,"major","","Major version.",0,null],[12,"minor","","Minor version.",0,null],[11,"opengl","","Creates a new OpenGL version.",0,[[["u32",15]],["version",3]]],[11,"vulkan","","Creates a new Vulkan version.",0,[[["u32",15]],["version",3]]],[11,"directx","","Creates a new DirectX version.",0,[[["u32",15]],["version",3]]],[11,"metal","","Creates a new Metal version.",0,[[["u32",15]],["version",3]]],[11,"is_opengl","","Returns <code>true</code> if the API is OpenGL, <code>false</code> otherwise.",0,[[],["bool",15]]],[11,"is_vulkan","","Returns <code>true</code> if the API is Vulkan, <code>false</code> otherwise.",0,[[],["bool",15]]],[11,"is_directx","","Returns <code>true</code> if the API is DirectX, <code>false</code> otherwise.",0,[[],["bool",15]]],[11,"is_metal","","Returns <code>true</code> if the API is metal, <code>false</code> otherwise.",0,[[],["bool",15]]],[3,"UnsupportedGraphicsApiError","","An error for when a graphics API is unsupported.",null,null],[12,"found","","The requiested graphics API.",1,null],[12,"expected","","A list of supported graphics APIs.",1,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",0,[[],["version",3]]],[11,"cmp","","",0,[[["version",3]],["ordering",4]]],[11,"eq","","",0,[[["version",3]],["bool",15]]],[11,"ne","","",0,[[["version",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["version",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["version",3]],["bool",15]]],[11,"le","","",0,[[["version",3]],["bool",15]]],[11,"gt","","",0,[[["version",3]],["bool",15]]],[11,"ge","","",0,[[["version",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]]],"p":[[3,"Version"],[3,"UnsupportedGraphicsApiError"]]},\
"image":{"doc":"OverviewThis crate provides native rust implementations …","i":[[0,"error","image","Contains detailed error representation.",null,null],[4,"ImageError","image::error","The generic error type for image operations.",null,null],[13,"Decoding","","An error was encountered while decoding.",0,null],[13,"Encoding","","An error was encountered while encoding.",0,null],[13,"Parameter","","An error was encountered in input arguments.",0,null],[13,"Limits","","Completing the operation would have required more …",0,null],[13,"Unsupported","","An operation can not be completed by the chosen …",0,null],[13,"IoError","","An error occurred while interacting with the environment.",0,null],[3,"UnsupportedError","","The implementation for an operation was not provided.",null,null],[4,"UnsupportedErrorKind","","Details what feature is not supported.",null,null],[13,"Color","","The required color type can not be handled.",1,null],[13,"Format","","An image format is not supported.",1,null],[13,"GenericFeature","","Some feature specified by string. This is discouraged and …",1,null],[3,"EncodingError","","An error was encountered while encoding an image.",null,null],[3,"ParameterError","","An error was encountered in inputs arguments.",null,null],[4,"ParameterErrorKind","","Details how a parameter is malformed.",null,null],[13,"DimensionMismatch","","The dimensions passed are wrong.",2,null],[13,"FailedAlready","","Repeated an operation for which error that could not be …",2,null],[13,"Generic","","A string describing the parameter. This is discouraged …",2,null],[13,"NoMoreData","","The end of the image has been reached.",2,null],[3,"DecodingError","","An error was encountered while decoding an image.",null,null],[3,"LimitError","","Completing the operation would have required more …",null,null],[4,"LimitErrorKind","","Indicates the limit that prevented an operation from …",null,null],[13,"DimensionError","","The resulting image exceed dimension limits in either …",3,null],[13,"InsufficientMemory","","The operation would have performed an allocation larger …",3,null],[4,"ImageFormatHint","","A best effort representation for image formats.",null,null],[13,"Exact","","The format is known exactly.",4,null],[13,"Name","","The format can be identified by a name.",4,null],[13,"PathExtension","","A common path extension for the format is known.",4,null],[13,"Unknown","","The format is not known or could not be determined.",4,null],[11,"from_format_and_kind","","Create an <code>UnsupportedError</code> for an image with details on …",5,[[["imageformathint",4],["unsupportederrorkind",4]]]],[11,"kind","","Returns the corresponding <code>UnsupportedErrorKind</code> of the …",5,[[],["unsupportederrorkind",4]]],[11,"format_hint","","Returns the image format associated with this error.",5,[[],["imageformathint",4]]],[11,"new","","Create a <code>DecodingError</code> that stems from an arbitrary error …",6,[[["imageformathint",4]]]],[11,"from_format_hint","","Create a <code>DecodingError</code> for an image format.",6,[[["imageformathint",4]]]],[11,"format_hint","","Returns the image format associated with this error.",6,[[],["imageformathint",4]]],[11,"new","","Create an <code>EncodingError</code> that stems from an arbitrary …",7,[[["imageformathint",4]]]],[11,"from_format_hint","","Create an <code>EncodingError</code> for an image format.",7,[[["imageformathint",4]]]],[11,"format_hint","","Return the image format associated with this error.",7,[[],["imageformathint",4]]],[11,"from_kind","","Construct a <code>ParameterError</code> directly from a corresponding …",8,[[["parametererrorkind",4]]]],[11,"kind","","Returns the corresponding <code>ParameterErrorKind</code> of the error.",8,[[],["parametererrorkind",4]]],[11,"from_kind","","Construct a generic <code>LimitError</code> directly from a …",9,[[["limiterrorkind",4]]]],[11,"kind","","Returns the corresponding <code>LimitErrorKind</code> of the error.",9,[[],["limiterrorkind",4]]],[6,"ImageResult","","Result of an image decoding/encoding process",null,null],[0,"buffer","image","Iterators and other auxiliary structure for the …",null,null],[8,"ConvertBuffer","image::buffer","Provides color conversions for whole image buffers.",null,null],[10,"convert","","Converts <code>self</code> to a buffer of type T",10,[[]]],[3,"EnumeratePixels","","Enumerate the pixels of an image.",null,null],[3,"EnumeratePixelsMut","","Enumerate the pixels of an image.",null,null],[3,"EnumerateRows","","Enumerate the rows of an image.",null,null],[3,"EnumerateRowsMut","","Enumerate the rows of an image.",null,null],[3,"Pixels","","Iterate over pixel refs.",null,null],[3,"PixelsMut","","Iterate over mutable pixel refs.",null,null],[3,"Rows","","Iterate over rows of an image",null,null],[3,"RowsMut","","Iterate over mutable rows of an image",null,null],[0,"math","image","Mathematical helper functions and types.",null,null],[0,"nq","image::math","NEUQUANT Neural-Net quantization algorithm by Anthony …",null,null],[3,"NeuQuant","image::math::nq","Neural network color quantizer",null,null],[11,"new","","",11,[[["usize",15],["i32",15]]]],[11,"init","","",11,[[]]],[11,"map_pixel","","",11,[[]]],[11,"index_of","","",11,[[],["usize",15]]],[11,"lookup","","",11,[[["usize",15]],["option",4]]],[0,"utils","image::math","Shared mathematical utility functions.",null,null],[5,"clamp","image::math::utils","Cut value to be inside given range",null,[[]]],[3,"Rect","image::math","A Rectangle defined by its top left corner, width and …",null,null],[12,"x","","The x coordinate of the top left corner.",12,null],[12,"y","","The y coordinate of the top left corner.",12,null],[12,"width","","The rectangle\'s width.",12,null],[12,"height","","The rectangle\'s height.",12,null],[0,"imageops","image","Image Processing Functions",null,null],[0,"colorops","image::imageops","Functions for altering and converting the color of …",null,null],[5,"grayscale","image::imageops::colorops","Convert the supplied image to grayscale",null,[[],[["luma",3],["vec",3],["imagebuffer",3]]]],[5,"invert","","Invert each pixel within the supplied image. This …",null,[[]]],[5,"contrast","","Adjust the contrast of the supplied image. <code>contrast</code> is …",null,[[["f32",15]],[["vec",3],["imagebuffer",3]]]],[5,"contrast_in_place","","Adjust the contrast of the supplied image in place. …",null,[[["f32",15]]]],[5,"brighten","","Brighten the supplied image. <code>value</code> is the amount to …",null,[[["i32",15]],[["vec",3],["imagebuffer",3]]]],[5,"brighten_in_place","","Brighten the supplied image in place. <code>value</code> is the amount …",null,[[["i32",15]]]],[5,"huerotate","","Hue rotate the supplied image. <code>value</code> is the degrees to …",null,[[["i32",15]],[["vec",3],["imagebuffer",3]]]],[5,"huerotate_in_place","","Hue rotate the supplied image in place. <code>value</code> is the …",null,[[["i32",15]]]],[8,"ColorMap","","A color map",null,null],[16,"Color","","The color type on which the map operates on",13,null],[10,"index_of","","Returns the index of the closest match of <code>color</code> in the …",13,[[],["usize",15]]],[11,"lookup","","Looks up color by index in the color map.  If <code>idx</code> is out …",13,[[["usize",15]],["option",4]]],[11,"has_lookup","","Determine if this implementation of ColorMap overrides …",13,[[],["bool",15]]],[10,"map_color","","Maps <code>color</code> to the closest color in the color map.",13,[[]]],[3,"BiLevel","","A bi-level color map",null,null],[5,"dither","","Reduces the colors of the image using the supplied …",null,[[["imagebuffer",3]]]],[5,"index_colors","","Reduces the colors using the supplied <code>color_map</code> and …",null,[[["imagebuffer",3]],[["imagebuffer",3],["luma",3],["vec",3]]]],[4,"FilterType","image::imageops","Available Sampling Filters.",null,null],[13,"Nearest","","Nearest Neighbor",14,null],[13,"Triangle","","Linear Filter",14,null],[13,"CatmullRom","","Cubic Filter",14,null],[13,"Gaussian","","Gaussian Filter",14,null],[13,"Lanczos3","","Lanczos with window 3",14,null],[5,"flip_horizontal","","Flip an image horizontally",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"flip_horizontal_in_place","","Flip an image horizontally in place.",null,[[]]],[5,"flip_vertical","","Flip an image vertically",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"flip_vertical_in_place","","Flip an image vertically in place.",null,[[]]],[5,"rotate180","","Rotate an image 180 degrees clockwise.",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"rotate180_in_place","","Rotate an image 180 degrees clockwise in place.",null,[[]]],[5,"rotate270","","Rotate an image 270 degrees clockwise.",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"rotate90","","Rotate an image 90 degrees clockwise.",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"rotate180_in","","Rotate an image 180 degrees clockwise and put the result …",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"rotate90_in","","Rotate an image 90 degrees clockwise and put the result …",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"rotate270_in","","Rotate an image 270 degrees clockwise and put the result …",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"flip_horizontal_in","","Flip an image horizontally and put the result into the …",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"flip_vertical_in","","Flip an image vertically and put the result into the …",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"blur","","Performs a Gaussian blur on the supplied image. <code>sigma</code> is …",null,[[["f32",15]],[["vec",3],["imagebuffer",3]]]],[5,"filter3x3","","Perform a 3x3 box filter on the supplied image. <code>kernel</code> is …",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"resize","","Resize the supplied image to the specified dimensions. …",null,[[["u32",15],["filtertype",4]],[["vec",3],["imagebuffer",3]]]],[5,"thumbnail","","Resize the supplied image to the specific dimensions.",null,[[["u32",15]],[["vec",3],["imagebuffer",3]]]],[5,"unsharpen","","Performs an unsharpen mask on the supplied image. <code>sigma</code> …",null,[[["f32",15],["i32",15]],[["vec",3],["imagebuffer",3]]]],[5,"crop","","Return a mutable view into an image The coordinates set …",null,[[["u32",15]],["subimage",3]]],[5,"crop_imm","","Return an immutable view into an image The coordinates …",null,[[["u32",15]],["subimage",3]]],[5,"overlay_bounds","","Calculate the region that can be copied from top to …",null,[[["u32",15]]]],[5,"overlay","","Overlay an image at a given coordinate (x, y)",null,[[["u32",15]]]],[5,"tile","","Tile an image by repeating it multiple times",null,[[]]],[5,"vertical_gradient","","Fill the image with a linear vertical gradient",null,[[]]],[5,"horizontal_gradient","","Fill the image with a linear horizontal gradient",null,[[]]],[5,"replace","","Replace the contents of an image at a given coordinate …",null,[[["u32",15]]]],[0,"io","image","Input and output of images.",null,null],[3,"Reader","image::io","A multi-format image reader.",null,null],[0,"flat","image","Image representations for ffi.",null,null],[3,"FlatSamples","image::flat","A flat buffer over a (multi channel) image.",null,null],[12,"samples","","Underlying linear container holding sample values.",15,null],[12,"layout","","A <code>repr(C)</code> description of the layout of buffer samples.",15,null],[12,"color_hint","","Supplementary color information.",15,null],[3,"SampleLayout","","A ffi compatible description of a sample buffer.",null,null],[12,"channels","","The number of channels in the color representation of the …",16,null],[12,"channel_stride","","Add this to an index to get to the sample in the next …",16,null],[12,"width","","The width of the represented image.",16,null],[12,"width_stride","","Add this to an index to get to the next sample in …",16,null],[12,"height","","The height of the represented image.",16,null],[12,"height_stride","","Add this to an index to get to the next sample in …",16,null],[11,"row_major_packed","","Describe a row-major image packed in all directions.",16,[[["u32",15],["u8",15]]]],[11,"column_major_packed","","Describe a column-major image packed in all directions.",16,[[["u32",15],["u8",15]]]],[11,"strides_cwh","","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.",16,[[]]],[11,"extents","","Get the dimensions <code>(channels, width, height)</code>.",16,[[]]],[11,"bounds","","Tuple of bounds in the order of coordinate inputs.",16,[[]]],[11,"min_length","","Get the minimum length of a buffer such that all …",16,[[],[["usize",15],["option",4]]]],[11,"fits","","Check if a buffer of length <code>len</code> is large enough.",16,[[["usize",15]],["bool",15]]],[11,"has_aliased_samples","","If there are any samples aliasing each other.",16,[[],["bool",15]]],[11,"is_normal","","Check if a buffer fulfills the requirements of a normal …",16,[[["normalform",4]],["bool",15]]],[11,"in_bounds","","Check that the pixel and the channel index are in bounds.",16,[[["u32",15],["u8",15]],["bool",15]]],[11,"index","","Resolve the index of a particular sample.",16,[[["u32",15],["u8",15]],[["usize",15],["option",4]]]],[11,"index_ignoring_bounds","","Get the theoretical position of sample (channel, x, y).",16,[[["usize",15]],[["usize",15],["option",4]]]],[11,"in_bounds_index","","Get an index provided it is inbouds.",16,[[["u32",15],["u8",15]],["usize",15]]],[11,"shrink_to","","Shrink the image to the minimum of current and given …",16,[[["u32",15],["u8",15]]]],[11,"strides_cwh","","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.",15,[[]]],[11,"extents","","Get the dimensions <code>(channels, width, height)</code>.",15,[[]]],[11,"bounds","","Tuple of bounds in the order of coordinate inputs.",15,[[]]],[11,"as_ref","","Get a reference based version.",15,[[],["flatsamples",3]]],[11,"as_mut","","Get a mutable reference based version.",15,[[],["flatsamples",3]]],[11,"to_vec","","Copy the data into an owned vector.",15,[[],[["vec",3],["flatsamples",3]]]],[11,"get_sample","","Get a reference to a single sample.",15,[[["u32",15],["u8",15]],["option",4]]],[11,"get_mut_sample","","Get a mutable reference to a single sample.",15,[[["u32",15],["u8",15]],["option",4]]],[11,"as_view","","View this buffer as an image over some type of pixel.",15,[[],[["error",4],["view",3],["result",4]]]],[11,"as_view_with_mut_samples","","View this buffer but keep mutability at a sample level.",15,[[],[["result",4],["error",4],["view",3]]]],[11,"as_view_mut","","Interpret this buffer as a mutable image.",15,[[],[["error",4],["result",4],["viewmut",3]]]],[11,"as_slice","","View the samples as a slice.",15,[[]]],[11,"as_mut_slice","","View the samples as a slice.",15,[[]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",15,[[],["option",4]]],[11,"image_mut_slice","","Mutable portion of the buffer that holds sample values.",15,[[],["option",4]]],[11,"try_into_buffer","","Move the data into an image buffer.",15,[[],[["imagebuffer",3],["result",4]]]],[11,"min_length","","Get the minimum length of a buffer such that all …",15,[[],[["usize",15],["option",4]]]],[11,"fits","","Check if a buffer of length <code>len</code> is large enough.",15,[[["usize",15]],["bool",15]]],[11,"has_aliased_samples","","If there are any samples aliasing each other.",15,[[],["bool",15]]],[11,"is_normal","","Check if a buffer fulfills the requirements of a normal …",15,[[["normalform",4]],["bool",15]]],[11,"in_bounds","","Check that the pixel and the channel index are in bounds.",15,[[["u32",15],["u8",15]],["bool",15]]],[11,"index","","Resolve the index of a particular sample.",15,[[["u32",15],["u8",15]],[["usize",15],["option",4]]]],[11,"index_ignoring_bounds","","Get the theoretical position of sample (x, y, channel).",15,[[["usize",15]],[["usize",15],["option",4]]]],[11,"in_bounds_index","","Get an index provided it is inbouds.",15,[[["u32",15],["u8",15]],["usize",15]]],[11,"shrink_to","","Shrink the image to the minimum of current and given …",15,[[["u32",15],["u8",15]]]],[11,"with_monocolor","","Create a monocolor image from a single pixel.",15,[[["u32",15]]]],[3,"View","","A flat buffer that can be used as an image view.",null,null],[3,"ViewMut","","A mutable owning version of a flat buffer.",null,null],[4,"Error","","Denotes invalid flat sample buffers when trying to …",null,null],[13,"TooLarge","","The represented image was too large.",17,null],[13,"NormalFormRequired","","The represented image can not use this representation.",17,null],[13,"WrongColor","","The color format did not match the channel count.",17,null],[4,"NormalForm","","Different normal forms of buffers.",null,null],[13,"Unaliased","","No pixel aliases another.",18,null],[13,"PixelPacked","","At least pixels are packed.",18,null],[13,"ImagePacked","","All samples are packed.",18,null],[13,"RowMajorPacked","","The samples are in row-major form and all samples are …",18,null],[13,"ColumnMajorPacked","","The samples are in column-major form and all samples are …",18,null],[11,"into_inner","","Take out the sample buffer.",19,[[],["flatsamples",3]]],[11,"flat","","Get a reference on the inner sample descriptor.",19,[[],["flatsamples",3]]],[11,"samples","","Get a reference on the inner buffer.",19,[[]]],[11,"get_sample","","Get a reference to a selected subpixel if it is in-bounds.",19,[[["u32",15],["u8",15]],["option",4]]],[11,"get_mut_sample","","Get a mutable reference to a selected subpixel if it is …",19,[[["u32",15],["u8",15]],["option",4]]],[11,"min_length","","Get the minimum length of a buffer such that all …",19,[[],["usize",15]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",19,[[]]],[11,"image_mut_slice","","Return the mutable portion of the buffer that holds …",19,[[]]],[11,"shrink_to","","Shrink the inner image.",19,[[["u32",15]]]],[11,"try_upgrade","","Try to convert this into an image with mutable pixels.",19,[[],[["result",4],["viewmut",3]]]],[11,"into_inner","","Take out the sample buffer.",20,[[],["flatsamples",3]]],[11,"flat","","Get a reference on the sample buffer descriptor.",20,[[],["flatsamples",3]]],[11,"samples","","Get a reference on the inner buffer.",20,[[]]],[11,"min_length","","Get the minimum length of a buffer such that all …",20,[[],["usize",15]]],[11,"get_sample","","Get a reference to a selected subpixel.",20,[[["u32",15],["u8",15]],["option",4]]],[11,"get_mut_sample","","Get a mutable reference to a selected sample.",20,[[["u32",15],["u8",15]],["option",4]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",20,[[]]],[11,"image_mut_slice","","Return the mutable buffer that holds sample values.",20,[[]]],[11,"shrink_to","","Shrink the inner image.",20,[[["u32",15]]]],[0,"codecs","image","Encoding and decoding for various image file formats.",null,null],[0,"bmp","image::codecs","Decoding and Encoding of BMP Images",null,null],[3,"BmpDecoder","image::codecs::bmp","A bmp decoder",null,null],[3,"BmpEncoder","","The representation of a BMP encoder.",null,null],[6,"BMPEncoder","","BMP Encoder",null,null],[0,"dds","image::codecs","Decoding of DDS images",null,null],[3,"DdsDecoder","image::codecs::dds","The representation of a DDS decoder",null,null],[11,"new","","Create a new decoder that decodes from the stream <code>r</code>",21,[[],["imageresult",6]]],[0,"dxt","image::codecs","Decoding of DXT (S3TC) compression",null,null],[4,"DXTVariant","image::codecs::dxt","What version of DXT compression are we using? Note that …",null,null],[13,"DXT1","","The DXT1 format. 48 bytes of RGB data in a 4x4 pixel …",22,null],[13,"DXT3","","The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel …",22,null],[13,"DXT5","","The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel …",22,null],[6,"DxtVariant","","DXT compression version.",null,null],[11,"color_type","","Returns the color type that is stored in this DXT variant",22,[[],["colortype",4]]],[3,"DxtDecoder","","DXT decoder",null,null],[11,"new","","Create a new DXT decoder that decodes from the stream <code>r</code>. …",23,[[["u32",15],["dxtvariant",4]],[["dxtdecoder",3],["imageerror",4],["result",4]]]],[3,"DxtReader","","DXT reader",null,null],[6,"DXTReader","","DXT reader",null,null],[3,"DxtEncoder","","DXT encoder",null,null],[6,"DXTEncoder","","DXT encoder",null,null],[11,"new","","Create a new encoder that writes its output to <code>w</code>",24,[[],["dxtencoder",3]]],[11,"encode","","Encodes the image data <code>data</code> that has dimensions <code>width</code> and …",24,[[["u32",15],["dxtvariant",4]],["imageresult",6]]],[0,"farbfeld","image::codecs","Decoding of farbfeld images",null,null],[3,"FarbfeldReader","image::codecs::farbfeld","farbfeld Reader",null,null],[3,"FarbfeldDecoder","","farbfeld decoder",null,null],[11,"new","","Creates a new decoder that decodes from the stream <code>r</code>",25,[[],[["farbfelddecoder",3],["imageresult",6]]]],[3,"FarbfeldEncoder","","farbfeld encoder",null,null],[11,"new","","Create a new encoder that writes its output to <code>w</code>",26,[[],["farbfeldencoder",3]]],[11,"encode","","Encodes the image <code>data</code> (native endian) that has …",26,[[["u32",15]],["imageresult",6]]],[0,"gif","image::codecs","Decoding of GIF Images",null,null],[3,"GifDecoder","image::codecs::gif","GIF decoder",null,null],[11,"new","","Creates a new decoder that decodes the input steam <code>r</code>",27,[[],[["imageresult",6],["gifdecoder",3]]]],[3,"GifReader","","Wrapper struct around a <code>Cursor<Vec<u8>></code>",null,null],[4,"Repeat","","Number of repetitions for a GIF animation",null,null],[13,"Finite","","Finite number of repetitions",28,null],[13,"Infinite","","Looping GIF",28,null],[3,"GifEncoder","","GIF encoder.",null,null],[6,"Encoder","","GIF encoder",null,null],[11,"new","","Creates a new GIF encoder.",29,[[],["gifencoder",3]]],[11,"new_with_speed","","Create a new GIF encoder, and has the speed parameter …",29,[[["i32",15]],["gifencoder",3]]],[11,"set_repeat","","Set the repeat behaviour of the encoded GIF",29,[[["repeat",4]],["imageresult",6]]],[11,"encode","","Encode a single image.",29,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"encode_frame","","Encode one frame of animation.",29,[[["frame",3]],["imageresult",6]]],[11,"encode_frames","","Encodes Frames. Consider using <code>try_encode_frames</code> instead …",29,[[],["imageresult",6]]],[11,"try_encode_frames","","Try to encode a collection of …",29,[[],["imageresult",6]]],[0,"hdr","image::codecs","Decoding of Radiance HDR Images",null,null],[3,"HdrAdapter","image::codecs::hdr","Adapter to conform to <code>ImageDecoder</code> trait",null,null],[6,"HDRAdapter","","HDR Adapter",null,null],[3,"HdrReader","","Wrapper struct around a <code>Cursor<Vec<u8>></code>",null,null],[17,"SIGNATURE","","Radiance HDR file signature",null,null],[3,"HdrDecoder","","An Radiance HDR decoder",null,null],[3,"Rgbe8Pixel","","Refer to wikipedia",null,null],[12,"c","","Color components",30,null],[12,"e","","Exponent",30,null],[6,"RGBE8Pixel","","Refer to wikipedia",null,null],[5,"rgbe8","","Creates <code>RGBE8Pixel</code> from components",null,[[["u8",15]],["rgbe8pixel",3]]],[3,"HdrImageDecoderIterator","","Scanline buffered pixel by pixel iterator",null,null],[6,"HDRImageDecoderIterator","","Scanline buffered pixel by pixel iterator",null,null],[3,"HdrMetadata","","Metadata for Radiance HDR image",null,null],[12,"width","","Width of decoded image. It could be either scanline …",31,null],[12,"height","","Height of decoded image. It depends on orientation too.",31,null],[12,"orientation","","Orientation matrix. For standard orientation it is …",31,null],[12,"exposure","","Divide color values by exposure to get to get physical …",31,null],[12,"color_correction","","Divide color values by corresponding tuple member (r, g, …",31,null],[12,"pixel_aspect_ratio","","Pixel height divided by pixel width",31,null],[12,"custom_attributes","","All lines contained in image header are put here. …",31,null],[6,"HDRMetadata","","HDR MetaData",null,null],[5,"read_raw_file","","Helper function for reading raw 3-channel f32 images",null,[[["path",3],["asref",8]],[["result",6],["vec",3]]]],[3,"HdrEncoder","","Radiance HDR encoder",null,null],[6,"HDREncoder","","HDR Encoder",null,null],[5,"to_rgbe8","","Converts <code>Rgb<f32></code> into <code>RGBE8Pixel</code>",null,[[["rgb",3],["f32",15]],["rgbe8pixel",3]]],[0,"ico","image::codecs","Decoding and Encoding of ICO files",null,null],[3,"IcoDecoder","image::codecs::ico","An ico decoder",null,null],[3,"IcoEncoder","","ICO encoder",null,null],[6,"ICOEncoder","","ICO encoder",null,null],[0,"jpeg","image::codecs","Decoding and Encoding of JPEG Images",null,null],[3,"JpegDecoder","image::codecs::jpeg","JPEG decoder",null,null],[3,"JpegEncoder","","The representation of a JPEG encoder",null,null],[3,"PixelDensity","","Represents the pixel density of an image",null,null],[12,"density","","A couple of values for (Xdensity, Ydensity)",32,null],[12,"unit","","The unit in which the density is measured",32,null],[4,"PixelDensityUnit","","Represents a unit in which the density of an image is …",null,null],[13,"PixelAspectRatio","","Represents the absence of a unit, the values indicate …",33,null],[13,"Inches","","Pixels per inch (2.54 cm)",33,null],[13,"Centimeters","","Pixels per centimeter",33,null],[6,"JPEGEncoder","","JPEG Encoder",null,null],[0,"png","image::codecs","Decoding and Encoding of PNG Images",null,null],[3,"PngReader","image::codecs::png","Png Reader",null,null],[6,"PNGReader","","PNG Reader",null,null],[3,"PngDecoder","","PNG decoder",null,null],[11,"new","","Creates a new decoder that decodes from the stream <code>r</code>",34,[[],[["pngdecoder",3],["imageresult",6]]]],[11,"apng","","Turn this into an iterator over the animation frames.",34,[[],["apngdecoder",3]]],[11,"is_apng","","Returns if the image contains an animation.",34,[[],["bool",15]]],[3,"ApngDecoder","","An <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.",null,null],[3,"PngEncoder","","PNG encoder",null,null],[6,"PNGEncoder","","PNG Encoder",null,null],[4,"CompressionType","","Compression level of a PNG encoder. The default setting …",null,null],[13,"Default","","Default compression level",35,null],[13,"Fast","","Fast, minimal compression",35,null],[13,"Best","","High compression level",35,null],[13,"Huffman","","Huffman coding compression",35,null],[13,"Rle","","Run-length encoding compression",35,null],[4,"FilterType","","Filter algorithms used to process image data to improve …",null,null],[13,"NoFilter","","No processing done, best used for low bit depth greyscale …",36,null],[13,"Sub","","Filters based on previous pixel in the same scanline",36,null],[13,"Up","","Filters based on the scanline above",36,null],[13,"Avg","","Filters based on the average of left and right neighbor …",36,null],[13,"Paeth","","Algorithm that takes into account the left, upper left, …",36,null],[11,"new","","Create a new encoder that writes its output to <code>w</code>",37,[[],["pngencoder",3]]],[11,"new_with_quality","","Create a new encoder that writes its output to <code>w</code> with …",37,[[["filtertype",4],["compressiontype",4]],["pngencoder",3]]],[11,"encode","","Encodes the image <code>data</code> that has dimensions <code>width</code> and …",37,[[["u32",15],["colortype",4]],["imageresult",6]]],[0,"pnm","image::codecs","Decoding of netpbm image formats (pbm, pgm, ppm and pam).",null,null],[3,"PnmDecoder","image::codecs::pnm","PNM decoder",null,null],[3,"PnmEncoder","","Encodes images to any of the <code>pnm</code> image formats.",null,null],[6,"PNMEncoder","","PNM Encoder",null,null],[3,"ArbitraryHeader","","Header produced by a <code>pam</code> file (\\\"Portable Arbitrary Map\\\")",null,null],[12,"height","","Height of the image file",38,null],[12,"width","","Width of the image file",38,null],[12,"depth","","Number of color channels",38,null],[12,"maxval","","Maximum sample value within the image",38,null],[12,"tupltype","","Color interpretation of image pixels",38,null],[4,"ArbitraryTuplType","","Standardized tuple type specifiers in the header of a <code>pam</code>.",null,null],[13,"BlackAndWhite","","Pixels are either black (0) or white (1)",39,null],[13,"BlackAndWhiteAlpha","","Pixels are either black (0) or white (1) and a second …",39,null],[13,"Grayscale","","Pixels represent the amount of white",39,null],[13,"GrayscaleAlpha","","Grayscale with an additional alpha channel",39,null],[13,"RGB","","Three channels: Red, Green, Blue",39,null],[13,"RGBAlpha","","Four channels: Red, Green, Blue, Alpha",39,null],[13,"Custom","","An image format which is not standardized",39,null],[3,"BitmapHeader","","Header produced by a <code>pbm</code> file (\\\"Portable Bit Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",40,null],[12,"height","","Height of the image file",40,null],[12,"width","","Width of the image file",40,null],[3,"GraymapHeader","","Header produced by a <code>pgm</code> file (\\\"Portable Gray Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",41,null],[12,"height","","Height of the image file",41,null],[12,"width","","Width of the image file",41,null],[12,"maxwhite","","Maximum sample value within the image",41,null],[3,"PixmapHeader","","Header produced by a <code>ppm</code> file (\\\"Portable Pixel Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",42,null],[12,"height","","Height of the image file",42,null],[12,"width","","Width of the image file",42,null],[12,"maxval","","Maximum sample value within the image",42,null],[3,"PnmHeader","","Stores the complete header data of a file.",null,null],[6,"PNMHeader","","PNM Header",null,null],[4,"PNMSubtype","","Denotes the category of the magic number",null,null],[13,"Bitmap","","Magic numbers P1 and P4",43,null],[13,"Graymap","","Magic numbers P2 and P5",43,null],[13,"Pixmap","","Magic numbers P3 and P6",43,null],[13,"ArbitraryMap","","Magic number P7",43,null],[6,"PnmSubtype","","PNM Subtype",null,null],[4,"SampleEncoding","","The kind of encoding used to store sample values",null,null],[13,"Binary","","Samples are unsigned binary integers in big endian",44,null],[13,"Ascii","","Samples are encoded as decimal ascii strings separated by …",44,null],[0,"tga","image::codecs","Decoding of TGA Images",null,null],[3,"TgaDecoder","image::codecs::tga","The representation of a TGA decoder",null,null],[3,"TgaEncoder","","TGA encoder.",null,null],[0,"tiff","image::codecs","Decoding and Encoding of TIFF Images",null,null],[3,"TiffDecoder","image::codecs::tiff","Decoder for TIFF images.",null,null],[11,"new","","Create a new TiffDecoder.",45,[[],[["tiffdecoder",3],["imageerror",4],["result",4]]]],[3,"TiffReader","","Wrapper struct around a <code>Cursor<Vec<u8>></code>",null,null],[3,"TiffEncoder","","Encoder for tiff images",null,null],[11,"new","","Create a new encoder that writes its output to <code>w</code>",46,[[],["tiffencoder",3]]],[11,"encode","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …",46,[[["u32",15],["colortype",4]],["imageresult",6]]],[0,"webp","image::codecs","Decoding of WebP Images",null,null],[0,"vp8","image::codecs::webp","An implementation of the VP8 Video Codec",null,null],[3,"Frame","image::codecs::webp::vp8","A Representation of the last decoded video frame",null,null],[12,"width","","The width of the luma plane",47,null],[12,"height","","The height of the luma plane",47,null],[12,"ybuf","","The luma plane of the frame",47,null],[12,"keyframe","","Indicates whether this frame is a keyframe",47,null],[12,"for_display","","Indicates whether this frame is intended for display",47,null],[12,"pixel_type","","The pixel type of the frame as defined by Section 9.2 of …",47,null],[3,"Vp8Decoder","","VP8 Decoder",null,null],[11,"new","","Create a new decoder. The reader must present a raw vp8 …",48,[[],["vp8decoder",3]]],[11,"decode_frame","","Decodes the current frame and returns a reference to it",48,[[],[["imageresult",6],["frame",3]]]],[3,"WebPDecoder","image::codecs::webp","WebP Image format decoder. Currently only supportes the …",null,null],[0,"bmp","image","Decoding and Encoding of BMP Images",null,null],[6,"BMPEncoder","image::bmp","BMP Encoder",null,null],[3,"BmpDecoder","","A bmp decoder",null,null],[3,"BmpEncoder","","The representation of a BMP encoder.",null,null],[0,"dds","image","Decoding of DDS images",null,null],[0,"dxt","","Decoding of DXT (S3TC) compression",null,null],[0,"farbfeld","","Decoding of farbfeld images",null,null],[0,"gif","","Decoding of GIF Images",null,null],[0,"hdr","","Decoding of Radiance HDR Images",null,null],[5,"read_raw_file","image::hdr","Helper function for reading raw 3-channel f32 images",null,[[["path",3],["asref",8]],[["result",6],["vec",3]]]],[5,"rgbe8","","Creates <code>RGBE8Pixel</code> from components",null,[[["u8",15]],["rgbe8pixel",3]]],[5,"to_rgbe8","","Converts <code>Rgb<f32></code> into <code>RGBE8Pixel</code>",null,[[["rgb",3],["f32",15]],["rgbe8pixel",3]]],[6,"HDRAdapter","","HDR Adapter",null,null],[6,"HDREncoder","","HDR Encoder",null,null],[6,"HDRImageDecoderIterator","","Scanline buffered pixel by pixel iterator",null,null],[6,"HDRMetadata","","HDR MetaData",null,null],[3,"HdrAdapter","","Adapter to conform to <code>ImageDecoder</code> trait",null,null],[3,"HdrDecoder","","An Radiance HDR decoder",null,null],[3,"HdrEncoder","","Radiance HDR encoder",null,null],[3,"HdrImageDecoderIterator","","Scanline buffered pixel by pixel iterator",null,null],[3,"HdrMetadata","","Metadata for Radiance HDR image",null,null],[12,"width","","Width of decoded image. It could be either scanline …",31,null],[12,"height","","Height of decoded image. It depends on orientation too.",31,null],[12,"orientation","","Orientation matrix. For standard orientation it is …",31,null],[12,"exposure","","Divide color values by exposure to get to get physical …",31,null],[12,"color_correction","","Divide color values by corresponding tuple member (r, g, …",31,null],[12,"pixel_aspect_ratio","","Pixel height divided by pixel width",31,null],[12,"custom_attributes","","All lines contained in image header are put here. …",31,null],[3,"HdrReader","","Wrapper struct around a <code>Cursor<Vec<u8>></code>",null,null],[6,"RGBE8Pixel","","Refer to wikipedia",null,null],[3,"Rgbe8Pixel","","Refer to wikipedia",null,null],[12,"c","","Color components",30,null],[12,"e","","Exponent",30,null],[17,"SIGNATURE","","Radiance HDR file signature",null,null],[0,"ico","image","Decoding and Encoding of ICO files",null,null],[6,"ICOEncoder","image::ico","ICO encoder",null,null],[3,"IcoDecoder","","An ico decoder",null,null],[3,"IcoEncoder","","ICO encoder",null,null],[0,"jpeg","image","Decoding and Encoding of JPEG Images",null,null],[6,"JPEGEncoder","image::jpeg","JPEG Encoder",null,null],[3,"JpegDecoder","","JPEG decoder",null,null],[3,"JpegEncoder","","The representation of a JPEG encoder",null,null],[3,"PixelDensity","","Represents the pixel density of an image",null,null],[12,"density","","A couple of values for (Xdensity, Ydensity)",32,null],[12,"unit","","The unit in which the density is measured",32,null],[4,"PixelDensityUnit","","Represents a unit in which the density of an image is …",null,null],[13,"PixelAspectRatio","","Represents the absence of a unit, the values indicate …",33,null],[13,"Inches","","Pixels per inch (2.54 cm)",33,null],[13,"Centimeters","","Pixels per centimeter",33,null],[0,"png","image","Decoding and Encoding of PNG Images",null,null],[0,"pnm","","Decoding and Encoding of netpbm image formats (pbm, pgm, …",null,null],[3,"ArbitraryHeader","image::pnm","Header produced by a <code>pam</code> file (\\\"Portable Arbitrary Map\\\")",null,null],[12,"height","","Height of the image file",38,null],[12,"width","","Width of the image file",38,null],[12,"depth","","Number of color channels",38,null],[12,"maxval","","Maximum sample value within the image",38,null],[12,"tupltype","","Color interpretation of image pixels",38,null],[4,"ArbitraryTuplType","","Standardized tuple type specifiers in the header of a <code>pam</code>.",null,null],[13,"BlackAndWhite","","Pixels are either black (0) or white (1)",39,null],[13,"BlackAndWhiteAlpha","","Pixels are either black (0) or white (1) and a second …",39,null],[13,"Grayscale","","Pixels represent the amount of white",39,null],[13,"GrayscaleAlpha","","Grayscale with an additional alpha channel",39,null],[13,"RGB","","Three channels: Red, Green, Blue",39,null],[13,"RGBAlpha","","Four channels: Red, Green, Blue, Alpha",39,null],[13,"Custom","","An image format which is not standardized",39,null],[3,"BitmapHeader","","Header produced by a <code>pbm</code> file (\\\"Portable Bit Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",40,null],[12,"height","","Height of the image file",40,null],[12,"width","","Width of the image file",40,null],[3,"GraymapHeader","","Header produced by a <code>pgm</code> file (\\\"Portable Gray Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",41,null],[12,"height","","Height of the image file",41,null],[12,"width","","Width of the image file",41,null],[12,"maxwhite","","Maximum sample value within the image",41,null],[6,"PNMEncoder","","PNM Encoder",null,null],[6,"PNMHeader","","PNM Header",null,null],[4,"PNMSubtype","","Denotes the category of the magic number",null,null],[13,"Bitmap","","Magic numbers P1 and P4",43,null],[13,"Graymap","","Magic numbers P2 and P5",43,null],[13,"Pixmap","","Magic numbers P3 and P6",43,null],[13,"ArbitraryMap","","Magic number P7",43,null],[3,"PixmapHeader","","Header produced by a <code>ppm</code> file (\\\"Portable Pixel Map\\\")",null,null],[12,"encoding","","Binary or Ascii encoded file",42,null],[12,"height","","Height of the image file",42,null],[12,"width","","Width of the image file",42,null],[12,"maxval","","Maximum sample value within the image",42,null],[3,"PnmDecoder","","PNM decoder",null,null],[3,"PnmEncoder","","Encodes images to any of the <code>pnm</code> image formats.",null,null],[3,"PnmHeader","","Stores the complete header data of a file.",null,null],[6,"PnmSubtype","","PNM Subtype",null,null],[4,"SampleEncoding","","The kind of encoding used to store sample values",null,null],[13,"Binary","","Samples are unsigned binary integers in big endian",44,null],[13,"Ascii","","Samples are encoded as decimal ascii strings separated by …",44,null],[0,"tga","image","Decoding and Encoding of TGA Images",null,null],[3,"TgaDecoder","image::tga","The representation of a TGA decoder",null,null],[3,"TgaEncoder","","TGA encoder.",null,null],[0,"tiff","image","Decoding and Encoding of TIFF Images",null,null],[0,"webp","","Decoding of WebP Images",null,null],[3,"WebPDecoder","image::webp","WebP Image format decoder. Currently only supportes the …",null,null],[4,"ColorType","image","An enumeration over supported color types and bit depths",null,null],[13,"L8","","Pixel is 8-bit luminance",49,null],[13,"La8","","Pixel is 8-bit luminance with an alpha channel",49,null],[13,"Rgb8","","Pixel contains 8-bit R, G and B channels",49,null],[13,"Rgba8","","Pixel is 8-bit RGB with an alpha channel",49,null],[13,"L16","","Pixel is 16-bit luminance",49,null],[13,"La16","","Pixel is 16-bit luminance with an alpha channel",49,null],[13,"Rgb16","","Pixel is 16-bit RGB",49,null],[13,"Rgba16","","Pixel is 16-bit RGBA",49,null],[13,"Bgr8","","Pixel contains 8-bit B, G and R channels",49,null],[13,"Bgra8","","Pixel is 8-bit BGR with an alpha channel",49,null],[4,"ExtendedColorType","","An enumeration of color types encountered in image …",null,null],[13,"A8","","Pixel is 8-bit alpha",50,null],[13,"L1","","Pixel is 1-bit luminance",50,null],[13,"La1","","Pixel is 1-bit luminance with an alpha channel",50,null],[13,"Rgb1","","Pixel contains 1-bit R, G and B channels",50,null],[13,"Rgba1","","Pixel is 1-bit RGB with an alpha channel",50,null],[13,"L2","","Pixel is 2-bit luminance",50,null],[13,"La2","","Pixel is 2-bit luminance with an alpha channel",50,null],[13,"Rgb2","","Pixel contains 2-bit R, G and B channels",50,null],[13,"Rgba2","","Pixel is 2-bit RGB with an alpha channel",50,null],[13,"L4","","Pixel is 4-bit luminance",50,null],[13,"La4","","Pixel is 4-bit luminance with an alpha channel",50,null],[13,"Rgb4","","Pixel contains 4-bit R, G and B channels",50,null],[13,"Rgba4","","Pixel is 4-bit RGB with an alpha channel",50,null],[13,"L8","","Pixel is 8-bit luminance",50,null],[13,"La8","","Pixel is 8-bit luminance with an alpha channel",50,null],[13,"Rgb8","","Pixel contains 8-bit R, G and B channels",50,null],[13,"Rgba8","","Pixel is 8-bit RGB with an alpha channel",50,null],[13,"L16","","Pixel is 16-bit luminance",50,null],[13,"La16","","Pixel is 16-bit luminance with an alpha channel",50,null],[13,"Rgb16","","Pixel contains 16-bit R, G and B channels",50,null],[13,"Rgba16","","Pixel is 16-bit RGB with an alpha channel",50,null],[13,"Bgr8","","Pixel contains 8-bit B, G and R channels",50,null],[13,"Bgra8","","Pixel is 8-bit BGR with an alpha channel",50,null],[13,"Unknown","","Pixel is of unknown color type with the specified bits …",50,null],[3,"Luma","","Grayscale colors",null,null],[12,"0","","",51,null],[3,"LumaA","","Grayscale colors + alpha channel",null,null],[12,"0","","",52,null],[3,"Rgb","","RGB colors",null,null],[12,"0","","",53,null],[3,"Rgba","","RGB colors + alpha channel",null,null],[12,"0","","",54,null],[3,"Bgr","","BGR colors",null,null],[12,"0","","",55,null],[3,"Bgra","","BGR colors + alpha channel",null,null],[12,"0","","",56,null],[8,"AnimationDecoder","","AnimationDecoder trait",null,null],[10,"into_frames","","Consume the decoder producing a series of frames.",57,[[],["frames",3]]],[8,"GenericImage","","A trait for manipulating images.",null,null],[16,"InnerImage","","Underlying image type. This is mainly used by SubImages …",58,null],[10,"get_pixel_mut","","Gets a reference to the mutable pixel at location <code>(x, y)</code>. …",58,[[["u32",15]]]],[10,"put_pixel","","Put a pixel at location (x, y). Indexed from top left.",58,[[["u32",15]]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y). Indexed from top left.",58,[[["u32",15]]]],[10,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha …",58,[[["u32",15]]]],[11,"copy_from","","Copies all of the pixels from another image into this …",58,[[["u32",15]],["imageresult",6]]],[11,"copy_within","","Copies all of the pixels from one part of this image to …",58,[[["u32",15],["rect",3]],["bool",15]]],[10,"inner_mut","","Returns a mutable reference to the underlying image.",58,[[]]],[11,"sub_image","","Returns a mutable subimage that is a view into this image.…",58,[[["u32",15]],["subimage",3]]],[8,"GenericImageView","","Trait to inspect an image.",null,null],[16,"Pixel","","The type of pixel.",59,null],[16,"InnerImageView","","Underlying image type. This is mainly used by SubImages …",59,null],[10,"dimensions","","The width and height of this image.",59,[[]]],[11,"width","","The width of this image.",59,[[],["u32",15]]],[11,"height","","The height of this image.",59,[[],["u32",15]]],[10,"bounds","","The bounding rectangle of this image.",59,[[]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside …",59,[[["u32",15]],["bool",15]]],[10,"get_pixel","","Returns the pixel located at (x, y). Indexed from top …",59,[[["u32",15]]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y). Indexed from top …",59,[[["u32",15]]]],[11,"pixels","","Returns an Iterator over the pixels of this image. The …",59,[[],["pixels",3]]],[10,"inner","","Returns a reference to the underlying image.",59,[[]]],[11,"view","","Returns an subimage that is an immutable view into this …",59,[[["u32",15]],["subimage",3]]],[8,"ImageDecoder","","The trait that all decoders implement",null,null],[16,"Reader","","The type of reader produced by <code>into_reader</code>.",60,null],[10,"dimensions","","Returns a tuple containing the width and height of the …",60,[[]]],[10,"color_type","","Returns the color type of the image data produced by this …",60,[[],["colortype",4]]],[11,"original_color_type","","Retuns the color type of the image file before decoding",60,[[],["extendedcolortype",4]]],[10,"into_reader","","Returns a reader that can be used to obtain the bytes of …",60,[[],["imageresult",6]]],[11,"total_bytes","","Returns the total number of bytes in the decoded image.",60,[[],["u64",15]]],[11,"scanline_bytes","","Returns the minimum number of bytes that can be …",60,[[],["u64",15]]],[11,"read_image","","Returns all the bytes in the image.",60,[[],["imageresult",6]]],[11,"read_image_with_progress","","Same as <code>read_image</code> but periodically calls the provided …",60,[[["fn",8]],["imageresult",6]]],[8,"ImageDecoderExt","","Specialized image decoding not be supported by all formats",null,null],[11,"read_rect","","Decode a rectangular section of the image; see …",61,[[["u32",15]],["imageresult",6]]],[10,"read_rect_with_progress","","Decode a rectangular section of the image, periodically …",61,[[["u32",15],["fn",8]],["imageresult",6]]],[8,"ImageEncoder","","The trait all encoders implement",null,null],[10,"write_image","","Writes all the bytes in an image to the encoder.",62,[[["u32",15],["colortype",4]],["imageresult",6]]],[4,"ImageFormat","","An enumeration of supported image formats. Not all …",null,null],[13,"Png","","An Image in PNG Format",63,null],[13,"Jpeg","","An Image in JPEG Format",63,null],[13,"Gif","","An Image in GIF Format",63,null],[13,"WebP","","An Image in WEBP Format",63,null],[13,"Pnm","","An Image in general PNM Format",63,null],[13,"Tiff","","An Image in TIFF Format",63,null],[13,"Tga","","An Image in TGA Format",63,null],[13,"Dds","","An Image in DDS Format",63,null],[13,"Bmp","","An Image in BMP Format",63,null],[13,"Ico","","An Image in ICO Format",63,null],[13,"Hdr","","An Image in Radiance HDR Format",63,null],[13,"Farbfeld","","An Image in farbfeld Format",63,null],[13,"Avif","","An Image in AVIF format.",63,null],[4,"ImageOutputFormat","","An enumeration of supported image formats for encoding.",null,null],[13,"Png","","An Image in PNG Format",64,null],[13,"Jpeg","","An Image in JPEG Format with specified quality",64,null],[13,"Pnm","","An Image in one of the PNM Formats",64,null],[13,"Gif","","An Image in GIF Format",64,null],[13,"Ico","","An Image in ICO Format",64,null],[13,"Bmp","","An Image in BMP Format",64,null],[13,"Farbfeld","","An Image in farbfeld Format",64,null],[13,"Tga","","An Image in TGA Format",64,null],[13,"Unsupported","","A value for signalling an error: An unsupported format …",64,null],[3,"Progress","","Represents the progress of an image operation.",null,null],[3,"Pixels","","Immutable pixel iterator",null,null],[3,"SubImage","","A View into another image",null,null],[6,"GrayAlphaImage","","Sendable grayscale + alpha channel image buffer",null,null],[6,"GrayImage","","Sendable grayscale image buffer",null,null],[3,"ImageBuffer","","Generic image buffer",null,null],[6,"RgbImage","","Sendable Rgb image buffer",null,null],[6,"RgbaImage","","Sendable Rgb + alpha channel image buffer",null,null],[8,"EncodableLayout","","Types which are safe to treat as an immutable byte slice …",null,null],[10,"as_bytes","","Get the bytes of this value.",65,[[]]],[8,"Primitive","","Primitive trait from old stdlib",null,null],[8,"Pixel","","A generalized pixel.",null,null],[16,"Subpixel","","The underlying subpixel type.",66,null],[18,"CHANNEL_COUNT","","The number of channels of this pixel type.",66,null],[11,"channel_count","","Returns the number of channels of this pixel type.",66,[[],["u8",15]]],[10,"channels","","Returns the components as a slice.",66,[[]]],[10,"channels_mut","","Returns the components as a mutable slice",66,[[]]],[18,"COLOR_MODEL","","A string that can help to interpret the meaning each …",66,null],[11,"color_model","","Returns a string that can help to interpret the meaning …",66,[[],["str",15]]],[18,"COLOR_TYPE","","ColorType for this pixel format",66,null],[11,"color_type","","Returns the ColorType for this pixel format",66,[[],["colortype",4]]],[10,"channels4","","Returns the channels of this pixel as a 4 tuple. If the …",66,[[]]],[10,"from_channels","","Construct a pixel from the 4 channels a, b, c and d. If …",66,[[]]],[10,"from_slice","","Returns a view into a slice.",66,[[]]],[10,"from_slice_mut","","Returns mutable view into a mutable slice.",66,[[]]],[10,"to_rgb","","Convert this pixel to RGB",66,[[],["rgb",3]]],[10,"to_rgba","","Convert this pixel to RGB with an alpha channel",66,[[],["rgba",3]]],[10,"to_luma","","Convert this pixel to luma",66,[[],["luma",3]]],[10,"to_luma_alpha","","Convert this pixel to luma with an alpha channel",66,[[],["lumaa",3]]],[10,"to_bgr","","Convert this pixel to BGR",66,[[],["bgr",3]]],[10,"to_bgra","","Convert this pixel to BGR with an alpha channel",66,[[],["bgra",3]]],[10,"map","","Apply the function <code>f</code> to each channel of this pixel.",66,[[]]],[10,"apply","","Apply the function <code>f</code> to each channel of this pixel.",66,[[]]],[10,"map_with_alpha","","Apply the function <code>f</code> to each channel except the alpha …",66,[[]]],[10,"apply_with_alpha","","Apply the function <code>f</code> to each channel except the alpha …",66,[[]]],[11,"map_without_alpha","","Apply the function <code>f</code> to each channel except the alpha …",66,[[]]],[11,"apply_without_alpha","","Apply the function <code>f</code> to each channel except the alpha …",66,[[]]],[10,"map2","","Apply the function <code>f</code> to each channel of this pixel and …",66,[[]]],[10,"apply2","","Apply the function <code>f</code> to each channel of this pixel and …",66,[[]]],[10,"invert","","Invert this pixel",66,[[]]],[10,"blend","","Blend the color of a given pixel into ourself, taking …",66,[[]]],[5,"guess_format","","Guess image format from memory block",null,[[],[["imageformat",4],["imageresult",6]]]],[5,"load","","Create a new image from a Reader",null,[[["bufread",8],["imageformat",4],["seek",8]],[["imageresult",6],["dynamicimage",4]]]],[5,"load_from_memory","","Create a new image from a byte slice",null,[[],[["imageresult",6],["dynamicimage",4]]]],[5,"load_from_memory_with_format","","Create a new image from a byte slice",null,[[["imageformat",4]],[["imageresult",6],["dynamicimage",4]]]],[5,"open","","Open the image located at the path specified. The image\'s …",null,[[],[["imageresult",6],["dynamicimage",4]]]],[5,"save_buffer","","Saves the supplied buffer to a file at the path specified.",null,[[["u32",15],["colortype",4]],["imageresult",6]]],[5,"save_buffer_with_format","","Saves the supplied buffer to a file at the path specified …",null,[[["u32",15],["colortype",4],["imageformat",4]],["imageresult",6]]],[5,"image_dimensions","","Read the dimensions of the image located at the specified …",null,[[],["imageresult",6]]],[4,"DynamicImage","","A Dynamic Image",null,null],[13,"ImageLuma8","","Each pixel in this image is 8-bit Luma",67,null],[13,"ImageLumaA8","","Each pixel in this image is 8-bit Luma with alpha",67,null],[13,"ImageRgb8","","Each pixel in this image is 8-bit Rgb",67,null],[13,"ImageRgba8","","Each pixel in this image is 8-bit Rgb with alpha",67,null],[13,"ImageBgr8","","Each pixel in this image is 8-bit Bgr",67,null],[13,"ImageBgra8","","Each pixel in this image is 8-bit Bgr with alpha",67,null],[13,"ImageLuma16","","Each pixel in this image is 16-bit Luma",67,null],[13,"ImageLumaA16","","Each pixel in this image is 16-bit Luma with alpha",67,null],[13,"ImageRgb16","","Each pixel in this image is 16-bit Rgb",67,null],[13,"ImageRgba16","","Each pixel in this image is 16-bit Rgb with alpha",67,null],[3,"Delay","","The delay of a frame relative to the previous one.",null,null],[3,"Frame","","A single animation frame",null,null],[3,"Frames","","An implementation dependent iterator, reading the frames …",null,null],[11,"from","image::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","image::buffer","",68,[[]]],[11,"into","","",68,[[]]],[11,"into_iter","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"init","","",68,[[],["usize",15]]],[11,"deref","","",68,[[["usize",15]]]],[11,"deref_mut","","",68,[[["usize",15]]]],[11,"drop","","",68,[[["usize",15]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"into_iter","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"init","","",69,[[],["usize",15]]],[11,"deref","","",69,[[["usize",15]]]],[11,"deref_mut","","",69,[[["usize",15]]]],[11,"drop","","",69,[[["usize",15]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"into_iter","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"init","","",70,[[],["usize",15]]],[11,"deref","","",70,[[["usize",15]]]],[11,"deref_mut","","",70,[[["usize",15]]]],[11,"drop","","",70,[[["usize",15]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"into_iter","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"init","","",71,[[],["usize",15]]],[11,"deref","","",71,[[["usize",15]]]],[11,"deref_mut","","",71,[[["usize",15]]]],[11,"drop","","",71,[[["usize",15]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"into_iter","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"init","","",72,[[],["usize",15]]],[11,"deref","","",72,[[["usize",15]]]],[11,"deref_mut","","",72,[[["usize",15]]]],[11,"drop","","",72,[[["usize",15]]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"into_iter","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"init","","",73,[[],["usize",15]]],[11,"deref","","",73,[[["usize",15]]]],[11,"deref_mut","","",73,[[["usize",15]]]],[11,"drop","","",73,[[["usize",15]]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"into_iter","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"init","","",74,[[],["usize",15]]],[11,"deref","","",74,[[["usize",15]]]],[11,"deref_mut","","",74,[[["usize",15]]]],[11,"drop","","",74,[[["usize",15]]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"into_iter","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"init","","",75,[[],["usize",15]]],[11,"deref","","",75,[[["usize",15]]]],[11,"deref_mut","","",75,[[["usize",15]]]],[11,"drop","","",75,[[["usize",15]]]],[11,"from","image::math::nq","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","image::math","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","image::imageops::colorops","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"init","","",76,[[],["usize",15]]],[11,"deref","","",76,[[["usize",15]]]],[11,"deref_mut","","",76,[[["usize",15]]]],[11,"drop","","",76,[[["usize",15]]]],[11,"from","image::imageops","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","image::io","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"init","","",77,[[],["usize",15]]],[11,"deref","","",77,[[["usize",15]]]],[11,"deref_mut","","",77,[[["usize",15]]]],[11,"drop","","",77,[[["usize",15]]]],[11,"from","image::flat","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","image::codecs::bmp","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"init","","",78,[[],["usize",15]]],[11,"deref","","",78,[[["usize",15]]]],[11,"deref_mut","","",78,[[["usize",15]]]],[11,"drop","","",78,[[["usize",15]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"init","","",79,[[],["usize",15]]],[11,"deref","","",79,[[["usize",15]]]],[11,"deref_mut","","",79,[[["usize",15]]]],[11,"drop","","",79,[[["usize",15]]]],[11,"from","image::codecs::dds","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"from","image::codecs::dxt","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"init","","",80,[[],["usize",15]]],[11,"deref","","",80,[[["usize",15]]]],[11,"deref_mut","","",80,[[["usize",15]]]],[11,"drop","","",80,[[["usize",15]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"from","image::codecs::farbfeld","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"init","","",81,[[],["usize",15]]],[11,"deref","","",81,[[["usize",15]]]],[11,"deref_mut","","",81,[[["usize",15]]]],[11,"drop","","",81,[[["usize",15]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"from","image::codecs::gif","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"init","","",82,[[],["usize",15]]],[11,"deref","","",82,[[["usize",15]]]],[11,"deref_mut","","",82,[[["usize",15]]]],[11,"drop","","",82,[[["usize",15]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[],["usize",15]]],[11,"deref","","",28,[[["usize",15]]]],[11,"deref_mut","","",28,[[["usize",15]]]],[11,"drop","","",28,[[["usize",15]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"from","image::codecs::hdr","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"init","","",83,[[],["usize",15]]],[11,"deref","","",83,[[["usize",15]]]],[11,"deref_mut","","",83,[[["usize",15]]]],[11,"drop","","",83,[[["usize",15]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"init","","",84,[[],["usize",15]]],[11,"deref","","",84,[[["usize",15]]]],[11,"deref_mut","","",84,[[["usize",15]]]],[11,"drop","","",84,[[["usize",15]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"init","","",85,[[],["usize",15]]],[11,"deref","","",85,[[["usize",15]]]],[11,"deref_mut","","",85,[[["usize",15]]]],[11,"drop","","",85,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"into_iter","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"init","","",86,[[],["usize",15]]],[11,"deref","","",86,[[["usize",15]]]],[11,"deref_mut","","",86,[[["usize",15]]]],[11,"drop","","",86,[[["usize",15]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"init","","",87,[[],["usize",15]]],[11,"deref","","",87,[[["usize",15]]]],[11,"deref_mut","","",87,[[["usize",15]]]],[11,"drop","","",87,[[["usize",15]]]],[11,"from","image::codecs::ico","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"init","","",88,[[],["usize",15]]],[11,"deref","","",88,[[["usize",15]]]],[11,"deref_mut","","",88,[[["usize",15]]]],[11,"drop","","",88,[[["usize",15]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"init","","",89,[[],["usize",15]]],[11,"deref","","",89,[[["usize",15]]]],[11,"deref_mut","","",89,[[["usize",15]]]],[11,"drop","","",89,[[["usize",15]]]],[11,"from","image::codecs::jpeg","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"init","","",90,[[],["usize",15]]],[11,"deref","","",90,[[["usize",15]]]],[11,"deref_mut","","",90,[[["usize",15]]]],[11,"drop","","",90,[[["usize",15]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"init","","",91,[[],["usize",15]]],[11,"deref","","",91,[[["usize",15]]]],[11,"deref_mut","","",91,[[["usize",15]]]],[11,"drop","","",91,[[["usize",15]]]],[11,"from","image::codecs::png","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"init","","",92,[[],["usize",15]]],[11,"deref","","",92,[[["usize",15]]]],[11,"deref_mut","","",92,[[["usize",15]]]],[11,"drop","","",92,[[["usize",15]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"init","","",93,[[],["usize",15]]],[11,"deref","","",93,[[["usize",15]]]],[11,"deref_mut","","",93,[[["usize",15]]]],[11,"drop","","",93,[[["usize",15]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"init","","",35,[[],["usize",15]]],[11,"deref","","",35,[[["usize",15]]]],[11,"deref_mut","","",35,[[["usize",15]]]],[11,"drop","","",35,[[["usize",15]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"init","","",36,[[],["usize",15]]],[11,"deref","","",36,[[["usize",15]]]],[11,"deref_mut","","",36,[[["usize",15]]]],[11,"drop","","",36,[[["usize",15]]]],[11,"from","image::codecs::pnm","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"init","","",94,[[],["usize",15]]],[11,"deref","","",94,[[["usize",15]]]],[11,"deref_mut","","",94,[[["usize",15]]]],[11,"drop","","",94,[[["usize",15]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"init","","",95,[[],["usize",15]]],[11,"deref","","",95,[[["usize",15]]]],[11,"deref_mut","","",95,[[["usize",15]]]],[11,"drop","","",95,[[["usize",15]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"init","","",44,[[],["usize",15]]],[11,"deref","","",44,[[["usize",15]]]],[11,"deref_mut","","",44,[[["usize",15]]]],[11,"drop","","",44,[[["usize",15]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"init","","",43,[[],["usize",15]]],[11,"deref","","",43,[[["usize",15]]]],[11,"deref_mut","","",43,[[["usize",15]]]],[11,"drop","","",43,[[["usize",15]]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"init","","",96,[[],["usize",15]]],[11,"deref","","",96,[[["usize",15]]]],[11,"deref_mut","","",96,[[["usize",15]]]],[11,"drop","","",96,[[["usize",15]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"init","","",41,[[],["usize",15]]],[11,"deref","","",41,[[["usize",15]]]],[11,"deref_mut","","",41,[[["usize",15]]]],[11,"drop","","",41,[[["usize",15]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"init","","",42,[[],["usize",15]]],[11,"deref","","",42,[[["usize",15]]]],[11,"deref_mut","","",42,[[["usize",15]]]],[11,"drop","","",42,[[["usize",15]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"init","","",38,[[],["usize",15]]],[11,"deref","","",38,[[["usize",15]]]],[11,"deref_mut","","",38,[[["usize",15]]]],[11,"drop","","",38,[[["usize",15]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"init","","",39,[[],["usize",15]]],[11,"deref","","",39,[[["usize",15]]]],[11,"deref_mut","","",39,[[["usize",15]]]],[11,"drop","","",39,[[["usize",15]]]],[11,"from","image::codecs::tga","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"init","","",97,[[],["usize",15]]],[11,"deref","","",97,[[["usize",15]]]],[11,"deref_mut","","",97,[[["usize",15]]]],[11,"drop","","",97,[[["usize",15]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"init","","",98,[[],["usize",15]]],[11,"deref","","",98,[[["usize",15]]]],[11,"deref_mut","","",98,[[["usize",15]]]],[11,"drop","","",98,[[["usize",15]]]],[11,"from","image::codecs::tiff","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"init","","",99,[[],["usize",15]]],[11,"deref","","",99,[[["usize",15]]]],[11,"deref_mut","","",99,[[["usize",15]]]],[11,"drop","","",99,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","image::codecs::webp","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"init","","",100,[[],["usize",15]]],[11,"deref","","",100,[[["usize",15]]]],[11,"deref_mut","","",100,[[["usize",15]]]],[11,"drop","","",100,[[["usize",15]]]],[11,"from","image::codecs::webp::vp8","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"from","image","",101,[[]]],[11,"into","","",101,[[]]],[11,"into_iter","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"init","","",101,[[],["usize",15]]],[11,"deref","","",101,[[["usize",15]]]],[11,"deref_mut","","",101,[[["usize",15]]]],[11,"drop","","",101,[[["usize",15]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"init","","",102,[[],["usize",15]]],[11,"deref","","",102,[[["usize",15]]]],[11,"deref_mut","","",102,[[["usize",15]]]],[11,"drop","","",102,[[["usize",15]]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"init","","",103,[[],["usize",15]]],[11,"deref","","",103,[[["usize",15]]]],[11,"deref_mut","","",103,[[["usize",15]]]],[11,"drop","","",103,[[["usize",15]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"init","","",104,[[],["usize",15]]],[11,"deref","","",104,[[["usize",15]]]],[11,"deref_mut","","",104,[[["usize",15]]]],[11,"drop","","",104,[[["usize",15]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"init","","",53,[[],["usize",15]]],[11,"deref","","",53,[[["usize",15]]]],[11,"deref_mut","","",53,[[["usize",15]]]],[11,"drop","","",53,[[["usize",15]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"init","","",55,[[],["usize",15]]],[11,"deref","","",55,[[["usize",15]]]],[11,"deref_mut","","",55,[[["usize",15]]]],[11,"drop","","",55,[[["usize",15]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"init","","",54,[[],["usize",15]]],[11,"deref","","",54,[[["usize",15]]]],[11,"deref_mut","","",54,[[["usize",15]]]],[11,"drop","","",54,[[["usize",15]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"init","","",56,[[],["usize",15]]],[11,"deref","","",56,[[["usize",15]]]],[11,"deref_mut","","",56,[[["usize",15]]]],[11,"drop","","",56,[[["usize",15]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"init","","",52,[[],["usize",15]]],[11,"deref","","",52,[[["usize",15]]]],[11,"deref_mut","","",52,[[["usize",15]]]],[11,"drop","","",52,[[["usize",15]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"init","","",67,[[],["usize",15]]],[11,"deref","","",67,[[["usize",15]]]],[11,"deref_mut","","",67,[[["usize",15]]]],[11,"drop","","",67,[[["usize",15]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"init","","",63,[[],["usize",15]]],[11,"deref","","",63,[[["usize",15]]]],[11,"deref_mut","","",63,[[["usize",15]]]],[11,"drop","","",63,[[["usize",15]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"init","","",64,[[],["usize",15]]],[11,"deref","","",64,[[["usize",15]]]],[11,"deref_mut","","",64,[[["usize",15]]]],[11,"drop","","",64,[[["usize",15]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"init","","",105,[[],["usize",15]]],[11,"deref","","",105,[[["usize",15]]]],[11,"deref_mut","","",105,[[["usize",15]]]],[11,"drop","","",105,[[["usize",15]]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"into_iter","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"init","","",106,[[],["usize",15]]],[11,"deref","","",106,[[["usize",15]]]],[11,"deref_mut","","",106,[[["usize",15]]]],[11,"drop","","",106,[[["usize",15]]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"init","","",107,[[],["usize",15]]],[11,"deref","","",107,[[["usize",15]]]],[11,"deref_mut","","",107,[[["usize",15]]]],[11,"drop","","",107,[[["usize",15]]]],[11,"index_of","image::imageops::colorops","",76,[[["luma",3]],["usize",15]]],[11,"lookup","","",76,[[["usize",15]],["option",4]]],[11,"has_lookup","","Indicate NeuQuant implements <code>lookup</code>.",76,[[],["bool",15]]],[11,"map_color","","",76,[[["luma",3]]]],[11,"index_of","image::math::nq","",11,[[["rgba",3]],["usize",15]]],[11,"lookup","","",11,[[["usize",15]],["option",4]]],[11,"has_lookup","","Indicate NeuQuant implements <code>lookup</code>.",11,[[],["bool",15]]],[11,"map_color","","",11,[[["rgba",3]]]],[11,"convert","image","ExamplesConvert RGB image to gray image.",104,[[],[["imagebuffer",3],["vec",3]]]],[11,"dimensions","image::codecs::bmp","",78,[[]]],[11,"color_type","","",78,[[],["colortype",4]]],[11,"into_reader","","",78,[[],["imageresult",6]]],[11,"read_image","","",78,[[],["imageresult",6]]],[11,"dimensions","image::codecs::dds","",21,[[]]],[11,"color_type","","",21,[[],["colortype",4]]],[11,"scanline_bytes","","",21,[[],["u64",15]]],[11,"into_reader","","",21,[[],["imageresult",6]]],[11,"read_image","","",21,[[],["imageresult",6]]],[11,"dimensions","image::codecs::dxt","",23,[[]]],[11,"color_type","","",23,[[],["colortype",4]]],[11,"scanline_bytes","","",23,[[],["u64",15]]],[11,"into_reader","","",23,[[],["imageresult",6]]],[11,"read_image","","",23,[[],["imageresult",6]]],[11,"dimensions","image::codecs::farbfeld","",25,[[]]],[11,"color_type","","",25,[[],["colortype",4]]],[11,"into_reader","","",25,[[],["imageresult",6]]],[11,"scanline_bytes","","",25,[[],["u64",15]]],[11,"dimensions","image::codecs::gif","",27,[[]]],[11,"color_type","","",27,[[],["colortype",4]]],[11,"into_reader","","",27,[[],["imageresult",6]]],[11,"read_image","","",27,[[],["imageresult",6]]],[11,"dimensions","image::codecs::hdr","",83,[[]]],[11,"color_type","","",83,[[],["colortype",4]]],[11,"into_reader","","",83,[[],["imageresult",6]]],[11,"read_image","","",83,[[],["imageresult",6]]],[11,"dimensions","image::codecs::ico","",88,[[]]],[11,"color_type","","",88,[[],["colortype",4]]],[11,"into_reader","","",88,[[],["imageresult",6]]],[11,"read_image","","",88,[[],["imageresult",6]]],[11,"dimensions","image::codecs::jpeg","",90,[[]]],[11,"color_type","","",90,[[],["colortype",4]]],[11,"into_reader","","",90,[[],["imageresult",6]]],[11,"read_image","","",90,[[],["imageresult",6]]],[11,"dimensions","image::codecs::png","",34,[[]]],[11,"color_type","","",34,[[],["colortype",4]]],[11,"into_reader","","",34,[[],["imageresult",6]]],[11,"read_image","","",34,[[],["imageresult",6]]],[11,"scanline_bytes","","",34,[[],["u64",15]]],[11,"dimensions","image::codecs::pnm","",94,[[]]],[11,"color_type","","",94,[[],["colortype",4]]],[11,"original_color_type","","",94,[[],["extendedcolortype",4]]],[11,"into_reader","","",94,[[],["imageresult",6]]],[11,"read_image","","",94,[[],["imageresult",6]]],[11,"dimensions","image::codecs::tga","",97,[[]]],[11,"color_type","","",97,[[],["colortype",4]]],[11,"original_color_type","","",97,[[],["extendedcolortype",4]]],[11,"scanline_bytes","","",97,[[],["u64",15]]],[11,"into_reader","","",97,[[],["imageresult",6]]],[11,"read_image","","",97,[[],["imageresult",6]]],[11,"dimensions","image::codecs::tiff","",45,[[]]],[11,"color_type","","",45,[[],["colortype",4]]],[11,"into_reader","","",45,[[],["imageresult",6]]],[11,"read_image","","",45,[[],["imageresult",6]]],[11,"dimensions","image::codecs::webp","",100,[[]]],[11,"color_type","","",100,[[],["colortype",4]]],[11,"into_reader","","",100,[[],["imageresult",6]]],[11,"read_image","","",100,[[],["imageresult",6]]],[11,"read_rect_with_progress","image::codecs::bmp","",78,[[["u32",15],["fn",8]],["imageresult",6]]],[11,"read_rect_with_progress","image::codecs::dxt","",23,[[["u32",15],["fn",8]],["imageresult",6]]],[11,"read_rect_with_progress","image::codecs::farbfeld","",25,[[["u32",15],["fn",8]],["imageresult",6]]],[11,"read_rect_with_progress","image::codecs::hdr","",83,[[["u32",15],["fn",8]],["imageresult",6]]],[11,"into_frames","image::codecs::gif","",27,[[],["frames",3]]],[11,"into_frames","image::codecs::png","",93,[[],["frames",3]]],[11,"write_image","image::codecs::bmp","",79,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::farbfeld","",26,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::ico","",89,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::jpeg","",91,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::png","",37,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::pnm","",95,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::tga","",98,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"write_image","image::codecs::tiff","",46,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"dimensions","image::flat","",19,[[]]],[11,"bounds","","",19,[[]]],[11,"in_bounds","","",19,[[["u32",15]],["bool",15]]],[11,"get_pixel","","",19,[[["u32",15]]]],[11,"inner","","",19,[[]]],[11,"dimensions","","",20,[[]]],[11,"bounds","","",20,[[]]],[11,"in_bounds","","",20,[[["u32",15]],["bool",15]]],[11,"get_pixel","","",20,[[["u32",15]]]],[11,"inner","","",20,[[]]],[11,"dimensions","image","",104,[[]]],[11,"bounds","","",104,[[]]],[11,"get_pixel","","",104,[[["u32",15]]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y), ignoring bounds …",104,[[["u32",15]]]],[11,"inner","","",104,[[]]],[11,"dimensions","","",67,[[]]],[11,"bounds","","",67,[[]]],[11,"get_pixel","","",67,[[["u32",15]],[["u8",15],["rgba",3]]]],[11,"inner","","",67,[[]]],[11,"dimensions","","",107,[[]]],[11,"bounds","","",107,[[]]],[11,"get_pixel","","",107,[[["u32",15]]]],[11,"view","","",107,[[["u32",15]],["subimage",3]]],[11,"inner","","",107,[[]]],[11,"get_pixel_mut","image::flat","",20,[[["u32",15]]]],[11,"put_pixel","","",20,[[["u32",15]]]],[11,"blend_pixel","","",20,[[["u32",15]]]],[11,"inner_mut","","",20,[[]]],[11,"get_pixel_mut","image","",104,[[["u32",15]]]],[11,"put_pixel","","",104,[[["u32",15]]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y), ignoring bounds checking.",104,[[["u32",15]]]],[11,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha …",104,[[["u32",15]]]],[11,"copy_within","","",104,[[["u32",15],["rect",3]],["bool",15]]],[11,"inner_mut","","",104,[[]]],[11,"put_pixel","","",67,[[["u32",15],["rgba",3],["u8",15]]]],[11,"blend_pixel","","DEPRECATED: Use iterator <code>pixels_mut</code> to blend the pixels …",67,[[["u32",15],["rgba",3],["u8",15]]]],[11,"get_pixel_mut","","DEPRECATED: Do not use is function: It is unimplemented!",67,[[["u32",15]],["rgba",3]]],[11,"inner_mut","","",67,[[]]],[11,"get_pixel_mut","","",107,[[["u32",15]]]],[11,"put_pixel","","",107,[[["u32",15]]]],[11,"blend_pixel","","DEPRECATED: This method will be removed. Blend the pixel …",107,[[["u32",15]]]],[11,"sub_image","","",107,[[["u32",15]],["subimage",3]]],[11,"inner_mut","","",107,[[]]],[11,"channels","","",53,[[]]],[11,"channels_mut","","",53,[[]]],[11,"channels4","","",53,[[]]],[11,"from_channels","","",53,[[],["rgb",3]]],[11,"from_slice","","",53,[[],["rgb",3]]],[11,"from_slice_mut","","",53,[[],["rgb",3]]],[11,"to_rgb","","",53,[[],["rgb",3]]],[11,"to_bgr","","",53,[[],["bgr",3]]],[11,"to_rgba","","",53,[[],["rgba",3]]],[11,"to_bgra","","",53,[[],["bgra",3]]],[11,"to_luma","","",53,[[],["luma",3]]],[11,"to_luma_alpha","","",53,[[],["lumaa",3]]],[11,"map","","",53,[[],["rgb",3]]],[11,"apply","","",53,[[]]],[11,"map_with_alpha","","",53,[[],["rgb",3]]],[11,"apply_with_alpha","","",53,[[]]],[11,"map2","","",53,[[],["rgb",3]]],[11,"apply2","","",53,[[["rgb",3]]]],[11,"invert","","",53,[[]]],[11,"blend","","",53,[[["rgb",3]]]],[11,"channels","","",55,[[]]],[11,"channels_mut","","",55,[[]]],[11,"channels4","","",55,[[]]],[11,"from_channels","","",55,[[],["bgr",3]]],[11,"from_slice","","",55,[[],["bgr",3]]],[11,"from_slice_mut","","",55,[[],["bgr",3]]],[11,"to_rgb","","",55,[[],["rgb",3]]],[11,"to_bgr","","",55,[[],["bgr",3]]],[11,"to_rgba","","",55,[[],["rgba",3]]],[11,"to_bgra","","",55,[[],["bgra",3]]],[11,"to_luma","","",55,[[],["luma",3]]],[11,"to_luma_alpha","","",55,[[],["lumaa",3]]],[11,"map","","",55,[[],["bgr",3]]],[11,"apply","","",55,[[]]],[11,"map_with_alpha","","",55,[[],["bgr",3]]],[11,"apply_with_alpha","","",55,[[]]],[11,"map2","","",55,[[],["bgr",3]]],[11,"apply2","","",55,[[["bgr",3]]]],[11,"invert","","",55,[[]]],[11,"blend","","",55,[[["bgr",3]]]],[11,"channels","","",51,[[]]],[11,"channels_mut","","",51,[[]]],[11,"channels4","","",51,[[]]],[11,"from_channels","","",51,[[],["luma",3]]],[11,"from_slice","","",51,[[],["luma",3]]],[11,"from_slice_mut","","",51,[[],["luma",3]]],[11,"to_rgb","","",51,[[],["rgb",3]]],[11,"to_bgr","","",51,[[],["bgr",3]]],[11,"to_rgba","","",51,[[],["rgba",3]]],[11,"to_bgra","","",51,[[],["bgra",3]]],[11,"to_luma","","",51,[[],["luma",3]]],[11,"to_luma_alpha","","",51,[[],["lumaa",3]]],[11,"map","","",51,[[],["luma",3]]],[11,"apply","","",51,[[]]],[11,"map_with_alpha","","",51,[[],["luma",3]]],[11,"apply_with_alpha","","",51,[[]]],[11,"map2","","",51,[[],["luma",3]]],[11,"apply2","","",51,[[["luma",3]]]],[11,"invert","","",51,[[]]],[11,"blend","","",51,[[["luma",3]]]],[11,"channels","","",54,[[]]],[11,"channels_mut","","",54,[[]]],[11,"channels4","","",54,[[]]],[11,"from_channels","","",54,[[],["rgba",3]]],[11,"from_slice","","",54,[[],["rgba",3]]],[11,"from_slice_mut","","",54,[[],["rgba",3]]],[11,"to_rgb","","",54,[[],["rgb",3]]],[11,"to_bgr","","",54,[[],["bgr",3]]],[11,"to_rgba","","",54,[[],["rgba",3]]],[11,"to_bgra","","",54,[[],["bgra",3]]],[11,"to_luma","","",54,[[],["luma",3]]],[11,"to_luma_alpha","","",54,[[],["lumaa",3]]],[11,"map","","",54,[[],["rgba",3]]],[11,"apply","","",54,[[]]],[11,"map_with_alpha","","",54,[[],["rgba",3]]],[11,"apply_with_alpha","","",54,[[]]],[11,"map2","","",54,[[],["rgba",3]]],[11,"apply2","","",54,[[["rgba",3]]]],[11,"invert","","",54,[[]]],[11,"blend","","",54,[[["rgba",3]]]],[11,"channels","","",56,[[]]],[11,"channels_mut","","",56,[[]]],[11,"channels4","","",56,[[]]],[11,"from_channels","","",56,[[],["bgra",3]]],[11,"from_slice","","",56,[[],["bgra",3]]],[11,"from_slice_mut","","",56,[[],["bgra",3]]],[11,"to_rgb","","",56,[[],["rgb",3]]],[11,"to_bgr","","",56,[[],["bgr",3]]],[11,"to_rgba","","",56,[[],["rgba",3]]],[11,"to_bgra","","",56,[[],["bgra",3]]],[11,"to_luma","","",56,[[],["luma",3]]],[11,"to_luma_alpha","","",56,[[],["lumaa",3]]],[11,"map","","",56,[[],["bgra",3]]],[11,"apply","","",56,[[]]],[11,"map_with_alpha","","",56,[[],["bgra",3]]],[11,"apply_with_alpha","","",56,[[]]],[11,"map2","","",56,[[],["bgra",3]]],[11,"apply2","","",56,[[["bgra",3]]]],[11,"invert","","",56,[[]]],[11,"blend","","",56,[[["bgra",3]]]],[11,"channels","","",52,[[]]],[11,"channels_mut","","",52,[[]]],[11,"channels4","","",52,[[]]],[11,"from_channels","","",52,[[],["lumaa",3]]],[11,"from_slice","","",52,[[],["lumaa",3]]],[11,"from_slice_mut","","",52,[[],["lumaa",3]]],[11,"to_rgb","","",52,[[],["rgb",3]]],[11,"to_bgr","","",52,[[],["bgr",3]]],[11,"to_rgba","","",52,[[],["rgba",3]]],[11,"to_bgra","","",52,[[],["bgra",3]]],[11,"to_luma","","",52,[[],["luma",3]]],[11,"to_luma_alpha","","",52,[[],["lumaa",3]]],[11,"map","","",52,[[],["lumaa",3]]],[11,"apply","","",52,[[]]],[11,"map_with_alpha","","",52,[[],["lumaa",3]]],[11,"apply_with_alpha","","",52,[[]]],[11,"map2","","",52,[[],["lumaa",3]]],[11,"apply2","","",52,[[["lumaa",3]]]],[11,"invert","","",52,[[]]],[11,"blend","","",52,[[["lumaa",3]]]],[11,"from","image::error","",0,[[["error",3]],["imageerror",4]]],[11,"from","","",4,[[["imageformat",4]]]],[11,"from","","",4,[[["path",3]]]],[11,"from","","",5,[[["imageformathint",4]]]],[11,"from","image::math::nq","",11,[[["neuquant",3]]]],[11,"from","image::error","",0,[[["error",4]],["imageerror",4]]],[11,"from","image::codecs::pnm","",96,[[["bitmapheader",3]]]],[11,"from","","",96,[[["graymapheader",3]]]],[11,"from","","",96,[[["pixmapheader",3]]]],[11,"from","","",96,[[["arbitraryheader",3]]]],[11,"from","image","",50,[[["colortype",4]]]],[11,"from","","",53,[[]]],[11,"from","","",55,[[]]],[11,"from","","",51,[[]]],[11,"from","","",54,[[]]],[11,"from","","",56,[[]]],[11,"from","","",52,[[]]],[11,"from","","",64,[[["imageformat",4]]]],[11,"next_back","image::buffer","",72,[[],["option",4]]],[11,"next_back","","",73,[[],["option",4]]],[11,"next_back","","",74,[[],[["option",4],["pixels",3]]]],[11,"next_back","","",75,[[],[["pixelsmut",3],["option",4]]]],[11,"len","","",72,[[],["usize",15]]],[11,"len","","",73,[[],["usize",15]]],[11,"len","","",74,[[],["usize",15]]],[11,"len","","",75,[[],["usize",15]]],[11,"len","","",68,[[],["usize",15]]],[11,"len","","",70,[[],["usize",15]]],[11,"len","","",69,[[],["usize",15]]],[11,"len","","",71,[[],["usize",15]]],[11,"into_iter","image::codecs::hdr","",85,[[]]],[11,"next","","",86,[[],["option",4]]],[11,"size_hint","","",86,[[]]],[11,"next","image","",101,[[],[["option",4],["imageresult",6]]]],[11,"next","image::buffer","",72,[[],["option",4]]],[11,"next","","",73,[[],["option",4]]],[11,"next","","",74,[[],[["option",4],["pixels",3]]]],[11,"next","","",75,[[],[["pixelsmut",3],["option",4]]]],[11,"next","","",68,[[],["option",4]]],[11,"next","","",70,[[],["option",4]]],[11,"next","","",69,[[],["option",4]]],[11,"next","","",71,[[],["option",4]]],[11,"next","image","",106,[[],["option",4]]],[11,"clone","image::error","",1,[[],["unsupportederrorkind",4]]],[11,"clone","","",2,[[],["parametererrorkind",4]]],[11,"clone","","",3,[[],["limiterrorkind",4]]],[11,"clone","","",4,[[],["imageformathint",4]]],[11,"clone","image::math","",12,[[],["rect",3]]],[11,"clone","image::imageops::colorops","",76,[[],["bilevel",3]]],[11,"clone","image::imageops","",14,[[],["filtertype",4]]],[11,"clone","image::flat","",15,[[],["flatsamples",3]]],[11,"clone","","",16,[[],["samplelayout",3]]],[11,"clone","","",19,[[],["view",3]]],[11,"clone","","",20,[[],["viewmut",3]]],[11,"clone","","",17,[[],["error",4]]],[11,"clone","","",18,[[],["normalform",4]]],[11,"clone","image::codecs::dxt","",22,[[],["dxtvariant",4]]],[11,"clone","image::codecs::gif","",28,[[],["repeat",4]]],[11,"clone","image::codecs::hdr","",30,[[],["rgbe8pixel",3]]],[11,"clone","","",31,[[],["hdrmetadata",3]]],[11,"clone","image::codecs::jpeg","",33,[[],["pixeldensityunit",4]]],[11,"clone","","",32,[[],["pixeldensity",3]]],[11,"clone","image::codecs::png","",35,[[],["compressiontype",4]]],[11,"clone","","",36,[[],["filtertype",4]]],[11,"clone","image::codecs::pnm","",44,[[],["sampleencoding",4]]],[11,"clone","","",43,[[],["pnmsubtype",4]]],[11,"clone","","",40,[[],["bitmapheader",3]]],[11,"clone","","",41,[[],["graymapheader",3]]],[11,"clone","","",42,[[],["pixmapheader",3]]],[11,"clone","","",38,[[],["arbitraryheader",3]]],[11,"clone","","",39,[[],["arbitrarytupltype",4]]],[11,"clone","image::codecs::webp::vp8","",47,[[],["frame",3]]],[11,"clone","image","",102,[[],["frame",3]]],[11,"clone","","",103,[[],["delay",3]]],[11,"clone","image::buffer","",72,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",70,[[]]],[11,"clone","image","",104,[[],["imagebuffer",3]]],[11,"clone","","",49,[[],["colortype",4]]],[11,"clone","","",50,[[],["extendedcolortype",4]]],[11,"clone","","",53,[[],["rgb",3]]],[11,"clone","","",55,[[],["bgr",3]]],[11,"clone","","",51,[[],["luma",3]]],[11,"clone","","",54,[[],["rgba",3]]],[11,"clone","","",56,[[],["bgra",3]]],[11,"clone","","",52,[[],["lumaa",3]]],[11,"clone","","",67,[[],["dynamicimage",4]]],[11,"clone","","",63,[[],["imageformat",4]]],[11,"clone","","",64,[[],["imageoutputformat",4]]],[11,"clone","","",105,[[],["progress",3]]],[11,"clone","","",106,[[]]],[11,"default","image::codecs::hdr","",30,[[],["rgbe8pixel",3]]],[11,"default","image::codecs::jpeg","Returns a pixel density with a pixel aspect ratio of 1",32,[[]]],[11,"default","image::codecs::png","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","image::codecs::webp::vp8","",47,[[],["frame",3]]],[11,"default","image","",104,[[]]],[11,"eq","image::error","",1,[[["unsupportederrorkind",4]],["bool",15]]],[11,"ne","","",1,[[["unsupportederrorkind",4]],["bool",15]]],[11,"eq","","",2,[[["parametererrorkind",4]],["bool",15]]],[11,"ne","","",2,[[["parametererrorkind",4]],["bool",15]]],[11,"eq","","",3,[[["limiterrorkind",4]],["bool",15]]],[11,"ne","","",3,[[["limiterrorkind",4]],["bool",15]]],[11,"eq","","",4,[[["imageformathint",4]],["bool",15]]],[11,"ne","","",4,[[["imageformathint",4]],["bool",15]]],[11,"eq","image::math","",12,[[["rect",3]],["bool",15]]],[11,"ne","","",12,[[["rect",3]],["bool",15]]],[11,"eq","image::imageops","",14,[[["filtertype",4]],["bool",15]]],[11,"eq","image::flat","",16,[[["samplelayout",3]],["bool",15]]],[11,"ne","","",16,[[["samplelayout",3]],["bool",15]]],[11,"eq","","",17,[[["error",4]],["bool",15]]],[11,"ne","","",17,[[["error",4]],["bool",15]]],[11,"eq","","",18,[[["normalform",4]],["bool",15]]],[11,"eq","image::codecs::dxt","",22,[[["dxtvariant",4]],["bool",15]]],[11,"eq","image::codecs::hdr","",30,[[["rgbe8pixel",3]],["bool",15]]],[11,"ne","","",30,[[["rgbe8pixel",3]],["bool",15]]],[11,"eq","image::codecs::jpeg","",33,[[["pixeldensityunit",4]],["bool",15]]],[11,"eq","","",32,[[["pixeldensity",3]],["bool",15]]],[11,"ne","","",32,[[["pixeldensity",3]],["bool",15]]],[11,"eq","image::codecs::png","",35,[[["compressiontype",4]],["bool",15]]],[11,"ne","","",35,[[["compressiontype",4]],["bool",15]]],[11,"eq","","",36,[[["filtertype",4]],["bool",15]]],[11,"ne","","",36,[[["filtertype",4]],["bool",15]]],[11,"eq","image::codecs::pnm","",44,[[["sampleencoding",4]],["bool",15]]],[11,"eq","","",43,[[["pnmsubtype",4]],["bool",15]]],[11,"ne","","",43,[[["pnmsubtype",4]],["bool",15]]],[11,"eq","image","",103,[[["delay",3]],["bool",15]]],[11,"ne","","",103,[[["delay",3]],["bool",15]]],[11,"eq","","",104,[[["imagebuffer",3]],["bool",15]]],[11,"ne","","",104,[[["imagebuffer",3]],["bool",15]]],[11,"eq","","",49,[[["colortype",4]],["bool",15]]],[11,"ne","","",49,[[["colortype",4]],["bool",15]]],[11,"eq","","",50,[[["extendedcolortype",4]],["bool",15]]],[11,"ne","","",50,[[["extendedcolortype",4]],["bool",15]]],[11,"eq","","",53,[[["rgb",3]],["bool",15]]],[11,"ne","","",53,[[["rgb",3]],["bool",15]]],[11,"eq","","",55,[[["bgr",3]],["bool",15]]],[11,"ne","","",55,[[["bgr",3]],["bool",15]]],[11,"eq","","",51,[[["luma",3]],["bool",15]]],[11,"ne","","",51,[[["luma",3]],["bool",15]]],[11,"eq","","",54,[[["rgba",3]],["bool",15]]],[11,"ne","","",54,[[["rgba",3]],["bool",15]]],[11,"eq","","",56,[[["bgra",3]],["bool",15]]],[11,"ne","","",56,[[["bgra",3]],["bool",15]]],[11,"eq","","",52,[[["lumaa",3]],["bool",15]]],[11,"ne","","",52,[[["lumaa",3]],["bool",15]]],[11,"eq","","",67,[[["dynamicimage",4]],["bool",15]]],[11,"ne","","",67,[[["dynamicimage",4]],["bool",15]]],[11,"eq","","",63,[[["imageformat",4]],["bool",15]]],[11,"ne","","",63,[[["imageformat",4]],["bool",15]]],[11,"eq","","",64,[[["imageoutputformat",4]],["bool",15]]],[11,"ne","","",64,[[["imageoutputformat",4]],["bool",15]]],[11,"eq","","",105,[[["progress",3]],["bool",15]]],[11,"ne","","",105,[[["progress",3]],["bool",15]]],[11,"partial_cmp","image::flat","Compares the logical preconditions.",18,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","image","",103,[[["delay",3]],[["option",4],["ordering",4]]]],[11,"lt","","",103,[[["delay",3]],["bool",15]]],[11,"le","","",103,[[["delay",3]],["bool",15]]],[11,"gt","","",103,[[["delay",3]],["bool",15]]],[11,"ge","","",103,[[["delay",3]],["bool",15]]],[11,"deref","","",104,[[]]],[11,"deref_mut","","",104,[[]]],[11,"fmt","image::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","image::math","",12,[[["formatter",3]],["result",6]]],[11,"fmt","image::imageops","",14,[[["formatter",3]],["result",6]]],[11,"fmt","image::flat","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::dxt","",22,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::gif","",28,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::hdr","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::jpeg","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::png","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::pnm","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","image::codecs::webp::vp8","",47,[[["formatter",3]],["result",6]]],[11,"fmt","image","",103,[[["formatter",3]],["result",6]]],[11,"fmt","image::buffer","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","image","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","image::error","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","image::flat","",17,[[["formatter",3]],["result",6]]],[11,"index","","Return a reference to a single sample at specified …",15,[[]]],[11,"index","image","",104,[[]]],[11,"index","","",53,[[["usize",15]]]],[11,"index","","",55,[[["usize",15]]]],[11,"index","","",51,[[["usize",15]]]],[11,"index","","",54,[[["usize",15]]]],[11,"index","","",56,[[["usize",15]]]],[11,"index","","",52,[[["usize",15]]]],[11,"index_mut","image::flat","Return a mutable reference to a single sample at …",15,[[]]],[11,"index_mut","image","",104,[[]]],[11,"index_mut","","",53,[[["usize",15]]]],[11,"index_mut","","",55,[[["usize",15]]]],[11,"index_mut","","",51,[[["usize",15]]]],[11,"index_mut","","",54,[[["usize",15]]]],[11,"index_mut","","",56,[[["usize",15]]]],[11,"index_mut","","",52,[[["usize",15]]]],[11,"hash","image::error","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","image::math","",12,[[]]],[11,"hash","image::flat","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","image","",104,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",63,[[]]],[11,"source","image::error","",0,[[],[["option",4],["error",8]]]],[11,"source","","",8,[[],[["option",4],["error",8]]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"source","","",6,[[],[["option",4],["error",8]]]],[11,"read","image::codecs::dxt","",80,[[],[["usize",15],["result",6]]]],[11,"read","image::codecs::farbfeld","",81,[[],[["usize",15],["result",6]]]],[11,"read","image::codecs::gif","",82,[[],[["usize",15],["result",6]]]],[11,"read_to_end","","",82,[[["vec",3]],[["usize",15],["result",6]]]],[11,"read","image::codecs::hdr","",84,[[],[["usize",15],["result",6]]]],[11,"read_to_end","","",84,[[["vec",3]],[["usize",15],["result",6]]]],[11,"read","image::codecs::png","",92,[[],[["usize",15],["result",6]]]],[11,"read_to_end","","",92,[[["vec",3]],[["usize",15],["result",6]]]],[11,"read","image::codecs::tiff","",99,[[],[["usize",15],["result",6]]]],[11,"read_to_end","","",99,[[["vec",3]],[["usize",15],["result",6]]]],[11,"seek","image::codecs::farbfeld","",81,[[["seekfrom",4]],[["u64",15],["result",6]]]],[11,"new","image::io","Create a new image reader without a preset format.",77,[[]]],[11,"with_format","","Construct a reader with specified format.",77,[[["imageformat",4]]]],[11,"format","","Get the currently determined format.",77,[[],[["option",4],["imageformat",4]]]],[11,"set_format","","Supply the format as which to interpret the read image.",77,[[["imageformat",4]]]],[11,"clear_format","","Remove the current information on the image format.",77,[[]]],[11,"into_inner","","Unwrap the reader.",77,[[]]],[11,"open","","Open a file to read, format will be guessed from path.",77,[[],["result",6]]],[11,"with_guessed_format","","Make a format guess based on the content, replacing it on …",77,[[],["result",6]]],[11,"into_dimensions","","Read the image dimensions.",77,[[],["imageresult",6]]],[11,"decode","","Read the image (replaces <code>load</code>).",77,[[],[["imageresult",6],["dynamicimage",4]]]],[11,"new","image::codecs::bmp","Create a new decoder that decodes from the stream <code>r</code>",78,[[],[["imageresult",6],["bmpdecoder",3]]]],[11,"new","","Create a new encoder that writes its output to <code>w</code>.",79,[[]]],[11,"encode","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …",79,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"new","image::codecs::hdr","Creates adapter",83,[[],[["imageresult",6],["hdradapter",3]]]],[11,"new_nonstrict","","Allows reading old Radiance HDR images",83,[[],[["imageresult",6],["hdradapter",3]]]],[11,"to_hdr","","Converts <code>RGBE8Pixel</code> into <code>Rgb<f32></code> linearly",30,[[],[["rgb",3],["f32",15]]]],[11,"to_ldr","","Converts <code>RGBE8Pixel</code> into <code>Rgb<T></code> with scale=1 and gamma=2.2",30,[[],[["primitive",8],["rgb",3],["zero",8]]]],[11,"to_ldr_scale_gamma","","Converts RGBE8Pixel into Rgb using provided scale and …",30,[[["f32",15]],[["primitive",8],["rgb",3],["zero",8]]]],[11,"new","","Reads Radiance HDR image header from stream <code>r</code> if the …",85,[[],[["hdrdecoder",3],["imageresult",6]]]],[11,"with_strictness","","Reads Radiance HDR image header from stream <code>reader</code>, if …",85,[[["bool",15]],[["hdrdecoder",3],["imageresult",6]]]],[11,"metadata","","Returns file metadata. Refer to <code>HDRMetadata</code> for details.",85,[[],["hdrmetadata",3]]],[11,"read_image_native","","Consumes decoder and returns a vector of RGBE8 pixels",85,[[],[["imageresult",6],["vec",3]]]],[11,"read_image_transform","","Consumes decoder and returns a vector of transformed …",85,[[["send",8],["fn",8],["sync",8]],["imageresult",6]]],[11,"read_image_ldr","","Consumes decoder and returns a vector of Rgb pixels. …",85,[[],[["imageresult",6],["vec",3]]]],[11,"read_image_hdr","","Consumes decoder and returns a vector of Rgb pixels.",85,[[],[["vec",3],["imageresult",6]]]],[11,"new","","Creates encoder",87,[[],["hdrencoder",3]]],[11,"encode","","Encodes the image <code>data</code> that has dimensions <code>width</code> and …",87,[[["usize",15]],["imageresult",6]]],[11,"new","image::codecs::ico","Create a new decoder that decodes from the stream <code>r</code>",88,[[],[["imageresult",6],["icodecoder",3]]]],[11,"new","","Create a new encoder that writes its output to <code>w</code>.",89,[[],["icoencoder",3]]],[11,"encode","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …",89,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"new","image::codecs::jpeg","Create a new decoder that decodes from the stream <code>r</code>",90,[[],[["jpegdecoder",3],["imageresult",6]]]],[11,"scale","","Configure the decoder to scale the image during decoding.",90,[[["u16",15]],["imageresult",6]]],[11,"dpi","","Creates the most common pixel density type: the …",32,[[["u16",15]]]],[11,"new","","Create a new encoder that writes its output to <code>w</code>",91,[[],["jpegencoder",3]]],[11,"new_with_quality","","Create a new encoder that writes its output to <code>w</code>, and has …",91,[[["u8",15]],["jpegencoder",3]]],[11,"set_pixel_density","","Set the pixel density of the images the encoder will …",91,[[["pixeldensity",3]]]],[11,"encode","","Encodes the image stored in the raw byte buffer <code>image</code> …",91,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"encode_image","","Encodes the given image.",91,[[],["imageresult",6]]],[11,"new","image::codecs::pnm","Create a new decoder that decodes from the stream <code>read</code>",94,[[],[["imageresult",6],["pnmdecoder",3]]]],[11,"into_inner","","Extract the reader and header after an image has been …",94,[[]]],[11,"subtype","","Get the pnm subtype, depending on the magic constant …",94,[[],["pnmsubtype",4]]],[11,"new","","Create new PNMEncoder from the <code>writer</code>.",95,[[]]],[11,"with_subtype","","Encode a specific pnm subtype image.",95,[[["pnmsubtype",4]]]],[11,"with_header","","Enforce the use of a chosen header.",95,[[["pnmheader",3]]]],[11,"with_dynamic_header","","Create the header dynamically for each image.",95,[[]]],[11,"encode","","Encode an image whose samples are represented as <code>u8</code>.",95,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"magic_constant","","Get the two magic constant bytes corresponding to this …",43,[[]]],[11,"sample_encoding","","Whether samples are stored as binary or as decimal ascii",43,[[],["sampleencoding",4]]],[11,"subtype","","Retrieve the format subtype from which the header was …",96,[[],["pnmsubtype",4]]],[11,"width","","The width of the image this header is for.",96,[[],["u32",15]]],[11,"height","","The height of the image this header is for.",96,[[],["u32",15]]],[11,"maximal_sample","","The biggest value a sample can have. In other words, the …",96,[[],["u32",15]]],[11,"as_bitmap","","Retrieve the underlying bitmap header if any",96,[[],[["bitmapheader",3],["option",4]]]],[11,"as_graymap","","Retrieve the underlying graymap header if any",96,[[],[["option",4],["graymapheader",3]]]],[11,"as_pixmap","","Retrieve the underlying pixmap header if any",96,[[],[["pixmapheader",3],["option",4]]]],[11,"as_arbitrary","","Retrieve the underlying arbitrary header if any",96,[[],[["arbitraryheader",3],["option",4]]]],[11,"write","","Write the header back into a binary stream",96,[[["write",8]],["result",6]]],[11,"new","image::codecs::tga","Create a new decoder that decodes from the stream <code>r</code>",97,[[],[["imageresult",6],["tgadecoder",3]]]],[11,"new","","Create a new encoder that writes its output to <code>w</code>.",98,[[],["tgaencoder",3]]],[11,"encode","","Encodes the image <code>buf</code> that has dimensions <code>width</code> and <code>height</code>…",98,[[["u32",15],["colortype",4]],["imageresult",6]]],[11,"new","image::codecs::webp","Create a new WebPDecoder from the Reader <code>r</code>. This function …",100,[[],[["webpdecoder",3],["imageresult",6]]]],[11,"new","image","Creates a new <code>Frames</code> from an implementation specific …",101,[[["box",3],["iterator",8]]]],[11,"collect_frames","","Steps through the iterator from the current frame until …",101,[[],[["imageresult",6],["vec",3]]]],[11,"new","","Contructs a new frame without any delay.",102,[[["rgbaimage",6]],["frame",3]]],[11,"from_parts","","Contructs a new frame",102,[[["u32",15],["rgbaimage",6],["delay",3]],["frame",3]]],[11,"delay","","Delay of this frame",102,[[],["delay",3]]],[11,"buffer","","Returns the image buffer",102,[[],["rgbaimage",6]]],[11,"buffer_mut","","Returns a mutable image buffer",102,[[],["rgbaimage",6]]],[11,"into_buffer","","Returns the image buffer",102,[[],["rgbaimage",6]]],[11,"left","","Returns the x offset",102,[[],["u32",15]]],[11,"top","","Returns the y offset",102,[[],["u32",15]]],[11,"from_numer_denom_ms","","Create a delay from a ratio of milliseconds.",103,[[["u32",15]]]],[11,"from_saturating_duration","","Convert from a duration, clamped between 0 and an …",103,[[["duration",3]]]],[11,"numer_denom_ms","","The numerator and denominator of the delay in …",103,[[]]],[11,"from_raw","","Contructs a buffer from a generic container (for example …",104,[[["u32",15]],[["imagebuffer",3],["option",4]]]],[11,"into_raw","","Returns the underlying raw buffer",104,[[]]],[11,"as_raw","","Returns the underlying raw buffer",104,[[]]],[11,"dimensions","","The width and height of this image.",104,[[]]],[11,"width","","The width of this image.",104,[[],["u32",15]]],[11,"height","","The height of this image.",104,[[],["u32",15]]],[11,"pixels","","Returns an iterator over the pixels of this image. The …",104,[[],["pixels",3]]],[11,"rows","","Returns an iterator over the rows of this image.",104,[[],["rows",3]]],[11,"enumerate_pixels","","Enumerates over the pixels of the image. The iterator …",104,[[],["enumeratepixels",3]]],[11,"enumerate_rows","","Enumerates over the rows of the image. The iterator …",104,[[],["enumeraterows",3]]],[11,"get_pixel","","Gets a reference to the pixel at location <code>(x, y)</code>",104,[[["u32",15]]]],[11,"sample_layout","","Get the format of the buffer when viewed as a matrix of …",104,[[],["samplelayout",3]]],[11,"into_flat_samples","","Return the raw sample buffer with its stride an dimension …",104,[[],["flatsamples",3]]],[11,"as_flat_samples","","Return a view on the raw sample buffer.",104,[[],["flatsamples",3]]],[11,"as_flat_samples_mut","","Return a mutable view on the raw sample buffer.",104,[[],["flatsamples",3]]],[11,"pixels_mut","","Returns an iterator over the mutable pixels of this image.",104,[[],["pixelsmut",3]]],[11,"rows_mut","","Returns an iterator over the mutable rows of this image.",104,[[],["rowsmut",3]]],[11,"enumerate_pixels_mut","","Enumerates over the pixels of the image. The iterator …",104,[[],["enumeratepixelsmut",3]]],[11,"enumerate_rows_mut","","Enumerates over the rows of the image. The iterator …",104,[[],["enumeraterowsmut",3]]],[11,"get_pixel_mut","","Gets a reference to the mutable pixel at location <code>(x, y)</code>",104,[[["u32",15]]]],[11,"put_pixel","","Puts a pixel at location <code>(x, y)</code>",104,[[["u32",15]]]],[11,"save","","Saves the buffer to a file at the path specified.",104,[[],["imageresult",6]]],[11,"save_with_format","","Saves the buffer to a file at the specified path in the …",104,[[["imageformat",4]],["imageresult",6]]],[11,"new","","Creates a new image buffer based on a <code>Vec<P::Subpixel></code>.",104,[[["u32",15]],[["vec",3],["imagebuffer",3]]]],[11,"from_pixel","","Constructs a new ImageBuffer by copying a pixel",104,[[["u32",15]],[["vec",3],["imagebuffer",3]]]],[11,"from_fn","","Constructs a new ImageBuffer by repeated application of …",104,[[["u32",15]],[["vec",3],["imagebuffer",3]]]],[11,"from_vec","","Creates an image buffer out of an existing buffer. …",104,[[["u32",15],["vec",3]],[["imagebuffer",3],["option",4]]]],[11,"into_vec","","Consumes the image buffer and returns the underlying data …",104,[[],["vec",3]]],[11,"expand_palette","","Expands a color palette by re-using the existing buffer. …",104,[[["option",4],["u8",15]],["rgbaimage",6]]],[11,"expand_palette","","Expands a color palette by re-using the existing buffer. …",108,[[["option",4],["u8",15]],["rgbaimage",6]]],[11,"bytes_per_pixel","","Returns the number of bytes contained in a pixel of …",49,[[],["u8",15]]],[11,"has_alpha","","Returns if there is an alpha channel.",49,[[],["bool",15]]],[11,"has_color","","Returns false if the color scheme is grayscale, true …",49,[[],["bool",15]]],[11,"bits_per_pixel","","Returns the number of bits contained in a pixel of …",49,[[],["u16",15]]],[11,"channel_count","","Returns the number of color channels that make up this …",49,[[],["u8",15]]],[11,"channel_count","","Get the number of channels for colors of this type.",50,[[],["u8",15]]],[11,"new_luma8","","Creates a dynamic image backed by a buffer of grey pixels.",67,[[["u32",15]],["dynamicimage",4]]],[11,"new_luma_a8","","Creates a dynamic image backed by a buffer of grey pixels …",67,[[["u32",15]],["dynamicimage",4]]],[11,"new_rgb8","","Creates a dynamic image backed by a buffer of RGB pixels.",67,[[["u32",15]],["dynamicimage",4]]],[11,"new_rgba8","","Creates a dynamic image backed by a buffer of RGBA pixels.",67,[[["u32",15]],["dynamicimage",4]]],[11,"new_bgra8","","Creates a dynamic image backed by a buffer of BGRA pixels.",67,[[["u32",15]],["dynamicimage",4]]],[11,"new_bgr8","","Creates a dynamic image backed by a buffer of BGR pixels.",67,[[["u32",15]],["dynamicimage",4]]],[11,"new_luma16","","Creates a dynamic image backed by a buffer of grey pixels.",67,[[["u32",15]],["dynamicimage",4]]],[11,"new_luma_a16","","Creates a dynamic image backed by a buffer of grey pixels …",67,[[["u32",15]],["dynamicimage",4]]],[11,"new_rgb16","","Creates a dynamic image backed by a buffer of RGB pixels.",67,[[["u32",15]],["dynamicimage",4]]],[11,"new_rgba16","","Creates a dynamic image backed by a buffer of RGBA pixels.",67,[[["u32",15]],["dynamicimage",4]]],[11,"from_decoder","","Decodes an encoded image into a dynamic image.",67,[[],["imageresult",6]]],[11,"to_rgb","","Returns a copy of this image as an RGB image.",67,[[],["rgbimage",6]]],[11,"to_rgb8","","Returns a copy of this image as an RGB image.",67,[[],["rgbimage",6]]],[11,"to_rgb16","","Returns a copy of this image as an RGB image.",67,[[],[["rgb",3],["vec",3],["imagebuffer",3]]]],[11,"to_rgba","","Returns a copy of this image as an RGBA image.",67,[[],["rgbaimage",6]]],[11,"to_rgba8","","Returns a copy of this image as an RGBA image.",67,[[],["rgbaimage",6]]],[11,"to_rgba16","","Returns a copy of this image as an RGBA image.",67,[[],[["rgba",3],["vec",3],["imagebuffer",3]]]],[11,"to_bgr","","Returns a copy of this image as an BGR image.",67,[[],[["imagebuffer",3],["bgr",3],["vec",3]]]],[11,"to_bgr8","","Returns a copy of this image as an BGR image.",67,[[],[["imagebuffer",3],["bgr",3],["vec",3]]]],[11,"to_bgra","","Returns a copy of this image as an BGRA image.",67,[[],[["vec",3],["bgra",3],["imagebuffer",3]]]],[11,"to_bgra8","","Returns a copy of this image as an BGRA image.",67,[[],[["vec",3],["bgra",3],["imagebuffer",3]]]],[11,"to_luma","","Returns a copy of this image as a Luma image.",67,[[],["grayimage",6]]],[11,"to_luma8","","Returns a copy of this image as a Luma image.",67,[[],["grayimage",6]]],[11,"to_luma16","","Returns a copy of this image as a Luma image.",67,[[],[["luma",3],["imagebuffer",3],["vec",3]]]],[11,"to_luma_alpha","","Returns a copy of this image as a LumaA image.",67,[[],["grayalphaimage",6]]],[11,"to_luma_alpha8","","Returns a copy of this image as a LumaA image.",67,[[],["grayalphaimage",6]]],[11,"to_luma_alpha16","","Returns a copy of this image as a LumaA image.",67,[[],[["imagebuffer",3],["lumaa",3],["vec",3]]]],[11,"into_rgb","","Consume the image and returns a RGB image.",67,[[],["rgbimage",6]]],[11,"into_rgb8","","Consume the image and returns a RGB image.",67,[[],["rgbimage",6]]],[11,"into_rgb16","","Consume the image and returns a RGB image.",67,[[],[["rgb",3],["vec",3],["imagebuffer",3]]]],[11,"into_rgba","","Consume the image and returns a RGBA image.",67,[[],["rgbaimage",6]]],[11,"into_rgba8","","Consume the image and returns a RGBA image.",67,[[],["rgbaimage",6]]],[11,"into_rgba16","","Consume the image and returns a RGBA image.",67,[[],[["rgba",3],["vec",3],["imagebuffer",3]]]],[11,"into_bgr","","Consume the image and returns a BGR image.",67,[[],[["imagebuffer",3],["bgr",3],["vec",3]]]],[11,"into_bgr8","","Consume the image and returns a BGR image.",67,[[],[["imagebuffer",3],["bgr",3],["vec",3]]]],[11,"into_bgra","","Consume the image and returns a BGRA image.",67,[[],[["vec",3],["bgra",3],["imagebuffer",3]]]],[11,"into_bgra8","","Consume the image and returns a BGRA image.",67,[[],[["vec",3],["bgra",3],["imagebuffer",3]]]],[11,"into_luma","","Consume the image and returns a Luma image.",67,[[],["grayimage",6]]],[11,"into_luma8","","Consume the image and returns a Luma image.",67,[[],["grayimage",6]]],[11,"into_luma16","","Consume the image and returns a Luma image.",67,[[],[["luma",3],["imagebuffer",3],["vec",3]]]],[11,"into_luma_alpha","","Consume the image and returns a LumaA image.",67,[[],["grayalphaimage",6]]],[11,"into_luma_alpha8","","Consume the image and returns a LumaA image.",67,[[],["grayalphaimage",6]]],[11,"into_luma_alpha16","","Consume the image and returns a LumaA image.",67,[[],[["imagebuffer",3],["lumaa",3],["vec",3]]]],[11,"crop","","Return a cut-out of this image delimited by the bounding …",67,[[["u32",15]],["dynamicimage",4]]],[11,"crop_imm","","Return a cut-out of this image delimited by the bounding …",67,[[["u32",15]],["dynamicimage",4]]],[11,"as_rgb8","","Return a reference to an 8bit RGB image",67,[[],[["option",4],["rgbimage",6]]]],[11,"as_mut_rgb8","","Return a mutable reference to an 8bit RGB image",67,[[],[["option",4],["rgbimage",6]]]],[11,"as_bgr8","","Return a reference to an 8bit BGR image",67,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_bgr8","","Return a mutable reference to an 8bit BGR image",67,[[],[["option",4],["imagebuffer",3]]]],[11,"as_rgba8","","Return a reference to an 8bit RGBA image",67,[[],[["option",4],["rgbaimage",6]]]],[11,"as_mut_rgba8","","Return a mutable reference to an 8bit RGBA image",67,[[],[["rgbaimage",6],["option",4]]]],[11,"as_bgra8","","Return a reference to an 8bit BGRA image",67,[[],[["imagebuffer",3],["option",4]]]],[11,"as_mut_bgra8","","Return a mutable reference to an 8bit RGBA image",67,[[],[["option",4],["imagebuffer",3]]]],[11,"as_luma8","","Return a reference to an 8bit Grayscale image",67,[[],[["option",4],["grayimage",6]]]],[11,"as_mut_luma8","","Return a mutable reference to an 8bit Grayscale image",67,[[],[["option",4],["grayimage",6]]]],[11,"as_luma_alpha8","","Return a reference to an 8bit Grayscale image with an …",67,[[],[["option",4],["grayalphaimage",6]]]],[11,"as_mut_luma_alpha8","","Return a mutable reference to an 8bit Grayscale image …",67,[[],[["grayalphaimage",6],["option",4]]]],[11,"as_rgb16","","Return a reference to an 16bit RGB image",67,[[],[["imagebuffer",3],["option",4]]]],[11,"as_mut_rgb16","","Return a mutable reference to an 16bit RGB image",67,[[],[["option",4],["imagebuffer",3]]]],[11,"as_rgba16","","Return a reference to an 16bit RGBA image",67,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_rgba16","","Return a mutable reference to an 16bit RGBA image",67,[[],[["option",4],["imagebuffer",3]]]],[11,"as_luma16","","Return a reference to an 16bit Grayscale image",67,[[],[["imagebuffer",3],["option",4]]]],[11,"as_mut_luma16","","Return a mutable reference to an 16bit Grayscale image",67,[[],[["imagebuffer",3],["option",4]]]],[11,"as_luma_alpha16","","Return a reference to an 16bit Grayscale image with an …",67,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_luma_alpha16","","Return a mutable reference to an 16bit Grayscale image …",67,[[],[["option",4],["imagebuffer",3]]]],[11,"as_flat_samples_u8","","Return a view on the raw sample buffer for 8 bit per …",67,[[],[["flatsamples",3],["option",4]]]],[11,"as_flat_samples_u16","","Return a view on the raw sample buffer for 16 bit per …",67,[[],[["option",4],["flatsamples",3]]]],[11,"as_bytes","","Return this image\'s pixels as a native endian byte slice.",67,[[]]],[11,"into_bytes","","Return this image\'s pixels as a byte vector. If the …",67,[[],[["vec",3],["u8",15]]]],[11,"to_bytes","","Return a copy of this image\'s pixels as a byte vector.",67,[[],[["vec",3],["u8",15]]]],[11,"color","","Return this image\'s color type.",67,[[],["colortype",4]]],[11,"grayscale","","Return a grayscale version of this image.",67,[[],["dynamicimage",4]]],[11,"invert","","Invert the colors of this image. This method operates …",67,[[]]],[11,"resize","","Resize this image using the specified filter algorithm. …",67,[[["u32",15],["filtertype",4]],["dynamicimage",4]]],[11,"resize_exact","","Resize this image using the specified filter algorithm. …",67,[[["u32",15],["filtertype",4]],["dynamicimage",4]]],[11,"thumbnail","","Scale this image down to fit within a specific size. …",67,[[["u32",15]],["dynamicimage",4]]],[11,"thumbnail_exact","","Scale this image down to a specific size. Returns a new …",67,[[["u32",15]],["dynamicimage",4]]],[11,"resize_to_fill","","Resize this image using the specified filter algorithm. …",67,[[["u32",15],["filtertype",4]],["dynamicimage",4]]],[11,"blur","","Performs a Gaussian blur on this image. <code>sigma</code> is a …",67,[[["f32",15]],["dynamicimage",4]]],[11,"unsharpen","","Performs an unsharpen mask on this image. <code>sigma</code> is the …",67,[[["f32",15],["i32",15]],["dynamicimage",4]]],[11,"filter3x3","","Filters this image with the specified 3x3 kernel.",67,[[],["dynamicimage",4]]],[11,"adjust_contrast","","Adjust the contrast of this image. <code>contrast</code> is the amount …",67,[[["f32",15]],["dynamicimage",4]]],[11,"brighten","","Brighten the pixels of this image. <code>value</code> is the amount to …",67,[[["i32",15]],["dynamicimage",4]]],[11,"huerotate","","Hue rotate the supplied image. <code>value</code> is the degrees to …",67,[[["i32",15]],["dynamicimage",4]]],[11,"flipv","","Flip this image vertically",67,[[],["dynamicimage",4]]],[11,"fliph","","Flip this image horizontally",67,[[],["dynamicimage",4]]],[11,"rotate90","","Rotate this image 90 degrees clockwise.",67,[[],["dynamicimage",4]]],[11,"rotate180","","Rotate this image 180 degrees clockwise.",67,[[],["dynamicimage",4]]],[11,"rotate270","","Rotate this image 270 degrees clockwise.",67,[[],["dynamicimage",4]]],[11,"write_to","","Encode this image and write it to <code>w</code>",67,[[["into",8],["imageoutputformat",4]],["imageresult",6]]],[11,"save","","Saves the buffer to a file at the path specified.",67,[[],["imageresult",6]]],[11,"save_with_format","","Saves the buffer to a file at the specified path in the …",67,[[["imageformat",4]],["imageresult",6]]],[11,"from_extension","","Return the image format specified by a path\'s file …",63,[[],["option",4]]],[11,"from_path","","Return the image format specified by the path\'s file …",63,[[],["imageresult",6]]],[11,"can_read","","Return if the ImageFormat can be decoded by the lib.",63,[[],["bool",15]]],[11,"can_write","","Return if the ImageFormat can be encoded by the lib.",63,[[],["bool",15]]],[11,"extensions_str","","Return a list of applicable extensions for this format.",63,[[]]],[11,"current","","A measure of completed decoding.",105,[[],["u64",15]]],[11,"total","","A measure of all necessary decoding work.",105,[[],["u64",15]]],[11,"remaining","","Calculate a measure for remaining decoding work.",105,[[],["u64",15]]],[11,"original_color_type","","Retuns the color type of the image file before decoding",60,[[],["extendedcolortype",4]]],[11,"total_bytes","","Returns the total number of bytes in the decoded image.",60,[[],["u64",15]]],[11,"scanline_bytes","","Returns the minimum number of bytes that can be …",60,[[],["u64",15]]],[11,"read_image","","Returns all the bytes in the image.",60,[[],["imageresult",6]]],[11,"read_image_with_progress","","Same as <code>read_image</code> but periodically calls the provided …",60,[[["fn",8]],["imageresult",6]]],[11,"read_rect","","Decode a rectangular section of the image; see …",61,[[["u32",15]],["imageresult",6]]],[11,"width","","The width of this image.",59,[[],["u32",15]]],[11,"height","","The height of this image.",59,[[],["u32",15]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside …",59,[[["u32",15]],["bool",15]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y). Indexed from top …",59,[[["u32",15]]]],[11,"pixels","","Returns an Iterator over the pixels of this image. The …",59,[[],["pixels",3]]],[11,"view","","Returns an subimage that is an immutable view into this …",59,[[["u32",15]],["subimage",3]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y). Indexed from top left.",58,[[["u32",15]]]],[11,"copy_from","","Copies all of the pixels from another image into this …",58,[[["u32",15]],["imageresult",6]]],[11,"copy_within","","Copies all of the pixels from one part of this image to …",58,[[["u32",15],["rect",3]],["bool",15]]],[11,"sub_image","","Returns a mutable subimage that is a view into this image.…",58,[[["u32",15]],["subimage",3]]],[11,"new","","Construct a new subimage The coordinates set the position …",107,[[["u32",15]],["subimage",3]]],[11,"change_bounds","","Change the coordinates of this subimage.",107,[[["u32",15]]]],[11,"to_image","","Convert this subimage to an ImageBuffer",107,[[],[["imagebuffer",3],["vec",3]]]],[18,"CHANNEL_COUNT","","The number of channels of this pixel type.",66,null],[11,"channel_count","","Returns the number of channels of this pixel type.",66,[[],["u8",15]]],[18,"COLOR_MODEL","","A string that can help to interpret the meaning each …",66,null],[11,"color_model","","Returns a string that can help to interpret the meaning …",66,[[],["str",15]]],[18,"COLOR_TYPE","","ColorType for this pixel format",66,null],[11,"color_type","","Returns the ColorType for this pixel format",66,[[],["colortype",4]]],[11,"map_without_alpha","","Apply the function <code>f</code> to each channel except the alpha …",66,[[]]],[11,"apply_without_alpha","","Apply the function <code>f</code> to each channel except the alpha …",66,[[]]]],"p":[[4,"ImageError"],[4,"UnsupportedErrorKind"],[4,"ParameterErrorKind"],[4,"LimitErrorKind"],[4,"ImageFormatHint"],[3,"UnsupportedError"],[3,"DecodingError"],[3,"EncodingError"],[3,"ParameterError"],[3,"LimitError"],[8,"ConvertBuffer"],[3,"NeuQuant"],[3,"Rect"],[8,"ColorMap"],[4,"FilterType"],[3,"FlatSamples"],[3,"SampleLayout"],[4,"Error"],[4,"NormalForm"],[3,"View"],[3,"ViewMut"],[3,"DdsDecoder"],[4,"DXTVariant"],[3,"DxtDecoder"],[3,"DxtEncoder"],[3,"FarbfeldDecoder"],[3,"FarbfeldEncoder"],[3,"GifDecoder"],[4,"Repeat"],[3,"GifEncoder"],[3,"Rgbe8Pixel"],[3,"HdrMetadata"],[3,"PixelDensity"],[4,"PixelDensityUnit"],[3,"PngDecoder"],[4,"CompressionType"],[4,"FilterType"],[3,"PngEncoder"],[3,"ArbitraryHeader"],[4,"ArbitraryTuplType"],[3,"BitmapHeader"],[3,"GraymapHeader"],[3,"PixmapHeader"],[4,"PNMSubtype"],[4,"SampleEncoding"],[3,"TiffDecoder"],[3,"TiffEncoder"],[3,"Frame"],[3,"Vp8Decoder"],[4,"ColorType"],[4,"ExtendedColorType"],[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[3,"Bgr"],[3,"Bgra"],[8,"AnimationDecoder"],[8,"GenericImage"],[8,"GenericImageView"],[8,"ImageDecoder"],[8,"ImageDecoderExt"],[8,"ImageEncoder"],[4,"ImageFormat"],[4,"ImageOutputFormat"],[8,"EncodableLayout"],[8,"Pixel"],[4,"DynamicImage"],[3,"EnumeratePixels"],[3,"EnumeratePixelsMut"],[3,"EnumerateRows"],[3,"EnumerateRowsMut"],[3,"Pixels"],[3,"PixelsMut"],[3,"Rows"],[3,"RowsMut"],[3,"BiLevel"],[3,"Reader"],[3,"BmpDecoder"],[3,"BmpEncoder"],[3,"DxtReader"],[3,"FarbfeldReader"],[3,"GifReader"],[3,"HdrAdapter"],[3,"HdrReader"],[3,"HdrDecoder"],[3,"HdrImageDecoderIterator"],[3,"HdrEncoder"],[3,"IcoDecoder"],[3,"IcoEncoder"],[3,"JpegDecoder"],[3,"JpegEncoder"],[3,"PngReader"],[3,"ApngDecoder"],[3,"PnmDecoder"],[3,"PnmEncoder"],[3,"PnmHeader"],[3,"TgaDecoder"],[3,"TgaEncoder"],[3,"TiffReader"],[3,"WebPDecoder"],[3,"Frames"],[3,"Frame"],[3,"Delay"],[3,"ImageBuffer"],[3,"Progress"],[3,"Pixels"],[3,"SubImage"],[6,"GrayImage"]]},\
"input":{"doc":"A flexible structure for user interactions to be used in …","i":[[0,"controller","input","Back-end agnostic controller events.",null,null],[3,"ControllerButton","input::controller","Components of a controller button event. Not guaranteed …",null,null],[12,"id","","Which controller was the button on.",0,null],[12,"button","","Which button was pressed.",0,null],[11,"new","","Create a new ControllerButton object. Intended for use by …",0,[[["u32",15],["u8",15]]]],[3,"ControllerHat","","Components of a controller hat move event (d-Pad).",null,null],[12,"id","","Which Controller was the button on.",1,null],[12,"state","","Which button was pressed.",1,null],[12,"which","","Which hat on the controller was changed",1,null],[11,"new","","Create a new ControllerButton object. Intended for use by …",1,[[["u32",15],["hatstate",4],["u8",15]]]],[3,"ControllerAxisArgs","","Components of a controller axis move event. Not …",null,null],[12,"id","","Which controller moved.",2,null],[12,"axis","","The axis that moved.",2,null],[12,"position","","Position of the controller. Usually [-1.0, 1.0], though …",2,null],[11,"new","","Create a new ControllerAxisArgs object. Intended for use …",2,[[["u32",15],["f64",15],["u8",15]]]],[8,"ControllerAxisEvent","","The position of a controller axis changed.",null,null],[10,"from_controller_axis_args","","Creates a controller axis event.",3,[[["controlleraxisargs",3]],["option",4]]],[10,"controller_axis","","Calls closure if this is a controller axis event.",3,[[],["option",4]]],[11,"controller_axis_args","","Returns controller axis arguments.",3,[[],[["option",4],["controlleraxisargs",3]]]],[0,"keyboard","input","Back-end agnostic keyboard keys.",null,null],[3,"ModifierKey","input::keyboard","",null,null],[18,"NO_MODIFIER","","No modifier.",4,null],[18,"CTRL","","Ctrl.",4,null],[18,"SHIFT","","Shift.",4,null],[18,"ALT","","Alt.",4,null],[18,"GUI","","Gui.",4,null],[18,"CTRL_SHIFT","","Ctrl + Shift.",4,null],[18,"CTRL_ALT","","Ctrl + Alt.",4,null],[18,"CTRL_GUI","","Ctrl + Gui.",4,null],[18,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",4,null],[18,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",4,null],[18,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",4,null],[18,"SHIFT_ALT","","Shift + Alt.",4,null],[18,"SHIFT_GUI","","Shift + Gui.",4,null],[18,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",4,null],[18,"ALT_GUI","","Alt + Gui.",4,null],[11,"empty","","Returns an empty set of flags",4,[[],["modifierkey",3]]],[11,"all","","Returns the set containing all flags.",4,[[],["modifierkey",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",4,[[],["u8",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",4,[[["u8",15]],[["modifierkey",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",4,[[["u8",15]],["modifierkey",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",4,[[["u8",15]],["modifierkey",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",4,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",4,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",4,[[["modifierkey",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",4,[[["modifierkey",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",4,[[["modifierkey",3]]]],[11,"remove","","Removes the specified flags in-place.",4,[[["modifierkey",3]]]],[11,"toggle","","Toggles the specified flags in-place.",4,[[["modifierkey",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",4,[[["bool",15],["modifierkey",3]]]],[11,"event","","Change modifier key state depending on input.",4,[[]]],[4,"Key","","Represent a keyboard key. Keycodes follows SDL …",null,null],[13,"Unknown","","",5,null],[13,"Backspace","","",5,null],[13,"Tab","","",5,null],[13,"Return","","",5,null],[13,"Escape","","",5,null],[13,"Space","","",5,null],[13,"Exclaim","","",5,null],[13,"Quotedbl","","",5,null],[13,"Hash","","",5,null],[13,"Dollar","","",5,null],[13,"Percent","","",5,null],[13,"Ampersand","","",5,null],[13,"Quote","","",5,null],[13,"LeftParen","","",5,null],[13,"RightParen","","",5,null],[13,"Asterisk","","",5,null],[13,"Plus","","",5,null],[13,"Comma","","",5,null],[13,"Minus","","",5,null],[13,"Period","","",5,null],[13,"Slash","","",5,null],[13,"D0","","",5,null],[13,"D1","","",5,null],[13,"D2","","",5,null],[13,"D3","","",5,null],[13,"D4","","",5,null],[13,"D5","","",5,null],[13,"D6","","",5,null],[13,"D7","","",5,null],[13,"D8","","",5,null],[13,"D9","","",5,null],[13,"Colon","","",5,null],[13,"Semicolon","","",5,null],[13,"Less","","",5,null],[13,"Equals","","",5,null],[13,"Greater","","",5,null],[13,"Question","","",5,null],[13,"At","","",5,null],[13,"LeftBracket","","",5,null],[13,"Backslash","","",5,null],[13,"RightBracket","","",5,null],[13,"Caret","","",5,null],[13,"Underscore","","",5,null],[13,"Backquote","","",5,null],[13,"A","","",5,null],[13,"B","","",5,null],[13,"C","","",5,null],[13,"D","","",5,null],[13,"E","","",5,null],[13,"F","","",5,null],[13,"G","","",5,null],[13,"H","","",5,null],[13,"I","","",5,null],[13,"J","","",5,null],[13,"K","","",5,null],[13,"L","","",5,null],[13,"M","","",5,null],[13,"N","","",5,null],[13,"O","","",5,null],[13,"P","","",5,null],[13,"Q","","",5,null],[13,"R","","",5,null],[13,"S","","",5,null],[13,"T","","",5,null],[13,"U","","",5,null],[13,"V","","",5,null],[13,"W","","",5,null],[13,"X","","",5,null],[13,"Y","","",5,null],[13,"Z","","",5,null],[13,"Delete","","",5,null],[13,"CapsLock","","",5,null],[13,"F1","","",5,null],[13,"F2","","",5,null],[13,"F3","","",5,null],[13,"F4","","",5,null],[13,"F5","","",5,null],[13,"F6","","",5,null],[13,"F7","","",5,null],[13,"F8","","",5,null],[13,"F9","","",5,null],[13,"F10","","",5,null],[13,"F11","","",5,null],[13,"F12","","",5,null],[13,"PrintScreen","","",5,null],[13,"ScrollLock","","",5,null],[13,"Pause","","",5,null],[13,"Insert","","",5,null],[13,"Home","","",5,null],[13,"PageUp","","",5,null],[13,"End","","",5,null],[13,"PageDown","","",5,null],[13,"Right","","",5,null],[13,"Left","","",5,null],[13,"Down","","",5,null],[13,"Up","","",5,null],[13,"NumLockClear","","",5,null],[13,"NumPadDivide","","",5,null],[13,"NumPadMultiply","","",5,null],[13,"NumPadMinus","","",5,null],[13,"NumPadPlus","","",5,null],[13,"NumPadEnter","","",5,null],[13,"NumPad1","","",5,null],[13,"NumPad2","","",5,null],[13,"NumPad3","","",5,null],[13,"NumPad4","","",5,null],[13,"NumPad5","","",5,null],[13,"NumPad6","","",5,null],[13,"NumPad7","","",5,null],[13,"NumPad8","","",5,null],[13,"NumPad9","","",5,null],[13,"NumPad0","","",5,null],[13,"NumPadPeriod","","",5,null],[13,"Application","","",5,null],[13,"Power","","",5,null],[13,"NumPadEquals","","",5,null],[13,"F13","","",5,null],[13,"F14","","",5,null],[13,"F15","","",5,null],[13,"F16","","",5,null],[13,"F17","","",5,null],[13,"F18","","",5,null],[13,"F19","","",5,null],[13,"F20","","",5,null],[13,"F21","","",5,null],[13,"F22","","",5,null],[13,"F23","","",5,null],[13,"F24","","",5,null],[13,"Execute","","",5,null],[13,"Help","","",5,null],[13,"Menu","","",5,null],[13,"Select","","",5,null],[13,"Stop","","",5,null],[13,"Again","","",5,null],[13,"Undo","","",5,null],[13,"Cut","","",5,null],[13,"Copy","","",5,null],[13,"Paste","","",5,null],[13,"Find","","",5,null],[13,"Mute","","",5,null],[13,"VolumeUp","","",5,null],[13,"VolumeDown","","",5,null],[13,"NumPadComma","","",5,null],[13,"NumPadEqualsAS400","","",5,null],[13,"AltErase","","",5,null],[13,"Sysreq","","",5,null],[13,"Cancel","","",5,null],[13,"Clear","","",5,null],[13,"Prior","","",5,null],[13,"Return2","","",5,null],[13,"Separator","","",5,null],[13,"Out","","",5,null],[13,"Oper","","",5,null],[13,"ClearAgain","","",5,null],[13,"CrSel","","",5,null],[13,"ExSel","","",5,null],[13,"NumPad00","","",5,null],[13,"NumPad000","","",5,null],[13,"ThousandsSeparator","","",5,null],[13,"DecimalSeparator","","",5,null],[13,"CurrencyUnit","","",5,null],[13,"CurrencySubUnit","","",5,null],[13,"NumPadLeftParen","","",5,null],[13,"NumPadRightParen","","",5,null],[13,"NumPadLeftBrace","","",5,null],[13,"NumPadRightBrace","","",5,null],[13,"NumPadTab","","",5,null],[13,"NumPadBackspace","","",5,null],[13,"NumPadA","","",5,null],[13,"NumPadB","","",5,null],[13,"NumPadC","","",5,null],[13,"NumPadD","","",5,null],[13,"NumPadE","","",5,null],[13,"NumPadF","","",5,null],[13,"NumPadXor","","",5,null],[13,"NumPadPower","","",5,null],[13,"NumPadPercent","","",5,null],[13,"NumPadLess","","",5,null],[13,"NumPadGreater","","",5,null],[13,"NumPadAmpersand","","",5,null],[13,"NumPadDblAmpersand","","",5,null],[13,"NumPadVerticalBar","","",5,null],[13,"NumPadDblVerticalBar","","",5,null],[13,"NumPadColon","","",5,null],[13,"NumPadHash","","",5,null],[13,"NumPadSpace","","",5,null],[13,"NumPadAt","","",5,null],[13,"NumPadExclam","","",5,null],[13,"NumPadMemStore","","",5,null],[13,"NumPadMemRecall","","",5,null],[13,"NumPadMemClear","","",5,null],[13,"NumPadMemAdd","","",5,null],[13,"NumPadMemSubtract","","",5,null],[13,"NumPadMemMultiply","","",5,null],[13,"NumPadMemDivide","","",5,null],[13,"NumPadPlusMinus","","",5,null],[13,"NumPadClear","","",5,null],[13,"NumPadClearEntry","","",5,null],[13,"NumPadBinary","","",5,null],[13,"NumPadOctal","","",5,null],[13,"NumPadDecimal","","",5,null],[13,"NumPadHexadecimal","","",5,null],[13,"LCtrl","","",5,null],[13,"LShift","","",5,null],[13,"LAlt","","",5,null],[13,"LGui","","",5,null],[13,"RCtrl","","",5,null],[13,"RShift","","",5,null],[13,"RAlt","","",5,null],[13,"RGui","","",5,null],[13,"Mode","","",5,null],[13,"AudioNext","","",5,null],[13,"AudioPrev","","",5,null],[13,"AudioStop","","",5,null],[13,"AudioPlay","","",5,null],[13,"AudioMute","","",5,null],[13,"MediaSelect","","",5,null],[13,"Www","","",5,null],[13,"Mail","","",5,null],[13,"Calculator","","",5,null],[13,"Computer","","",5,null],[13,"AcSearch","","",5,null],[13,"AcHome","","",5,null],[13,"AcBack","","",5,null],[13,"AcForward","","",5,null],[13,"AcStop","","",5,null],[13,"AcRefresh","","",5,null],[13,"AcBookmarks","","",5,null],[13,"BrightnessDown","","",5,null],[13,"BrightnessUp","","",5,null],[13,"DisplaySwitch","","",5,null],[13,"KbdIllumToggle","","",5,null],[13,"KbdIllumDown","","",5,null],[13,"KbdIllumUp","","",5,null],[13,"Eject","","",5,null],[13,"Sleep","","",5,null],[11,"code","","Returns an id of the key",5,[[],["i32",15]]],[0,"mouse","input","Back-end agnostic mouse buttons.",null,null],[4,"MouseButton","input::mouse","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",6,null],[13,"Left","","Left mouse button.",6,null],[13,"Right","","Right mouse button.",6,null],[13,"Middle","","Middle mouse button.",6,null],[13,"X1","","Extra mouse button number 1.",6,null],[13,"X2","","Extra mouse button number 2.",6,null],[13,"Button6","","Mouse button number 6.",6,null],[13,"Button7","","Mouse button number 7.",6,null],[13,"Button8","","Mouse button number 8.",6,null],[8,"MouseCursorEvent","","The position of the mouse cursor.",null,null],[10,"from_pos","","Creates a mouse cursor event.",7,[[],["option",4]]],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",7,[[],["option",4]]],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",7,[[],["option",4]]],[8,"MouseRelativeEvent","","The relative movement of mouse cursor.",null,null],[10,"from_pos","","Creates a mouse relative event.",8,[[],["option",4]]],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",8,[[],["option",4]]],[11,"mouse_relative_args","","Returns mouse relative arguments.",8,[[],["option",4]]],[8,"MouseScrollEvent","","The scroll of the mouse wheel.",null,null],[10,"from_pos","","Creates a mouse scroll event.",9,[[],["option",4]]],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",9,[[],["option",4]]],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",9,[[],["option",4]]],[0,"event_id","input","Event identifiers.",null,null],[17,"AFTER_RENDER","input::event_id","Event id for after render event.",null,null],[17,"CONTROLLER_AXIS","","Event id for controller axis event.",null,null],[17,"CURSOR","","Event id for cursor event.",null,null],[17,"FOCUS","","Event id for focus event.",null,null],[17,"CLOSE","","Event id for close event.",null,null],[17,"IDLE","","Event id for idle event.",null,null],[17,"MOUSE_SCROLL","","Event id for mouse scroll event.",null,null],[17,"MOUSE_RELATIVE","","Event id for mouse relative event.",null,null],[17,"MOUSE_CURSOR","","Event id for mouse cursor event.",null,null],[17,"BUTTON","","Event id for button event.",null,null],[17,"RENDER","","Event id for render event.",null,null],[17,"RESIZE","","Event id for resize event.",null,null],[17,"TEXT","","Event id for text event.",null,null],[17,"TOUCH","","Event id for touch event.",null,null],[17,"UPDATE","","Event id for update event.",null,null],[17,"FILE_DRAG","","Event id for file drag event.",null,null],[3,"EventId","","Used to identify events arguments provided by traits.",null,null],[12,"0","","",10,null],[0,"generic_event","input","Trait for generic events",null,null],[8,"GenericEvent","input::generic_event","Implemented by all events.",null,null],[10,"event_id","","The id of this event.",11,[[],["eventid",3]]],[10,"with_args","","Calls closure with arguments",11,[[]]],[10,"time_stamp","","Gets the time stamp of this event.",11,[[],[["option",4],["timestamp",6]]]],[3,"AfterRenderArgs","input","After render arguments.",null,null],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",null,null],[10,"from_after_render_args","","Creates an after render event.",12,[[["afterrenderargs",3]],["option",4]]],[10,"after_render","","Calls closure if this is an after render event.",12,[[],["option",4]]],[11,"after_render_args","","Returns after render arguments.",12,[[],[["afterrenderargs",3],["option",4]]]],[3,"CloseArgs","","Close arguments.",null,null],[8,"CloseEvent","","Window is closing.",null,null],[10,"from_close_args","","Creates a close event from arguments.",13,[[["closeargs",3]],["option",4]]],[10,"close","","Calls closure if this is a close event.",13,[[],["option",4]]],[11,"close_args","","Returns close arguments.",13,[[],[["option",4],["closeargs",3]]]],[8,"CursorEvent","","When window gets or loses cursor.",null,null],[10,"from_cursor","","Creates a cursor event.",14,[[["bool",15]],["option",4]]],[10,"cursor","","Calls closure if this is a cursor event.",14,[[],["option",4]]],[11,"cursor_args","","Returns cursor arguments.",14,[[],[["bool",15],["option",4]]]],[8,"FocusEvent","","When window gets or loses focus.",null,null],[10,"from_focused","","Creates a focus event.",15,[[["bool",15]],["option",4]]],[10,"focus","","Calls closure if this is a focus event.",15,[[],["option",4]]],[11,"focus_args","","Returns focus arguments.",15,[[],[["bool",15],["option",4]]]],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",null,null],[12,"dt","","Expected idle time in seconds.",16,null],[8,"IdleEvent","","When background tasks should be performed.",null,null],[10,"from_idle_args","","Creates an idle event.",17,[[["idleargs",3]],["option",4]]],[11,"from_dt","","Creates an update event with delta time.",17,[[["f64",15]],["option",4]]],[10,"idle","","Calls closure if this is an idle event.",17,[[],["option",4]]],[11,"idle_args","","Returns idle arguments.",17,[[],[["option",4],["idleargs",3]]]],[4,"ButtonState","","Stores button state.",null,null],[13,"Press","","Button was pressed.",18,null],[13,"Release","","Button was released.",18,null],[3,"ButtonArgs","","Button arguments.",null,null],[12,"state","","New state of the button.",19,null],[12,"button","","The button that changed state.",19,null],[12,"scancode","","An optional scancode that tells the physical layout of a …",19,null],[8,"ButtonEvent","","Changed button state.",null,null],[10,"from_button_args","","Creates a button event.",20,[[["buttonargs",3]],["option",4]]],[10,"button","","Calls closure if this is a button event.",20,[[],["option",4]]],[11,"button_args","","Returns button arguments.",20,[[],[["buttonargs",3],["option",4]]]],[8,"PressEvent","","The press of a button.",null,null],[10,"from_button","","Creates a press event.",21,[[["button",4]],["option",4]]],[10,"press","","Calls closure if this is a press event.",21,[[],["option",4]]],[11,"press_args","","Returns press arguments.",21,[[],[["button",4],["option",4]]]],[8,"ReleaseEvent","","The release of a button.",null,null],[10,"from_button","","Creates a release event.",22,[[["button",4]],["option",4]]],[10,"release","","Calls closure if this is a release event.",22,[[],["option",4]]],[11,"release_args","","Returns release arguments.",22,[[],[["button",4],["option",4]]]],[3,"ResizeArgs","","Resize arguments.",null,null],[12,"window_size","","The width and height of rendered area in points.",23,null],[12,"draw_size","","The width of rendered area in pixels.",23,null],[8,"ResizeEvent","","When the window is resized.",null,null],[10,"from_resize_args","","Creates a resize event.",24,[[["resizeargs",3]],["option",4]]],[10,"resize","","Calls closure if this is a resize event.",24,[[],["option",4]]],[11,"resize_args","","Returns resize arguments.",24,[[],[["option",4],["resizeargs",3]]]],[3,"RenderArgs","","Render arguments.",null,null],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",25,null],[12,"window_size","","The width and height of rendered area in points.",25,null],[12,"draw_size","","The width and height of rendered area in pixels.",25,null],[8,"RenderEvent","","When the next frame should be rendered.",null,null],[10,"from_render_args","","Creates a render event.",26,[[["renderargs",3]],["option",4]]],[10,"render","","Calls closure if this is a render event.",26,[[],["option",4]]],[11,"render_args","","Returns render arguments.",26,[[],[["option",4],["renderargs",3]]]],[8,"TextEvent","","When receiving text from user, such as typing a character.",null,null],[10,"from_text","","Creates a text event.",27,[[["str",15]],["option",4]]],[10,"text","","Calls closure if this is a text event.",27,[[],["option",4]]],[11,"text_args","","Returns text arguments.",27,[[],[["option",4],["string",3]]]],[4,"Touch","","Stores the touch state.",null,null],[13,"Start","","The start of touch, for example a finger pressed down on …",28,null],[13,"Move","","The move of touch, for example a finger moving while …",28,null],[13,"End","","The end of touch, for example taking a finger away from a …",28,null],[13,"Cancel","","The cancel of touch, for example the window loses focus.",28,null],[3,"TouchArgs","","Touch arguments",null,null],[12,"device","","A unique identifier for touch device.",29,null],[12,"id","","A unique identifier for touch event.",29,null],[12,"position_3d","","The touch position, normalized 0..1.",29,null],[12,"pressure_3d","","The touch pressure vector, normalized 0..1.",29,null],[12,"is_3d","","Whether the touch is in 3D.",29,null],[12,"touch","","The touch state.",29,null],[8,"TouchEvent","","When a touch is started, moved, ended or cancelled.",null,null],[10,"from_touch_args","","Creates a touch event.",30,[[["touchargs",3]],["option",4]]],[10,"touch","","Calls closure if this is a touch event.",30,[[],["option",4]]],[11,"touch_args","","Returns touch arguments.",30,[[],[["option",4],["touchargs",3]]]],[3,"UpdateArgs","","Update arguments, such as delta time in seconds.",null,null],[12,"dt","","Delta time in seconds.",31,null],[8,"UpdateEvent","","When the application state should be updated.",null,null],[10,"from_update_args","","Creates an update event.",32,[[["updateargs",3]],["option",4]]],[11,"from_dt","","Creates an update event with delta time.",32,[[["f64",15]],["option",4]]],[10,"update","","Calls closure if this is an update event.",32,[[],["option",4]]],[11,"update_args","","Returns update arguments.",32,[[],[["option",4],["updateargs",3]]]],[6,"TimeStamp","","The type of time stamp.",null,null],[4,"Button","","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",33,null],[13,"Mouse","","A mouse button.",33,null],[13,"Controller","","A controller button.",33,null],[13,"Hat","","A controller hat (d-Pad)",33,null],[4,"Motion","","Models different kinds of motion.",null,null],[13,"MouseCursor","","Position in window coordinates.",34,null],[13,"MouseRelative","","Position in relative coordinates.",34,null],[13,"MouseScroll","","Position in scroll ticks.",34,null],[13,"ControllerAxis","","Controller axis move event.",34,null],[13,"Touch","","Touch event.",34,null],[4,"HatState","","Stores controller hat state.",null,null],[13,"Centered","","Centered (no direction).",35,null],[13,"Up","","Up direction.",35,null],[13,"Right","","Right direction.",35,null],[13,"Down","","Down direction.",35,null],[13,"Left","","Left direction.",35,null],[13,"RightUp","","Right-up direction.",35,null],[13,"RightDown","","Right-down direction.",35,null],[13,"LeftUp","","Left-up direction.",35,null],[13,"LeftDown","","Left-down direction.",35,null],[4,"FileDrag","","Models dragging and dropping files.",null,null],[13,"Hover","","A file is being hovered over the window.",36,null],[13,"Drop","","A file has been dropped into the window.",36,null],[13,"Cancel","","A file was hovered, but has exited the window.",36,null],[4,"Input","","Models input events.",null,null],[13,"Button","","Changed button state.",37,null],[13,"Move","","Moved mouse cursor.",37,null],[13,"Text","","Text (usually from keyboard).",37,null],[13,"Resize","","Window got resized.",37,null],[13,"Focus","","Window gained or lost focus.",37,null],[13,"Cursor","","Window gained or lost cursor.",37,null],[13,"FileDrag","","A file is being dragged or dropped over the window.",37,null],[13,"Close","","Window closed.",37,null],[4,"Loop","","Models loop events.",null,null],[13,"Render","","Render graphics.",38,null],[13,"AfterRender","","After rendering and swapping buffers.",38,null],[13,"Update","","Update the state of the application.",38,null],[13,"Idle","","Do background tasks that can be done incrementally.",38,null],[4,"Event","","Models all events.",null,null],[13,"Input","","Input events.",39,null],[13,"Loop","","Events that commonly used by event loops.",39,null],[13,"Custom","","Custom event.",39,null],[11,"from","input::controller","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","input::keyboard","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","input::mouse","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","input::event_id","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","input","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from_controller_axis_args","","",39,[[["controlleraxisargs",3]],["option",4]]],[11,"controller_axis","","",39,[[],["option",4]]],[11,"from_pos","","",39,[[],["option",4]]],[11,"mouse_cursor","","",39,[[],["option",4]]],[11,"from_pos","","",39,[[],["option",4]]],[11,"mouse_relative","","",39,[[],["option",4]]],[11,"from_pos","","",39,[[],["option",4]]],[11,"mouse_scroll","","",39,[[],["option",4]]],[11,"event_id","","",39,[[],["eventid",3]]],[11,"with_args","","",39,[[]]],[11,"time_stamp","","",39,[[],[["option",4],["timestamp",6]]]],[11,"from_after_render_args","","",39,[[["afterrenderargs",3]],["option",4]]],[11,"after_render","","",39,[[],["option",4]]],[11,"from_button_args","","",39,[[["buttonargs",3]],["option",4]]],[11,"button","","",39,[[],["option",4]]],[11,"from_close_args","","",39,[[["closeargs",3]],["option",4]]],[11,"close","","",39,[[],["option",4]]],[11,"from_cursor","","",39,[[["bool",15]],["option",4]]],[11,"cursor","","",39,[[],["option",4]]],[11,"from_focused","","",39,[[["bool",15]],["option",4]]],[11,"focus","","",39,[[],["option",4]]],[11,"from_idle_args","","",39,[[["idleargs",3]],["option",4]]],[11,"idle","","",39,[[],["option",4]]],[11,"from_render_args","","",39,[[["renderargs",3]],["option",4]]],[11,"render","","",39,[[],["option",4]]],[11,"from_resize_args","","",39,[[["resizeargs",3]],["option",4]]],[11,"resize","","",39,[[],["option",4]]],[11,"from_text","","",39,[[["str",15]],["option",4]]],[11,"text","","",39,[[],["option",4]]],[11,"from_touch_args","","",39,[[["touchargs",3]],["option",4]]],[11,"touch","","",39,[[],["option",4]]],[11,"from_update_args","","",39,[[["updateargs",3]],["option",4]]],[11,"update","","",39,[[],["option",4]]],[11,"from","input::keyboard","",5,[[["u32",15]],["key",4]]],[11,"from","input::mouse","",6,[[["u32",15]],["mousebutton",4]]],[11,"from","input","",33,[[["key",4]]]],[11,"from","","",33,[[["mousebutton",4]]]],[11,"from","","",33,[[["controllerbutton",3]]]],[11,"from","","",37,[[["buttonargs",3]]]],[11,"from","","",34,[[["controlleraxisargs",3]]]],[11,"from","","",37,[[["controlleraxisargs",3]]]],[11,"from","","",34,[[["touchargs",3]]]],[11,"from","","",37,[[["touchargs",3]]]],[11,"from","","",37,[[["motion",4]]]],[11,"from","","",38,[[["renderargs",3]]]],[11,"from","","",39,[[["renderargs",3]]]],[11,"from","","",38,[[["afterrenderargs",3]]]],[11,"from","","",39,[[["afterrenderargs",3]]]],[11,"from","","",38,[[["updateargs",3]]]],[11,"from","","",39,[[["updateargs",3]]]],[11,"from","","",38,[[["idleargs",3]]]],[11,"from","","",39,[[["idleargs",3]]]],[11,"from","","",37,[[["closeargs",3]]]],[11,"from","","",39,[[]]],[11,"from","","",39,[[]]],[11,"from","","",39,[[["loop",4]]]],[11,"into","","",39,[[],[["option",4],["input",4]]]],[11,"into","","",39,[[],[["option",4],["loop",4]]]],[11,"extend","input::keyboard","",4,[[["intoiterator",8]]]],[11,"clone","input::controller","",0,[[],["controllerbutton",3]]],[11,"clone","","",1,[[],["controllerhat",3]]],[11,"clone","","",2,[[],["controlleraxisargs",3]]],[11,"clone","input::keyboard","",4,[[],["modifierkey",3]]],[11,"clone","","",5,[[],["key",4]]],[11,"clone","input::mouse","",6,[[],["mousebutton",4]]],[11,"clone","input::event_id","",10,[[],["eventid",3]]],[11,"clone","input","",40,[[],["afterrenderargs",3]]],[11,"clone","","",18,[[],["buttonstate",4]]],[11,"clone","","",19,[[],["buttonargs",3]]],[11,"clone","","",41,[[],["closeargs",3]]],[11,"clone","","",16,[[],["idleargs",3]]],[11,"clone","","",25,[[],["renderargs",3]]],[11,"clone","","",23,[[],["resizeargs",3]]],[11,"clone","","",28,[[],["touch",4]]],[11,"clone","","",29,[[],["touchargs",3]]],[11,"clone","","",31,[[],["updateargs",3]]],[11,"clone","","",33,[[],["button",4]]],[11,"clone","","",34,[[],["motion",4]]],[11,"clone","","",35,[[],["hatstate",4]]],[11,"clone","","",36,[[],["filedrag",4]]],[11,"clone","","",37,[[],["input",4]]],[11,"clone","","",38,[[],["loop",4]]],[11,"clone","","",39,[[],["event",4]]],[11,"default","input::keyboard","",4,[[],["modifierkey",3]]],[11,"cmp","input::controller","",0,[[["controllerbutton",3]],["ordering",4]]],[11,"cmp","","",1,[[["controllerhat",3]],["ordering",4]]],[11,"cmp","input::keyboard","",4,[[["modifierkey",3]],["ordering",4]]],[11,"cmp","","",5,[[["key",4]],["ordering",4]]],[11,"cmp","input::mouse","",6,[[["mousebutton",4]],["ordering",4]]],[11,"cmp","input::event_id","",10,[[["eventid",3]],["ordering",4]]],[11,"cmp","input","",40,[[["afterrenderargs",3]],["ordering",4]]],[11,"cmp","","",18,[[["buttonstate",4]],["ordering",4]]],[11,"cmp","","",19,[[["buttonargs",3]],["ordering",4]]],[11,"cmp","","",41,[[["closeargs",3]],["ordering",4]]],[11,"cmp","","",28,[[["touch",4]],["ordering",4]]],[11,"cmp","","",33,[[["button",4]],["ordering",4]]],[11,"cmp","","",35,[[["hatstate",4]],["ordering",4]]],[11,"cmp","","",36,[[["filedrag",4]],["ordering",4]]],[11,"eq","input::controller","",0,[[["controllerbutton",3]],["bool",15]]],[11,"ne","","",0,[[["controllerbutton",3]],["bool",15]]],[11,"eq","","",1,[[["controllerhat",3]],["bool",15]]],[11,"ne","","",1,[[["controllerhat",3]],["bool",15]]],[11,"eq","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"ne","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"eq","input::keyboard","",4,[[["modifierkey",3]],["bool",15]]],[11,"ne","","",4,[[["modifierkey",3]],["bool",15]]],[11,"eq","","",5,[[["key",4]],["bool",15]]],[11,"eq","input::mouse","",6,[[["mousebutton",4]],["bool",15]]],[11,"eq","input::event_id","",10,[[["eventid",3]],["bool",15]]],[11,"ne","","",10,[[["eventid",3]],["bool",15]]],[11,"eq","input","",40,[[["afterrenderargs",3]],["bool",15]]],[11,"eq","","",18,[[["buttonstate",4]],["bool",15]]],[11,"eq","","",19,[[["buttonargs",3]],["bool",15]]],[11,"ne","","",19,[[["buttonargs",3]],["bool",15]]],[11,"eq","","",41,[[["closeargs",3]],["bool",15]]],[11,"eq","","",16,[[["idleargs",3]],["bool",15]]],[11,"ne","","",16,[[["idleargs",3]],["bool",15]]],[11,"eq","","",25,[[["renderargs",3]],["bool",15]]],[11,"ne","","",25,[[["renderargs",3]],["bool",15]]],[11,"eq","","",23,[[["resizeargs",3]],["bool",15]]],[11,"ne","","",23,[[["resizeargs",3]],["bool",15]]],[11,"eq","","",28,[[["touch",4]],["bool",15]]],[11,"eq","","",29,[[["touchargs",3]],["bool",15]]],[11,"ne","","",29,[[["touchargs",3]],["bool",15]]],[11,"eq","","",31,[[["updateargs",3]],["bool",15]]],[11,"ne","","",31,[[["updateargs",3]],["bool",15]]],[11,"eq","","",33,[[["button",4]],["bool",15]]],[11,"ne","","",33,[[["button",4]],["bool",15]]],[11,"eq","","",34,[[["motion",4]],["bool",15]]],[11,"ne","","",34,[[["motion",4]],["bool",15]]],[11,"eq","","",35,[[["hatstate",4]],["bool",15]]],[11,"eq","","",36,[[["filedrag",4]],["bool",15]]],[11,"ne","","",36,[[["filedrag",4]],["bool",15]]],[11,"eq","","",37,[[["input",4]],["bool",15]]],[11,"ne","","",37,[[["input",4]],["bool",15]]],[11,"eq","","",38,[[["loop",4]],["bool",15]]],[11,"ne","","",38,[[["loop",4]],["bool",15]]],[11,"eq","","",39,[[["event",4]],["bool",15]]],[11,"partial_cmp","input::controller","",0,[[["controllerbutton",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["controllerbutton",3]],["bool",15]]],[11,"le","","",0,[[["controllerbutton",3]],["bool",15]]],[11,"gt","","",0,[[["controllerbutton",3]],["bool",15]]],[11,"ge","","",0,[[["controllerbutton",3]],["bool",15]]],[11,"partial_cmp","","",1,[[["controllerhat",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["controllerhat",3]],["bool",15]]],[11,"le","","",1,[[["controllerhat",3]],["bool",15]]],[11,"gt","","",1,[[["controllerhat",3]],["bool",15]]],[11,"ge","","",1,[[["controllerhat",3]],["bool",15]]],[11,"partial_cmp","","",2,[[["controlleraxisargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"le","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"gt","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"ge","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"partial_cmp","input::keyboard","",4,[[["modifierkey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["modifierkey",3]],["bool",15]]],[11,"le","","",4,[[["modifierkey",3]],["bool",15]]],[11,"gt","","",4,[[["modifierkey",3]],["bool",15]]],[11,"ge","","",4,[[["modifierkey",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["key",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","input::mouse","",6,[[["mousebutton",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","input::event_id","",10,[[["eventid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["eventid",3]],["bool",15]]],[11,"le","","",10,[[["eventid",3]],["bool",15]]],[11,"gt","","",10,[[["eventid",3]],["bool",15]]],[11,"ge","","",10,[[["eventid",3]],["bool",15]]],[11,"partial_cmp","input","",40,[[["afterrenderargs",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",18,[[["buttonstate",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",19,[[["buttonargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["buttonargs",3]],["bool",15]]],[11,"le","","",19,[[["buttonargs",3]],["bool",15]]],[11,"gt","","",19,[[["buttonargs",3]],["bool",15]]],[11,"ge","","",19,[[["buttonargs",3]],["bool",15]]],[11,"partial_cmp","","",41,[[["closeargs",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",16,[[["idleargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",16,[[["idleargs",3]],["bool",15]]],[11,"le","","",16,[[["idleargs",3]],["bool",15]]],[11,"gt","","",16,[[["idleargs",3]],["bool",15]]],[11,"ge","","",16,[[["idleargs",3]],["bool",15]]],[11,"partial_cmp","","",25,[[["renderargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",25,[[["renderargs",3]],["bool",15]]],[11,"le","","",25,[[["renderargs",3]],["bool",15]]],[11,"gt","","",25,[[["renderargs",3]],["bool",15]]],[11,"ge","","",25,[[["renderargs",3]],["bool",15]]],[11,"partial_cmp","","",23,[[["resizeargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",23,[[["resizeargs",3]],["bool",15]]],[11,"le","","",23,[[["resizeargs",3]],["bool",15]]],[11,"gt","","",23,[[["resizeargs",3]],["bool",15]]],[11,"ge","","",23,[[["resizeargs",3]],["bool",15]]],[11,"partial_cmp","","",28,[[["touch",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",29,[[["touchargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["touchargs",3]],["bool",15]]],[11,"le","","",29,[[["touchargs",3]],["bool",15]]],[11,"gt","","",29,[[["touchargs",3]],["bool",15]]],[11,"ge","","",29,[[["touchargs",3]],["bool",15]]],[11,"partial_cmp","","",31,[[["updateargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",31,[[["updateargs",3]],["bool",15]]],[11,"le","","",31,[[["updateargs",3]],["bool",15]]],[11,"gt","","",31,[[["updateargs",3]],["bool",15]]],[11,"ge","","",31,[[["updateargs",3]],["bool",15]]],[11,"partial_cmp","","",33,[[["button",4]],[["option",4],["ordering",4]]]],[11,"lt","","",33,[[["button",4]],["bool",15]]],[11,"le","","",33,[[["button",4]],["bool",15]]],[11,"gt","","",33,[[["button",4]],["bool",15]]],[11,"ge","","",33,[[["button",4]],["bool",15]]],[11,"partial_cmp","","",34,[[["motion",4]],[["option",4],["ordering",4]]]],[11,"lt","","",34,[[["motion",4]],["bool",15]]],[11,"le","","",34,[[["motion",4]],["bool",15]]],[11,"gt","","",34,[[["motion",4]],["bool",15]]],[11,"ge","","",34,[[["motion",4]],["bool",15]]],[11,"partial_cmp","","",35,[[["hatstate",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",36,[[["filedrag",4]],[["option",4],["ordering",4]]]],[11,"lt","","",36,[[["filedrag",4]],["bool",15]]],[11,"le","","",36,[[["filedrag",4]],["bool",15]]],[11,"gt","","",36,[[["filedrag",4]],["bool",15]]],[11,"ge","","",36,[[["filedrag",4]],["bool",15]]],[11,"partial_cmp","","",37,[[["input",4]],[["option",4],["ordering",4]]]],[11,"lt","","",37,[[["input",4]],["bool",15]]],[11,"le","","",37,[[["input",4]],["bool",15]]],[11,"gt","","",37,[[["input",4]],["bool",15]]],[11,"ge","","",37,[[["input",4]],["bool",15]]],[11,"partial_cmp","","",38,[[["loop",4]],[["option",4],["ordering",4]]]],[11,"lt","","",38,[[["loop",4]],["bool",15]]],[11,"le","","",38,[[["loop",4]],["bool",15]]],[11,"gt","","",38,[[["loop",4]],["bool",15]]],[11,"ge","","",38,[[["loop",4]],["bool",15]]],[11,"partial_cmp","","",39,[[["event",4]],[["option",4],["ordering",4]]]],[11,"fmt","input::controller","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","input::keyboard","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","input::mouse","",6,[[["formatter",3]],["result",6]]],[11,"fmt","input::event_id","",10,[[["formatter",3]],["result",6]]],[11,"fmt","input","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"sub","input::keyboard","Returns the set difference of the two sets of flags.",4,[[["modifierkey",3]],["modifierkey",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",4,[[["modifierkey",3]]]],[11,"not","","Returns the complement of this set of flags.",4,[[],["modifierkey",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",4,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitor","","Returns the union of the two sets of flags.",4,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",4,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",4,[[["modifierkey",3]]]],[11,"bitor_assign","","Adds the set of flags.",4,[[["modifierkey",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",4,[[["modifierkey",3]]]],[11,"hash","input::controller","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","input::keyboard","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","input::mouse","",6,[[]]],[11,"hash","input::event_id","",10,[[]]],[11,"hash","input","",40,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"from_iter","input::keyboard","",4,[[["intoiterator",8]],["modifierkey",3]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"serialize","input::controller","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","input::keyboard","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","input::mouse","",6,[[],["result",4]]],[11,"serialize","input","",40,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"deserialize","input::controller","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","input::keyboard","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","input::mouse","",6,[[],["result",4]]],[11,"deserialize","input","",40,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"after_render_args","","Returns after render arguments.",12,[[],[["afterrenderargs",3],["option",4]]]],[11,"button_args","","Returns button arguments.",20,[[],[["buttonargs",3],["option",4]]]],[11,"press_args","","Returns press arguments.",21,[[],[["button",4],["option",4]]]],[11,"release_args","","Returns release arguments.",22,[[],[["button",4],["option",4]]]],[11,"close_args","","Returns close arguments.",13,[[],[["option",4],["closeargs",3]]]],[11,"cursor_args","","Returns cursor arguments.",14,[[],[["bool",15],["option",4]]]],[11,"focus_args","","Returns focus arguments.",15,[[],[["bool",15],["option",4]]]],[11,"from_dt","","Creates an update event with delta time.",17,[[["f64",15]],["option",4]]],[11,"idle_args","","Returns idle arguments.",17,[[],[["option",4],["idleargs",3]]]],[11,"viewport","","Returns viewport information filling entire render area.",25,[[],["viewport",3]]],[11,"render_args","","Returns render arguments.",26,[[],[["option",4],["renderargs",3]]]],[11,"viewport","","Returns viewport information filling entire render area.",23,[[],["viewport",3]]],[11,"resize_args","","Returns resize arguments.",24,[[],[["option",4],["resizeargs",3]]]],[11,"text_args","","Returns text arguments.",27,[[],[["option",4],["string",3]]]],[11,"new","","Creates arguments for 2D touch.",29,[[["i64",15],["f64",15],["touch",4]],["touchargs",3]]],[11,"new_3d","","Creates arguments for 3D touch.",29,[[["i64",15],["touch",4]],["touchargs",3]]],[11,"position","","The position of the touch in 2D.",29,[[]]],[11,"position_3d","","The position of the touch in 3D.",29,[[]]],[11,"pressure","","The pressure magnitude, normalized 0..1.",29,[[],["f64",15]]],[11,"pressure_3d","","The pressure vector in 3D.",29,[[]]],[11,"touch_args","","Returns touch arguments.",30,[[],[["option",4],["touchargs",3]]]],[11,"from_dt","","Creates an update event with delta time.",32,[[["f64",15]],["option",4]]],[11,"update_args","","Returns update arguments.",32,[[],[["option",4],["updateargs",3]]]]],"p":[[3,"ControllerButton"],[3,"ControllerHat"],[3,"ControllerAxisArgs"],[8,"ControllerAxisEvent"],[3,"ModifierKey"],[4,"Key"],[4,"MouseButton"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[3,"EventId"],[8,"GenericEvent"],[8,"AfterRenderEvent"],[8,"CloseEvent"],[8,"CursorEvent"],[8,"FocusEvent"],[3,"IdleArgs"],[8,"IdleEvent"],[4,"ButtonState"],[3,"ButtonArgs"],[8,"ButtonEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[3,"ResizeArgs"],[8,"ResizeEvent"],[3,"RenderArgs"],[8,"RenderEvent"],[8,"TextEvent"],[4,"Touch"],[3,"TouchArgs"],[8,"TouchEvent"],[3,"UpdateArgs"],[8,"UpdateEvent"],[4,"Button"],[4,"Motion"],[4,"HatState"],[4,"FileDrag"],[4,"Input"],[4,"Loop"],[4,"Event"],[3,"AfterRenderArgs"],[3,"CloseArgs"]]},\
"instant":{"doc":"","i":[[6,"Instant","instant","",null,null],[3,"Duration","","A <code>Duration</code> type to represent a span of time, typically …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"add","","",0,[[["duration",3]],["duration",3]]],[11,"div_assign","","",0,[[["u32",15]]]],[11,"add_assign","","",0,[[["duration",3]]]],[11,"cmp","","",0,[[["duration",3]],["ordering",4]]],[11,"sum","","",0,[[],["duration",3]]],[11,"sum","","",0,[[],["duration",3]]],[11,"clone","","",0,[[],["duration",3]]],[11,"default","","",0,[[],["duration",3]]],[11,"hash","","",0,[[]]],[11,"sub_assign","","",0,[[["duration",3]]]],[11,"eq","","",0,[[["duration",3]],["bool",15]]],[11,"ne","","",0,[[["duration",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["duration",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["duration",3]],["bool",15]]],[11,"le","","",0,[[["duration",3]],["bool",15]]],[11,"gt","","",0,[[["duration",3]],["bool",15]]],[11,"ge","","",0,[[["duration",3]],["bool",15]]],[11,"mul_assign","","",0,[[["u32",15]]]],[11,"div","","",0,[[["u32",15]],["duration",3]]],[11,"mul","","",0,[[["u32",15]],["duration",3]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","",0,[[["duration",3]],["duration",3]]],[18,"SECOND","","The duration of one second.",0,null],[18,"MILLISECOND","","The duration of one millisecond.",0,null],[18,"MICROSECOND","","The duration of one microsecond.",0,null],[18,"NANOSECOND","","The duration of one nanosecond.",0,null],[18,"ZERO","","A duration of zero time.",0,null],[18,"MAX","","The maximum duration.",0,null],[11,"new","","Creates a new <code>Duration</code> from the specified number of whole …",0,[[["u32",15],["u64",15]],["duration",3]]],[11,"from_secs","","Creates a new <code>Duration</code> from the specified number of whole …",0,[[["u64",15]],["duration",3]]],[11,"from_millis","","Creates a new <code>Duration</code> from the specified number of …",0,[[["u64",15]],["duration",3]]],[11,"from_micros","","Creates a new <code>Duration</code> from the specified number of …",0,[[["u64",15]],["duration",3]]],[11,"from_nanos","","Creates a new <code>Duration</code> from the specified number of …",0,[[["u64",15]],["duration",3]]],[11,"is_zero","","Returns true if this <code>Duration</code> spans no time.",0,[[],["bool",15]]],[11,"as_secs","","Returns the number of <em>whole</em> seconds contained by this …",0,[[],["u64",15]]],[11,"subsec_millis","","Returns the fractional part of this <code>Duration</code>, in whole …",0,[[],["u32",15]]],[11,"subsec_micros","","Returns the fractional part of this <code>Duration</code>, in whole …",0,[[],["u32",15]]],[11,"subsec_nanos","","Returns the fractional part of this <code>Duration</code>, in …",0,[[],["u32",15]]],[11,"as_millis","","Returns the total number of whole milliseconds contained …",0,[[],["u128",15]]],[11,"as_micros","","Returns the total number of whole microseconds contained …",0,[[],["u128",15]]],[11,"as_nanos","","Returns the total number of nanoseconds contained by this …",0,[[],["u128",15]]],[11,"checked_add","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …",0,[[["duration",3]],[["option",4],["duration",3]]]],[11,"saturating_add","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …",0,[[["duration",3]],["duration",3]]],[11,"checked_sub","","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …",0,[[["duration",3]],[["option",4],["duration",3]]]],[11,"saturating_sub","","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …",0,[[["duration",3]],["duration",3]]],[11,"checked_mul","","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …",0,[[["u32",15]],[["option",4],["duration",3]]]],[11,"saturating_mul","","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>…",0,[[["u32",15]],["duration",3]]],[11,"checked_div","","Checked <code>Duration</code> division. Computes <code>self / other</code>, …",0,[[["u32",15]],[["option",4],["duration",3]]]],[11,"as_secs_f64","","Returns the number of seconds contained by this <code>Duration</code> …",0,[[],["f64",15]]],[11,"as_secs_f32","","Returns the number of seconds contained by this <code>Duration</code> …",0,[[],["f32",15]]],[11,"from_secs_f64","","Creates a new <code>Duration</code> from the specified number of …",0,[[["f64",15]],["duration",3]]],[11,"from_secs_f32","","Creates a new <code>Duration</code> from the specified number of …",0,[[["f32",15]],["duration",3]]],[11,"mul_f64","","Multiplies <code>Duration</code> by <code>f64</code>.",0,[[["f64",15]],["duration",3]]],[11,"mul_f32","","Multiplies <code>Duration</code> by <code>f32</code>.",0,[[["f32",15]],["duration",3]]],[11,"div_f64","","Divide <code>Duration</code> by <code>f64</code>.",0,[[["f64",15]],["duration",3]]],[11,"div_f32","","Divide <code>Duration</code> by <code>f32</code>.",0,[[["f32",15]],["duration",3]]],[11,"div_duration_f64","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.",0,[[["duration",3]],["f64",15]]],[11,"div_duration_f32","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.",0,[[["duration",3]],["f32",15]]]],"p":[[3,"Duration"]]},\
"interpolation":{"doc":"Interpolation algorithms.","i":[[8,"Ease","interpolation","",null,null],[10,"calc","","Calculate the eased value, normalized",0,[[["easefunction",4]]]],[10,"quadratic_in","","",0,[[]]],[10,"quadratic_out","","",0,[[]]],[10,"quadratic_in_out","","",0,[[]]],[10,"cubic_in","","",0,[[]]],[10,"cubic_out","","",0,[[]]],[10,"cubic_in_out","","",0,[[]]],[10,"quartic_in","","",0,[[]]],[10,"quartic_out","","",0,[[]]],[10,"quartic_in_out","","",0,[[]]],[10,"quintic_in","","",0,[[]]],[10,"quintic_out","","",0,[[]]],[10,"quintic_in_out","","",0,[[]]],[10,"sine_in","","",0,[[]]],[10,"sine_out","","",0,[[]]],[10,"sine_in_out","","",0,[[]]],[10,"circular_in","","",0,[[]]],[10,"circular_out","","",0,[[]]],[10,"circular_in_out","","",0,[[]]],[10,"exponential_in","","",0,[[]]],[10,"exponential_out","","",0,[[]]],[10,"exponential_in_out","","",0,[[]]],[10,"elastic_in","","",0,[[]]],[10,"elastic_out","","",0,[[]]],[10,"elastic_in_out","","",0,[[]]],[10,"back_in","","",0,[[]]],[10,"back_out","","",0,[[]]],[10,"back_in_out","","",0,[[]]],[10,"bounce_in","","",0,[[]]],[10,"bounce_out","","",0,[[]]],[10,"bounce_in_out","","",0,[[]]],[4,"EaseFunction","","",null,null],[13,"QuadraticIn","","",1,null],[13,"QuadraticOut","","",1,null],[13,"QuadraticInOut","","",1,null],[13,"CubicIn","","",1,null],[13,"CubicOut","","",1,null],[13,"CubicInOut","","",1,null],[13,"QuarticIn","","",1,null],[13,"QuarticOut","","",1,null],[13,"QuarticInOut","","",1,null],[13,"QuinticIn","","",1,null],[13,"QuinticOut","","",1,null],[13,"QuinticInOut","","",1,null],[13,"SineIn","","",1,null],[13,"SineOut","","",1,null],[13,"SineInOut","","",1,null],[13,"CircularIn","","",1,null],[13,"CircularOut","","",1,null],[13,"CircularInOut","","",1,null],[13,"ExponentialIn","","",1,null],[13,"ExponentialOut","","",1,null],[13,"ExponentialInOut","","",1,null],[13,"ElasticIn","","",1,null],[13,"ElasticOut","","",1,null],[13,"ElasticInOut","","",1,null],[13,"BackIn","","",1,null],[13,"BackOut","","",1,null],[13,"BackInOut","","",1,null],[13,"BounceIn","","",1,null],[13,"BounceOut","","",1,null],[13,"BounceInOut","","",1,null],[5,"lerp","","Performs linear interpolation. A linear interpolation …",null,[[],["lerp",8]]],[8,"Lerp","","Describes a type that can linearly interpolate between …",null,null],[16,"Scalar","","The scaling type for linear interpolation.",2,null],[10,"lerp","","Given <code>self</code> and another point <code>other</code>, return a point on a …",2,[[]]],[5,"quad_bez","","Performs quadratic beziér interpolation. This is done by …",null,[[],["lerp",8]]],[5,"cub_bez","","Performs cubic beziér interpolation. This is done by …",null,[[],["lerp",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",1,[[],["easefunction",4]]],[11,"eq","","",1,[[["easefunction",4]],["bool",15]]]],"p":[[8,"Ease"],[4,"EaseFunction"],[8,"Lerp"]]},\
"jpeg_decoder":{"doc":"This crate contains a JPEG decoder.","i":[[3,"Decoder","jpeg_decoder","JPEG decoder",null,null],[3,"ImageInfo","","Represents metadata of an image.",null,null],[12,"width","","The width of the image, in pixels.",0,null],[12,"height","","The height of the image, in pixels.",0,null],[12,"pixel_format","","The pixel format of the image.",0,null],[4,"PixelFormat","","An enumeration over combinations of color spaces and bit …",null,null],[13,"L8","","Luminance (grayscale), 8 bits",1,null],[13,"RGB24","","RGB, 8 bits per channel",1,null],[13,"CMYK32","","CMYK, 8 bits per channel",1,null],[4,"Error","","Errors that can occur while decoding a JPEG image.",null,null],[13,"Format","","The image is not formatted properly. The string contains …",2,null],[13,"Unsupported","","The image makes use of a JPEG feature not (currently) …",2,null],[13,"Io","","An I/O error occurred while decoding the image.",2,null],[13,"Internal","","An internal error occurred while decoding the image.",2,null],[4,"UnsupportedFeature","","An enumeration over JPEG features (currently) unsupported …",null,null],[13,"Hierarchical","","Hierarchical JPEG.",3,null],[13,"Lossless","","Lossless JPEG.",3,null],[13,"ArithmeticEntropyCoding","","JPEG using arithmetic entropy coding instead of Huffman …",3,null],[13,"SamplePrecision","","Sample precision in bits. 8 bit sample precision is what …",3,null],[13,"ComponentCount","","Number of components in an image. 1, 3 and 4 components …",3,null],[13,"DNL","","An image can specify a zero height in the frame header …",3,null],[13,"SubsamplingRatio","","Subsampling ratio.",3,null],[13,"NonIntegerSubsamplingRatio","","A subsampling ratio not representable as an integer.",3,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",2,[[["ioerror",3]],["error",4]]],[11,"clone","","",1,[[],["pixelformat",4]]],[11,"clone","","",0,[[],["imageinfo",3]]],[11,"eq","","",1,[[["pixelformat",4]],["bool",15]]],[11,"eq","","",0,[[["imageinfo",3]],["bool",15]]],[11,"ne","","",0,[[["imageinfo",3]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"source","","",2,[[],[["stderror",8],["option",4]]]],[11,"pixel_bytes","","Determine the size in bytes of each pixel in this format",1,[[],["usize",15]]],[11,"new","","Creates a new <code>Decoder</code> using the reader <code>reader</code>.",4,[[],["decoder",3]]],[11,"info","","Returns metadata about the image.",4,[[],[["option",4],["imageinfo",3]]]],[11,"icc_profile","","Returns the embeded icc profile if the image contains one.",4,[[],[["option",4],["vec",3]]]],[11,"read_info","","Tries to read metadata from the image without decoding it.",4,[[],[["error",4],["result",4]]]],[11,"scale","","Configure the decoder to scale the image during decoding.",4,[[["u16",15]],[["result",4],["error",4]]]],[11,"decode","","Decodes the image and returns the decoded pixels if …",4,[[],[["error",4],["vec",3],["result",4]]]]],"p":[[3,"ImageInfo"],[4,"PixelFormat"],[4,"Error"],[4,"UnsupportedFeature"],[3,"Decoder"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[8,"LazyStatic","lazy_static","Support trait for enabling a few common operation on lazy …",null,null],[5,"initialize","","Takes a shared reference to a lazy static and initializes …",null,[[]]],[14,"lazy_static","","",null,null]],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[5,"isalnum","libc","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"timegm","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"endservent","","",null,null],[5,"getservbyname","","",null,null],[5,"getservbyport","","",null,null],[5,"getservent","","",null,null],[5,"setservent","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"open_wmemstream","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has …",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwent","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"getprogname","","",null,null],[5,"setprogname","","",null,null],[5,"getloadavg","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"getpeereid","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"sync","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"acct","","",null,null],[5,"wait4","","",null,null],[5,"getitimer","","",null,null],[5,"setitimer","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"setgrent","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"chflags","","",null,null],[5,"fchflags","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"lio_listio","","",null,null],[5,"dirfd","","",null,null],[5,"lutimes","","",null,null],[5,"gettimeofday","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"utmpxname","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"semget","","",null,null],[5,"semctl","","",null,null],[5,"semop","","",null,null],[5,"shm_open","","",null,null],[5,"ftok","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"shmget","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_from_mach_thread_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"localeconv_l","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"querylocale","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"preadv","","",null,null],[5,"pwritev","","",null,null],[5,"getxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"renamex_np","","",null,null],[5,"renameatx_np","","",null,null],[5,"fremovexattr","","",null,null],[5,"getgrouplist","","",null,null],[5,"initgroups","","",null,null],[5,"waitid","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"settimeofday","","",null,null],[5,"_dyld_image_count","","",null,null],[5,"_dyld_get_image_header","","",null,null],[5,"_dyld_get_image_vmaddr_slide","","",null,null],[5,"_dyld_get_image_name","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"uname","","",null,null],[5,"connectx","","",null,null],[5,"disconnectx","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"getmntinfo","","",null,null],[5,"getfsstat","","",null,null],[5,"iconv_open","","",null,null],[5,"iconv","","",null,null],[5,"iconv_close","","",null,null],[5,"exchangedata","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[4,"DIR","","",null,null],[6,"locale_t","","",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"regoff_t","","",null,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",17,null],[12,"sa_family","","",17,null],[12,"sa_data","","",17,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",18,null],[12,"sin6_family","","",18,null],[12,"sin6_port","","",18,null],[12,"sin6_flowinfo","","",18,null],[12,"sin6_addr","","",18,null],[12,"sin6_scope_id","","",18,null],[3,"passwd","","",null,null],[12,"pw_name","","",19,null],[12,"pw_passwd","","",19,null],[12,"pw_uid","","",19,null],[12,"pw_gid","","",19,null],[12,"pw_change","","",19,null],[12,"pw_class","","",19,null],[12,"pw_gecos","","",19,null],[12,"pw_dir","","",19,null],[12,"pw_shell","","",19,null],[12,"pw_expire","","",19,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",20,null],[12,"ifa_name","","",20,null],[12,"ifa_flags","","",20,null],[12,"ifa_addr","","",20,null],[12,"ifa_netmask","","",20,null],[12,"ifa_dstaddr","","",20,null],[12,"ifa_data","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"msghdr","","",null,null],[12,"msg_name","","",22,null],[12,"msg_namelen","","",22,null],[12,"msg_iov","","",22,null],[12,"msg_iovlen","","",22,null],[12,"msg_control","","",22,null],[12,"msg_controllen","","",22,null],[12,"msg_flags","","",22,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",23,null],[12,"cmsg_level","","",23,null],[12,"cmsg_type","","",23,null],[3,"fsid_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",24,null],[12,"if_name","","",24,null],[3,"regex_t","","",null,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",25,null],[12,"rm_eo","","",25,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",26,null],[12,"sun_family","","",26,null],[12,"sun_path","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONREAD","","",null,null],[17,"FIONBIO","","",null,null],[17,"FIOASYNC","","",null,null],[17,"FIOSETOWN","","",null,null],[17,"FIOGETOWN","","",null,null],[17,"PATH_MAX","","",null,null],[17,"IOV_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGINFO","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPTOS_ECN_NOTECT","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"NCCS","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"O_SHLOCK","","",null,null],[17,"O_EXLOCK","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VDSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"VSTATUS","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"OXTABS","","",null,null],[17,"ONOEOT","","",null,null],[17,"CIGNORE","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"ALTWERASE","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"NOKERNINFO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"MDMBUF","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_SELF","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"CLD_EXITED","","",null,null],[17,"CLD_KILLED","","",null,null],[17,"CLD_DUMPED","","",null,null],[17,"CLD_TRAPPED","","",null,null],[17,"CLD_STOPPED","","",null,null],[17,"CLD_CONTINUED","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"BIOCGBLEN","","",null,null],[17,"BIOCSBLEN","","",null,null],[17,"BIOCFLUSH","","",null,null],[17,"BIOCPROMISC","","",null,null],[17,"BIOCGDLT","","",null,null],[17,"BIOCGETIF","","",null,null],[17,"BIOCSETIF","","",null,null],[17,"BIOCGSTATS","","",null,null],[17,"BIOCIMMEDIATE","","",null,null],[17,"BIOCVERSION","","",null,null],[17,"BIOCGHDRCMPLT","","",null,null],[17,"BIOCSHDRCMPLT","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"REG_BASIC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSPEC","","",null,null],[17,"REG_PEND","","",null,null],[17,"REG_DUMP","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"REG_EMPTY","","",null,null],[17,"REG_ASSERT","","",null,null],[17,"REG_INVARG","","",null,null],[17,"REG_ATOI","","",null,null],[17,"REG_ITOA","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_TRACE","","",null,null],[17,"REG_LARGE","","",null,null],[17,"REG_BACKR","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]],["bool",15]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]],["bool",15]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]],["bool",15]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"clockid_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"nl_item","","",null,null],[6,"id_t","","",null,null],[6,"sem_t","","",null,null],[6,"idtype_t","","",null,null],[6,"integer_t","","",null,null],[6,"cpu_type_t","","",null,null],[6,"cpu_subtype_t","","",null,null],[6,"natural_t","","",null,null],[6,"mach_msg_type_number_t","","",null,null],[6,"posix_spawnattr_t","","",null,null],[6,"posix_spawn_file_actions_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"sae_associd_t","","",null,null],[6,"sae_connid_t","","",null,null],[6,"mach_port_t","","",null,null],[6,"processor_flavor_t","","",null,null],[6,"iconv_t","","",null,null],[6,"processor_cpu_load_info_t","","",null,null],[6,"processor_cpu_load_info_data_t","","",null,null],[6,"processor_basic_info_t","","",null,null],[6,"processor_basic_info_data_t","","",null,null],[6,"processor_set_basic_info_data_t","","",null,null],[6,"processor_set_basic_info_t","","",null,null],[6,"processor_set_load_info_data_t","","",null,null],[6,"processor_set_load_info_t","","",null,null],[6,"processor_info_t","","",null,null],[6,"processor_info_array_t","","",null,null],[6,"vm_prot_t","","",null,null],[6,"vm_size_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[4,"timezone","","",null,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",28,null],[12,"imr_interface","","",28,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",29,null],[12,"aio_offset","","",29,null],[12,"aio_buf","","",29,null],[12,"aio_nbytes","","",29,null],[12,"aio_reqprio","","",29,null],[12,"aio_sigevent","","",29,null],[12,"aio_lio_opcode","","",29,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",30,null],[12,"gl_offs","","",30,null],[12,"gl_pathv","","",30,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",31,null],[12,"ai_family","","",31,null],[12,"ai_socktype","","",31,null],[12,"ai_protocol","","",31,null],[12,"ai_addrlen","","",31,null],[12,"ai_canonname","","",31,null],[12,"ai_addr","","",31,null],[12,"ai_next","","",31,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",32,null],[12,"denom","","",32,null],[3,"stat","","",null,null],[12,"st_dev","","",33,null],[12,"st_mode","","",33,null],[12,"st_nlink","","",33,null],[12,"st_ino","","",33,null],[12,"st_uid","","",33,null],[12,"st_gid","","",33,null],[12,"st_rdev","","",33,null],[12,"st_atime","","",33,null],[12,"st_atime_nsec","","",33,null],[12,"st_mtime","","",33,null],[12,"st_mtime_nsec","","",33,null],[12,"st_ctime","","",33,null],[12,"st_ctime_nsec","","",33,null],[12,"st_birthtime","","",33,null],[12,"st_birthtime_nsec","","",33,null],[12,"st_size","","",33,null],[12,"st_blocks","","",33,null],[12,"st_blksize","","",33,null],[12,"st_flags","","",33,null],[12,"st_gen","","",33,null],[12,"st_lspare","","",33,null],[12,"st_qspare","","",33,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",34,null],[12,"si_errno","","",34,null],[12,"si_code","","",34,null],[12,"si_pid","","",34,null],[12,"si_uid","","",34,null],[12,"si_status","","",34,null],[12,"si_addr","","",34,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",35,null],[12,"sa_mask","","",35,null],[12,"sa_flags","","",35,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",36,null],[12,"ss_size","","",36,null],[12,"ss_flags","","",36,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",37,null],[12,"fst_posmode","","",37,null],[12,"fst_offset","","",37,null],[12,"fst_length","","",37,null],[12,"fst_bytesalloc","","",37,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",38,null],[12,"ra_count","","",38,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",39,null],[12,"f_frsize","","",39,null],[12,"f_blocks","","",39,null],[12,"f_bfree","","",39,null],[12,"f_bavail","","",39,null],[12,"f_files","","",39,null],[12,"f_ffree","","",39,null],[12,"f_favail","","",39,null],[12,"f_fsid","","",39,null],[12,"f_flag","","",39,null],[12,"f_namemax","","",39,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",40,null],[12,"dli_fbase","","",40,null],[12,"dli_sname","","",40,null],[12,"dli_saddr","","",40,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",41,null],[12,"sin_family","","",41,null],[12,"sin_port","","",41,null],[12,"sin_addr","","",41,null],[12,"sin_zero","","",41,null],[3,"kevent64_s","","",null,null],[12,"ident","","",42,null],[12,"filter","","",42,null],[12,"flags","","",42,null],[12,"fflags","","",42,null],[12,"data","","",42,null],[12,"udata","","",42,null],[12,"ext","","",42,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",43,null],[12,"dqb_bsoftlimit","","",43,null],[12,"dqb_curbytes","","",43,null],[12,"dqb_ihardlimit","","",43,null],[12,"dqb_isoftlimit","","",43,null],[12,"dqb_curinodes","","",43,null],[12,"dqb_btime","","",43,null],[12,"dqb_itime","","",43,null],[12,"dqb_id","","",43,null],[12,"dqb_spare","","",43,null],[3,"if_msghdr","","",null,null],[12,"ifm_msglen","","",44,null],[12,"ifm_version","","",44,null],[12,"ifm_type","","",44,null],[12,"ifm_addrs","","",44,null],[12,"ifm_flags","","",44,null],[12,"ifm_index","","",44,null],[12,"ifm_data","","",44,null],[3,"termios","","",null,null],[12,"c_iflag","","",45,null],[12,"c_oflag","","",45,null],[12,"c_cflag","","",45,null],[12,"c_lflag","","",45,null],[12,"c_cc","","",45,null],[12,"c_ispeed","","",45,null],[12,"c_ospeed","","",45,null],[3,"flock","","",null,null],[12,"l_start","","",46,null],[12,"l_len","","",46,null],[12,"l_pid","","",46,null],[12,"l_type","","",46,null],[12,"l_whence","","",46,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",47,null],[12,"hdr_cnt","","",47,null],[12,"trailers","","",47,null],[12,"trl_cnt","","",47,null],[3,"lconv","","",null,null],[12,"decimal_point","","",48,null],[12,"thousands_sep","","",48,null],[12,"grouping","","",48,null],[12,"int_curr_symbol","","",48,null],[12,"currency_symbol","","",48,null],[12,"mon_decimal_point","","",48,null],[12,"mon_thousands_sep","","",48,null],[12,"mon_grouping","","",48,null],[12,"positive_sign","","",48,null],[12,"negative_sign","","",48,null],[12,"int_frac_digits","","",48,null],[12,"frac_digits","","",48,null],[12,"p_cs_precedes","","",48,null],[12,"p_sep_by_space","","",48,null],[12,"n_cs_precedes","","",48,null],[12,"n_sep_by_space","","",48,null],[12,"p_sign_posn","","",48,null],[12,"n_sign_posn","","",48,null],[12,"int_p_cs_precedes","","",48,null],[12,"int_n_cs_precedes","","",48,null],[12,"int_p_sep_by_space","","",48,null],[12,"int_n_sep_by_space","","",48,null],[12,"int_p_sign_posn","","",48,null],[12,"int_n_sign_posn","","",48,null],[3,"proc_taskinfo","","",null,null],[12,"pti_virtual_size","","",49,null],[12,"pti_resident_size","","",49,null],[12,"pti_total_user","","",49,null],[12,"pti_total_system","","",49,null],[12,"pti_threads_user","","",49,null],[12,"pti_threads_system","","",49,null],[12,"pti_policy","","",49,null],[12,"pti_faults","","",49,null],[12,"pti_pageins","","",49,null],[12,"pti_cow_faults","","",49,null],[12,"pti_messages_sent","","",49,null],[12,"pti_messages_received","","",49,null],[12,"pti_syscalls_mach","","",49,null],[12,"pti_syscalls_unix","","",49,null],[12,"pti_csw","","",49,null],[12,"pti_threadnum","","",49,null],[12,"pti_numrunning","","",49,null],[12,"pti_priority","","",49,null],[3,"proc_bsdinfo","","",null,null],[12,"pbi_flags","","",50,null],[12,"pbi_status","","",50,null],[12,"pbi_xstatus","","",50,null],[12,"pbi_pid","","",50,null],[12,"pbi_ppid","","",50,null],[12,"pbi_uid","","",50,null],[12,"pbi_gid","","",50,null],[12,"pbi_ruid","","",50,null],[12,"pbi_rgid","","",50,null],[12,"pbi_svuid","","",50,null],[12,"pbi_svgid","","",50,null],[12,"rfu_1","","",50,null],[12,"pbi_comm","","",50,null],[12,"pbi_name","","",50,null],[12,"pbi_nfiles","","",50,null],[12,"pbi_pgid","","",50,null],[12,"pbi_pjobc","","",50,null],[12,"e_tdev","","",50,null],[12,"e_tpgid","","",50,null],[12,"pbi_nice","","",50,null],[12,"pbi_start_tvsec","","",50,null],[12,"pbi_start_tvusec","","",50,null],[3,"proc_taskallinfo","","",null,null],[12,"pbsd","","",51,null],[12,"ptinfo","","",51,null],[3,"xsw_usage","","",null,null],[12,"xsu_total","","",52,null],[12,"xsu_avail","","",52,null],[12,"xsu_used","","",52,null],[12,"xsu_pagesize","","",52,null],[12,"xsu_encrypted","","",52,null],[3,"xucred","","",null,null],[12,"cr_version","","",53,null],[12,"cr_uid","","",53,null],[12,"cr_ngroups","","",53,null],[12,"cr_groups","","",53,null],[3,"mach_header","","",null,null],[12,"magic","","",54,null],[12,"cputype","","",54,null],[12,"cpusubtype","","",54,null],[12,"filetype","","",54,null],[12,"ncmds","","",54,null],[12,"sizeofcmds","","",54,null],[12,"flags","","",54,null],[3,"mach_header_64","","",null,null],[12,"magic","","",55,null],[12,"cputype","","",55,null],[12,"cpusubtype","","",55,null],[12,"filetype","","",55,null],[12,"ncmds","","",55,null],[12,"sizeofcmds","","",55,null],[12,"flags","","",55,null],[12,"reserved","","",55,null],[3,"segment_command","","",null,null],[12,"cmd","","",56,null],[12,"cmdsize","","",56,null],[12,"segname","","",56,null],[12,"vmaddr","","",56,null],[12,"vmsize","","",56,null],[12,"fileoff","","",56,null],[12,"filesize","","",56,null],[12,"maxprot","","",56,null],[12,"initprot","","",56,null],[12,"nsects","","",56,null],[12,"flags","","",56,null],[3,"segment_command_64","","",null,null],[12,"cmd","","",57,null],[12,"cmdsize","","",57,null],[12,"segname","","",57,null],[12,"vmaddr","","",57,null],[12,"vmsize","","",57,null],[12,"fileoff","","",57,null],[12,"filesize","","",57,null],[12,"maxprot","","",57,null],[12,"initprot","","",57,null],[12,"nsects","","",57,null],[12,"flags","","",57,null],[3,"load_command","","",null,null],[12,"cmd","","",58,null],[12,"cmdsize","","",58,null],[3,"sockaddr_dl","","",null,null],[12,"sdl_len","","",59,null],[12,"sdl_family","","",59,null],[12,"sdl_index","","",59,null],[12,"sdl_type","","",59,null],[12,"sdl_nlen","","",59,null],[12,"sdl_alen","","",59,null],[12,"sdl_slen","","",59,null],[12,"sdl_data","","",59,null],[3,"sockaddr_inarp","","",null,null],[12,"sin_len","","",60,null],[12,"sin_family","","",60,null],[12,"sin_port","","",60,null],[12,"sin_addr","","",60,null],[12,"sin_srcaddr","","",60,null],[12,"sin_tos","","",60,null],[12,"sin_other","","",60,null],[3,"sockaddr_ctl","","",null,null],[12,"sc_len","","",61,null],[12,"sc_family","","",61,null],[12,"ss_sysaddr","","",61,null],[12,"sc_id","","",61,null],[12,"sc_unit","","",61,null],[12,"sc_reserved","","",61,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",62,null],[12,"ipi_spec_dst","","",62,null],[12,"ipi_addr","","",62,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",63,null],[12,"ipi6_ifindex","","",63,null],[3,"ipc_perm","","",null,null],[12,"uid","","",64,null],[12,"gid","","",64,null],[12,"cuid","","",64,null],[12,"cgid","","",64,null],[12,"mode","","",64,null],[12,"_seq","","",64,null],[12,"_key","","",64,null],[3,"sembuf","","",null,null],[12,"sem_num","","",65,null],[12,"sem_op","","",65,null],[12,"sem_flg","","",65,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",66,null],[12,"ar_pro","","",66,null],[12,"ar_hln","","",66,null],[12,"ar_pln","","",66,null],[12,"ar_op","","",66,null],[3,"in_addr","","",null,null],[12,"s_addr","","",67,null],[3,"sa_endpoints_t","","",null,null],[12,"sae_srcif","","",68,null],[12,"sae_srcaddr","","",68,null],[12,"sae_srcaddrlen","","",68,null],[12,"sae_dstaddr","","",68,null],[12,"sae_dstaddrlen","","",68,null],[3,"timex","","",null,null],[12,"modes","","",69,null],[12,"offset","","",69,null],[12,"freq","","",69,null],[12,"maxerror","","",69,null],[12,"esterror","","",69,null],[12,"status","","",69,null],[12,"constant","","",69,null],[12,"precision","","",69,null],[12,"tolerance","","",69,null],[12,"ppsfreq","","",69,null],[12,"jitter","","",69,null],[12,"shift","","",69,null],[12,"stabil","","",69,null],[12,"jitcnt","","",69,null],[12,"calcnt","","",69,null],[12,"errcnt","","",69,null],[12,"stbcnt","","",69,null],[3,"ntptimeval","","",null,null],[12,"time","","",70,null],[12,"maxerror","","",70,null],[12,"esterror","","",70,null],[12,"tai","","",70,null],[12,"time_state","","",70,null],[3,"kevent","","",null,null],[12,"ident","","",71,null],[12,"filter","","",71,null],[12,"flags","","",71,null],[12,"fflags","","",71,null],[12,"data","","",71,null],[12,"udata","","",71,null],[3,"semid_ds","","",null,null],[12,"sem_perm","","",72,null],[12,"sem_base","","",72,null],[12,"sem_nsems","","",72,null],[12,"sem_otime","","",72,null],[12,"sem_pad1","","",72,null],[12,"sem_ctime","","",72,null],[12,"sem_pad2","","",72,null],[12,"sem_pad3","","",72,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",73,null],[12,"shm_segsz","","",73,null],[12,"shm_lpid","","",73,null],[12,"shm_cpid","","",73,null],[12,"shm_nattch","","",73,null],[12,"shm_atime","","",73,null],[12,"shm_dtime","","",73,null],[12,"shm_ctime","","",73,null],[12,"shm_internal","","",73,null],[3,"proc_threadinfo","","",null,null],[12,"pth_user_time","","",74,null],[12,"pth_system_time","","",74,null],[12,"pth_cpu_usage","","",74,null],[12,"pth_policy","","",74,null],[12,"pth_run_state","","",74,null],[12,"pth_flags","","",74,null],[12,"pth_sleep_time","","",74,null],[12,"pth_curpri","","",74,null],[12,"pth_priority","","",74,null],[12,"pth_maxpriority","","",74,null],[12,"pth_name","","",74,null],[3,"statfs","","",null,null],[12,"f_bsize","","",75,null],[12,"f_iosize","","",75,null],[12,"f_blocks","","",75,null],[12,"f_bfree","","",75,null],[12,"f_bavail","","",75,null],[12,"f_files","","",75,null],[12,"f_ffree","","",75,null],[12,"f_fsid","","",75,null],[12,"f_owner","","",75,null],[12,"f_type","","",75,null],[12,"f_flags","","",75,null],[12,"f_fssubtype","","",75,null],[12,"f_fstypename","","",75,null],[12,"f_mntonname","","",75,null],[12,"f_mntfromname","","",75,null],[12,"f_reserved","","",75,null],[3,"dirent","","",null,null],[12,"d_ino","","",76,null],[12,"d_seekoff","","",76,null],[12,"d_reclen","","",76,null],[12,"d_namlen","","",76,null],[12,"d_type","","",76,null],[12,"d_name","","",76,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",77,null],[12,"ss_family","","",77,null],[3,"utmpx","","",null,null],[12,"ut_user","","",78,null],[12,"ut_id","","",78,null],[12,"ut_line","","",78,null],[12,"ut_pid","","",78,null],[12,"ut_type","","",78,null],[12,"ut_tv","","",78,null],[12,"ut_host","","",78,null],[3,"sigevent","","",null,null],[12,"sigev_notify","","",79,null],[12,"sigev_signo","","",79,null],[12,"sigev_value","","",79,null],[12,"sigev_notify_attributes","","",79,null],[3,"processor_cpu_load_info","","",null,null],[12,"cpu_ticks","","",80,null],[3,"processor_basic_info","","",null,null],[12,"cpu_type","","",81,null],[12,"cpu_subtype","","",81,null],[12,"running","","",81,null],[12,"slot_num","","",81,null],[12,"is_master","","",81,null],[3,"processor_set_basic_info","","",null,null],[12,"processor_count","","",82,null],[12,"default_policy","","",82,null],[3,"processor_set_load_info","","",null,null],[12,"task_count","","",83,null],[12,"thread_count","","",83,null],[12,"load_average","","",83,null],[12,"mach_factor","","",83,null],[19,"semun","","",null,null],[12,"val","","",84,null],[12,"buf","","",84,null],[12,"array","","",84,null],[17,"_UTX_USERSIZE","","",null,null],[17,"_UTX_LINESIZE","","",null,null],[17,"_UTX_IDSIZE","","",null,null],[17,"_UTX_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SIGNATURE","","",null,null],[17,"SHUTDOWN_TIME","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"CODESET","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"D_MD_ORDER","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_SYMLINK","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGEMT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"PT_TRACE_ME","","",null,null],[17,"PT_READ_I","","",null,null],[17,"PT_READ_D","","",null,null],[17,"PT_READ_U","","",null,null],[17,"PT_WRITE_I","","",null,null],[17,"PT_WRITE_D","","",null,null],[17,"PT_WRITE_U","","",null,null],[17,"PT_CONTINUE","","",null,null],[17,"PT_KILL","","",null,null],[17,"PT_STEP","","",null,null],[17,"PT_ATTACH","","",null,null],[17,"PT_DETACH","","",null,null],[17,"PT_SIGEXC","","",null,null],[17,"PT_THUPDATE","","",null,null],[17,"PT_ATTACHEXC","","",null,null],[17,"PT_FORCEQUOTA","","",null,null],[17,"PT_DENY_ATTACH","","",null,null],[17,"PT_FIRSTMACH","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"CPU_STATE_USER","","",null,null],[17,"CPU_STATE_SYSTEM","","",null,null],[17,"CPU_STATE_IDLE","","",null,null],[17,"CPU_STATE_NICE","","",null,null],[17,"CPU_STATE_MAX","","",null,null],[17,"PROCESSOR_BASIC_INFO","","",null,null],[17,"PROCESSOR_CPU_LOAD_INFO","","",null,null],[17,"PROCESSOR_PM_REGS_INFO","","",null,null],[17,"PROCESSOR_TEMPERATURE","","",null,null],[17,"PROCESSOR_SET_LOAD_INFO","","",null,null],[17,"PROCESSOR_SET_BASIC_INFO","","",null,null],[17,"VM_FLAGS_FIXED","","",null,null],[17,"VM_FLAGS_ANYWHERE","","",null,null],[17,"VM_FLAGS_PURGABLE","","",null,null],[17,"VM_FLAGS_RANDOM_ADDR","","",null,null],[17,"VM_FLAGS_NO_CACHE","","",null,null],[17,"VM_FLAGS_RESILIENT_CODESIGN","","",null,null],[17,"VM_FLAGS_RESILIENT_MEDIA","","",null,null],[17,"VM_FLAGS_OVERWRITE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_MASK","","",null,null],[17,"VM_FLAGS_RETURN_DATA_ADDR","","",null,null],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR","","",null,null],[17,"VM_FLAGS_ALIAS_MASK","","",null,null],[17,"VM_FLAGS_USER_ALLOCATE","","",null,null],[17,"VM_FLAGS_USER_MAP","","",null,null],[17,"VM_FLAGS_USER_REMAP","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SHIFT","","",null,null],[17,"SUPERPAGE_NONE","","",null,null],[17,"SUPERPAGE_SIZE_ANY","","",null,null],[17,"VM_FLAGS_SUPERPAGE_NONE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY","","",null,null],[17,"SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_MEMORY_MALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_SMALL","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE","","",null,null],[17,"VM_MEMORY_MALLOC_HUGE","","",null,null],[17,"VM_MEMORY_SBRK","","",null,null],[17,"VM_MEMORY_REALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_TINY","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSED","","",null,null],[17,"VM_MEMORY_ANALYSIS_TOOL","","",null,null],[17,"VM_MEMORY_MALLOC_NANO","","",null,null],[17,"VM_MEMORY_MACH_MSG","","",null,null],[17,"VM_MEMORY_IOKIT","","",null,null],[17,"VM_MEMORY_STACK","","",null,null],[17,"VM_MEMORY_GUARD","","",null,null],[17,"VM_MEMORY_SHARED_PMAP","","",null,null],[17,"VM_MEMORY_DYLIB","","",null,null],[17,"VM_MEMORY_OBJC_DISPATCHERS","","",null,null],[17,"VM_MEMORY_UNSHARED_PMAP","","",null,null],[17,"VM_MEMORY_APPKIT","","",null,null],[17,"VM_MEMORY_FOUNDATION","","",null,null],[17,"VM_MEMORY_COREGRAPHICS","","",null,null],[17,"VM_MEMORY_CORESERVICES","","",null,null],[17,"VM_MEMORY_CARBON","","",null,null],[17,"VM_MEMORY_JAVA","","",null,null],[17,"VM_MEMORY_COREDATA","","",null,null],[17,"VM_MEMORY_COREDATA_OBJECTIDS","","",null,null],[17,"VM_MEMORY_ATS","","",null,null],[17,"VM_MEMORY_LAYERKIT","","",null,null],[17,"VM_MEMORY_CGIMAGE","","",null,null],[17,"VM_MEMORY_TCMALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_DATA","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_SHARED","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_XALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_MISC","","",null,null],[17,"VM_MEMORY_DYLD","","",null,null],[17,"VM_MEMORY_DYLD_MALLOC","","",null,null],[17,"VM_MEMORY_SQLITE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_CORE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","","",null,null],[17,"VM_MEMORY_GLSL","","",null,null],[17,"VM_MEMORY_OPENCL","","",null,null],[17,"VM_MEMORY_COREIMAGE","","",null,null],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","","",null,null],[17,"VM_MEMORY_IMAGEIO","","",null,null],[17,"VM_MEMORY_COREPROFILE","","",null,null],[17,"VM_MEMORY_ASSETSD","","",null,null],[17,"VM_MEMORY_OS_ALLOC_ONCE","","",null,null],[17,"VM_MEMORY_LIBDISPATCH","","",null,null],[17,"VM_MEMORY_ACCELERATE","","",null,null],[17,"VM_MEMORY_COREUI","","",null,null],[17,"VM_MEMORY_COREUIFILE","","",null,null],[17,"VM_MEMORY_GENEALOGY","","",null,null],[17,"VM_MEMORY_RAWCAMERA","","",null,null],[17,"VM_MEMORY_CORPSEINFO","","",null,null],[17,"VM_MEMORY_ASL","","",null,null],[17,"VM_MEMORY_SWIFT_RUNTIME","","",null,null],[17,"VM_MEMORY_SWIFT_METADATA","","",null,null],[17,"VM_MEMORY_DHMM","","",null,null],[17,"VM_MEMORY_SCENEKIT","","",null,null],[17,"VM_MEMORY_SKYWALK","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"TIOCMODG","","",null,null],[17,"TIOCMODS","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCFLUSH","","",null,null],[17,"TIOCGETD","","",null,null],[17,"TIOCSETD","","",null,null],[17,"TIOCIXON","","",null,null],[17,"TIOCIXOFF","","",null,null],[17,"TIOCSDTR","","",null,null],[17,"TIOCCDTR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCNOTTY","","",null,null],[17,"TIOCPKT","","",null,null],[17,"TIOCPKT_DATA","","",null,null],[17,"TIOCPKT_FLUSHREAD","","",null,null],[17,"TIOCPKT_FLUSHWRITE","","",null,null],[17,"TIOCPKT_STOP","","",null,null],[17,"TIOCPKT_START","","",null,null],[17,"TIOCPKT_NOSTOP","","",null,null],[17,"TIOCPKT_DOSTOP","","",null,null],[17,"TIOCPKT_IOCTL","","",null,null],[17,"TIOCSTOP","","",null,null],[17,"TIOCSTART","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCREMOTE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCUCNTL","","",null,null],[17,"TIOCSTAT","","",null,null],[17,"TIOCSCONS","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCEXT","","",null,null],[17,"TIOCSIG","","",null,null],[17,"TIOCDRAIN","","",null,null],[17,"TIOCMSDTRWAIT","","",null,null],[17,"TIOCMGDTRWAIT","","",null,null],[17,"TIOCSDRAINWAIT","","",null,null],[17,"TIOCGDRAINWAIT","","",null,null],[17,"TIOCDSIMICROCODE","","",null,null],[17,"TIOCPTYGRANT","","",null,null],[17,"TIOCPTYGNAME","","",null,null],[17,"TIOCPTYUNLK","","",null,null],[17,"BIOCGRSIG","","",null,null],[17,"BIOCSRSIG","","",null,null],[17,"BIOCSDLT","","",null,null],[17,"BIOCGSEESENT","","",null,null],[17,"BIOCSSEESENT","","",null,null],[17,"BIOCGDLTLIST","","",null,null],[17,"FIODTYPE","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"B7200","","",null,null],[17,"B14400","","",null,null],[17,"B28800","","",null,null],[17,"B57600","","",null,null],[17,"B76800","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_GGP","","gateway2 (deprecated)",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_ST","","Stream protocol II.",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PIGP","","private interior gateway",null,null],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",null,null],[17,"IPPROTO_NVPII","","network voice protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_ARGUS","","Argus",null,null],[17,"IPPROTO_EMCON","","EMCON",null,null],[17,"IPPROTO_XNET","","Cross Net Debugger",null,null],[17,"IPPROTO_CHAOS","","Chaos",null,null],[17,"IPPROTO_MUX","","Multiplexing",null,null],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",null,null],[17,"IPPROTO_HMP","","Host Monitoring",null,null],[17,"IPPROTO_PRM","","Packet Radio Measurement",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TRUNK1","","Trunk-1",null,null],[17,"IPPROTO_TRUNK2","","Trunk-2",null,null],[17,"IPPROTO_LEAF1","","Leaf-1",null,null],[17,"IPPROTO_LEAF2","","Leaf-2",null,null],[17,"IPPROTO_RDP","","Reliable Data",null,null],[17,"IPPROTO_IRTP","","Reliable Transaction",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_BLT","","Bulk Data Transfer",null,null],[17,"IPPROTO_NSP","","Network Services",null,null],[17,"IPPROTO_INP","","Merit Internodal",null,null],[17,"IPPROTO_SEP","","Sequential Exchange",null,null],[17,"IPPROTO_3PC","","Third Party Connect",null,null],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",null,null],[17,"IPPROTO_XTP","","XTP",null,null],[17,"IPPROTO_DDP","","Datagram Delivery",null,null],[17,"IPPROTO_CMTP","","Control Message Transport",null,null],[17,"IPPROTO_TPXX","","TP++ Transport",null,null],[17,"IPPROTO_IL","","IL transport protocol",null,null],[17,"IPPROTO_SDRP","","Source Demand Routing",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_IDRP","","InterDomain Routing",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_MHRP","","Mobile Host Routing",null,null],[17,"IPPROTO_BHA","","BHA",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",null,null],[17,"IPPROTO_SWIPE","","IP with encryption",null,null],[17,"IPPROTO_NHRP","","Next Hop Resolution",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_AHIP","","any host internal protocol",null,null],[17,"IPPROTO_CFTP","","CFTP",null,null],[17,"IPPROTO_HELLO","","\\\"hello\\\" routing protocol",null,null],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",null,null],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",null,null],[17,"IPPROTO_RVD","","Remote Virtual Disk",null,null],[17,"IPPROTO_IPPC","","Pluribus Packet Core",null,null],[17,"IPPROTO_ADFS","","Any distributed FS",null,null],[17,"IPPROTO_SATMON","","Satnet Monitoring",null,null],[17,"IPPROTO_VISA","","VISA Protocol",null,null],[17,"IPPROTO_IPCV","","Packet Core Utility",null,null],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",null,null],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",null,null],[17,"IPPROTO_WSN","","Wang Span Network",null,null],[17,"IPPROTO_PVP","","Packet Video Protocol",null,null],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",null,null],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",null,null],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",null,null],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",null,null],[17,"IPPROTO_EON","","ISO cnlp",null,null],[17,"IPPROTO_VMTP","","VMTP",null,null],[17,"IPPROTO_SVMTP","","Secure VMTP",null,null],[17,"IPPROTO_VINES","","Banyon VINES",null,null],[17,"IPPROTO_TTP","","TTP",null,null],[17,"IPPROTO_IGP","","NSFNET-IGP",null,null],[17,"IPPROTO_DGP","","dissimilar gateway prot.",null,null],[17,"IPPROTO_TCF","","TCF",null,null],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",null,null],[17,"IPPROTO_OSPFIGP","","OSPFIGP",null,null],[17,"IPPROTO_SRPC","","Strite RPC protocol",null,null],[17,"IPPROTO_LARP","","Locus Address Resoloution",null,null],[17,"IPPROTO_MTP","","Multicast Transport",null,null],[17,"IPPROTO_AX25","","AX.25 Frames",null,null],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",null,null],[17,"IPPROTO_MICP","","Mobile Int.ing control",null,null],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",null,null],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_APES","","any private encr. scheme",null,null],[17,"IPPROTO_GMTP","","GMTP",null,null],[17,"IPPROTO_PIM","","Protocol Independent Mcast",null,null],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",null,null],[17,"IPPROTO_PGM","","PGM",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \\\"all job for this …",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_IMPLINK","","",null,null],[17,"AF_PUP","","",null,null],[17,"AF_CHAOS","","",null,null],[17,"AF_NS","","",null,null],[17,"AF_ISO","","",null,null],[17,"AF_OSI","","",null,null],[17,"AF_ECMA","","",null,null],[17,"AF_DATAKIT","","",null,null],[17,"AF_CCITT","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_DLI","","",null,null],[17,"AF_LAT","","",null,null],[17,"AF_HYLINK","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_LINK","","",null,null],[17,"pseudo_AF_XTP","","",null,null],[17,"AF_COIP","","",null,null],[17,"AF_CNT","","",null,null],[17,"pseudo_AF_RTIP","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_SIP","","",null,null],[17,"pseudo_AF_PIP","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_E164","","",null,null],[17,"pseudo_AF_KEY","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NATM","","",null,null],[17,"AF_SYSTEM","","",null,null],[17,"AF_NETBIOS","","",null,null],[17,"AF_PPP","","",null,null],[17,"pseudo_AF_HDRCMPLT","","",null,null],[17,"AF_SYS_CONTROL","","",null,null],[17,"SYSPROTO_EVENT","","",null,null],[17,"SYSPROTO_CONTROL","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_IMPLINK","","",null,null],[17,"PF_PUP","","",null,null],[17,"PF_CHAOS","","",null,null],[17,"PF_NS","","",null,null],[17,"PF_ISO","","",null,null],[17,"PF_OSI","","",null,null],[17,"PF_ECMA","","",null,null],[17,"PF_DATAKIT","","",null,null],[17,"PF_CCITT","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_DLI","","",null,null],[17,"PF_LAT","","",null,null],[17,"PF_HYLINK","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_LINK","","",null,null],[17,"PF_XTP","","",null,null],[17,"PF_COIP","","",null,null],[17,"PF_CNT","","",null,null],[17,"PF_SIP","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_RTIP","","",null,null],[17,"PF_PIP","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_NATM","","",null,null],[17,"PF_SYSTEM","","",null,null],[17,"PF_NETBIOS","","",null,null],[17,"PF_PPP","","",null,null],[17,"NET_RT_DUMP","","",null,null],[17,"NET_RT_FLAGS","","",null,null],[17,"NET_RT_IFLIST","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"SOCK_MAXADDRLEN","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_RECVDSTADDR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_RECVIF","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"TCP_NOPUSH","","",null,null],[17,"TCP_NOOPT","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_FASTOPEN","","Enable/Disable TCP Fastopen on this socket",null,null],[17,"SOL_LOCAL","","",null,null],[17,"LOCAL_PEERCRED","","",null,null],[17,"LOCAL_PEERPID","","",null,null],[17,"LOCAL_PEEREPID","","",null,null],[17,"LOCAL_PEERUUID","","",null,null],[17,"LOCAL_PEEREUUID","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_TIMESTAMP_MONOTONIC","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_LABEL","","",null,null],[17,"SO_PEERLABEL","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_REUSESHAREUID","","",null,null],[17,"SO_NOTIFYCONFLICT","","",null,null],[17,"SO_LINGER_SEC","","",null,null],[17,"SO_RANDOMPORT","","",null,null],[17,"SO_NP_EXTENSIONS","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOF","","",null,null],[17,"MSG_FLUSH","","",null,null],[17,"MSG_HOLD","","",null,null],[17,"MSG_SEND","","",null,null],[17,"MSG_HAVEMORE","","",null,null],[17,"MSG_RCVMORE","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SCM_CREDS","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_OACTIVE","","",null,null],[17,"IFF_SIMPLEX","","",null,null],[17,"IFF_LINK0","","",null,null],[17,"IFF_LINK1","","",null,null],[17,"IFF_LINK2","","",null,null],[17,"IFF_ALTPHYS","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"SAE_ASSOCID_ANY","","",null,null],[17,"SAE_ASSOCID_ALL","","((sae_associd_t)(-1ULL))",null,null],[17,"SAE_CONNID_ANY","","",null,null],[17,"SAE_CONNID_ALL","","((sae_connid_t)(-1ULL))",null,null],[17,"CONNECT_RESUME_ON_READ_WRITE","","resume connect() on read/write",null,null],[17,"CONNECT_DATA_IDEMPOTENT","","data is idempotent",null,null],[17,"CONNECT_DATA_AUTHENTICATED","","data includes security that replaces the TFO-cookie",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_DETAIL","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NOTE_EXIT_DETAIL_MASK","","",null,null],[17,"NOTE_EXIT_DECRYPTFAIL","","",null,null],[17,"NOTE_EXIT_MEMORY","","",null,null],[17,"NOTE_EXIT_CSERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_LEEWAY","","",null,null],[17,"NOTE_CRITICAL","","",null,null],[17,"NOTE_BACKGROUND","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"NLDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"OFDEL","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"NI_MAXSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NUMERICSCOPE","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RENAME_SWAP","","",null,null],[17,"RENAME_EXCL","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"_WSTOPPED","","",null,null],[17,"LOG_NETINFO","","",null,null],[17,"LOG_REMOTEAUTH","","",null,null],[17,"LOG_INSTALL","","",null,null],[17,"LOG_RAS","","",null,null],[17,"LOG_LAUNCHD","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"CTLTYPE","","",null,null],[17,"CTLTYPE_NODE","","",null,null],[17,"CTLTYPE_INT","","",null,null],[17,"CTLTYPE_STRING","","",null,null],[17,"CTLTYPE_QUAD","","",null,null],[17,"CTLTYPE_OPAQUE","","",null,null],[17,"CTLTYPE_STRUCT","","",null,null],[17,"CTLFLAG_RD","","",null,null],[17,"CTLFLAG_WR","","",null,null],[17,"CTLFLAG_RW","","",null,null],[17,"CTLFLAG_NOLOCK","","",null,null],[17,"CTLFLAG_ANYBODY","","",null,null],[17,"CTLFLAG_SECURE","","",null,null],[17,"CTLFLAG_MASKED","","",null,null],[17,"CTLFLAG_NOAUTO","","",null,null],[17,"CTLFLAG_KERN","","",null,null],[17,"CTLFLAG_LOCKED","","",null,null],[17,"CTLFLAG_OID2","","",null,null],[17,"CTL_UNSPEC","","",null,null],[17,"CTL_KERN","","",null,null],[17,"CTL_VM","","",null,null],[17,"CTL_VFS","","",null,null],[17,"CTL_NET","","",null,null],[17,"CTL_DEBUG","","",null,null],[17,"CTL_HW","","",null,null],[17,"CTL_MACHDEP","","",null,null],[17,"CTL_USER","","",null,null],[17,"CTL_MAXID","","",null,null],[17,"KERN_OSTYPE","","",null,null],[17,"KERN_OSRELEASE","","",null,null],[17,"KERN_OSREV","","",null,null],[17,"KERN_VERSION","","",null,null],[17,"KERN_MAXVNODES","","",null,null],[17,"KERN_MAXPROC","","",null,null],[17,"KERN_MAXFILES","","",null,null],[17,"KERN_ARGMAX","","",null,null],[17,"KERN_SECURELVL","","",null,null],[17,"KERN_HOSTNAME","","",null,null],[17,"KERN_HOSTID","","",null,null],[17,"KERN_CLOCKRATE","","",null,null],[17,"KERN_VNODE","","",null,null],[17,"KERN_PROC","","",null,null],[17,"KERN_FILE","","",null,null],[17,"KERN_PROF","","",null,null],[17,"KERN_POSIX1","","",null,null],[17,"KERN_NGROUPS","","",null,null],[17,"KERN_JOB_CONTROL","","",null,null],[17,"KERN_SAVED_IDS","","",null,null],[17,"KERN_BOOTTIME","","",null,null],[17,"KERN_NISDOMAINNAME","","",null,null],[17,"KERN_DOMAINNAME","","",null,null],[17,"KERN_MAXPARTITIONS","","",null,null],[17,"KERN_KDEBUG","","",null,null],[17,"KERN_UPDATEINTERVAL","","",null,null],[17,"KERN_OSRELDATE","","",null,null],[17,"KERN_NTP_PLL","","",null,null],[17,"KERN_BOOTFILE","","",null,null],[17,"KERN_MAXFILESPERPROC","","",null,null],[17,"KERN_MAXPROCPERUID","","",null,null],[17,"KERN_DUMPDEV","","",null,null],[17,"KERN_IPC","","",null,null],[17,"KERN_DUMMY","","",null,null],[17,"KERN_PS_STRINGS","","",null,null],[17,"KERN_USRSTACK32","","",null,null],[17,"KERN_LOGSIGEXIT","","",null,null],[17,"KERN_SYMFILE","","",null,null],[17,"KERN_PROCARGS","","",null,null],[17,"KERN_NETBOOT","","",null,null],[17,"KERN_SYSV","","",null,null],[17,"KERN_AFFINITY","","",null,null],[17,"KERN_TRANSLATE","","",null,null],[17,"KERN_CLASSIC","","",null,null],[17,"KERN_EXEC","","",null,null],[17,"KERN_CLASSICHANDLER","","",null,null],[17,"KERN_AIOMAX","","",null,null],[17,"KERN_AIOPROCMAX","","",null,null],[17,"KERN_AIOTHREADS","","",null,null],[17,"KERN_COREFILE","","",null,null],[17,"KERN_COREDUMP","","",null,null],[17,"KERN_SUGID_COREDUMP","","",null,null],[17,"KERN_PROCDELAYTERM","","",null,null],[17,"KERN_SHREG_PRIVATIZABLE","","",null,null],[17,"KERN_LOW_PRI_WINDOW","","",null,null],[17,"KERN_LOW_PRI_DELAY","","",null,null],[17,"KERN_POSIX","","",null,null],[17,"KERN_USRSTACK64","","",null,null],[17,"KERN_NX_PROTECTION","","",null,null],[17,"KERN_TFP","","",null,null],[17,"KERN_PROCNAME","","",null,null],[17,"KERN_THALTSTACK","","",null,null],[17,"KERN_SPECULATIVE_READS","","",null,null],[17,"KERN_OSVERSION","","",null,null],[17,"KERN_SAFEBOOT","","",null,null],[17,"KERN_RAGEVNODE","","",null,null],[17,"KERN_TTY","","",null,null],[17,"KERN_CHECKOPENEVT","","",null,null],[17,"KERN_THREADNAME","","",null,null],[17,"KERN_MAXID","","",null,null],[17,"KERN_RAGE_PROC","","",null,null],[17,"KERN_RAGE_THREAD","","",null,null],[17,"KERN_UNRAGE_PROC","","",null,null],[17,"KERN_UNRAGE_THREAD","","",null,null],[17,"KERN_OPENEVT_PROC","","",null,null],[17,"KERN_UNOPENEVT_PROC","","",null,null],[17,"KERN_TFP_POLICY","","",null,null],[17,"KERN_TFP_POLICY_DENY","","",null,null],[17,"KERN_TFP_POLICY_DEFAULT","","",null,null],[17,"KERN_KDEFLAGS","","",null,null],[17,"KERN_KDDFLAGS","","",null,null],[17,"KERN_KDENABLE","","",null,null],[17,"KERN_KDSETBUF","","",null,null],[17,"KERN_KDGETBUF","","",null,null],[17,"KERN_KDSETUP","","",null,null],[17,"KERN_KDREMOVE","","",null,null],[17,"KERN_KDSETREG","","",null,null],[17,"KERN_KDGETREG","","",null,null],[17,"KERN_KDREADTR","","",null,null],[17,"KERN_KDPIDTR","","",null,null],[17,"KERN_KDTHRMAP","","",null,null],[17,"KERN_KDPIDEX","","",null,null],[17,"KERN_KDSETRTCDEC","","",null,null],[17,"KERN_KDGETENTROPY","","",null,null],[17,"KERN_KDWRITETR","","",null,null],[17,"KERN_KDWRITEMAP","","",null,null],[17,"KERN_KDREADCURTHRMAP","","",null,null],[17,"KERN_KDSET_TYPEFILTER","","",null,null],[17,"KERN_KDBUFWAIT","","",null,null],[17,"KERN_KDCPUMAP","","",null,null],[17,"KERN_PROC_ALL","","",null,null],[17,"KERN_PROC_PID","","",null,null],[17,"KERN_PROC_PGRP","","",null,null],[17,"KERN_PROC_SESSION","","",null,null],[17,"KERN_PROC_TTY","","",null,null],[17,"KERN_PROC_UID","","",null,null],[17,"KERN_PROC_RUID","","",null,null],[17,"KERN_PROC_LCID","","",null,null],[17,"KIPC_MAXSOCKBUF","","",null,null],[17,"KIPC_SOCKBUF_WASTE","","",null,null],[17,"KIPC_SOMAXCONN","","",null,null],[17,"KIPC_MAX_LINKHDR","","",null,null],[17,"KIPC_MAX_PROTOHDR","","",null,null],[17,"KIPC_MAX_HDR","","",null,null],[17,"KIPC_MAX_DATALEN","","",null,null],[17,"KIPC_MBSTAT","","",null,null],[17,"KIPC_NMBCLUSTERS","","",null,null],[17,"KIPC_SOQLIMITCOMPAT","","",null,null],[17,"VM_METER","","",null,null],[17,"VM_LOADAVG","","",null,null],[17,"VM_MACHFACTOR","","",null,null],[17,"VM_SWAPUSAGE","","",null,null],[17,"VM_MAXID","","",null,null],[17,"HW_MACHINE","","",null,null],[17,"HW_MODEL","","",null,null],[17,"HW_NCPU","","",null,null],[17,"HW_BYTEORDER","","",null,null],[17,"HW_PHYSMEM","","",null,null],[17,"HW_USERMEM","","",null,null],[17,"HW_PAGESIZE","","",null,null],[17,"HW_DISKNAMES","","",null,null],[17,"HW_DISKSTATS","","",null,null],[17,"HW_EPOCH","","",null,null],[17,"HW_FLOATINGPT","","",null,null],[17,"HW_MACHINE_ARCH","","",null,null],[17,"HW_VECTORUNIT","","",null,null],[17,"HW_BUS_FREQ","","",null,null],[17,"HW_CPU_FREQ","","",null,null],[17,"HW_CACHELINE","","",null,null],[17,"HW_L1ICACHESIZE","","",null,null],[17,"HW_L1DCACHESIZE","","",null,null],[17,"HW_L2SETTINGS","","",null,null],[17,"HW_L2CACHESIZE","","",null,null],[17,"HW_L3SETTINGS","","",null,null],[17,"HW_L3CACHESIZE","","",null,null],[17,"HW_TB_FREQ","","",null,null],[17,"HW_MEMSIZE","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"HW_TARGET","","",null,null],[17,"HW_PRODUCT","","",null,null],[17,"HW_MAXID","","",null,null],[17,"USER_CS_PATH","","",null,null],[17,"USER_BC_BASE_MAX","","",null,null],[17,"USER_BC_DIM_MAX","","",null,null],[17,"USER_BC_SCALE_MAX","","",null,null],[17,"USER_BC_STRING_MAX","","",null,null],[17,"USER_COLL_WEIGHTS_MAX","","",null,null],[17,"USER_EXPR_NEST_MAX","","",null,null],[17,"USER_LINE_MAX","","",null,null],[17,"USER_RE_DUP_MAX","","",null,null],[17,"USER_POSIX2_VERSION","","",null,null],[17,"USER_POSIX2_C_BIND","","",null,null],[17,"USER_POSIX2_C_DEV","","",null,null],[17,"USER_POSIX2_CHAR_TERM","","",null,null],[17,"USER_POSIX2_FORT_DEV","","",null,null],[17,"USER_POSIX2_FORT_RUN","","",null,null],[17,"USER_POSIX2_LOCALEDEF","","",null,null],[17,"USER_POSIX2_SW_DEV","","",null,null],[17,"USER_POSIX2_UPE","","",null,null],[17,"USER_STREAM_MAX","","",null,null],[17,"USER_TZNAME_MAX","","",null,null],[17,"USER_MAXID","","",null,null],[17,"CTL_DEBUG_NAME","","",null,null],[17,"CTL_DEBUG_VALUE","","",null,null],[17,"CTL_DEBUG_MAXID","","",null,null],[17,"PRIO_DARWIN_THREAD","","",null,null],[17,"PRIO_DARWIN_PROCESS","","",null,null],[17,"PRIO_DARWIN_BG","","",null,null],[17,"PRIO_DARWIN_NONUI","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"AI_MASK","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_V4MAPPED_CFG","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_DEFAULT","","",null,null],[17,"AI_UNUSABLE","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"AIO_LISTIO_MAX","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"WEXITED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"XATTR_NOFOLLOW","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"XATTR_NOSECURITY","","",null,null],[17,"XATTR_NODEFAULT","","",null,null],[17,"XATTR_SHOWCOMPRESSION","","",null,null],[17,"NET_RT_IFLIST2","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_DONE","","",null,null],[17,"RTF_DELCLONE","","",null,null],[17,"RTF_CLONING","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_LLINFO","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_BLACKHOLE","","",null,null],[17,"RTF_NOIFREF","","",null,null],[17,"RTF_PROTO2","","",null,null],[17,"RTF_PROTO1","","",null,null],[17,"RTF_PRCLONING","","",null,null],[17,"RTF_WASCLONED","","",null,null],[17,"RTF_PROTO3","","",null,null],[17,"RTF_PINNED","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_IFSCOPE","","",null,null],[17,"RTF_CONDEMNED","","",null,null],[17,"RTF_IFREF","","",null,null],[17,"RTF_PROXY","","",null,null],[17,"RTF_ROUTER","","",null,null],[17,"RTM_VERSION","","",null,null],[17,"RTM_ADD","","",null,null],[17,"RTM_DELETE","","",null,null],[17,"RTM_CHANGE","","",null,null],[17,"RTM_GET","","",null,null],[17,"RTM_LOSING","","",null,null],[17,"RTM_REDIRECT","","",null,null],[17,"RTM_MISS","","",null,null],[17,"RTM_LOCK","","",null,null],[17,"RTM_OLDADD","","",null,null],[17,"RTM_OLDDEL","","",null,null],[17,"RTM_RESOLVE","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_IFINFO","","",null,null],[17,"RTM_NEWMADDR","","",null,null],[17,"RTM_DELMADDR","","",null,null],[17,"RTM_IFINFO2","","",null,null],[17,"RTM_NEWMADDR2","","",null,null],[17,"RTM_GET2","","",null,null],[17,"RTV_MTU","","",null,null],[17,"RTV_HOPCOUNT","","",null,null],[17,"RTV_EXPIRE","","",null,null],[17,"RTV_RPIPE","","",null,null],[17,"RTV_SPIPE","","",null,null],[17,"RTV_SSTHRESH","","",null,null],[17,"RTV_RTT","","",null,null],[17,"RTV_RTTVAR","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_NETMASK","","",null,null],[17,"RTA_GENMASK","","",null,null],[17,"RTA_IFP","","",null,null],[17,"RTA_IFA","","",null,null],[17,"RTA_AUTHOR","","",null,null],[17,"RTA_BRD","","",null,null],[17,"RTAX_DST","","",null,null],[17,"RTAX_GATEWAY","","",null,null],[17,"RTAX_NETMASK","","",null,null],[17,"RTAX_GENMASK","","",null,null],[17,"RTAX_IFP","","",null,null],[17,"RTAX_IFA","","",null,null],[17,"RTAX_AUTHOR","","",null,null],[17,"RTAX_BRD","","",null,null],[17,"RTAX_MAX","","",null,null],[17,"KERN_PROCARGS2","","",null,null],[17,"PROC_PIDTASKALLINFO","","",null,null],[17,"PROC_PIDTASKINFO","","",null,null],[17,"PROC_PIDTHREADINFO","","",null,null],[17,"MAXCOMLEN","","",null,null],[17,"MAXTHREADNAMESIZE","","",null,null],[17,"XUCRED_VERSION","","",null,null],[17,"LC_SEGMENT","","",null,null],[17,"LC_SEGMENT_64","","",null,null],[17,"MH_MAGIC","","",null,null],[17,"MH_MAGIC_64","","",null,null],[17,"UTUN_OPT_FLAGS","","",null,null],[17,"UTUN_OPT_IFNAME","","",null,null],[17,"DLT_NULL","","",null,null],[17,"DLT_EN10MB","","",null,null],[17,"DLT_EN3MB","","",null,null],[17,"DLT_AX25","","",null,null],[17,"DLT_PRONET","","",null,null],[17,"DLT_CHAOS","","",null,null],[17,"DLT_IEEE802","","",null,null],[17,"DLT_ARCNET","","",null,null],[17,"DLT_SLIP","","",null,null],[17,"DLT_PPP","","",null,null],[17,"DLT_FDDI","","",null,null],[17,"DLT_ATM_RFC1483","","",null,null],[17,"DLT_RAW","","",null,null],[17,"DLT_LOOP","","",null,null],[17,"BPF_ALIGNMENT","","",null,null],[17,"MNT_RDONLY","","",null,null],[17,"MNT_SYNCHRONOUS","","",null,null],[17,"MNT_NOEXEC","","",null,null],[17,"MNT_NOSUID","","",null,null],[17,"MNT_NODEV","","",null,null],[17,"MNT_UNION","","",null,null],[17,"MNT_ASYNC","","",null,null],[17,"MNT_CPROTECT","","",null,null],[17,"MNT_EXPORTED","","",null,null],[17,"MNT_QUARANTINE","","",null,null],[17,"MNT_LOCAL","","",null,null],[17,"MNT_QUOTA","","",null,null],[17,"MNT_ROOTFS","","",null,null],[17,"MNT_DOVOLFS","","",null,null],[17,"MNT_DONTBROWSE","","",null,null],[17,"MNT_IGNORE_OWNERSHIP","","",null,null],[17,"MNT_AUTOMOUNTED","","",null,null],[17,"MNT_JOURNALED","","",null,null],[17,"MNT_NOUSERXATTR","","",null,null],[17,"MNT_DEFWRITE","","",null,null],[17,"MNT_MULTILABEL","","",null,null],[17,"MNT_NOATIME","","",null,null],[17,"MNT_SNAPSHOT","","",null,null],[17,"MNT_UPDATE","","",null,null],[17,"MNT_NOBLOCK","","",null,null],[17,"MNT_RELOAD","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETEXEC","","",null,null],[17,"POSIX_SPAWN_START_SUSPENDED","","",null,null],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_R","","",null,null],[17,"IPC_W","","",null,null],[17,"IPC_M","","",null,null],[17,"SEM_UNDO","","",null,null],[17,"GETNCNT","","",null,null],[17,"GETPID","","",null,null],[17,"GETVAL","","",null,null],[17,"GETALL","","",null,null],[17,"GETZCNT","","",null,null],[17,"SETVAL","","",null,null],[17,"SETALL","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHMLBA","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"UF_SETTABLE","","",null,null],[17,"UF_NODUMP","","",null,null],[17,"UF_IMMUTABLE","","",null,null],[17,"UF_APPEND","","",null,null],[17,"UF_OPAQUE","","",null,null],[17,"UF_COMPRESSED","","",null,null],[17,"UF_TRACKED","","",null,null],[17,"SF_SETTABLE","","",null,null],[17,"SF_ARCHIVED","","",null,null],[17,"SF_IMMUTABLE","","",null,null],[17,"SF_APPEND","","",null,null],[17,"UF_HIDDEN","","",null,null],[17,"NTP_API","","",null,null],[17,"MAXPHASE","","",null,null],[17,"MAXFREQ","","",null,null],[17,"MINSEC","","",null,null],[17,"MAXSEC","","",null,null],[17,"NANOSECOND","","",null,null],[17,"SCALE_PPM","","",null,null],[17,"MAXTC","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_PPSMAX","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"MNT_WAIT","","",null,null],[17,"MNT_NOWAIT","","",null,null],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"_WSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]],["bool",15]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]],["bool",15]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]],["bool",15]]],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[3,"timeval32","","",null,null],[12,"tv_sec","","",85,null],[12,"tv_usec","","",85,null],[3,"if_data","","",null,null],[12,"ifi_type","","",86,null],[12,"ifi_typelen","","",86,null],[12,"ifi_physical","","",86,null],[12,"ifi_addrlen","","",86,null],[12,"ifi_hdrlen","","",86,null],[12,"ifi_recvquota","","",86,null],[12,"ifi_xmitquota","","",86,null],[12,"ifi_unused1","","",86,null],[12,"ifi_mtu","","",86,null],[12,"ifi_metric","","",86,null],[12,"ifi_baudrate","","",86,null],[12,"ifi_ipackets","","",86,null],[12,"ifi_ierrors","","",86,null],[12,"ifi_opackets","","",86,null],[12,"ifi_oerrors","","",86,null],[12,"ifi_collisions","","",86,null],[12,"ifi_ibytes","","",86,null],[12,"ifi_obytes","","",86,null],[12,"ifi_imcasts","","",86,null],[12,"ifi_omcasts","","",86,null],[12,"ifi_iqdrops","","",86,null],[12,"ifi_noproto","","",86,null],[12,"ifi_recvtiming","","",86,null],[12,"ifi_xmittiming","","",86,null],[12,"ifi_lastchange","","",86,null],[12,"ifi_unused2","","",86,null],[12,"ifi_hwassist","","",86,null],[12,"ifi_reserved1","","",86,null],[12,"ifi_reserved2","","",86,null],[3,"bpf_hdr","","",null,null],[12,"bh_tstamp","","",87,null],[12,"bh_caplen","","",87,null],[12,"bh_datalen","","",87,null],[12,"bh_hdrlen","","",87,null],[3,"pthread_attr_t","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_CONDATTR_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",null,null],[17,"TIOCTIMESTAMP","","",null,null],[17,"TIOCDCDTIMESTAMP","","",null,null],[17,"BIOCSETF","","",null,null],[17,"BIOCSRTIMEOUT","","",null,null],[17,"BIOCGRTIMEOUT","","",null,null],[17,"BIOCSETFNR","","",null,null],[6,"boolean_t","","",null,null],[6,"mcontext_t","","",null,null],[3,"ucontext_t","","",null,null],[12,"uc_onstack","","",88,null],[12,"uc_sigmask","","",88,null],[12,"uc_stack","","",88,null],[12,"uc_link","","",88,null],[12,"uc_mcsize","","",88,null],[12,"uc_mcontext","","",88,null],[3,"__darwin_mcontext64","","",null,null],[12,"__es","","",89,null],[12,"__ss","","",89,null],[12,"__fs","","",89,null],[3,"__darwin_x86_exception_state64","","",null,null],[12,"__trapno","","",90,null],[12,"__cpu","","",90,null],[12,"__err","","",90,null],[12,"__faultvaddr","","",90,null],[3,"__darwin_x86_thread_state64","","",null,null],[12,"__rax","","",91,null],[12,"__rbx","","",91,null],[12,"__rcx","","",91,null],[12,"__rdx","","",91,null],[12,"__rdi","","",91,null],[12,"__rsi","","",91,null],[12,"__rbp","","",91,null],[12,"__rsp","","",91,null],[12,"__r8","","",91,null],[12,"__r9","","",91,null],[12,"__r10","","",91,null],[12,"__r11","","",91,null],[12,"__r12","","",91,null],[12,"__r13","","",91,null],[12,"__r14","","",91,null],[12,"__r15","","",91,null],[12,"__rip","","",91,null],[12,"__rflags","","",91,null],[12,"__cs","","",91,null],[12,"__fs","","",91,null],[12,"__gs","","",91,null],[3,"__darwin_x86_float_state64","","",null,null],[12,"__fpu_reserved","","",92,null],[12,"__fpu_ftw","","",92,null],[12,"__fpu_rsrv1","","",92,null],[12,"__fpu_fop","","",92,null],[12,"__fpu_ip","","",92,null],[12,"__fpu_cs","","",92,null],[12,"__fpu_rsrv2","","",92,null],[12,"__fpu_dp","","",92,null],[12,"__fpu_ds","","",92,null],[12,"__fpu_rsrv3","","",92,null],[12,"__fpu_mxcsr","","",92,null],[12,"__fpu_mxcsrmask","","",92,null],[12,"__fpu_stmm0","","",92,null],[12,"__fpu_stmm1","","",92,null],[12,"__fpu_stmm2","","",92,null],[12,"__fpu_stmm3","","",92,null],[12,"__fpu_stmm4","","",92,null],[12,"__fpu_stmm5","","",92,null],[12,"__fpu_stmm6","","",92,null],[12,"__fpu_stmm7","","",92,null],[12,"__fpu_xmm0","","",92,null],[12,"__fpu_xmm1","","",92,null],[12,"__fpu_xmm2","","",92,null],[12,"__fpu_xmm3","","",92,null],[12,"__fpu_xmm4","","",92,null],[12,"__fpu_xmm5","","",92,null],[12,"__fpu_xmm6","","",92,null],[12,"__fpu_xmm7","","",92,null],[12,"__fpu_xmm8","","",92,null],[12,"__fpu_xmm9","","",92,null],[12,"__fpu_xmm10","","",92,null],[12,"__fpu_xmm11","","",92,null],[12,"__fpu_xmm12","","",92,null],[12,"__fpu_xmm13","","",92,null],[12,"__fpu_xmm14","","",92,null],[12,"__fpu_xmm15","","",92,null],[12,"__fpu_reserved1","","",92,null],[3,"__darwin_mmst_reg","","",null,null],[12,"__mmst_reg","","",93,null],[12,"__mmst_rsrv","","",93,null],[3,"__darwin_xmm_reg","","",null,null],[12,"__xmm_reg","","",94,null],[3,"max_align_t","","",null,null],[4,"c_void","","Equivalent to C\'s <code>void</code> type when used as a pointer.",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",95,null],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"fmt","","",111,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["group",3]],["bool",15]]],[11,"ne","","",0,[[["group",3]],["bool",15]]],[11,"eq","","",1,[[["utimbuf",3]],["bool",15]]],[11,"ne","","",1,[[["utimbuf",3]],["bool",15]]],[11,"eq","","",2,[[["timeval",3]],["bool",15]]],[11,"ne","","",2,[[["timeval",3]],["bool",15]]],[11,"eq","","",3,[[["timespec",3]],["bool",15]]],[11,"ne","","",3,[[["timespec",3]],["bool",15]]],[11,"eq","","",4,[[["rlimit",3]],["bool",15]]],[11,"ne","","",4,[[["rlimit",3]],["bool",15]]],[11,"eq","","",5,[[["rusage",3]],["bool",15]]],[11,"ne","","",5,[[["rusage",3]],["bool",15]]],[11,"eq","","",6,[[["ipv6_mreq",3]],["bool",15]]],[11,"ne","","",6,[[["ipv6_mreq",3]],["bool",15]]],[11,"eq","","",7,[[["hostent",3]],["bool",15]]],[11,"ne","","",7,[[["hostent",3]],["bool",15]]],[11,"eq","","",8,[[["iovec",3]],["bool",15]]],[11,"ne","","",8,[[["iovec",3]],["bool",15]]],[11,"eq","","",9,[[["pollfd",3]],["bool",15]]],[11,"ne","","",9,[[["pollfd",3]],["bool",15]]],[11,"eq","","",10,[[["winsize",3]],["bool",15]]],[11,"ne","","",10,[[["winsize",3]],["bool",15]]],[11,"eq","","",11,[[["linger",3]],["bool",15]]],[11,"ne","","",11,[[["linger",3]],["bool",15]]],[11,"eq","","",12,[[["sigval",3]],["bool",15]]],[11,"ne","","",12,[[["sigval",3]],["bool",15]]],[11,"eq","","",13,[[["itimerval",3]],["bool",15]]],[11,"ne","","",13,[[["itimerval",3]],["bool",15]]],[11,"eq","","",14,[[["tms",3]],["bool",15]]],[11,"ne","","",14,[[["tms",3]],["bool",15]]],[11,"eq","","",15,[[["servent",3]],["bool",15]]],[11,"ne","","",15,[[["servent",3]],["bool",15]]],[11,"eq","","",16,[[["protoent",3]],["bool",15]]],[11,"ne","","",16,[[["protoent",3]],["bool",15]]],[11,"eq","","",17,[[["sockaddr",3]],["bool",15]]],[11,"ne","","",17,[[["sockaddr",3]],["bool",15]]],[11,"eq","","",18,[[["sockaddr_in6",3]],["bool",15]]],[11,"ne","","",18,[[["sockaddr_in6",3]],["bool",15]]],[11,"eq","","",19,[[["passwd",3]],["bool",15]]],[11,"ne","","",19,[[["passwd",3]],["bool",15]]],[11,"eq","","",20,[[["ifaddrs",3]],["bool",15]]],[11,"ne","","",20,[[["ifaddrs",3]],["bool",15]]],[11,"eq","","",105,[[["fd_set",3]],["bool",15]]],[11,"ne","","",105,[[["fd_set",3]],["bool",15]]],[11,"eq","","",21,[[["tm",3]],["bool",15]]],[11,"ne","","",21,[[["tm",3]],["bool",15]]],[11,"eq","","",22,[[["msghdr",3]],["bool",15]]],[11,"ne","","",22,[[["msghdr",3]],["bool",15]]],[11,"eq","","",23,[[["cmsghdr",3]],["bool",15]]],[11,"ne","","",23,[[["cmsghdr",3]],["bool",15]]],[11,"eq","","",106,[[["fsid_t",3]],["bool",15]]],[11,"ne","","",106,[[["fsid_t",3]],["bool",15]]],[11,"eq","","",24,[[["if_nameindex",3]],["bool",15]]],[11,"ne","","",24,[[["if_nameindex",3]],["bool",15]]],[11,"eq","","",107,[[["regex_t",3]],["bool",15]]],[11,"ne","","",107,[[["regex_t",3]],["bool",15]]],[11,"eq","","",25,[[["regmatch_t",3]],["bool",15]]],[11,"ne","","",25,[[["regmatch_t",3]],["bool",15]]],[11,"eq","","",26,[[["sockaddr_un",3]],["bool",15]]],[11,"eq","","",27,[[["utsname",3]],["bool",15]]],[11,"eq","","",28,[[["ip_mreq",3]],["bool",15]]],[11,"ne","","",28,[[["ip_mreq",3]],["bool",15]]],[11,"eq","","",29,[[["aiocb",3]],["bool",15]]],[11,"ne","","",29,[[["aiocb",3]],["bool",15]]],[11,"eq","","",30,[[["glob_t",3]],["bool",15]]],[11,"ne","","",30,[[["glob_t",3]],["bool",15]]],[11,"eq","","",31,[[["addrinfo",3]],["bool",15]]],[11,"ne","","",31,[[["addrinfo",3]],["bool",15]]],[11,"eq","","",32,[[["mach_timebase_info",3]],["bool",15]]],[11,"ne","","",32,[[["mach_timebase_info",3]],["bool",15]]],[11,"eq","","",33,[[["stat",3]],["bool",15]]],[11,"ne","","",33,[[["stat",3]],["bool",15]]],[11,"eq","","",99,[[["pthread_mutexattr_t",3]],["bool",15]]],[11,"ne","","",99,[[["pthread_mutexattr_t",3]],["bool",15]]],[11,"eq","","",100,[[["pthread_condattr_t",3]],["bool",15]]],[11,"ne","","",100,[[["pthread_condattr_t",3]],["bool",15]]],[11,"eq","","",101,[[["pthread_rwlockattr_t",3]],["bool",15]]],[11,"ne","","",101,[[["pthread_rwlockattr_t",3]],["bool",15]]],[11,"eq","","",34,[[["siginfo_t",3]],["bool",15]]],[11,"ne","","",34,[[["siginfo_t",3]],["bool",15]]],[11,"eq","","",35,[[["sigaction",3]],["bool",15]]],[11,"ne","","",35,[[["sigaction",3]],["bool",15]]],[11,"eq","","",36,[[["stack_t",3]],["bool",15]]],[11,"ne","","",36,[[["stack_t",3]],["bool",15]]],[11,"eq","","",37,[[["fstore_t",3]],["bool",15]]],[11,"ne","","",37,[[["fstore_t",3]],["bool",15]]],[11,"eq","","",38,[[["radvisory",3]],["bool",15]]],[11,"ne","","",38,[[["radvisory",3]],["bool",15]]],[11,"eq","","",39,[[["statvfs",3]],["bool",15]]],[11,"ne","","",39,[[["statvfs",3]],["bool",15]]],[11,"eq","","",40,[[["dl_info",3]],["bool",15]]],[11,"ne","","",40,[[["dl_info",3]],["bool",15]]],[11,"eq","","",41,[[["sockaddr_in",3]],["bool",15]]],[11,"ne","","",41,[[["sockaddr_in",3]],["bool",15]]],[11,"eq","","",42,[[["kevent64_s",3]],["bool",15]]],[11,"ne","","",42,[[["kevent64_s",3]],["bool",15]]],[11,"eq","","",43,[[["dqblk",3]],["bool",15]]],[11,"ne","","",43,[[["dqblk",3]],["bool",15]]],[11,"eq","","",44,[[["if_msghdr",3]],["bool",15]]],[11,"ne","","",44,[[["if_msghdr",3]],["bool",15]]],[11,"eq","","",45,[[["termios",3]],["bool",15]]],[11,"ne","","",45,[[["termios",3]],["bool",15]]],[11,"eq","","",46,[[["flock",3]],["bool",15]]],[11,"ne","","",46,[[["flock",3]],["bool",15]]],[11,"eq","","",47,[[["sf_hdtr",3]],["bool",15]]],[11,"ne","","",47,[[["sf_hdtr",3]],["bool",15]]],[11,"eq","","",48,[[["lconv",3]],["bool",15]]],[11,"ne","","",48,[[["lconv",3]],["bool",15]]],[11,"eq","","",49,[[["proc_taskinfo",3]],["bool",15]]],[11,"ne","","",49,[[["proc_taskinfo",3]],["bool",15]]],[11,"eq","","",50,[[["proc_bsdinfo",3]],["bool",15]]],[11,"ne","","",50,[[["proc_bsdinfo",3]],["bool",15]]],[11,"eq","","",51,[[["proc_taskallinfo",3]],["bool",15]]],[11,"ne","","",51,[[["proc_taskallinfo",3]],["bool",15]]],[11,"eq","","",52,[[["xsw_usage",3]],["bool",15]]],[11,"ne","","",52,[[["xsw_usage",3]],["bool",15]]],[11,"eq","","",53,[[["xucred",3]],["bool",15]]],[11,"ne","","",53,[[["xucred",3]],["bool",15]]],[11,"eq","","",54,[[["mach_header",3]],["bool",15]]],[11,"ne","","",54,[[["mach_header",3]],["bool",15]]],[11,"eq","","",55,[[["mach_header_64",3]],["bool",15]]],[11,"ne","","",55,[[["mach_header_64",3]],["bool",15]]],[11,"eq","","",56,[[["segment_command",3]],["bool",15]]],[11,"ne","","",56,[[["segment_command",3]],["bool",15]]],[11,"eq","","",57,[[["segment_command_64",3]],["bool",15]]],[11,"ne","","",57,[[["segment_command_64",3]],["bool",15]]],[11,"eq","","",58,[[["load_command",3]],["bool",15]]],[11,"ne","","",58,[[["load_command",3]],["bool",15]]],[11,"eq","","",59,[[["sockaddr_dl",3]],["bool",15]]],[11,"ne","","",59,[[["sockaddr_dl",3]],["bool",15]]],[11,"eq","","",60,[[["sockaddr_inarp",3]],["bool",15]]],[11,"ne","","",60,[[["sockaddr_inarp",3]],["bool",15]]],[11,"eq","","",61,[[["sockaddr_ctl",3]],["bool",15]]],[11,"ne","","",61,[[["sockaddr_ctl",3]],["bool",15]]],[11,"eq","","",62,[[["in_pktinfo",3]],["bool",15]]],[11,"ne","","",62,[[["in_pktinfo",3]],["bool",15]]],[11,"eq","","",63,[[["in6_pktinfo",3]],["bool",15]]],[11,"ne","","",63,[[["in6_pktinfo",3]],["bool",15]]],[11,"eq","","",64,[[["ipc_perm",3]],["bool",15]]],[11,"ne","","",64,[[["ipc_perm",3]],["bool",15]]],[11,"eq","","",65,[[["sembuf",3]],["bool",15]]],[11,"ne","","",65,[[["sembuf",3]],["bool",15]]],[11,"eq","","",66,[[["arphdr",3]],["bool",15]]],[11,"ne","","",66,[[["arphdr",3]],["bool",15]]],[11,"eq","","",67,[[["in_addr",3]],["bool",15]]],[11,"ne","","",67,[[["in_addr",3]],["bool",15]]],[11,"eq","","",68,[[["sa_endpoints_t",3]],["bool",15]]],[11,"ne","","",68,[[["sa_endpoints_t",3]],["bool",15]]],[11,"eq","","",69,[[["timex",3]],["bool",15]]],[11,"ne","","",69,[[["timex",3]],["bool",15]]],[11,"eq","","",70,[[["ntptimeval",3]],["bool",15]]],[11,"ne","","",70,[[["ntptimeval",3]],["bool",15]]],[11,"eq","","",84,[[["semun",19]],["bool",15]]],[11,"eq","","",71,[[["kevent",3]],["bool",15]]],[11,"eq","","",72,[[["semid_ds",3]],["bool",15]]],[11,"eq","","",73,[[["shmid_ds",3]],["bool",15]]],[11,"eq","","",74,[[["proc_threadinfo",3]],["bool",15]]],[11,"eq","","",75,[[["statfs",3]],["bool",15]]],[11,"eq","","",76,[[["dirent",3]],["bool",15]]],[11,"eq","","",102,[[["pthread_rwlock_t",3]],["bool",15]]],[11,"eq","","",103,[[["pthread_mutex_t",3]],["bool",15]]],[11,"eq","","",104,[[["pthread_cond_t",3]],["bool",15]]],[11,"eq","","",77,[[["sockaddr_storage",3]],["bool",15]]],[11,"eq","","",78,[[["utmpx",3]],["bool",15]]],[11,"eq","","",79,[[["sigevent",3]],["bool",15]]],[11,"eq","","",80,[[["processor_cpu_load_info",3]],["bool",15]]],[11,"eq","","",81,[[["processor_basic_info",3]],["bool",15]]],[11,"eq","","",82,[[["processor_set_basic_info",3]],["bool",15]]],[11,"eq","","",83,[[["processor_set_load_info",3]],["bool",15]]],[11,"eq","","",85,[[["timeval32",3]],["bool",15]]],[11,"ne","","",85,[[["timeval32",3]],["bool",15]]],[11,"eq","","",86,[[["if_data",3]],["bool",15]]],[11,"ne","","",86,[[["if_data",3]],["bool",15]]],[11,"eq","","",87,[[["bpf_hdr",3]],["bool",15]]],[11,"ne","","",87,[[["bpf_hdr",3]],["bool",15]]],[11,"eq","","",97,[[["pthread_attr_t",3]],["bool",15]]],[11,"eq","","",88,[[["ucontext_t",3]],["bool",15]]],[11,"ne","","",88,[[["ucontext_t",3]],["bool",15]]],[11,"eq","","",89,[[["__darwin_mcontext64",3]],["bool",15]]],[11,"ne","","",89,[[["__darwin_mcontext64",3]],["bool",15]]],[11,"eq","","",90,[[["__darwin_x86_exception_state64",3]],["bool",15]]],[11,"ne","","",90,[[["__darwin_x86_exception_state64",3]],["bool",15]]],[11,"eq","","",91,[[["__darwin_x86_thread_state64",3]],["bool",15]]],[11,"ne","","",91,[[["__darwin_x86_thread_state64",3]],["bool",15]]],[11,"eq","","",92,[[["__darwin_x86_float_state64",3]],["bool",15]]],[11,"ne","","",92,[[["__darwin_x86_float_state64",3]],["bool",15]]],[11,"eq","","",93,[[["__darwin_mmst_reg",3]],["bool",15]]],[11,"ne","","",93,[[["__darwin_mmst_reg",3]],["bool",15]]],[11,"eq","","",94,[[["__darwin_xmm_reg",3]],["bool",15]]],[11,"ne","","",94,[[["__darwin_xmm_reg",3]],["bool",15]]],[11,"eq","","",95,[[["in6_addr",3]],["bool",15]]],[11,"ne","","",95,[[["in6_addr",3]],["bool",15]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",106,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",107,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",102,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"clone","","",108,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",109,[[],["file",4]]],[11,"clone","","",110,[[],["fpos_t",4]]],[11,"clone","","",17,[[],["sockaddr",3]]],[11,"clone","","",18,[[],["sockaddr_in6",3]]],[11,"clone","","",19,[[],["passwd",3]]],[11,"clone","","",20,[[],["ifaddrs",3]]],[11,"clone","","",105,[[],["fd_set",3]]],[11,"clone","","",21,[[],["tm",3]]],[11,"clone","","",22,[[],["msghdr",3]]],[11,"clone","","",23,[[],["cmsghdr",3]]],[11,"clone","","",106,[[],["fsid_t",3]]],[11,"clone","","",24,[[],["if_nameindex",3]]],[11,"clone","","",107,[[],["regex_t",3]]],[11,"clone","","",25,[[],["regmatch_t",3]]],[11,"clone","","",26,[[],["sockaddr_un",3]]],[11,"clone","","",27,[[],["utsname",3]]],[11,"clone","","",98,[[],["timezone",4]]],[11,"clone","","",28,[[],["ip_mreq",3]]],[11,"clone","","",29,[[],["aiocb",3]]],[11,"clone","","",30,[[],["glob_t",3]]],[11,"clone","","",31,[[],["addrinfo",3]]],[11,"clone","","",32,[[],["mach_timebase_info",3]]],[11,"clone","","",33,[[],["stat",3]]],[11,"clone","","",99,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",100,[[],["pthread_condattr_t",3]]],[11,"clone","","",101,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",34,[[],["siginfo_t",3]]],[11,"clone","","",35,[[],["sigaction",3]]],[11,"clone","","",36,[[],["stack_t",3]]],[11,"clone","","",37,[[],["fstore_t",3]]],[11,"clone","","",38,[[],["radvisory",3]]],[11,"clone","","",39,[[],["statvfs",3]]],[11,"clone","","",40,[[],["dl_info",3]]],[11,"clone","","",41,[[],["sockaddr_in",3]]],[11,"clone","","",42,[[],["kevent64_s",3]]],[11,"clone","","",43,[[],["dqblk",3]]],[11,"clone","","",44,[[],["if_msghdr",3]]],[11,"clone","","",45,[[],["termios",3]]],[11,"clone","","",46,[[],["flock",3]]],[11,"clone","","",47,[[],["sf_hdtr",3]]],[11,"clone","","",48,[[],["lconv",3]]],[11,"clone","","",49,[[],["proc_taskinfo",3]]],[11,"clone","","",50,[[],["proc_bsdinfo",3]]],[11,"clone","","",51,[[],["proc_taskallinfo",3]]],[11,"clone","","",52,[[],["xsw_usage",3]]],[11,"clone","","",53,[[],["xucred",3]]],[11,"clone","","",54,[[],["mach_header",3]]],[11,"clone","","",55,[[],["mach_header_64",3]]],[11,"clone","","",56,[[],["segment_command",3]]],[11,"clone","","",57,[[],["segment_command_64",3]]],[11,"clone","","",58,[[],["load_command",3]]],[11,"clone","","",59,[[],["sockaddr_dl",3]]],[11,"clone","","",60,[[],["sockaddr_inarp",3]]],[11,"clone","","",61,[[],["sockaddr_ctl",3]]],[11,"clone","","",62,[[],["in_pktinfo",3]]],[11,"clone","","",63,[[],["in6_pktinfo",3]]],[11,"clone","","",64,[[],["ipc_perm",3]]],[11,"clone","","",65,[[],["sembuf",3]]],[11,"clone","","",66,[[],["arphdr",3]]],[11,"clone","","",67,[[],["in_addr",3]]],[11,"clone","","",68,[[],["sa_endpoints_t",3]]],[11,"clone","","",69,[[],["timex",3]]],[11,"clone","","",70,[[],["ntptimeval",3]]],[11,"clone","","",71,[[],["kevent",3]]],[11,"clone","","",72,[[],["semid_ds",3]]],[11,"clone","","",73,[[],["shmid_ds",3]]],[11,"clone","","",74,[[],["proc_threadinfo",3]]],[11,"clone","","",75,[[],["statfs",3]]],[11,"clone","","",76,[[],["dirent",3]]],[11,"clone","","",102,[[],["pthread_rwlock_t",3]]],[11,"clone","","",103,[[],["pthread_mutex_t",3]]],[11,"clone","","",104,[[],["pthread_cond_t",3]]],[11,"clone","","",77,[[],["sockaddr_storage",3]]],[11,"clone","","",78,[[],["utmpx",3]]],[11,"clone","","",79,[[],["sigevent",3]]],[11,"clone","","",80,[[],["processor_cpu_load_info",3]]],[11,"clone","","",81,[[],["processor_basic_info",3]]],[11,"clone","","",82,[[],["processor_set_basic_info",3]]],[11,"clone","","",83,[[],["processor_set_load_info",3]]],[11,"clone","","",84,[[],["semun",19]]],[11,"clone","","",85,[[],["timeval32",3]]],[11,"clone","","",86,[[],["if_data",3]]],[11,"clone","","",87,[[],["bpf_hdr",3]]],[11,"clone","","",97,[[],["pthread_attr_t",3]]],[11,"clone","","",88,[[],["ucontext_t",3]]],[11,"clone","","",89,[[],["__darwin_mcontext64",3]]],[11,"clone","","",90,[[],["__darwin_x86_exception_state64",3]]],[11,"clone","","",91,[[],["__darwin_x86_thread_state64",3]]],[11,"clone","","",92,[[],["__darwin_x86_float_state64",3]]],[11,"clone","","",93,[[],["__darwin_mmst_reg",3]]],[11,"clone","","",94,[[],["__darwin_xmm_reg",3]]],[11,"clone","","",96,[[],["max_align_t",3]]],[11,"clone","","",95,[[],["in6_addr",3]]],[11,"si_addr","","",34,[[]]],[11,"si_value","","",34,[[],["sigval",3]]],[11,"si_pid","","",34,[[],["pid_t",6]]],[11,"si_uid","","",34,[[],["uid_t",6]]],[11,"si_status","","",34,[[],["c_int",6]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"regmatch_t"],[3,"sockaddr_un"],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"sa_endpoints_t"],[3,"timex"],[3,"ntptimeval"],[3,"kevent"],[3,"semid_ds"],[3,"shmid_ds"],[3,"proc_threadinfo"],[3,"statfs"],[3,"dirent"],[3,"sockaddr_storage"],[3,"utmpx"],[3,"sigevent"],[3,"processor_cpu_load_info"],[3,"processor_basic_info"],[3,"processor_set_basic_info"],[3,"processor_set_load_info"],[19,"semun"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"ucontext_t"],[3,"__darwin_mcontext64"],[3,"__darwin_x86_exception_state64"],[3,"__darwin_x86_thread_state64"],[3,"__darwin_x86_float_state64"],[3,"__darwin_mmst_reg"],[3,"__darwin_xmm_reg"],[3,"in6_addr"],[3,"max_align_t"],[3,"pthread_attr_t"],[4,"timezone"],[3,"pthread_mutexattr_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutex_t"],[3,"pthread_cond_t"],[3,"fd_set"],[3,"fsid_t"],[3,"regex_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"c_void"]]},\
"log":{"doc":"A lightweight logging facade.","i":[[4,"Level","log","An enum representing the available verbosity levels of …",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.",0,[[],["levelfilter",4]]],[11,"as_str","","Returns the string representation of the <code>Level</code>.",0,[[],["str",15]]],[4,"LevelFilter","","An enum representing the available verbosity level …",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the <code>Error</code> log level.",1,null],[13,"Warn","","Corresponds to the <code>Warn</code> log level.",1,null],[13,"Info","","Corresponds to the <code>Info</code> log level.",1,null],[13,"Debug","","Corresponds to the <code>Debug</code> log level.",1,null],[13,"Trace","","Corresponds to the <code>Trace</code> log level.",1,null],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter",4]]],[11,"to_level","","Converts <code>self</code> to the equivalent <code>Level</code>.",1,[[],[["option",4],["level",4]]]],[11,"as_str","","Returns the string representation of the <code>LevelFilter</code>.",1,[[],["str",15]]],[3,"Record","","The \\\"payload\\\" of a log message.",null,null],[11,"builder","","Returns a new builder.",2,[[],["recordbuilder",3]]],[11,"args","","The message body.",2,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",2,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",2,[[],["level",4]]],[11,"target","","The name of the target of the directive.",2,[[],["str",15]]],[11,"module_path","","The module path of the message.",2,[[],[["str",15],["option",4]]]],[11,"module_path_static","","The module path of the message, if it is a <code>\'static</code> string.",2,[[],[["str",15],["option",4]]]],[11,"file","","The source file containing the message.",2,[[],[["str",15],["option",4]]]],[11,"file_static","","The module path of the message, if it is a <code>\'static</code> string.",2,[[],[["str",15],["option",4]]]],[11,"line","","The line containing the message.",2,[[],[["option",4],["u32",15]]]],[3,"RecordBuilder","","Builder for <code>Record</code>.",null,null],[11,"new","","Construct new <code>RecordBuilder</code>.",3,[[],["recordbuilder",3]]],[11,"args","","Set <code>args</code>.",3,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …",3,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set <code>Metadata::level</code>.",3,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set <code>Metadata::target</code>",3,[[["str",15]],["recordbuilder",3]]],[11,"module_path","","Set <code>module_path</code>",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"module_path_static","","Set <code>module_path</code> to a <code>\'static</code> string",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"file","","Set <code>file</code>",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"file_static","","Set <code>file</code> to a <code>\'static</code> string.",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"line","","Set <code>line</code>",3,[[["option",4],["u32",15]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a <code>Record</code>",3,[[],["record",3]]],[3,"Metadata","","Metadata about a log message.",null,null],[11,"builder","","Returns a new builder.",4,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",4,[[],["level",4]]],[11,"target","","The name of the target of the directive.",4,[[],["str",15]]],[3,"MetadataBuilder","","Builder for <code>Metadata</code>.",null,null],[11,"new","","Construct a new <code>MetadataBuilder</code>.",5,[[],["metadatabuilder",3]]],[11,"level","","Setter for <code>level</code>.",5,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for <code>target</code>.",5,[[["str",15]],["metadatabuilder",3]]],[11,"build","","Returns a <code>Metadata</code> object.",5,[[],["metadata",3]]],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata …",6,[[["metadata",3]],["bool",15]]],[10,"log","","Logs the <code>Record</code>.",6,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",6,[[]]],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_logger","","Sets the global logger to a <code>&\'static Log</code>.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger_racy","","A thread-unsafe version of <code>set_logger</code>.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[3,"SetLoggerError","","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …",null,null],[3,"ParseLevelError","","The type returned by <code>from_str</code> when the string doesn\'t …",null,null],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in …",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["level",4]],["bool",15]]],[11,"eq","","",0,[[["levelfilter",4]],["bool",15]]],[11,"eq","","",1,[[["levelfilter",4]],["bool",15]]],[11,"eq","","",1,[[["level",4]],["bool",15]]],[11,"eq","","",4,[[["metadata",3]],["bool",15]]],[11,"ne","","",4,[[["metadata",3]],["bool",15]]],[11,"eq","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"ne","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"eq","","",8,[[["parselevelerror",3]],["bool",15]]],[11,"ne","","",8,[[["parselevelerror",3]],["bool",15]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"cmp","","",1,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",4,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",5,[[["metadatabuilder",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["level",4]],["bool",15]]],[11,"le","","",0,[[["level",4]],["bool",15]]],[11,"gt","","",0,[[["level",4]],["bool",15]]],[11,"ge","","",0,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["levelfilter",4]],["bool",15]]],[11,"le","","",0,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",0,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",0,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",1,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["levelfilter",4]],["bool",15]]],[11,"le","","",1,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",1,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",1,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",1,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["level",4]],["bool",15]]],[11,"le","","",1,[[["level",4]],["bool",15]]],[11,"gt","","",1,[[["level",4]],["bool",15]]],[11,"ge","","",1,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",4,[[["metadata",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["metadata",3]],["bool",15]]],[11,"le","","",4,[[["metadata",3]],["bool",15]]],[11,"gt","","",4,[[["metadata",3]],["bool",15]]],[11,"ge","","",4,[[["metadata",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["metadatabuilder",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"le","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"gt","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"ge","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"from_str","","",0,[[["str",15]],[["result",4],["level",4]]]],[11,"from_str","","",1,[[["str",15]],[["result",4],["levelfilter",4]]]],[11,"clone","","",0,[[],["level",4]]],[11,"clone","","",1,[[],["levelfilter",4]]],[11,"clone","","",2,[[],["record",3]]],[11,"clone","","",4,[[],["metadata",3]]]],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"malloc_buf":{"doc":"","i":[[3,"MallocBuffer","malloc_buf","A type that represents a <code>malloc</code>\'d chunk of memory.",null,null],[11,"new","","Constructs a new <code>MallocBuffer</code> for a <code>malloc</code>\'d buffer with …",0,[[["usize",15]],[["option",4],["mallocbuffer",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"deref","","",0,[[]]]],"p":[[3,"MallocBuffer"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members …","i":[[14,"raw_field","memoffset","Computes a const raw pointer to the given field of the …",null,null],[14,"raw_field_tuple","","Computes a const raw pointer to the given field of the …",null,null],[14,"offset_of","","Calculates the offset of the specified field from the …",null,null],[14,"offset_of_tuple","","Calculates the offset of the specified field from the …",null,null],[14,"span_of","","Produces a range instance representing the sub-slice …",null,null]],"p":[]},\
"miniz_oxide":{"doc":"A pure rust replacement for the miniz DEFLATE/zlib …","i":[[0,"deflate","miniz_oxide","This module contains functionality for compression.",null,null],[0,"core","miniz_oxide::deflate","Streaming compression functionality.",null,null],[0,"deflate_flags","miniz_oxide::deflate::core","",null,null],[17,"TDEFL_WRITE_ZLIB_HEADER","miniz_oxide::deflate::core::deflate_flags","Whether to use a zlib wrapper.",null,null],[17,"TDEFL_COMPUTE_ADLER32","","Should we compute the adler32 checksum.",null,null],[17,"TDEFL_GREEDY_PARSING_FLAG","","Should we use greedy parsing (as opposed to lazy parsing …",null,null],[17,"TDEFL_NONDETERMINISTIC_PARSING_FLAG","","Used in miniz to skip zero-initializing hash and dict. We …",null,null],[17,"TDEFL_RLE_MATCHES","","Only look for matches with a distance of 0.",null,null],[17,"TDEFL_FILTER_MATCHES","","Only use matches that are at least 6 bytes long.",null,null],[17,"TDEFL_FORCE_ALL_STATIC_BLOCKS","","Force the compressor to only output static blocks. …",null,null],[17,"TDEFL_FORCE_ALL_RAW_BLOCKS","","Force the compressor to only output raw/uncompressed …",null,null],[4,"CompressionStrategy","miniz_oxide::deflate::core","Strategy setting for compression.",null,null],[13,"Default","","Don\'t use any of the special strategies.",0,null],[13,"Filtered","","Only use matches that are at least 5 bytes long.",0,null],[13,"HuffmanOnly","","Don\'t look for matches, only huffman encode the literals.",0,null],[13,"RLE","","Only look for matches with a distance of 1, i.e do …",0,null],[13,"Fixed","","Only use static/fixed blocks. (Blocks using the default …",0,null],[4,"TDEFLFlush","","A list of deflate flush types.",null,null],[13,"None","","Compress as much as there is space for, and then return …",1,null],[13,"Sync","","Try to flush the current data and output an empty raw …",1,null],[13,"Full","","Same as sync, but reset the dictionary so that the …",1,null],[13,"Finish","","Try to flush everything and end the stream.",1,null],[11,"new","","",1,[[["i32",15]],[["mzerror",4],["result",4]]]],[4,"TDEFLStatus","","Return status codes.",null,null],[13,"BadParam","","",2,null],[13,"PutBufFailed","","",2,null],[13,"Okay","","",2,null],[13,"Done","","",2,null],[3,"CompressorOxide","","Main compression struct.",null,null],[11,"new","","Create a new <code>CompressorOxide</code> with the given flags.",3,[[["u32",15]]]],[11,"adler32","","Get the adler32 checksum of the currently encoded data.",3,[[],["u32",15]]],[11,"prev_return_status","","Get the return status of the previous <code>compress</code> call with …",3,[[],["tdeflstatus",4]]],[11,"flags","","Get the raw compressor flags.",3,[[],["i32",15]]],[11,"data_format","","Returns whether the compressor is wrapping the data in a …",3,[[],["dataformat",4]]],[11,"reset","","Reset the state of the compressor, keeping the same …",3,[[]]],[11,"set_compression_level","","Set the compression level of the compressor.",3,[[["compressionlevel",4]]]],[11,"set_compression_level_raw","","Set the compression level of the compressor using an …",3,[[["u8",15]]]],[11,"set_format_and_level","","Update the compression settings of the compressor.",3,[[["dataformat",4],["u8",15]]]],[3,"CallbackFunc","","Callback function and user used in <code>compress_to_output</code>.",null,null],[12,"put_buf_func","","",4,null],[5,"compress","","Main compression function. Tries to compress as much as …",null,[[["tdeflflush",4],["compressoroxide",3]]]],[5,"compress_to_output","","Main compression function. Callbacks output.",null,[[["tdeflflush",4],["compressoroxide",3]]]],[5,"create_comp_flags_from_zip_params","","Create a set of compression flags using parameters used …",null,[[["i32",15]],["u32",15]]],[0,"stream","miniz_oxide::deflate","Extra streaming compression functionality.",null,null],[5,"deflate","miniz_oxide::deflate::stream","Try to compress from input to output with the given …",null,[[["mzflush",4],["compressoroxide",3]],["streamresult",3]]],[4,"CompressionLevel","miniz_oxide::deflate","How much processing the compressor should do to compress …",null,null],[13,"NoCompression","","Don\'t do any compression, only output uncompressed blocks.",5,null],[13,"BestSpeed","","Fast compression. Uses a special compression routine that …",5,null],[13,"BestCompression","","Slow/high compression. Do a lot of checks to try to find …",5,null],[13,"UberCompression","","Even more checks, can be very slow.",5,null],[13,"DefaultLevel","","Default compromise between speed and compression.",5,null],[13,"DefaultCompression","","Use the default compression level.",5,null],[5,"compress_to_vec","","Compress the input data to a vector, using the specified …",null,[[["u8",15]],[["vec",3],["u8",15]]]],[5,"compress_to_vec_zlib","","Compress the input data to a vector, using the specified …",null,[[["u8",15]],[["vec",3],["u8",15]]]],[0,"inflate","miniz_oxide","This module contains functionality for decompression.",null,null],[0,"core","miniz_oxide::inflate","Streaming decompression functionality.",null,null],[0,"inflate_flags","miniz_oxide::inflate::core","",null,null],[17,"TINFL_FLAG_PARSE_ZLIB_HEADER","miniz_oxide::inflate::core::inflate_flags","Should we try to parse a zlib header?",null,null],[17,"TINFL_FLAG_HAS_MORE_INPUT","","There is more input that hasn\'t been given to the …",null,null],[17,"TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","","The output buffer should not wrap around.",null,null],[17,"TINFL_FLAG_COMPUTE_ADLER32","","Should we calculate the adler32 checksum of the output …",null,null],[17,"TINFL_LZ_DICT_SIZE","miniz_oxide::inflate::core","",null,null],[3,"DecompressorOxide","","Main decompression struct.",null,null],[11,"new","","Create a new tinfl_decompressor with all fields set to 0.",6,[[],["decompressoroxide",3]]],[11,"init","","Set the current state to <code>Start</code>.",6,[[]]],[11,"adler32","","Returns the adler32 checksum of the currently …",6,[[],[["option",4],["u32",15]]]],[5,"decompress","","Main decompression function. Keeps decompressing data …",null,[[["usize",15],["u32",15],["decompressoroxide",3]]]],[0,"stream","miniz_oxide::inflate","Extra streaming decompression functionality.",null,null],[8,"ResetPolicy","miniz_oxide::inflate::stream","Tag that determines reset policy of InflateState",null,null],[10,"reset","","Performs reset",7,[[["inflatestate",3]]]],[3,"MinReset","","Resets state, without performing expensive ops (e.g. …",null,null],[3,"ZeroReset","","Resets state and zero memory, continuing to use the same …",null,null],[3,"FullReset","","Full reset of the state, including zeroing memory.",null,null],[12,"0","","",8,null],[3,"InflateState","","A struct that compbines a decompressor with extra data …",null,null],[11,"new","","Create a new state.",9,[[["dataformat",4]],["inflatestate",3]]],[11,"new_boxed","","Create a new state on the heap.",9,[[["dataformat",4]],[["box",3],["inflatestate",3]]]],[11,"decompressor","","Access the innner decompressor.",9,[[],["decompressoroxide",3]]],[11,"last_status","","Return the status of the last call to <code>inflate</code> with this …",9,[[],["tinflstatus",4]]],[11,"new_boxed_with_window_bits","","Create a new state using miniz/zlib style window bits …",9,[[["i32",15]],[["box",3],["inflatestate",3]]]],[11,"reset","","Reset the decompressor without re-allocating memory, …",9,[[["dataformat",4]]]],[11,"reset_as","","Resets the state according to specified policy.",9,[[["resetpolicy",8]]]],[5,"inflate","","Try to decompress from <code>input</code> to <code>output</code> with the given …",null,[[["mzflush",4],["inflatestate",3]],["streamresult",3]]],[4,"TINFLStatus","miniz_oxide::inflate","Return status codes.",null,null],[13,"FailedCannotMakeProgress","","More input data was expected, but the caller indicated …",10,null],[13,"BadParam","","One or more of the input parameters were invalid.",10,null],[13,"Adler32Mismatch","","The decompression went fine, but the adler32 checksum did …",10,null],[13,"Failed","","Failed to decompress due to invalid data.",10,null],[13,"Done","","Finished decomression without issues.",10,null],[13,"NeedsMoreInput","","The decompressor needs more input data to continue …",10,null],[13,"HasMoreOutput","","There is still pending data that didn\'t fit in the output …",10,null],[11,"from_i32","","",10,[[["i32",15]],[["tinflstatus",4],["option",4]]]],[5,"decompress_to_vec","","Decompress the deflate-encoded data in <code>input</code> to a vector.",null,[[],[["tinflstatus",4],["result",4],["vec",3]]]],[5,"decompress_to_vec_zlib","","Decompress the deflate-encoded data (with a zlib wrapper) …",null,[[],[["tinflstatus",4],["result",4],["vec",3]]]],[5,"decompress_to_vec_with_limit","","Decompress the deflate-encoded data in <code>input</code> to a vector. …",null,[[["usize",15]],[["tinflstatus",4],["result",4],["vec",3]]]],[5,"decompress_to_vec_zlib_with_limit","","Decompress the deflate-encoded data (with a zlib wrapper) …",null,[[["usize",15]],[["tinflstatus",4],["result",4],["vec",3]]]],[4,"MZFlush","miniz_oxide","A list of flush types.",null,null],[13,"None","","Don\'t force any flushing. Used when more input data is …",11,null],[13,"Partial","","Zlib partial flush. Currently treated as <code>Sync</code>.",11,null],[13,"Sync","","Finish compressing the currently buffered data, and …",11,null],[13,"Full","","Same as <code>Sync</code>, but resets the compression dictionary so …",11,null],[13,"Finish","","Attempt to flush the remaining data and end the stream.",11,null],[13,"Block","","Not implemented.",11,null],[11,"new","","Create an MZFlush value from an integer value.",11,[[["i32",15]],[["mzerror",4],["result",4]]]],[4,"MZStatus","","A list of miniz successful status codes.",null,null],[13,"Ok","","",12,null],[13,"StreamEnd","","",12,null],[13,"NeedDict","","",12,null],[4,"MZError","","A list of miniz failed status codes.",null,null],[13,"ErrNo","","",13,null],[13,"Stream","","",13,null],[13,"Data","","",13,null],[13,"Mem","","",13,null],[13,"Buf","","",13,null],[13,"Version","","",13,null],[13,"Param","","",13,null],[4,"DataFormat","","How compressed data is wrapped.",null,null],[13,"Zlib","","Wrapped using the zlib format.",14,null],[13,"Raw","","Raw DEFLATE.",14,null],[6,"MZResult","","<code>Result</code> alias for all miniz status codes both successful …",null,null],[3,"StreamResult","","A structure containg the result of a call to the inflate …",null,null],[12,"bytes_consumed","","The number of bytes consumed from the input slice.",15,null],[12,"bytes_written","","The number of bytes written to the output slice.",15,null],[12,"status","","The return status of the call.",15,null],[11,"from","miniz_oxide::deflate::core","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","miniz_oxide::deflate","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","miniz_oxide::inflate::core","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","miniz_oxide::inflate::stream","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","miniz_oxide::inflate","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","miniz_oxide","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"reset","miniz_oxide::inflate::stream","",16,[[["inflatestate",3]]]],[11,"reset","","",17,[[["inflatestate",3]]]],[11,"reset","","",8,[[["inflatestate",3]]]],[11,"from","miniz_oxide::deflate::core","",1,[[["mzflush",4]]]],[11,"from","miniz_oxide","",18,[[["streamresult",3]]]],[11,"from","","",18,[[["streamresult",3]]]],[11,"fmt","miniz_oxide::deflate::core","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide::deflate","",5,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide::inflate","",10,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"eq","miniz_oxide::deflate::core","",0,[[["compressionstrategy",4]],["bool",15]]],[11,"eq","","",1,[[["tdeflflush",4]],["bool",15]]],[11,"eq","","",2,[[["tdeflstatus",4]],["bool",15]]],[11,"eq","miniz_oxide::deflate","",5,[[["compressionlevel",4]],["bool",15]]],[11,"eq","miniz_oxide::inflate","",10,[[["tinflstatus",4]],["bool",15]]],[11,"eq","miniz_oxide","",11,[[["mzflush",4]],["bool",15]]],[11,"eq","","",12,[[["mzstatus",4]],["bool",15]]],[11,"eq","","",13,[[["mzerror",4]],["bool",15]]],[11,"eq","","",14,[[["dataformat",4]],["bool",15]]],[11,"eq","","",15,[[["streamresult",3]],["bool",15]]],[11,"ne","","",15,[[["streamresult",3]],["bool",15]]],[11,"hash","miniz_oxide::deflate::core","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","miniz_oxide::deflate","",5,[[]]],[11,"hash","miniz_oxide::inflate","",10,[[]]],[11,"hash","miniz_oxide","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"clone","miniz_oxide::deflate::core","",0,[[],["compressionstrategy",4]]],[11,"clone","","",1,[[],["tdeflflush",4]]],[11,"clone","","",2,[[],["tdeflstatus",4]]],[11,"clone","miniz_oxide::deflate","",5,[[],["compressionlevel",4]]],[11,"clone","miniz_oxide::inflate","",10,[[],["tinflstatus",4]]],[11,"clone","miniz_oxide","",11,[[],["mzflush",4]]],[11,"clone","","",12,[[],["mzstatus",4]]],[11,"clone","","",13,[[],["mzerror",4]]],[11,"clone","","",14,[[],["dataformat",4]]],[11,"clone","","",15,[[],["streamresult",3]]],[11,"default","miniz_oxide::deflate::core","Initialize the compressor with a level of 4, zlib wrapper …",3,[[]]],[11,"default","miniz_oxide::inflate::core","Create a new tinfl_decompressor with all fields set to 0.",6,[[]]],[11,"default","miniz_oxide::inflate::stream","",9,[[]]]],"p":[[4,"CompressionStrategy"],[4,"TDEFLFlush"],[4,"TDEFLStatus"],[3,"CompressorOxide"],[3,"CallbackFunc"],[4,"CompressionLevel"],[3,"DecompressorOxide"],[8,"ResetPolicy"],[3,"FullReset"],[3,"InflateState"],[4,"TINFLStatus"],[4,"MZFlush"],[4,"MZStatus"],[4,"MZError"],[4,"DataFormat"],[3,"StreamResult"],[3,"MinReset"],[3,"ZeroReset"],[6,"MZResult"]]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs …","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current …",null,[[],["usize",15]]],[5,"get_physical","","Returns the number of physical cores of the current …",null,[[],["usize",15]]]],"p":[]},\
"num_integer":{"doc":"Integer trait and functions.","i":[[8,"Roots","num_integer","Provides methods to compute an integer\'s square root, …",null,null],[10,"nth_root","","Returns the truncated principal <code>n</code>th root of an integer -- …",0,[[["u32",15]]]],[11,"sqrt","","Returns the truncated principal square root of an integer …",0,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots",8]],["roots",8]]],[5,"nth_root","","Returns the truncated principal <code>n</code>th root of an integer -- …",null,[[["roots",8],["u32",15]],["roots",8]]],[5,"sqrt","","Returns the truncated principal square root of an integer …",null,[[["roots",8]],["roots",8]]],[8,"Average","","Provides methods to compute the average of two integers, …",null,null],[10,"average_ceil","","Returns the ceiling value of the average of <code>self</code> and <code>other</code>…",1,[[]]],[10,"average_floor","","Returns the floor value of the average of <code>self</code> and <code>other</code>. …",1,[[]]],[5,"average_ceil","","Returns the ceiling value of the average of <code>x</code> and <code>y</code> -- …",null,[[["average",8]],["average",8]]],[5,"average_floor","","Returns the floor value of the average of <code>x</code> and <code>y</code> -- see …",null,[[["average",8]],["average",8]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",2,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",2,[[]]],[11,"div_ceil","","Ceiled integer division.",2,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",2,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",2,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple …",2,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",2,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and …",2,[[]]],[10,"divides","","Deprecated, use <code>is_multiple_of</code> instead.",2,[[],["bool",15]]],[10,"is_multiple_of","","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.",2,[[],["bool",15]]],[10,"is_even","","Returns <code>true</code> if the number is even.",2,[[],["bool",15]]],[10,"is_odd","","Returns <code>true</code> if the number is odd.",2,[[],["bool",15]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. …",2,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. …",2,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[]]],[3,"ExtendedGcd","","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",3,null],[12,"x","","",3,null],[12,"y","","",3,null],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer",8]]]],[5,"div_floor","","Floored integer division",null,[[["integer",8]],["integer",8]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer",8]],["integer",8]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer",8]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer",8]],["integer",8]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the …",null,[[["integer",8]],["integer",8]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number …",null,[[["integer",8]],["integer",8]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest …",null,[[["integer",8]]]],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[11,"new","","For a given n, iterate over all binomial coefficients …",4,[[],["iterbinomial",3]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["integer",8],["clone",8]],[["integer",8],["clone",8]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["integer",8],["clone",8]]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"into_iter","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"eq","","",3,[[["extendedgcd",3]],["bool",15]]],[11,"ne","","",3,[[["extendedgcd",3]],["bool",15]]],[11,"next","","",4,[[],["option",4]]],[11,"clone","","",3,[[],["extendedgcd",3]]],[11,"sqrt","","Returns the truncated principal square root of an integer …",0,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[]]]],"p":[[8,"Roots"],[8,"Average"],[8,"Integer"],[3,"ExtendedGcd"],[3,"IterBinomial"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[5,"range","","Returns an iterator over the given range [start, stop) …",null,[[],["range",3]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[3,"RangeStep","","An iterator over the range [start, stop) by <code>step</code>. It …",null,null],[5,"range_step","","Return an iterator over the range [start, stop) by <code>step</code>. …",null,[[],["rangestep",3]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by <code>step</code>. It …",null,null],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by <code>step</code>. …",null,[[],["rangestepinclusive",3]]],[3,"RangeFrom","","An iterator over the infinite range starting at <code>start</code>",null,null],[5,"range_from","","Return an iterator over the infinite range starting at …",null,[[],["rangefrom",3]]],[3,"RangeStepFrom","","An iterator over the infinite range starting at <code>start</code> by …",null,null],[5,"range_step_from","","Return an iterator over the infinite range starting at …",null,[[],["rangestepfrom",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"into_iter","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"into_iter","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"into_iter","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"into_iter","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"clone","","",0,[[],["range",3]]],[11,"clone","","",1,[[],["rangeinclusive",3]]],[11,"clone","","",2,[[],["rangestep",3]]],[11,"clone","","",3,[[],["rangestepinclusive",3]]],[11,"clone","","",4,[[],["rangefrom",3]]],[11,"clone","","",5,[[],["rangestepfrom",3]]]],"p":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"]]},\
"num_rational":{"doc":"Rational numbers","i":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",null,null],[6,"Rational","","Alias for a <code>Ratio</code> of machine-sized integers.",null,null],[6,"Rational32","","Alias for a <code>Ratio</code> of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a <code>Ratio</code> of 64-bit-sized integers.",null,null],[11,"new_raw","","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …",0,[[],["ratio",3]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[]]],[11,"new","","Creates a new <code>Ratio</code>.",0,[[],["ratio",3]]],[11,"from_integer","","Creates a <code>Ratio</code> representing the integer <code>t</code>.",0,[[],["ratio",3]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[]]],[11,"is_integer","","Returns true if the rational number is an integer …",0,[[],["bool",15]]],[11,"reduced","","Returns a reduced copy of self.",0,[[],["ratio",3]]],[11,"recip","","Returns the reciprocal.",0,[[],["ratio",3]]],[11,"floor","","Rounds towards minus infinity.",0,[[],["ratio",3]]],[11,"ceil","","Rounds towards plus infinity.",0,[[],["ratio",3]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away …",0,[[],["ratio",3]]],[11,"trunc","","Rounds towards zero.",0,[[],["ratio",3]]],[11,"fract","","Returns the fractional part of a number, with division …",0,[[],["ratio",3]]],[11,"pow","","Raises the <code>Ratio</code> to the power of an exponent.",0,[[["i32",15]],["ratio",3]]],[3,"ParseRatioError","","",null,null],[11,"approximate_float","","",0,[[["numcast",8],["floatcore",8]],[["option",4],["ratio",3]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"eq","","",0,[[],["bool",15]]],[11,"eq","","",1,[[["parseratioerror",3]],["bool",15]]],[11,"ne","","",1,[[["parseratioerror",3]],["bool",15]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"neg","","",0,[[],["ratio",3]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"from_str","","Parses <code>numer/denom</code> or just <code>numer</code>.",0,[[["str",15]],[["ratio",3],["parseratioerror",3],["result",4]]]],[11,"into","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"sum","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"product","","",0,[[]]],[11,"product","","",0,[[]]],[11,"clone","","",0,[[],["ratio",3]]],[11,"clone","","",1,[[],["parseratioerror",3]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_str_radix","","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.",0,[[["u32",15],["str",15]],[["ratio",3],["parseratioerror",3],["result",4]]]],[11,"zero","","",0,[[],["ratio",3]]],[11,"is_zero","","",0,[[],["bool",15]]],[11,"set_zero","","",0,[[]]],[11,"one","","",0,[[],["ratio",3]]],[11,"is_one","","",0,[[],["bool",15]]],[11,"set_one","","",0,[[]]],[11,"checked_add","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_sub","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_mul","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_div","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"inv","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[["u8",15]],["ratio",3]]],[11,"pow","","",0,[[["u8",15]],["ratio",3]]],[11,"pow","","",0,[[["u16",15]],["ratio",3]]],[11,"pow","","",0,[[["u16",15]],["ratio",3]]],[11,"pow","","",0,[[["u32",15]],["ratio",3]]],[11,"pow","","",0,[[["u32",15]],["ratio",3]]],[11,"pow","","",0,[[["u64",15]],["ratio",3]]],[11,"pow","","",0,[[["u64",15]],["ratio",3]]],[11,"pow","","",0,[[["u128",15]],["ratio",3]]],[11,"pow","","",0,[[["u128",15]],["ratio",3]]],[11,"pow","","",0,[[["usize",15]],["ratio",3]]],[11,"pow","","",0,[[["usize",15]],["ratio",3]]],[11,"pow","","",0,[[["i8",15]],["ratio",3]]],[11,"pow","","",0,[[["i8",15]],["ratio",3]]],[11,"pow","","",0,[[["i16",15]],["ratio",3]]],[11,"pow","","",0,[[["i16",15]],["ratio",3]]],[11,"pow","","",0,[[["i32",15]],["ratio",3]]],[11,"pow","","",0,[[["i32",15]],["ratio",3]]],[11,"pow","","",0,[[["i64",15]],["ratio",3]]],[11,"pow","","",0,[[["i64",15]],["ratio",3]]],[11,"pow","","",0,[[["i128",15]],["ratio",3]]],[11,"pow","","",0,[[["i128",15]],["ratio",3]]],[11,"pow","","",0,[[["isize",15]],["ratio",3]]],[11,"pow","","",0,[[["isize",15]],["ratio",3]]],[11,"abs","","",0,[[],["ratio",3]]],[11,"abs_sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"signum","","",0,[[],["ratio",3]]],[11,"is_positive","","",0,[[],["bool",15]]],[11,"is_negative","","",0,[[],["bool",15]]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",0,[[]]],[10,"max_value","","returns the largest finite number this type can represent",0,[[]]],[0,"cast","num_traits","",null,null],[8,"ToPrimitive","num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",1,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",1,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",1,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",1,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",1,[[],[["i64",15],["option",4]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",1,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",1,[[],[["option",4],["usize",15]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",1,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",1,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",1,[[],[["option",4],["u32",15]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",1,[[],[["u64",15],["option",4]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",1,[[],[["u128",15],["option",4]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",1,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",1,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",2,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",2,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",2,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",2,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",2,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",2,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",2,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",2,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",2,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",2,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",2,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",2,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",2,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",2,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[["numcast",8]],[["numcast",8],["option",4]]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",3,[[["toprimitive",8]],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",4,[[]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",5,[[]]],[10,"neg_infinity","","Returns negative infinity.",5,[[]]],[10,"nan","","Returns NaN.",5,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",5,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",5,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",5,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",5,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",5,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",5,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",5,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",5,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",5,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",5,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",5,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",5,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",5,[[]]],[11,"trunc","","Return the integer part of a number.",5,[[]]],[11,"fract","","Returns the fractional part of a number.",5,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",5,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",5,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",5,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",5,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",5,[[]]],[11,"max","","Returns the maximum of the two numbers.",5,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",5,[[]]],[11,"powi","","Raise a number to an integer power.",5,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",5,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",5,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",5,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",6,[[]]],[10,"infinity","","Returns the infinite value.",6,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",6,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",6,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",6,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",6,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",6,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",6,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",6,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",6,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",6,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",6,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",6,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",6,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",6,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",6,[[]]],[10,"trunc","","Return the integer part of a number.",6,[[]]],[10,"fract","","Returns the fractional part of a number.",6,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",6,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",6,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",6,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",6,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",6,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",6,[[]]],[10,"powi","","Raise a number to an integer power.",6,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",6,[[]]],[10,"sqrt","","Take the square root of a number.",6,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",6,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",6,[[]]],[10,"ln","","Returns the natural logarithm of the number.",6,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",6,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",6,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",6,[[]]],[11,"to_degrees","","Converts radians to degrees.",6,[[]]],[11,"to_radians","","Converts degrees to radians.",6,[[]]],[10,"max","","Returns the maximum of the two numbers.",6,[[]]],[10,"min","","Returns the minimum of the two numbers.",6,[[]]],[10,"abs_sub","","The positive difference of two numbers.",6,[[]]],[10,"cbrt","","Take the cubic root of a number.",6,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",6,[[]]],[10,"sin","","Computes the sine of a number (in radians).",6,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",6,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",6,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",6,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",6,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",6,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",6,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",6,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",6,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",6,[[]]],[10,"sinh","","Hyperbolic sine function.",6,[[]]],[10,"cosh","","Hyperbolic cosine function.",6,[[]]],[10,"tanh","","Hyperbolic tangent function.",6,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",6,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",6,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",6,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",6,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",7,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",7,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",7,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",7,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",7,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",7,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",7,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",7,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",7,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",7,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",7,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",7,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",7,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",7,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",7,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",7,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",7,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",7,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",7,[[]]],[0,"identities","num_traits","",null,null],[8,"Zero","num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",8,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",8,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",8,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",9,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",9,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",9,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[],["zero",8]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[],["one",8]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",10,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",10,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",10,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",10,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",10,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",10,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",10,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",10,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",10,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",10,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",10,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",10,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",10,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",10,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",10,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",10,[[["u32",15]]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",11,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",12,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",13,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",14,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",15,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",16,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",17,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",18,[[["u32",15]],["option",4]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",19,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",19,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",20,null],[10,"mul_add","","Performs the fused multiply-add operation.",20,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",21,[[]]],[0,"overflowing","num_traits::ops","",null,null],[8,"OverflowingAdd","num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",22,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",23,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",24,[[]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",25,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",25,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",26,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",27,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",28,[[]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",29,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",30,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",31,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",32,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",33,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",34,[[["u32",15]]]],[0,"pow","num_traits","",null,null],[8,"Pow","num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",35,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",35,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["mul",8],["usize",15],["one",8],["clone",8]],[["mul",8],["one",8],["clone",8]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15],["checkedmul",8],["one",8],["clone",8]],[["checkedmul",8],["one",8],["clone",8],["option",4]]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",36,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",36,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",36,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",36,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",36,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",36,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",36,[[]]],[10,"trunc","","Return the integer part of a number.",36,[[]]],[10,"fract","","Returns the fractional part of a number.",36,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",36,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",36,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",36,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",36,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",36,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",36,[[]]],[10,"powi","","Raise a number to an integer power.",36,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",36,[[]]],[10,"sqrt","","Take the square root of a number.",36,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",36,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",36,[[]]],[10,"ln","","Returns the natural logarithm of the number.",36,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",36,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",36,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",36,[[]]],[10,"to_degrees","","Converts radians to degrees.",36,[[]]],[10,"to_radians","","Converts degrees to radians.",36,[[]]],[10,"max","","Returns the maximum of the two numbers.",36,[[]]],[10,"min","","Returns the minimum of the two numbers.",36,[[]]],[10,"abs_sub","","The positive difference of two numbers.",36,[[]]],[10,"cbrt","","Take the cubic root of a number.",36,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",36,[[]]],[10,"sin","","Computes the sine of a number (in radians).",36,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",36,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",36,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",36,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",36,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",36,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",36,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",36,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",36,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",36,[[]]],[10,"sinh","","Hyperbolic sine function.",36,[[]]],[10,"cosh","","Hyperbolic cosine function.",36,[[]]],[10,"tanh","","Hyperbolic tangent function.",36,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",36,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",36,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",36,[[]]],[0,"sign","num_traits","",null,null],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",37,[[]]],[10,"abs_sub","","The positive difference of two numbers.",37,[[]]],[10,"signum","","Returns the sign of the number.",37,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",37,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",37,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[["signed",8]],["signed",8]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed",8]],["signed",8]]],[5,"signum","","Returns the sign of the number.",null,[[["signed",8]],["signed",8]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",38,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",38,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",39,null],[13,"Invalid","","",39,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",40,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord",8]],["partialord",8]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_string","","",40,[[],["string",3]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]]],"p":[[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"]]},\
"objc":{"doc":"Objective-C Runtime bindings and wrapper for Rust.","i":[[0,"runtime","objc","A Rust interface for the functionality of the Objective-C …",null,null],[5,"sel_registerName","objc::runtime","",null,null],[5,"sel_getName","","",null,null],[5,"class_getName","","",null,null],[5,"class_getSuperclass","","",null,null],[5,"class_getInstanceSize","","",null,null],[5,"class_getInstanceMethod","","",null,null],[5,"class_getInstanceVariable","","",null,null],[5,"class_copyMethodList","","",null,null],[5,"class_copyIvarList","","",null,null],[5,"class_addMethod","","",null,null],[5,"class_addIvar","","",null,null],[5,"class_addProtocol","","",null,null],[5,"class_conformsToProtocol","","",null,null],[5,"class_copyProtocolList","","",null,null],[5,"objc_allocateClassPair","","",null,null],[5,"objc_disposeClassPair","","",null,null],[5,"objc_registerClassPair","","",null,null],[5,"class_createInstance","","",null,null],[5,"object_dispose","","",null,null],[5,"object_getClass","","",null,null],[5,"objc_getClassList","","",null,null],[5,"objc_copyClassList","","",null,null],[5,"objc_getClass","","",null,null],[5,"objc_getProtocol","","",null,null],[5,"objc_copyProtocolList","","",null,null],[5,"objc_allocateProtocol","","",null,null],[5,"objc_registerProtocol","","",null,null],[5,"objc_autoreleasePoolPush","","",null,null],[5,"objc_autoreleasePoolPop","","",null,null],[5,"protocol_addMethodDescription","","",null,null],[5,"protocol_addProtocol","","",null,null],[5,"protocol_getName","","",null,null],[5,"protocol_isEqual","","",null,null],[5,"protocol_copyProtocolList","","",null,null],[5,"protocol_conformsToProtocol","","",null,null],[5,"ivar_getName","","",null,null],[5,"ivar_getOffset","","",null,null],[5,"ivar_getTypeEncoding","","",null,null],[5,"method_getName","","",null,null],[5,"method_getImplementation","","",null,null],[5,"method_copyReturnType","","",null,null],[5,"method_copyArgumentType","","",null,null],[5,"method_getNumberOfArguments","","",null,null],[5,"method_setImplementation","","",null,null],[5,"method_exchangeImplementations","","",null,null],[5,"objc_retain","","",null,null],[5,"objc_release","","",null,null],[5,"objc_autorelease","","",null,null],[5,"objc_loadWeakRetained","","",null,null],[5,"objc_initWeak","","",null,null],[5,"objc_destroyWeak","","",null,null],[5,"objc_copyWeak","","",null,null],[6,"BOOL","","The Objective-C <code>BOOL</code> type.",null,null],[17,"YES","","The equivalent of true for Objective-C\'s <code>BOOL</code> type.",null,null],[17,"NO","","The equivalent of false for Objective-C\'s <code>BOOL</code> type.",null,null],[3,"Sel","","A type that represents a method selector.",null,null],[3,"Ivar","","A type that represents an instance variable.",null,null],[3,"Method","","A type that represents a method in a class definition.",null,null],[3,"Class","","A type that represents an Objective-C class.",null,null],[3,"Protocol","","A type that represents an Objective-C protocol.",null,null],[3,"Object","","A type that represents an instance of a class.",null,null],[6,"Imp","","A pointer to the start of a method implementation.",null,null],[11,"register","","Registers a method with the Objective-C runtime system, …",0,[[["str",15]],["sel",3]]],[11,"name","","Returns the name of the method specified by self.",0,[[],["str",15]]],[11,"from_ptr","","Wraps a raw pointer to a selector into a <code>Sel</code> object.",0,[[],["sel",3]]],[11,"as_ptr","","Returns a pointer to the raw selector.",0,[[]]],[11,"name","","Returns the name of self.",1,[[],["str",15]]],[11,"offset","","Returns the offset of self.",1,[[],["isize",15]]],[11,"type_encoding","","Returns the <code>Encoding</code> of self.",1,[[],["encoding",3]]],[11,"name","","Returns the name of self.",2,[[],["sel",3]]],[11,"return_type","","Returns the <code>Encoding</code> of self\'s return type.",2,[[],["encoding",3]]],[11,"argument_type","","Returns the <code>Encoding</code> of a single parameter type of self, …",2,[[["usize",15]],[["option",4],["encoding",3]]]],[11,"arguments_count","","Returns the number of arguments accepted by self.",2,[[],["usize",15]]],[11,"implementation","","Returns the implementation of self.",2,[[],["imp",6]]],[11,"get","","Returns the class definition of a specified class, or <code>None</code>…",3,[[["str",15]],[["option",4],["class",3]]]],[11,"classes","","Obtains the list of registered class definitions.",3,[[],[["mallocbuffer",3],["class",3]]]],[11,"classes_count","","Returns the total number of registered classes.",3,[[],["usize",15]]],[11,"name","","Returns the name of self.",3,[[],["str",15]]],[11,"superclass","","Returns the superclass of self, or <code>None</code> if self is a root …",3,[[],[["class",3],["option",4]]]],[11,"metaclass","","Returns the metaclass of self.",3,[[],["class",3]]],[11,"instance_size","","Returns the size of instances of self.",3,[[],["usize",15]]],[11,"instance_method","","Returns a specified instance method for self, or <code>None</code> if …",3,[[["sel",3]],[["option",4],["method",3]]]],[11,"instance_variable","","Returns the ivar for a specified instance variable of …",3,[[["str",15]],[["ivar",3],["option",4]]]],[11,"instance_methods","","Describes the instance methods implemented by self.",3,[[],[["mallocbuffer",3],["method",3]]]],[11,"conforms_to","","Checks whether this class conforms to the specified …",3,[[["protocol",3]],["bool",15]]],[11,"adopted_protocols","","Get a list of the protocols to which this class conforms.",3,[[],[["mallocbuffer",3],["protocol",3]]]],[11,"instance_variables","","Describes the instance variables declared by self.",3,[[],[["mallocbuffer",3],["ivar",3]]]],[11,"get","","Returns the protocol definition of a specified protocol, …",4,[[["str",15]],[["protocol",3],["option",4]]]],[11,"protocols","","Obtains the list of registered protocol definitions.",4,[[],[["protocol",3],["mallocbuffer",3]]]],[11,"adopted_protocols","","Get a list of the protocols to which this protocol …",4,[[],[["mallocbuffer",3],["protocol",3]]]],[11,"conforms_to","","Checks whether this protocol conforms to the specified …",4,[[["protocol",3]],["bool",15]]],[11,"name","","Returns the name of self.",4,[[],["str",15]]],[11,"class","","Returns the class of self.",5,[[],["class",3]]],[11,"get_ivar","","Returns a reference to the ivar of self with the given …",5,[[["str",15]]]],[11,"get_mut_ivar","","Returns a mutable reference to the ivar of self with the …",5,[[["str",15]]]],[11,"set_ivar","","Sets the value of the ivar of self with the given name. …",5,[[["str",15]]]],[0,"declare","objc","Functionality for declaring Objective-C classes.",null,null],[8,"MethodImplementation","objc::declare","Types that can be used as the implementation of an …",null,null],[16,"Callee","","The callee type of the method.",6,null],[16,"Ret","","The return type of the method.",6,null],[16,"Args","","The argument types of the method.",6,null],[10,"imp","","Returns self as an <code>Imp</code> of a method.",6,[[],["imp",6]]],[3,"ClassDecl","","A type for declaring a new class and adding new methods …",null,null],[11,"new","","Constructs a <code>ClassDecl</code> with the given name and superclass.…",7,[[["class",3],["str",15]],[["classdecl",3],["option",4]]]],[11,"root","","Constructs a <code>ClassDecl</code> declaring a new root class with …",7,[[["str",15]],[["classdecl",3],["option",4]]]],[11,"add_method","","Adds a method with the given name and implementation to …",7,[[["sel",3]]]],[11,"add_class_method","","Adds a class method with the given name and …",7,[[["sel",3]]]],[11,"add_ivar","","Adds an ivar with type <code>T</code> and the provided name to self. …",7,[[["str",15]]]],[11,"add_protocol","","Adds a protocol to self. Panics if the protocol wasn\'t …",7,[[["protocol",3]]]],[11,"register","","Registers self, consuming it and returning a reference to …",7,[[],["class",3]]],[3,"ProtocolDecl","","A type for declaring a new protocol and adding new …",null,null],[11,"new","","Constructs a <code>ProtocolDecl</code> with the given name. Returns …",8,[[["str",15]],[["option",4],["protocoldecl",3]]]],[11,"add_method_description","","Adds an instance method declaration with a given …",8,[[["bool",15],["sel",3]]]],[11,"add_class_method_description","","Adds a class method declaration with a given description …",8,[[["bool",15],["sel",3]]]],[11,"add_protocol","","Adds a requirement on another protocol.",8,[[["protocol",3]]]],[11,"register","","Registers self, consuming it and returning a reference to …",8,[[],["protocol",3]]],[0,"rc","objc","Utilities for reference counting Objective-C objects.",null,null],[3,"StrongPtr","objc::rc","A pointer that strongly references an object, ensuring it …",null,null],[3,"WeakPtr","","A pointer that weakly references an object, allowing to …",null,null],[5,"autoreleasepool","","Execute <code>f</code> in the context of a new autorelease pool. The …",null,[[["fnonce",8]]]],[8,"Encode","objc","Types that have an Objective-C type encoding.",null,null],[10,"encode","","Returns the Objective-C type encoding for Self.",9,[[],["encoding",3]]],[8,"EncodeArguments","","Types that represent a group of arguments, where each has …",null,null],[16,"Encs","","The type as which the encodings for Self will be returned.",10,null],[10,"encodings","","Returns the Objective-C type encodings for Self.",10,[[]]],[3,"Encoding","","An Objective-C type encoding.",null,null],[8,"Message","","Types that may be sent Objective-C messages. For example: …",null,null],[11,"send_message","","Sends a message to self with the given selector and …",11,[[["sel",3]],[["result",4],["messageerror",3]]]],[11,"verify_message","","Verifies that the argument and return types match the …",11,[[["sel",3]],[["messageerror",3],["result",4]]]],[8,"MessageArguments","","Types that may be used as the arguments of an Objective-C …",null,null],[10,"invoke","","Invoke an <code>Imp</code> with the given object, selector, and …",12,[[["imp",6],["sel",3]]]],[3,"MessageError","","An error encountered while attempting to send a message.",null,null],[14,"class","","Gets a reference to a <code>Class</code>.",null,null],[14,"sel","","Registers a selector, returning a <code>Sel</code>.",null,null],[14,"msg_send","","Sends a message to an object.",null,null],[11,"from","objc::runtime","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","objc::declare","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","objc::rc","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","objc","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"encode","objc::runtime","",0,[[],["encoding",3]]],[11,"drop","objc::declare","",7,[[]]],[11,"drop","objc::rc","",13,[[]]],[11,"drop","","",14,[[]]],[11,"clone","objc::runtime","",0,[[],["sel",3]]],[11,"clone","objc::rc","",13,[[],["strongptr",3]]],[11,"clone","","",14,[[]]],[11,"clone","objc","",15,[[],["encoding",3]]],[11,"eq","objc::runtime","",0,[[["sel",3]],["bool",15]]],[11,"eq","","",3,[[["class",3]],["bool",15]]],[11,"eq","","",4,[[["protocol",3]],["bool",15]]],[11,"eq","objc","",15,[[["encoding",3]],["bool",15]]],[11,"deref","objc::rc","",13,[[]]],[11,"fmt","objc::runtime","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","objc","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","objc::rc","",13,[[["formatter",3]],["result",6]]],[11,"description","objc","",16,[[],["str",15]]],[11,"new","objc::rc","Constructs a <code>StrongPtr</code> to a newly created object that …",13,[[]]],[11,"retain","","Retains the given object and constructs a <code>StrongPtr</code> to it.…",13,[[]]],[11,"autorelease","","Autoreleases self, meaning that the object is not …",13,[[]]],[11,"weak","","Returns a <code>WeakPtr</code> to self.",13,[[],["weakptr",3]]],[11,"new","","Constructs a <code>WeakPtr</code> to the given object. Unsafe because …",14,[[]]],[11,"load","","Loads the object self points to, returning a <code>StrongPtr</code>. …",14,[[],["strongptr",3]]],[11,"from_str","objc","Constructs an <code>Encoding</code> from its string representation. …",15,[[["str",15]],["encoding",3]]],[11,"as_str","","Returns self as a <code>str</code>.",15,[[],["str",15]]],[11,"send_message","","Sends a message to self with the given selector and …",11,[[["sel",3]],[["result",4],["messageerror",3]]]],[11,"verify_message","","Verifies that the argument and return types match the …",11,[[["sel",3]],[["messageerror",3],["result",4]]]]],"p":[[3,"Sel"],[3,"Ivar"],[3,"Method"],[3,"Class"],[3,"Protocol"],[3,"Object"],[8,"MethodImplementation"],[3,"ClassDecl"],[3,"ProtocolDecl"],[8,"Encode"],[8,"EncodeArguments"],[8,"Message"],[8,"MessageArguments"],[3,"StrongPtr"],[3,"WeakPtr"],[3,"Encoding"],[3,"MessageError"]]},\
"opengl_graphics":{"doc":"An OpenGL back-end for Rust-Graphics","i":[[0,"shader_utils","opengl_graphics","Helper functions for dealing with shaders.",null,null],[3,"DynamicAttribute","opengl_graphics::shader_utils","Describes a shader attribute.",null,null],[11,"xyz","","Create XYZ vertex attribute.",0,[[["gluint",6],["str",15]],[["dynamicattribute",3],["string",3],["result",4]]]],[11,"xy","","Create XY vertex attribute.",0,[[["gluint",6],["str",15]],[["dynamicattribute",3],["string",3],["result",4]]]],[11,"rgb","","Create RGB color attribute.",0,[[["gluint",6],["str",15]],[["dynamicattribute",3],["string",3],["result",4]]]],[11,"rgba","","Create RGBA color attribute.",0,[[["gluint",6],["str",15]],[["dynamicattribute",3],["string",3],["result",4]]]],[11,"uv","","Create texture coordinate attribute.",0,[[["gluint",6],["str",15]],[["dynamicattribute",3],["string",3],["result",4]]]],[11,"set","","Sets attribute data.",0,[[]]],[5,"compile_shader","","Compiles a shader.",null,[[["glenum",6],["str",15]],[["string",3],["result",4],["gluint",6]]]],[5,"attribute_location","","Finds attribute location from a program.",null,[[["gluint",6],["str",15]],[["string",3],["result",4],["gluint",6]]]],[5,"uniform_location","","Finds uniform location from a program.",null,[[["gluint",6],["str",15]],[["string",3],["result",4],["gluint",6]]]],[0,"error","opengl_graphics","Errors",null,null],[4,"Error","opengl_graphics::error","An enum to represent various possible run-time errors …",null,null],[13,"IoError","","An error happened with I/O.",1,null],[0,"shader_uniforms","opengl_graphics","Types and methods for setting shader uniforms",null,null],[3,"ShaderUniform","opengl_graphics::shader_uniforms","Describes a shader uniform of a given type.",null,null],[8,"UniformType","","Shader uniform type",null,null],[3,"SUFloat","","Shader uniform float",null,null],[3,"SUInt","","Shader uniform integer",null,null],[3,"SUVec2","","Shader uniform vector of size 2 Vector elements are floats",null,null],[3,"SUVec3","","Shader uniform vector of size 3 Vector elements are floats",null,null],[3,"SUVec4","","Shader uniform vector of size 4 Vector elements are floats",null,null],[3,"SUMat2x2","","Shader uniform 2x2 matrix Matrix elements are floats",null,null],[3,"SUMat3x3","","Shader uniform 3x3 matrix Matrix elements are floats",null,null],[3,"SUMat4x4","","Shader uniform 4x4 matrix Matrix elements are floats",null,null],[11,"set","","Set the value of the float uniform.",2,[[["glgraphics",3],["f32",15]]]],[11,"set","","Set the value of the integer uniform.",2,[[["glgraphics",3],["i32",15]]]],[11,"set","","Set the value of the vector 2 uniform.",2,[[["glgraphics",3]]]],[11,"set","","Set the value of the vector 3 uniform.",2,[[["glgraphics",3]]]],[11,"set","","Set the value of the vector 4 uniform.",2,[[["glgraphics",3]]]],[11,"set","","Set the value of the 2x2 matrix uniform.",2,[[["glgraphics",3]]]],[11,"set","","Set the value of the 3x3 matrix uniform.",2,[[["glgraphics",3]]]],[11,"set","","Set the value of the 4x4 matrix uniform.",2,[[["glgraphics",3]]]],[4,"OpenGL","opengl_graphics","",null,null],[13,"V2_0","","",3,null],[13,"V2_1","","",3,null],[13,"V3_0","","",3,null],[13,"V3_1","","",3,null],[13,"V3_2","","",3,null],[13,"V3_3","","",3,null],[13,"V4_0","","",3,null],[13,"V4_1","","",3,null],[13,"V4_2","","",3,null],[13,"V4_3","","",3,null],[13,"V4_4","","",3,null],[13,"V4_5","","",3,null],[3,"Shaders","","Shader picker.",null,null],[4,"GLSL","","For OpenGL version 3.3 and above, the GLSL version is the …",null,null],[13,"V1_10","","",4,null],[13,"V1_20","","",4,null],[13,"V1_30","","",4,null],[13,"V1_40","","",4,null],[13,"V1_50","","",4,null],[13,"V3_30","","",4,null],[13,"V4_00","","",4,null],[13,"V4_10","","",4,null],[13,"V4_20","","",4,null],[13,"V4_30","","",4,null],[13,"V4_40","","",4,null],[13,"V4_50","","",4,null],[3,"Colored","","Describes how to render colored objects.",null,null],[3,"Textured","","Describes how to render textured objects.",null,null],[3,"GlGraphics","","Contains OpenGL data.",null,null],[3,"Texture","","Wraps OpenGL texture data. The texture gets deleted when …",null,null],[0,"ops","","Image operations for textures.",null,null],[5,"flip_vertical","opengl_graphics::ops","Flips the image vertically.",null,[[["u8",15]],[["u8",15],["global",3],["vec",3]]]],[5,"alpha_to_rgba8","","Converts from alpha to rgba8.",null,[[],[["u8",15],["global",3],["vec",3]]]],[8,"ImageSize","opengl_graphics","Implemented by all images to be used with generic …",null,null],[10,"get_size","","Get the image size.",5,[[]]],[11,"get_width","","Gets the image width.",5,[[],["u32",15]]],[11,"get_height","","Gets the image height.",5,[[],["u32",15]]],[3,"TextureSettings","","Texture creation parameters.",null,null],[4,"Format","","Texture format.",null,null],[13,"Rgba8","","<code>(red, green, blue, alpha)</code> with values 0-255.",6,null],[8,"TextureOp","","Implemented by texture operations.",null,null],[16,"Error","","The error when performing an operation.",7,null],[8,"CreateTexture","","Implemented by textures for creation.",null,null],[10,"create","","Create texture from memory.",8,[[["texturesettings",3],["format",4]],["result",4]]],[8,"UpdateTexture","","Implemented by textures for updating.",null,null],[10,"update","","Update the texture.",9,[[["format",4]],["result",4]]],[4,"Filter","","Sampling filter",null,null],[13,"Linear","","A Weighted Linear Blend",10,null],[13,"Nearest","","Nearest Texel",10,null],[4,"Wrap","","Wrap mode",null,null],[13,"Repeat","","Repeats the texture by ignoring the integer part of the …",11,null],[13,"MirroredRepeat","","Repeats the texture and mirrors it, when the integer part …",11,null],[13,"ClampToEdge","","The coordinate will be clamped between 0 and 1.",11,null],[13,"ClampToBorder","","Coordinates outside the range [0.0, 1.0] will be given a …",11,null],[6,"GlyphCache","","Glyph cache implementation for OpenGL backend.",null,null],[11,"from","opengl_graphics::shader_utils","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","opengl_graphics::error","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","opengl_graphics::shader_uniforms","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"from","opengl_graphics","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"pick_shader","","",4,[[["shaders",3]],["option",4]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",4,[[],["glsl",4]]],[11,"clone","","",3,[[],["opengl",4]]],[11,"into","","",3,[[],["version",3]]],[11,"partial_cmp","","",4,[[["glsl",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["opengl",4]],[["option",4],["ordering",4]]]],[11,"cmp","","",4,[[["glsl",4]],["ordering",4]]],[11,"cmp","","",3,[[["opengl",4]],["ordering",4]]],[11,"eq","","",4,[[["glsl",4]],["bool",15]]],[11,"eq","","",3,[[["opengl",4]],["bool",15]]],[11,"from_str","","",4,[[["str",15]],[["result",4],["glsl",4]]]],[11,"from_str","","",3,[[["str",15]],[["opengl",4],["result",4]]]],[11,"eq","","",11,[[["wrap",4]],["bool",15]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",11,[[],["wrap",4]]],[11,"clone","","",10,[[],["filter",4]]],[11,"clone","","",25,[[],["texturesettings",3]]],[11,"clone","","",6,[[],["format",4]]],[11,"drop","opengl_graphics::shader_utils","",0,[[]]],[11,"drop","opengl_graphics","",20,[[]]],[11,"drop","","",21,[[]]],[11,"drop","","",23,[[]]],[11,"from","opengl_graphics::error","",1,[[["error",3]],["error",4]]],[11,"clone","opengl_graphics::shader_uniforms","",2,[[],["shaderuniform",3]]],[11,"clone","","",12,[[],["sufloat",3]]],[11,"clone","","",13,[[],["suint",3]]],[11,"clone","","",14,[[],["suvec2",3]]],[11,"clone","","",15,[[],["suvec3",3]]],[11,"clone","","",16,[[],["suvec4",3]]],[11,"clone","","",17,[[],["sumat2x2",3]]],[11,"clone","","",18,[[],["sumat3x3",3]]],[11,"clone","","",19,[[],["sumat4x4",3]]],[11,"fmt","opengl_graphics::error","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"clear_color","opengl_graphics","",22,[[]]],[11,"clear_stencil","","",22,[[["u8",15]]]],[11,"tri_list","","",22,[[["drawstate",3]]]],[11,"tri_list_c","","",22,[[["drawstate",3]]]],[11,"tri_list_uv","","",22,[[["texture",3],["drawstate",3]]]],[11,"tri_list_uv_c","","",22,[[["texture",3],["drawstate",3]]]],[11,"get_size","","",23,[[]]],[11,"create","","",23,[[["texturesettings",3],["format",4],["into",8]],["result",4]]],[11,"update","","",23,[[["format",4],["into",8]],["result",4]]],[11,"get_uniform","","Try to get uniform from the current shader of a given …",22,[[["str",15]],[["shaderuniform",3],["option",4]]]],[11,"new","","Generate using pass-through shaders.",20,[[["glsl",4]]]],[11,"from_vs_fs","","Generate using custom vertex and fragment shaders.",20,[[["shaders",3],["glsl",4]],[["result",4],["string",3]]]],[11,"new","","Generate using pass-through shaders.",21,[[["glsl",4]]]],[11,"from_vs_fs","","Generate using custom vertex and fragment shaders.",21,[[["shaders",3],["glsl",4]],[["result",4],["string",3]]]],[11,"new","","Creates a new OpenGL back-end.",22,[[["opengl",4]]]],[11,"from_pieces","","Create a new OpenGL back-end with <code>Colored</code>, <code>Textured</code> and …",22,[[["colored",3],["texturedcolor",3],["textured",3]]]],[11,"get_current_program","","Returns the current program",22,[[],[["option",4],["gluint",6]]]],[11,"use_program","","Sets the current program only if the program is not in …",22,[[["gluint",6]]]],[11,"clear_program","","Unset the current program.",22,[[]]],[11,"use_draw_state","","Sets the current draw state, by detecting changes.",22,[[["drawstate",3]]]],[11,"clear_draw_state","","Unsets the current draw state.",22,[[]]],[11,"draw_begin","","Setup that should be called at the start of a frame\'s …",22,[[["viewport",3]],["context",3]]],[11,"draw_end","","Finalize the frame\'s draw calls.",22,[[]]],[11,"draw","","Convenience for wrapping draw calls with the begin and …",22,[[["viewport",3]]]],[11,"has_texture_alpha","","Assume all textures has alpha channel for now.",22,[[["texture",3]],["bool",15]]],[11,"new","","Creates a new texture.",23,[[["u32",15],["gluint",6]]]],[11,"get_id","","Gets the OpenGL id of the texture.",23,[[],["gluint",6]]],[11,"empty","","Returns empty texture.",23,[[["texturesettings",3]],[["result",4],["string",3]]]],[11,"from_memory_alpha","","Loads image from memory, the format is 8-bit greyscale.",23,[[["u32",15],["texturesettings",3]],[["result",4],["string",3]]]],[11,"from_path","","Loads image by relative file name to the asset root.",23,[[["texturesettings",3]],[["result",4],["string",3]]]],[11,"from_image","","Creates a texture from image.",23,[[["texturesettings",3],["rgbaimage",6]]]],[11,"update","","Updates image with a new one.",23,[[["rgbaimage",6]]]],[11,"from_api","","Creates a new <code>OpenGL</code> version from graphics API version.",3,[[["version",3]],[["opengl",4],["option",4]]]],[11,"get_major_minor","","Gets the minor version of OpenGL.",3,[[]]],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",3,[[],["glsl",4]]],[11,"new","","Creates a new shader picker.",24,[[],["shaders",3]]],[11,"set","","Sets source for a shader version.",24,[[],["shaders",3]]],[11,"get","","Get the closest shader to a shader version.",24,[[],["option",4]]],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",4,[[],["opengl",4]]],[11,"new","","Create default settings.",25,[[],["texturesettings",3]]],[11,"get_convert_gamma","","Gets whether to convert gamma, treated as sRGB color …",25,[[],["bool",15]]],[11,"set_convert_gamma","","Sets convert gamma.",25,[[["bool",15]]]],[11,"convert_gamma","","Sets convert gamma.",25,[[["bool",15]],["texturesettings",3]]],[11,"get_compress","","Gets wheter compress on the GPU.",25,[[],["bool",15]]],[11,"set_compress","","Sets compress.",25,[[["bool",15]]]],[11,"compress","","Sets compress.",25,[[["bool",15]],["texturesettings",3]]],[11,"get_generate_mipmap","","Gets generate mipmap.",25,[[],["bool",15]]],[11,"set_generate_mipmap","","Sets generate mipmap.",25,[[["bool",15]]]],[11,"generate_mipmap","","Sets generate mipmap.",25,[[["bool",15]],["texturesettings",3]]],[11,"get_min","","Gets minify filter.",25,[[],["filter",4]]],[11,"set_min","","Sets minify filter.",25,[[["filter",4]]]],[11,"min","","Sets minify filter.",25,[[["filter",4]],["texturesettings",3]]],[11,"get_mag","","Gets magnify filter",25,[[],["filter",4]]],[11,"set_mag","","Sets magnify filter",25,[[["filter",4]]]],[11,"mag","","Sets magnify filter",25,[[["filter",4]],["texturesettings",3]]],[11,"get_mipmap","","Gets minify mipmap filter",25,[[],["filter",4]]],[11,"set_mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to …",25,[[["filter",4]]]],[11,"mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to …",25,[[["filter",4]],["texturesettings",3]]],[11,"get_filter","","Returns the min and mag filter",25,[[]]],[11,"set_filter","","Sets the min and mag filter",25,[[["filter",4]]]],[11,"filter","","Sets the min and mag filter",25,[[["filter",4]],["texturesettings",3]]],[11,"get_wrap_u","","Gets the wrapping mode for the u coordinate",25,[[],["wrap",4]]],[11,"set_wrap_u","","Sets the wrapping mode for the u coordinate",25,[[["wrap",4]]]],[11,"wrap_u","","Sets the wrapping mode for the u coordinate",25,[[["wrap",4]],["texturesettings",3]]],[11,"get_wrap_v","","Gets the wrapping mode for the v coordinate",25,[[],["wrap",4]]],[11,"set_wrap_v","","Sets the wrapping mode for the v coordinate",25,[[["wrap",4]]]],[11,"wrap_v","","Sets the wrapping mode for the v coordinate",25,[[["wrap",4]],["texturesettings",3]]],[11,"get_border_color","","Gets the border color",25,[[]]],[11,"set_border_color","","Sets the border color",25,[[]]],[11,"border_color","","Sets the border color",25,[[],["texturesettings",3]]]],"p":[[3,"DynamicAttribute"],[4,"Error"],[3,"ShaderUniform"],[4,"OpenGL"],[4,"GLSL"],[8,"ImageSize"],[4,"Format"],[8,"TextureOp"],[8,"CreateTexture"],[8,"UpdateTexture"],[4,"Filter"],[4,"Wrap"],[3,"SUFloat"],[3,"SUInt"],[3,"SUVec2"],[3,"SUVec3"],[3,"SUVec4"],[3,"SUMat2x2"],[3,"SUMat3x3"],[3,"SUMat4x4"],[3,"Colored"],[3,"Textured"],[3,"GlGraphics"],[3,"Texture"],[3,"Shaders"],[3,"TextureSettings"]]},\
"owned_ttf_parser":{"doc":"Extends ttf_parser with owned version of <code>Font</code>: <code>OwnedFont</code>.","i":[[8,"AsFontRef","owned_ttf_parser","Used to perform a cheap conversion to a <code>Font</code> reference.",null,null],[10,"as_font","","Convert to a <code>Font</code> reference.",0,[[],["font",3]]],[3,"OwnedFont","","An owned version of <code>Font</code>.",null,null],[3,"GlyphId","","A type-safe wrapper for glyph ID.",null,null],[12,"0","","",1,null],[3,"Variation","","A font variation value.",null,null],[12,"axis","","An axis tag name.",2,null],[12,"value","","An axis value.",2,null],[3,"Tag","","A 4-byte tag.",null,null],[12,"0","","",3,null],[3,"LineMetrics","","A line metrics.",null,null],[12,"position","","Line position.",4,null],[12,"thickness","","Line thickness.",4,null],[3,"Rect","","A rectangle.",null,null],[12,"x_min","","",5,null],[12,"y_min","","",5,null],[12,"x_max","","",5,null],[12,"y_max","","",5,null],[8,"OutlineBuilder","","A trait for glyph outline construction.",null,null],[10,"move_to","","Appends a MoveTo segment.",6,[[["f32",15]]]],[10,"line_to","","Appends a LineTo segment.",6,[[["f32",15]]]],[10,"quad_to","","Appends a QuadTo segment.",6,[[["f32",15]]]],[10,"curve_to","","Appends a CurveTo segment.",6,[[["f32",15]]]],[10,"close","","Appends a ClosePath segment.",6,[[]]],[4,"RasterImageFormat","","A glyph raster image format.",null,null],[13,"PNG","","",7,null],[3,"RasterGlyphImage","","A glyph\'s raster image.",null,null],[12,"x","","Horizontal offset.",8,null],[12,"y","","Vertical offset.",8,null],[12,"width","","Image width.",8,null],[12,"height","","Image height.",8,null],[12,"pixels_per_em","","A pixels per em of the selected strike.",8,null],[12,"format","","An image format.",8,null],[12,"data","","A raw image data. It\'s up to the caller to decode it.",8,null],[4,"TableName","","A table name.",null,null],[13,"AxisVariations","","",9,null],[13,"CharacterToGlyphIndexMapping","","",9,null],[13,"ColorBitmapData","","",9,null],[13,"ColorBitmapLocation","","",9,null],[13,"CompactFontFormat","","",9,null],[13,"CompactFontFormat2","","",9,null],[13,"FontVariations","","",9,null],[13,"GlyphData","","",9,null],[13,"GlyphDefinition","","",9,null],[13,"GlyphVariations","","",9,null],[13,"Header","","",9,null],[13,"HorizontalHeader","","",9,null],[13,"HorizontalMetrics","","",9,null],[13,"HorizontalMetricsVariations","","",9,null],[13,"IndexToLocation","","",9,null],[13,"Kerning","","",9,null],[13,"MaximumProfile","","",9,null],[13,"MetricsVariations","","",9,null],[13,"Naming","","",9,null],[13,"PostScript","","",9,null],[13,"ScalableVectorGraphics","","",9,null],[13,"StandardBitmapGraphics","","",9,null],[13,"VerticalHeader","","",9,null],[13,"VerticalMetrics","","",9,null],[13,"VerticalMetricsVariations","","",9,null],[13,"VerticalOrigin","","",9,null],[13,"WindowsMetrics","","",9,null],[3,"Font","","A font data handle.",null,null],[5,"fonts_in_collection","","Returns the number of fonts stored in a TrueType font …",null,[[],[["u32",15],["option",4]]]],[3,"VariationAxes","","An iterator over variation axes.",null,null],[3,"VariationAxis","","A variation axis.",null,null],[12,"tag","","",10,null],[12,"min_value","","",10,null],[12,"def_value","","",10,null],[12,"max_value","","",10,null],[12,"name_id","","An axis name in the <code>name</code> table.",10,null],[12,"hidden","","",10,null],[4,"GlyphClass","","A glyph class.",null,null],[13,"Base","","",11,null],[13,"Ligature","","",11,null],[13,"Mark","","",11,null],[13,"Component","","",11,null],[0,"kern","","A kerning table implementation.",null,null],[3,"Subtable","owned_ttf_parser::kern","A kerning subtable.",null,null],[3,"Subtables","","An iterator over kerning subtables.",null,null],[0,"state_machine","","A State Table for Contextual Kerning implementation.",null,null],[0,"class","owned_ttf_parser::kern::state_machine","Predefined classes.",null,null],[17,"END_OF_TEXT","owned_ttf_parser::kern::state_machine::class","",null,null],[17,"OUT_OF_BOUNDS","","",null,null],[17,"DELETED_GLYPH","","",null,null],[17,"END_OF_LINE","","",null,null],[17,"LETTER","","",null,null],[17,"SPACE","","",null,null],[17,"PUNCTUATION","","",null,null],[3,"State","owned_ttf_parser::kern::state_machine","A type-safe wrapper for a state machine state.",null,null],[0,"state","","Predefined states.",null,null],[17,"START_OF_TEXT","owned_ttf_parser::kern::state_machine::state","",null,null],[17,"START_OF_LINE","","",null,null],[17,"IN_WORD","","",null,null],[3,"ValueOffset","owned_ttf_parser::kern::state_machine","A type-safe wrapper for a kerning value offset.",null,null],[3,"Entry","","A state machine entry.",null,null],[3,"Machine","","A state machine.",null,null],[4,"PlatformId","owned_ttf_parser","A platform ID.",null,null],[13,"Unicode","","",12,null],[13,"Macintosh","","",12,null],[13,"Iso","","",12,null],[13,"Windows","","",12,null],[13,"Custom","","",12,null],[0,"name_id","","A list of name ID\'s.",null,null],[17,"COPYRIGHT_NOTICE","owned_ttf_parser::name_id","",null,null],[17,"FAMILY","","",null,null],[17,"SUBFAMILY","","",null,null],[17,"UNIQUE_ID","","",null,null],[17,"FULL_NAME","","",null,null],[17,"VERSION","","",null,null],[17,"POST_SCRIPT_NAME","","",null,null],[17,"TRADEMARK","","",null,null],[17,"MANUFACTURER","","",null,null],[17,"DESIGNER","","",null,null],[17,"DESCRIPTION","","",null,null],[17,"VENDOR_URL","","",null,null],[17,"DESIGNER_URL","","",null,null],[17,"LICENSE","","",null,null],[17,"LICENSE_URL","","",null,null],[17,"TYPOGRAPHIC_FAMILY","","",null,null],[17,"TYPOGRAPHIC_SUBFAMILY","","",null,null],[17,"COMPATIBLE_FULL","","",null,null],[17,"SAMPLE_TEXT","","",null,null],[17,"POST_SCRIPT_CID","","",null,null],[17,"WWS_FAMILY","","",null,null],[17,"WWS_SUBFAMILY","","",null,null],[17,"LIGHT_BACKGROUND_PALETTE","","",null,null],[17,"DARK_BACKGROUND_PALETTE","","",null,null],[17,"VARIATIONS_POST_SCRIPT_NAME_PREFIX","","",null,null],[3,"Class","owned_ttf_parser","A value of Class Definition Table.",null,null],[12,"0","","",13,null],[3,"Name","","A Name Record.",null,null],[3,"Names","","An iterator over font\'s names.",null,null],[4,"Weight","","A font weight.",null,null],[13,"Thin","","",14,null],[13,"ExtraLight","","",14,null],[13,"Light","","",14,null],[13,"Normal","","",14,null],[13,"Medium","","",14,null],[13,"SemiBold","","",14,null],[13,"Bold","","",14,null],[13,"ExtraBold","","",14,null],[13,"Black","","",14,null],[13,"Other","","",14,null],[4,"Width","","A font width.",null,null],[13,"UltraCondensed","","",15,null],[13,"ExtraCondensed","","",15,null],[13,"Condensed","","",15,null],[13,"SemiCondensed","","",15,null],[13,"Normal","","",15,null],[13,"SemiExpanded","","",15,null],[13,"Expanded","","",15,null],[13,"ExtraExpanded","","",15,null],[13,"UltraExpanded","","",15,null],[3,"ScriptMetrics","","A script metrics used by subscript and superscript.",null,null],[12,"x_size","","Horizontal font size.",16,null],[12,"y_size","","Vertical font size.",16,null],[12,"x_offset","","X offset.",16,null],[12,"y_offset","","Y offset.",16,null],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","owned_ttf_parser::kern","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","owned_ttf_parser::kern::state_machine","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","owned_ttf_parser","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"clone","owned_ttf_parser::kern::state_machine","",22,[[],["state",3]]],[11,"clone","owned_ttf_parser","",13,[[],["class",3]]],[11,"clone","","",11,[[],["glyphclass",4]]],[11,"clone","","",15,[[],["width",4]]],[11,"clone","","",3,[[],["tag",3]]],[11,"clone","","",4,[[],["linemetrics",3]]],[11,"clone","","",10,[[],["variationaxis",3]]],[11,"clone","","",9,[[],["tablename",4]]],[11,"clone","","",5,[[],["rect",3]]],[11,"clone","","",27,[[],["names",3]]],[11,"clone","","",14,[[],["weight",4]]],[11,"clone","","",2,[[],["variation",3]]],[11,"clone","","",19,[[],["variationaxes",3]]],[11,"clone","","",26,[[],["name",3]]],[11,"clone","","",7,[[],["rasterimageformat",4]]],[11,"clone","owned_ttf_parser::kern::state_machine","",23,[[],["valueoffset",3]]],[11,"clone","owned_ttf_parser","",18,[[],["font",3]]],[11,"clone","owned_ttf_parser::kern","",20,[[],["subtable",3]]],[11,"clone","owned_ttf_parser","",16,[[],["scriptmetrics",3]]],[11,"clone","","",1,[[],["glyphid",3]]],[11,"clone","owned_ttf_parser::kern","",21,[[],["subtables",3]]],[11,"clone","owned_ttf_parser::kern::state_machine","",24,[[],["entry",3]]],[11,"clone","owned_ttf_parser","",12,[[],["platformid",4]]],[11,"clone","","",8,[[],["rasterglyphimage",3]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","owned_ttf_parser::kern::state_machine","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","owned_ttf_parser","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","owned_ttf_parser::kern::state_machine","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","owned_ttf_parser","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","owned_ttf_parser::kern","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","owned_ttf_parser::kern::state_machine","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","owned_ttf_parser","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","owned_ttf_parser::kern::state_machine","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","owned_ttf_parser","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","owned_ttf_parser::kern","",21,[[],["subtables",3]]],[11,"default","owned_ttf_parser","",15,[[],["width",4]]],[11,"default","owned_ttf_parser::kern","",20,[[],["subtable",3]]],[11,"default","owned_ttf_parser","",19,[[],["variationaxes",3]]],[11,"default","","",14,[[],["weight",4]]],[11,"default","","",1,[[],["glyphid",3]]],[11,"default","","",27,[[],["names",3]]],[11,"next","","",27,[[],["option",4]]],[11,"count","","",27,[[],["usize",15]]],[11,"nth","","",27,[[["usize",15]],["option",4]]],[11,"next","owned_ttf_parser::kern","",21,[[],["option",4]]],[11,"next","owned_ttf_parser","",19,[[],["option",4]]],[11,"count","","",19,[[],["usize",15]]],[11,"from","","",14,[[["u16",15]],["weight",4]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",3,[[["tag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["tag",3]],["bool",15]]],[11,"le","","",3,[[["tag",3]],["bool",15]]],[11,"gt","","",3,[[["tag",3]],["bool",15]]],[11,"ge","","",3,[[["tag",3]],["bool",15]]],[11,"partial_cmp","","",1,[[["glyphid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["glyphid",3]],["bool",15]]],[11,"le","","",1,[[["glyphid",3]],["bool",15]]],[11,"gt","","",1,[[["glyphid",3]],["bool",15]]],[11,"ge","","",1,[[["glyphid",3]],["bool",15]]],[11,"partial_cmp","","",15,[[["width",4]],[["option",4],["ordering",4]]]],[11,"hash","","",3,[[]]],[11,"cmp","","",3,[[["tag",3]],["ordering",4]]],[11,"cmp","","",1,[[["glyphid",3]],["ordering",4]]],[11,"eq","","",8,[[["rasterglyphimage",3]],["bool",15]]],[11,"ne","","",8,[[["rasterglyphimage",3]],["bool",15]]],[11,"eq","","",11,[[["glyphclass",4]],["bool",15]]],[11,"eq","","",12,[[["platformid",4]],["bool",15]]],[11,"eq","owned_ttf_parser::kern::state_machine","",22,[[["state",3]],["bool",15]]],[11,"ne","","",22,[[["state",3]],["bool",15]]],[11,"eq","owned_ttf_parser","",9,[[["tablename",4]],["bool",15]]],[11,"eq","","",1,[[["glyphid",3]],["bool",15]]],[11,"ne","","",1,[[["glyphid",3]],["bool",15]]],[11,"eq","","",7,[[["rasterimageformat",4]],["bool",15]]],[11,"eq","","",3,[[["tag",3]],["bool",15]]],[11,"ne","","",3,[[["tag",3]],["bool",15]]],[11,"eq","","",2,[[["variation",3]],["bool",15]]],[11,"ne","","",2,[[["variation",3]],["bool",15]]],[11,"eq","","",15,[[["width",4]],["bool",15]]],[11,"eq","","",13,[[["class",3]],["bool",15]]],[11,"ne","","",13,[[["class",3]],["bool",15]]],[11,"eq","","",16,[[["scriptmetrics",3]],["bool",15]]],[11,"ne","","",16,[[["scriptmetrics",3]],["bool",15]]],[11,"eq","","",4,[[["linemetrics",3]],["bool",15]]],[11,"ne","","",4,[[["linemetrics",3]],["bool",15]]],[11,"eq","","",10,[[["variationaxis",3]],["bool",15]]],[11,"ne","","",10,[[["variationaxis",3]],["bool",15]]],[11,"eq","","",5,[[["rect",3]],["bool",15]]],[11,"ne","","",5,[[["rect",3]],["bool",15]]],[11,"eq","","",14,[[["weight",4]],["bool",15]]],[11,"ne","","",14,[[["weight",4]],["bool",15]]],[11,"as_font","","",18,[[],["font",3]]],[11,"as_font","","",17,[[],["font",3]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"from_vec","","Creates an <code>OwnedFont</code> from owned data.",17,[[["u32",15],["vec",3],["u8",15]],["option",4]]],[11,"from_bytes","","Creates a <code>Tag</code> from bytes.",3,[[],["tag",3]]],[11,"from_bytes_lossy","","Creates a <code>Tag</code> from bytes.",3,[[],["tag",3]]],[11,"to_bytes","","Returns tag as 4-element byte array.",3,[[]]],[11,"to_chars","","Returns tag as 4-element byte array.",3,[[]]],[11,"is_null","","Checks if tag is null / <code>[0, 0, 0, 0]</code>.",3,[[],["bool",15]]],[11,"as_u32","","Returns tag value as <code>u32</code> number.",3,[[],["u32",15]]],[11,"to_lowercase","","Converts tag to lowercase.",3,[[],["tag",3]]],[11,"to_uppercase","","Converts tag to uppercase.",3,[[],["tag",3]]],[11,"width","","Returns rect\'s width.",5,[[],["i16",15]]],[11,"height","","Returns rect\'s height.",5,[[],["i16",15]]],[11,"from_data","","Creates a <code>Font</code> object from a raw data.",18,[[["u32",15]],[["option",4],["font",3]]]],[11,"has_table","","Checks that font has a specified table.",18,[[["tablename",4]],["bool",15]]],[11,"names","","Returns an iterator over Name Records.",18,[[],["names",3]]],[11,"family_name","","Returns font\'s family name.",18,[[],[["option",4],["string",3]]]],[11,"post_script_name","","Returns font\'s PostScript name.",18,[[],[["option",4],["string",3]]]],[11,"is_regular","","Checks that font is marked as <em>Regular</em>.",18,[[],["bool",15]]],[11,"is_italic","","Checks that font is marked as <em>Italic</em>.",18,[[],["bool",15]]],[11,"is_bold","","Checks that font is marked as <em>Bold</em>.",18,[[],["bool",15]]],[11,"is_oblique","","Checks that font is marked as <em>Oblique</em>.",18,[[],["bool",15]]],[11,"is_variable","","Checks that font is variable.",18,[[],["bool",15]]],[11,"weight","","Returns font\'s weight.",18,[[],["weight",4]]],[11,"width","","Returns font\'s width.",18,[[],["width",4]]],[11,"ascender","","Returns a horizontal font ascender.",18,[[],["i16",15]]],[11,"descender","","Returns a horizontal font descender.",18,[[],["i16",15]]],[11,"height","","Returns font\'s height.",18,[[],["i16",15]]],[11,"line_gap","","Returns a horizontal font line gap.",18,[[],["i16",15]]],[11,"vertical_ascender","","Returns a vertical font ascender.",18,[[],[["option",4],["i16",15]]]],[11,"vertical_descender","","Returns a vertical font descender.",18,[[],[["option",4],["i16",15]]]],[11,"vertical_height","","Returns a vertical font height.",18,[[],[["option",4],["i16",15]]]],[11,"vertical_line_gap","","Returns a vertical font line gap.",18,[[],[["option",4],["i16",15]]]],[11,"units_per_em","","Returns font\'s units per EM.",18,[[],[["option",4],["u16",15]]]],[11,"x_height","","Returns font\'s x height.",18,[[],[["option",4],["i16",15]]]],[11,"underline_metrics","","Returns font\'s underline metrics.",18,[[],[["option",4],["linemetrics",3]]]],[11,"strikeout_metrics","","Returns font\'s strikeout metrics.",18,[[],[["option",4],["linemetrics",3]]]],[11,"subscript_metrics","","Returns font\'s subscript metrics.",18,[[],[["scriptmetrics",3],["option",4]]]],[11,"superscript_metrics","","Returns font\'s superscript metrics.",18,[[],[["scriptmetrics",3],["option",4]]]],[11,"number_of_glyphs","","Returns a total number of glyphs in the font.",18,[[],["u16",15]]],[11,"glyph_index","","Resolves a Glyph ID for a code point.",18,[[["char",15]],[["option",4],["glyphid",3]]]],[11,"glyph_variation_index","","Resolves a variation of a Glyph ID from two code points.",18,[[["char",15]],[["option",4],["glyphid",3]]]],[11,"glyph_hor_advance","","Returns glyph\'s horizontal advance.",18,[[["glyphid",3]],[["option",4],["u16",15]]]],[11,"glyph_ver_advance","","Returns glyph\'s vertical advance.",18,[[["glyphid",3]],[["option",4],["u16",15]]]],[11,"glyph_hor_side_bearing","","Returns glyph\'s horizontal side bearing.",18,[[["glyphid",3]],[["option",4],["i16",15]]]],[11,"glyph_ver_side_bearing","","Returns glyph\'s vertical side bearing.",18,[[["glyphid",3]],[["option",4],["i16",15]]]],[11,"glyph_y_origin","","Returns glyph\'s vertical origin according to Vertical …",18,[[["glyphid",3]],[["option",4],["i16",15]]]],[11,"glyph_name","","Returns glyph\'s name.",18,[[["glyphid",3]],[["str",15],["option",4]]]],[11,"has_glyph_classes","","Checks that font has Glyph Class Definition Table.",18,[[],["bool",15]]],[11,"glyph_class","","Returns glyph\'s class according to Glyph Class Definition …",18,[[["glyphid",3]],[["option",4],["glyphclass",4]]]],[11,"glyph_mark_attachment_class","","Returns glyph\'s mark attachment class according to Mark …",18,[[["glyphid",3]],["class",3]]],[11,"is_mark_glyph","","Checks that glyph is a mark according to Mark Glyph Sets …",18,[[["option",4],["u16",15],["glyphid",3]],["bool",15]]],[11,"kerning_subtables","","Returns a iterator over kerning subtables.",18,[[],["subtables",3]]],[11,"outline_glyph","","Outlines a glyph and returns its tight bounding box.",18,[[["outlinebuilder",8],["glyphid",3]],[["option",4],["rect",3]]]],[11,"glyph_bounding_box","","Returns a tight glyph bounding box.",18,[[["glyphid",3]],[["option",4],["rect",3]]]],[11,"glyph_raster_image","","Returns a reference to a glyph\'s raster image.",18,[[["u16",15],["glyphid",3]],[["rasterglyphimage",3],["option",4]]]],[11,"glyph_svg_image","","Returns a reference to a glyph\'s SVG image.",18,[[["glyphid",3]],["option",4]]],[11,"variation_axes","","Returns an iterator over variation axes.",18,[[],["variationaxes",3]]],[11,"set_variation","","Sets a variation axis coordinate.",18,[[["tag",3],["f32",15]],["option",4]]],[11,"is_horizontal","owned_ttf_parser::kern","Checks that subtable is for horizontal text.",20,[[],["bool",15]]],[11,"is_variable","","Checks that subtable is variable.",20,[[],["bool",15]]],[11,"has_cross_stream","","Checks that subtable has a cross-stream values.",20,[[],["bool",15]]],[11,"has_state_machine","","Checks that subtable uses a state machine.",20,[[],["bool",15]]],[11,"glyphs_kerning","","Returns kerning for a pair of glyphs.",20,[[["glyphid",3]],[["option",4],["i16",15]]]],[11,"state_machine","","Returns subtable\'s state machine if there is one.",20,[[],[["option",4],["machine",3]]]],[11,"next","owned_ttf_parser::kern::state_machine","Returns the next offset.",23,[[],["valueoffset",3]]],[11,"new_state","","Returns a new state.",24,[[],["state",3]]],[11,"has_offset","","Checks that entry has an offset.",24,[[],["bool",15]]],[11,"value_offset","","Returns a value offset.",24,[[],["valueoffset",3]]],[11,"has_push","","If set, push this glyph on the kerning stack.",24,[[],["bool",15]]],[11,"has_advance","","If set, advance to the next glyph before going to the new …",24,[[],["bool",15]]],[11,"class","","Returns a glyph class.",25,[[["glyphid",3]],[["option",4],["u8",15]]]],[11,"entry","","Returns a class entry.",25,[[["state",3],["u8",15]],[["entry",3],["option",4]]]],[11,"kerning","","Returns kerning at offset.",25,[[["valueoffset",3]],[["option",4],["i16",15]]]],[11,"new_state","","Produces a new state.",25,[[["state",3]],["state",3]]],[11,"platform_id","owned_ttf_parser","Parses the platform ID.",26,[[],[["option",4],["platformid",4]]]],[11,"encoding_id","","Parses the platform-specific encoding ID.",26,[[],["u16",15]]],[11,"language_id","","Parses the language ID.",26,[[],["u16",15]]],[11,"name_id","","Parses the Name ID.",26,[[],["u16",15]]],[11,"name","","Parses the Name\'s data as bytes.",26,[[]]],[11,"name_utf8","","Parses the Name\'s data as a UTF-8 string.",26,[[],[["option",4],["string",3]]]],[11,"is_unicode","","Checks that the current Name data has a Unicode encoding.",26,[[],["bool",15]]],[11,"to_number","","Returns a numeric representation of a weight.",14,[[],["u16",15]]],[11,"to_number","","Returns a numeric representation of a width.",15,[[],["u16",15]]]],"p":[[8,"AsFontRef"],[3,"GlyphId"],[3,"Variation"],[3,"Tag"],[3,"LineMetrics"],[3,"Rect"],[8,"OutlineBuilder"],[4,"RasterImageFormat"],[3,"RasterGlyphImage"],[4,"TableName"],[3,"VariationAxis"],[4,"GlyphClass"],[4,"PlatformId"],[3,"Class"],[4,"Weight"],[4,"Width"],[3,"ScriptMetrics"],[3,"OwnedFont"],[3,"Font"],[3,"VariationAxes"],[3,"Subtable"],[3,"Subtables"],[3,"State"],[3,"ValueOffset"],[3,"Entry"],[3,"Machine"],[3,"Name"],[3,"Names"]]},\
"piston":{"doc":"A modular game engine written in Rust.","i":[[0,"controller","piston","Back-end agnostic controller events.",null,null],[3,"ControllerButton","piston::controller","Components of a controller button event. Not guaranteed …",null,null],[12,"id","","Which controller was the button on.",0,null],[12,"button","","Which button was pressed.",0,null],[3,"ControllerHat","","Components of a controller hat move event (d-Pad).",null,null],[12,"id","","Which Controller was the button on.",1,null],[12,"state","","Which button was pressed.",1,null],[12,"which","","Which hat on the controller was changed",1,null],[3,"ControllerAxisArgs","","Components of a controller axis move event. Not …",null,null],[12,"id","","Which controller moved.",2,null],[12,"axis","","The axis that moved.",2,null],[12,"position","","Position of the controller. Usually [-1.0, 1.0], though …",2,null],[8,"ControllerAxisEvent","","The position of a controller axis changed.",null,null],[10,"from_controller_axis_args","","Creates a controller axis event.",3,[[["controlleraxisargs",3]],["option",4]]],[10,"controller_axis","","Calls closure if this is a controller axis event.",3,[[],["option",4]]],[11,"controller_axis_args","","Returns controller axis arguments.",3,[[],[["option",4],["controlleraxisargs",3]]]],[0,"keyboard","piston","Back-end agnostic keyboard keys.",null,null],[3,"ModifierKey","piston::keyboard","",null,null],[4,"Key","","Represent a keyboard key. Keycodes follows SDL …",null,null],[13,"Unknown","","",4,null],[13,"Backspace","","",4,null],[13,"Tab","","",4,null],[13,"Return","","",4,null],[13,"Escape","","",4,null],[13,"Space","","",4,null],[13,"Exclaim","","",4,null],[13,"Quotedbl","","",4,null],[13,"Hash","","",4,null],[13,"Dollar","","",4,null],[13,"Percent","","",4,null],[13,"Ampersand","","",4,null],[13,"Quote","","",4,null],[13,"LeftParen","","",4,null],[13,"RightParen","","",4,null],[13,"Asterisk","","",4,null],[13,"Plus","","",4,null],[13,"Comma","","",4,null],[13,"Minus","","",4,null],[13,"Period","","",4,null],[13,"Slash","","",4,null],[13,"D0","","",4,null],[13,"D1","","",4,null],[13,"D2","","",4,null],[13,"D3","","",4,null],[13,"D4","","",4,null],[13,"D5","","",4,null],[13,"D6","","",4,null],[13,"D7","","",4,null],[13,"D8","","",4,null],[13,"D9","","",4,null],[13,"Colon","","",4,null],[13,"Semicolon","","",4,null],[13,"Less","","",4,null],[13,"Equals","","",4,null],[13,"Greater","","",4,null],[13,"Question","","",4,null],[13,"At","","",4,null],[13,"LeftBracket","","",4,null],[13,"Backslash","","",4,null],[13,"RightBracket","","",4,null],[13,"Caret","","",4,null],[13,"Underscore","","",4,null],[13,"Backquote","","",4,null],[13,"A","","",4,null],[13,"B","","",4,null],[13,"C","","",4,null],[13,"D","","",4,null],[13,"E","","",4,null],[13,"F","","",4,null],[13,"G","","",4,null],[13,"H","","",4,null],[13,"I","","",4,null],[13,"J","","",4,null],[13,"K","","",4,null],[13,"L","","",4,null],[13,"M","","",4,null],[13,"N","","",4,null],[13,"O","","",4,null],[13,"P","","",4,null],[13,"Q","","",4,null],[13,"R","","",4,null],[13,"S","","",4,null],[13,"T","","",4,null],[13,"U","","",4,null],[13,"V","","",4,null],[13,"W","","",4,null],[13,"X","","",4,null],[13,"Y","","",4,null],[13,"Z","","",4,null],[13,"Delete","","",4,null],[13,"CapsLock","","",4,null],[13,"F1","","",4,null],[13,"F2","","",4,null],[13,"F3","","",4,null],[13,"F4","","",4,null],[13,"F5","","",4,null],[13,"F6","","",4,null],[13,"F7","","",4,null],[13,"F8","","",4,null],[13,"F9","","",4,null],[13,"F10","","",4,null],[13,"F11","","",4,null],[13,"F12","","",4,null],[13,"PrintScreen","","",4,null],[13,"ScrollLock","","",4,null],[13,"Pause","","",4,null],[13,"Insert","","",4,null],[13,"Home","","",4,null],[13,"PageUp","","",4,null],[13,"End","","",4,null],[13,"PageDown","","",4,null],[13,"Right","","",4,null],[13,"Left","","",4,null],[13,"Down","","",4,null],[13,"Up","","",4,null],[13,"NumLockClear","","",4,null],[13,"NumPadDivide","","",4,null],[13,"NumPadMultiply","","",4,null],[13,"NumPadMinus","","",4,null],[13,"NumPadPlus","","",4,null],[13,"NumPadEnter","","",4,null],[13,"NumPad1","","",4,null],[13,"NumPad2","","",4,null],[13,"NumPad3","","",4,null],[13,"NumPad4","","",4,null],[13,"NumPad5","","",4,null],[13,"NumPad6","","",4,null],[13,"NumPad7","","",4,null],[13,"NumPad8","","",4,null],[13,"NumPad9","","",4,null],[13,"NumPad0","","",4,null],[13,"NumPadPeriod","","",4,null],[13,"Application","","",4,null],[13,"Power","","",4,null],[13,"NumPadEquals","","",4,null],[13,"F13","","",4,null],[13,"F14","","",4,null],[13,"F15","","",4,null],[13,"F16","","",4,null],[13,"F17","","",4,null],[13,"F18","","",4,null],[13,"F19","","",4,null],[13,"F20","","",4,null],[13,"F21","","",4,null],[13,"F22","","",4,null],[13,"F23","","",4,null],[13,"F24","","",4,null],[13,"Execute","","",4,null],[13,"Help","","",4,null],[13,"Menu","","",4,null],[13,"Select","","",4,null],[13,"Stop","","",4,null],[13,"Again","","",4,null],[13,"Undo","","",4,null],[13,"Cut","","",4,null],[13,"Copy","","",4,null],[13,"Paste","","",4,null],[13,"Find","","",4,null],[13,"Mute","","",4,null],[13,"VolumeUp","","",4,null],[13,"VolumeDown","","",4,null],[13,"NumPadComma","","",4,null],[13,"NumPadEqualsAS400","","",4,null],[13,"AltErase","","",4,null],[13,"Sysreq","","",4,null],[13,"Cancel","","",4,null],[13,"Clear","","",4,null],[13,"Prior","","",4,null],[13,"Return2","","",4,null],[13,"Separator","","",4,null],[13,"Out","","",4,null],[13,"Oper","","",4,null],[13,"ClearAgain","","",4,null],[13,"CrSel","","",4,null],[13,"ExSel","","",4,null],[13,"NumPad00","","",4,null],[13,"NumPad000","","",4,null],[13,"ThousandsSeparator","","",4,null],[13,"DecimalSeparator","","",4,null],[13,"CurrencyUnit","","",4,null],[13,"CurrencySubUnit","","",4,null],[13,"NumPadLeftParen","","",4,null],[13,"NumPadRightParen","","",4,null],[13,"NumPadLeftBrace","","",4,null],[13,"NumPadRightBrace","","",4,null],[13,"NumPadTab","","",4,null],[13,"NumPadBackspace","","",4,null],[13,"NumPadA","","",4,null],[13,"NumPadB","","",4,null],[13,"NumPadC","","",4,null],[13,"NumPadD","","",4,null],[13,"NumPadE","","",4,null],[13,"NumPadF","","",4,null],[13,"NumPadXor","","",4,null],[13,"NumPadPower","","",4,null],[13,"NumPadPercent","","",4,null],[13,"NumPadLess","","",4,null],[13,"NumPadGreater","","",4,null],[13,"NumPadAmpersand","","",4,null],[13,"NumPadDblAmpersand","","",4,null],[13,"NumPadVerticalBar","","",4,null],[13,"NumPadDblVerticalBar","","",4,null],[13,"NumPadColon","","",4,null],[13,"NumPadHash","","",4,null],[13,"NumPadSpace","","",4,null],[13,"NumPadAt","","",4,null],[13,"NumPadExclam","","",4,null],[13,"NumPadMemStore","","",4,null],[13,"NumPadMemRecall","","",4,null],[13,"NumPadMemClear","","",4,null],[13,"NumPadMemAdd","","",4,null],[13,"NumPadMemSubtract","","",4,null],[13,"NumPadMemMultiply","","",4,null],[13,"NumPadMemDivide","","",4,null],[13,"NumPadPlusMinus","","",4,null],[13,"NumPadClear","","",4,null],[13,"NumPadClearEntry","","",4,null],[13,"NumPadBinary","","",4,null],[13,"NumPadOctal","","",4,null],[13,"NumPadDecimal","","",4,null],[13,"NumPadHexadecimal","","",4,null],[13,"LCtrl","","",4,null],[13,"LShift","","",4,null],[13,"LAlt","","",4,null],[13,"LGui","","",4,null],[13,"RCtrl","","",4,null],[13,"RShift","","",4,null],[13,"RAlt","","",4,null],[13,"RGui","","",4,null],[13,"Mode","","",4,null],[13,"AudioNext","","",4,null],[13,"AudioPrev","","",4,null],[13,"AudioStop","","",4,null],[13,"AudioPlay","","",4,null],[13,"AudioMute","","",4,null],[13,"MediaSelect","","",4,null],[13,"Www","","",4,null],[13,"Mail","","",4,null],[13,"Calculator","","",4,null],[13,"Computer","","",4,null],[13,"AcSearch","","",4,null],[13,"AcHome","","",4,null],[13,"AcBack","","",4,null],[13,"AcForward","","",4,null],[13,"AcStop","","",4,null],[13,"AcRefresh","","",4,null],[13,"AcBookmarks","","",4,null],[13,"BrightnessDown","","",4,null],[13,"BrightnessUp","","",4,null],[13,"DisplaySwitch","","",4,null],[13,"KbdIllumToggle","","",4,null],[13,"KbdIllumDown","","",4,null],[13,"KbdIllumUp","","",4,null],[13,"Eject","","",4,null],[13,"Sleep","","",4,null],[0,"mouse","piston","Back-end agnostic mouse buttons.",null,null],[4,"MouseButton","piston::mouse","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",5,null],[13,"Left","","Left mouse button.",5,null],[13,"Right","","Right mouse button.",5,null],[13,"Middle","","Middle mouse button.",5,null],[13,"X1","","Extra mouse button number 1.",5,null],[13,"X2","","Extra mouse button number 2.",5,null],[13,"Button6","","Mouse button number 6.",5,null],[13,"Button7","","Mouse button number 7.",5,null],[13,"Button8","","Mouse button number 8.",5,null],[8,"MouseCursorEvent","","The position of the mouse cursor.",null,null],[10,"from_pos","","Creates a mouse cursor event.",6,[[],["option",4]]],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",6,[[],["option",4]]],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",6,[[],["option",4]]],[8,"MouseRelativeEvent","","The relative movement of mouse cursor.",null,null],[10,"from_pos","","Creates a mouse relative event.",7,[[],["option",4]]],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",7,[[],["option",4]]],[11,"mouse_relative_args","","Returns mouse relative arguments.",7,[[],["option",4]]],[8,"MouseScrollEvent","","The scroll of the mouse wheel.",null,null],[10,"from_pos","","Creates a mouse scroll event.",8,[[],["option",4]]],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",8,[[],["option",4]]],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",8,[[],["option",4]]],[0,"event_id","piston","Event identifiers.",null,null],[17,"AFTER_RENDER","piston::event_id","Event id for after render event.",null,null],[17,"CONTROLLER_AXIS","","Event id for controller axis event.",null,null],[17,"CURSOR","","Event id for cursor event.",null,null],[17,"FOCUS","","Event id for focus event.",null,null],[17,"CLOSE","","Event id for close event.",null,null],[17,"IDLE","","Event id for idle event.",null,null],[17,"MOUSE_SCROLL","","Event id for mouse scroll event.",null,null],[17,"MOUSE_RELATIVE","","Event id for mouse relative event.",null,null],[17,"MOUSE_CURSOR","","Event id for mouse cursor event.",null,null],[17,"BUTTON","","Event id for button event.",null,null],[17,"RENDER","","Event id for render event.",null,null],[17,"RESIZE","","Event id for resize event.",null,null],[17,"TEXT","","Event id for text event.",null,null],[17,"TOUCH","","Event id for touch event.",null,null],[17,"UPDATE","","Event id for update event.",null,null],[17,"FILE_DRAG","","Event id for file drag event.",null,null],[3,"EventId","","Used to identify events arguments provided by traits.",null,null],[12,"0","","",9,null],[0,"generic_event","piston","Trait for generic events",null,null],[8,"GenericEvent","piston::generic_event","Implemented by all events.",null,null],[10,"event_id","","The id of this event.",10,[[],["eventid",3]]],[10,"with_args","","Calls closure with arguments",10,[[]]],[10,"time_stamp","","Gets the time stamp of this event.",10,[[],[["u32",15],["option",4]]]],[6,"TimeStamp","piston","The type of time stamp.",null,null],[4,"Button","","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",11,null],[13,"Mouse","","A mouse button.",11,null],[13,"Controller","","A controller button.",11,null],[13,"Hat","","A controller hat (d-Pad)",11,null],[4,"Motion","","Models different kinds of motion.",null,null],[13,"MouseCursor","","Position in window coordinates.",12,null],[13,"MouseRelative","","Position in relative coordinates.",12,null],[13,"MouseScroll","","Position in scroll ticks.",12,null],[13,"ControllerAxis","","Controller axis move event.",12,null],[13,"Touch","","Touch event.",12,null],[4,"HatState","","Stores controller hat state.",null,null],[13,"Centered","","Centered (no direction).",13,null],[13,"Up","","Up direction.",13,null],[13,"Right","","Right direction.",13,null],[13,"Down","","Down direction.",13,null],[13,"Left","","Left direction.",13,null],[13,"RightUp","","Right-up direction.",13,null],[13,"RightDown","","Right-down direction.",13,null],[13,"LeftUp","","Left-up direction.",13,null],[13,"LeftDown","","Left-down direction.",13,null],[4,"FileDrag","","Models dragging and dropping files.",null,null],[13,"Hover","","A file is being hovered over the window.",14,null],[13,"Drop","","A file has been dropped into the window.",14,null],[13,"Cancel","","A file was hovered, but has exited the window.",14,null],[4,"Input","","Models input events.",null,null],[13,"Button","","Changed button state.",15,null],[13,"Move","","Moved mouse cursor.",15,null],[13,"Text","","Text (usually from keyboard).",15,null],[13,"Resize","","Window got resized.",15,null],[13,"Focus","","Window gained or lost focus.",15,null],[13,"Cursor","","Window gained or lost cursor.",15,null],[13,"FileDrag","","A file is being dragged or dropped over the window.",15,null],[13,"Close","","Window closed.",15,null],[4,"Loop","","Models loop events.",null,null],[13,"Render","","Render graphics.",16,null],[13,"AfterRender","","After rendering and swapping buffers.",16,null],[13,"Update","","Update the state of the application.",16,null],[13,"Idle","","Do background tasks that can be done incrementally.",16,null],[4,"Event","","Models all events.",null,null],[13,"Input","","Input events.",17,null],[13,"Loop","","Events that commonly used by event loops.",17,null],[13,"Custom","","Custom event.",17,null],[4,"MouseButton","","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",5,null],[13,"Left","","Left mouse button.",5,null],[13,"Right","","Right mouse button.",5,null],[13,"Middle","","Middle mouse button.",5,null],[13,"X1","","Extra mouse button number 1.",5,null],[13,"X2","","Extra mouse button number 2.",5,null],[13,"Button6","","Mouse button number 6.",5,null],[13,"Button7","","Mouse button number 7.",5,null],[13,"Button8","","Mouse button number 8.",5,null],[4,"Key","","Represent a keyboard key. Keycodes follows SDL …",null,null],[13,"Unknown","","",4,null],[13,"Backspace","","",4,null],[13,"Tab","","",4,null],[13,"Return","","",4,null],[13,"Escape","","",4,null],[13,"Space","","",4,null],[13,"Exclaim","","",4,null],[13,"Quotedbl","","",4,null],[13,"Hash","","",4,null],[13,"Dollar","","",4,null],[13,"Percent","","",4,null],[13,"Ampersand","","",4,null],[13,"Quote","","",4,null],[13,"LeftParen","","",4,null],[13,"RightParen","","",4,null],[13,"Asterisk","","",4,null],[13,"Plus","","",4,null],[13,"Comma","","",4,null],[13,"Minus","","",4,null],[13,"Period","","",4,null],[13,"Slash","","",4,null],[13,"D0","","",4,null],[13,"D1","","",4,null],[13,"D2","","",4,null],[13,"D3","","",4,null],[13,"D4","","",4,null],[13,"D5","","",4,null],[13,"D6","","",4,null],[13,"D7","","",4,null],[13,"D8","","",4,null],[13,"D9","","",4,null],[13,"Colon","","",4,null],[13,"Semicolon","","",4,null],[13,"Less","","",4,null],[13,"Equals","","",4,null],[13,"Greater","","",4,null],[13,"Question","","",4,null],[13,"At","","",4,null],[13,"LeftBracket","","",4,null],[13,"Backslash","","",4,null],[13,"RightBracket","","",4,null],[13,"Caret","","",4,null],[13,"Underscore","","",4,null],[13,"Backquote","","",4,null],[13,"A","","",4,null],[13,"B","","",4,null],[13,"C","","",4,null],[13,"D","","",4,null],[13,"E","","",4,null],[13,"F","","",4,null],[13,"G","","",4,null],[13,"H","","",4,null],[13,"I","","",4,null],[13,"J","","",4,null],[13,"K","","",4,null],[13,"L","","",4,null],[13,"M","","",4,null],[13,"N","","",4,null],[13,"O","","",4,null],[13,"P","","",4,null],[13,"Q","","",4,null],[13,"R","","",4,null],[13,"S","","",4,null],[13,"T","","",4,null],[13,"U","","",4,null],[13,"V","","",4,null],[13,"W","","",4,null],[13,"X","","",4,null],[13,"Y","","",4,null],[13,"Z","","",4,null],[13,"Delete","","",4,null],[13,"CapsLock","","",4,null],[13,"F1","","",4,null],[13,"F2","","",4,null],[13,"F3","","",4,null],[13,"F4","","",4,null],[13,"F5","","",4,null],[13,"F6","","",4,null],[13,"F7","","",4,null],[13,"F8","","",4,null],[13,"F9","","",4,null],[13,"F10","","",4,null],[13,"F11","","",4,null],[13,"F12","","",4,null],[13,"PrintScreen","","",4,null],[13,"ScrollLock","","",4,null],[13,"Pause","","",4,null],[13,"Insert","","",4,null],[13,"Home","","",4,null],[13,"PageUp","","",4,null],[13,"End","","",4,null],[13,"PageDown","","",4,null],[13,"Right","","",4,null],[13,"Left","","",4,null],[13,"Down","","",4,null],[13,"Up","","",4,null],[13,"NumLockClear","","",4,null],[13,"NumPadDivide","","",4,null],[13,"NumPadMultiply","","",4,null],[13,"NumPadMinus","","",4,null],[13,"NumPadPlus","","",4,null],[13,"NumPadEnter","","",4,null],[13,"NumPad1","","",4,null],[13,"NumPad2","","",4,null],[13,"NumPad3","","",4,null],[13,"NumPad4","","",4,null],[13,"NumPad5","","",4,null],[13,"NumPad6","","",4,null],[13,"NumPad7","","",4,null],[13,"NumPad8","","",4,null],[13,"NumPad9","","",4,null],[13,"NumPad0","","",4,null],[13,"NumPadPeriod","","",4,null],[13,"Application","","",4,null],[13,"Power","","",4,null],[13,"NumPadEquals","","",4,null],[13,"F13","","",4,null],[13,"F14","","",4,null],[13,"F15","","",4,null],[13,"F16","","",4,null],[13,"F17","","",4,null],[13,"F18","","",4,null],[13,"F19","","",4,null],[13,"F20","","",4,null],[13,"F21","","",4,null],[13,"F22","","",4,null],[13,"F23","","",4,null],[13,"F24","","",4,null],[13,"Execute","","",4,null],[13,"Help","","",4,null],[13,"Menu","","",4,null],[13,"Select","","",4,null],[13,"Stop","","",4,null],[13,"Again","","",4,null],[13,"Undo","","",4,null],[13,"Cut","","",4,null],[13,"Copy","","",4,null],[13,"Paste","","",4,null],[13,"Find","","",4,null],[13,"Mute","","",4,null],[13,"VolumeUp","","",4,null],[13,"VolumeDown","","",4,null],[13,"NumPadComma","","",4,null],[13,"NumPadEqualsAS400","","",4,null],[13,"AltErase","","",4,null],[13,"Sysreq","","",4,null],[13,"Cancel","","",4,null],[13,"Clear","","",4,null],[13,"Prior","","",4,null],[13,"Return2","","",4,null],[13,"Separator","","",4,null],[13,"Out","","",4,null],[13,"Oper","","",4,null],[13,"ClearAgain","","",4,null],[13,"CrSel","","",4,null],[13,"ExSel","","",4,null],[13,"NumPad00","","",4,null],[13,"NumPad000","","",4,null],[13,"ThousandsSeparator","","",4,null],[13,"DecimalSeparator","","",4,null],[13,"CurrencyUnit","","",4,null],[13,"CurrencySubUnit","","",4,null],[13,"NumPadLeftParen","","",4,null],[13,"NumPadRightParen","","",4,null],[13,"NumPadLeftBrace","","",4,null],[13,"NumPadRightBrace","","",4,null],[13,"NumPadTab","","",4,null],[13,"NumPadBackspace","","",4,null],[13,"NumPadA","","",4,null],[13,"NumPadB","","",4,null],[13,"NumPadC","","",4,null],[13,"NumPadD","","",4,null],[13,"NumPadE","","",4,null],[13,"NumPadF","","",4,null],[13,"NumPadXor","","",4,null],[13,"NumPadPower","","",4,null],[13,"NumPadPercent","","",4,null],[13,"NumPadLess","","",4,null],[13,"NumPadGreater","","",4,null],[13,"NumPadAmpersand","","",4,null],[13,"NumPadDblAmpersand","","",4,null],[13,"NumPadVerticalBar","","",4,null],[13,"NumPadDblVerticalBar","","",4,null],[13,"NumPadColon","","",4,null],[13,"NumPadHash","","",4,null],[13,"NumPadSpace","","",4,null],[13,"NumPadAt","","",4,null],[13,"NumPadExclam","","",4,null],[13,"NumPadMemStore","","",4,null],[13,"NumPadMemRecall","","",4,null],[13,"NumPadMemClear","","",4,null],[13,"NumPadMemAdd","","",4,null],[13,"NumPadMemSubtract","","",4,null],[13,"NumPadMemMultiply","","",4,null],[13,"NumPadMemDivide","","",4,null],[13,"NumPadPlusMinus","","",4,null],[13,"NumPadClear","","",4,null],[13,"NumPadClearEntry","","",4,null],[13,"NumPadBinary","","",4,null],[13,"NumPadOctal","","",4,null],[13,"NumPadDecimal","","",4,null],[13,"NumPadHexadecimal","","",4,null],[13,"LCtrl","","",4,null],[13,"LShift","","",4,null],[13,"LAlt","","",4,null],[13,"LGui","","",4,null],[13,"RCtrl","","",4,null],[13,"RShift","","",4,null],[13,"RAlt","","",4,null],[13,"RGui","","",4,null],[13,"Mode","","",4,null],[13,"AudioNext","","",4,null],[13,"AudioPrev","","",4,null],[13,"AudioStop","","",4,null],[13,"AudioPlay","","",4,null],[13,"AudioMute","","",4,null],[13,"MediaSelect","","",4,null],[13,"Www","","",4,null],[13,"Mail","","",4,null],[13,"Calculator","","",4,null],[13,"Computer","","",4,null],[13,"AcSearch","","",4,null],[13,"AcHome","","",4,null],[13,"AcBack","","",4,null],[13,"AcForward","","",4,null],[13,"AcStop","","",4,null],[13,"AcRefresh","","",4,null],[13,"AcBookmarks","","",4,null],[13,"BrightnessDown","","",4,null],[13,"BrightnessUp","","",4,null],[13,"DisplaySwitch","","",4,null],[13,"KbdIllumToggle","","",4,null],[13,"KbdIllumDown","","",4,null],[13,"KbdIllumUp","","",4,null],[13,"Eject","","",4,null],[13,"Sleep","","",4,null],[3,"ControllerAxisArgs","","Components of a controller axis move event. Not …",null,null],[12,"id","","Which controller moved.",2,null],[12,"axis","","The axis that moved.",2,null],[12,"position","","Position of the controller. Usually [-1.0, 1.0], though …",2,null],[3,"ControllerButton","","Components of a controller button event. Not guaranteed …",null,null],[12,"id","","Which controller was the button on.",0,null],[12,"button","","Which button was pressed.",0,null],[3,"ControllerHat","","Components of a controller hat move event (d-Pad).",null,null],[12,"id","","Which Controller was the button on.",1,null],[12,"state","","Which button was pressed.",1,null],[12,"which","","Which hat on the controller was changed",1,null],[3,"AfterRenderArgs","","After render arguments.",null,null],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",null,null],[10,"from_after_render_args","","Creates an after render event.",18,[[["afterrenderargs",3]],["option",4]]],[10,"after_render","","Calls closure if this is an after render event.",18,[[],["option",4]]],[11,"after_render_args","","Returns after render arguments.",18,[[],[["option",4],["afterrenderargs",3]]]],[3,"CloseArgs","","Close arguments.",null,null],[8,"CloseEvent","","Window is closing.",null,null],[10,"from_close_args","","Creates a close event from arguments.",19,[[["closeargs",3]],["option",4]]],[10,"close","","Calls closure if this is a close event.",19,[[],["option",4]]],[11,"close_args","","Returns close arguments.",19,[[],[["closeargs",3],["option",4]]]],[8,"ControllerAxisEvent","","The position of a controller axis changed.",null,null],[10,"from_controller_axis_args","","Creates a controller axis event.",3,[[["controlleraxisargs",3]],["option",4]]],[10,"controller_axis","","Calls closure if this is a controller axis event.",3,[[],["option",4]]],[11,"controller_axis_args","","Returns controller axis arguments.",3,[[],[["option",4],["controlleraxisargs",3]]]],[8,"CursorEvent","","When window gets or loses cursor.",null,null],[10,"from_cursor","","Creates a cursor event.",20,[[["bool",15]],["option",4]]],[10,"cursor","","Calls closure if this is a cursor event.",20,[[],["option",4]]],[11,"cursor_args","","Returns cursor arguments.",20,[[],[["option",4],["bool",15]]]],[8,"FocusEvent","","When window gets or loses focus.",null,null],[10,"from_focused","","Creates a focus event.",21,[[["bool",15]],["option",4]]],[10,"focus","","Calls closure if this is a focus event.",21,[[],["option",4]]],[11,"focus_args","","Returns focus arguments.",21,[[],[["option",4],["bool",15]]]],[8,"GenericEvent","","Implemented by all events.",null,null],[10,"event_id","","The id of this event.",10,[[],["eventid",3]]],[10,"with_args","","Calls closure with arguments",10,[[]]],[10,"time_stamp","","Gets the time stamp of this event.",10,[[],[["u32",15],["option",4]]]],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",null,null],[12,"dt","","Expected idle time in seconds.",22,null],[8,"IdleEvent","","When background tasks should be performed.",null,null],[10,"from_idle_args","","Creates an idle event.",23,[[["idleargs",3]],["option",4]]],[11,"from_dt","","Creates an update event with delta time.",23,[[["f64",15]],["option",4]]],[10,"idle","","Calls closure if this is an idle event.",23,[[],["option",4]]],[11,"idle_args","","Returns idle arguments.",23,[[],[["option",4],["idleargs",3]]]],[8,"MouseCursorEvent","","The position of the mouse cursor.",null,null],[10,"from_pos","","Creates a mouse cursor event.",6,[[],["option",4]]],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",6,[[],["option",4]]],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",6,[[],["option",4]]],[8,"MouseRelativeEvent","","The relative movement of mouse cursor.",null,null],[10,"from_pos","","Creates a mouse relative event.",7,[[],["option",4]]],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",7,[[],["option",4]]],[11,"mouse_relative_args","","Returns mouse relative arguments.",7,[[],["option",4]]],[8,"MouseScrollEvent","","The scroll of the mouse wheel.",null,null],[10,"from_pos","","Creates a mouse scroll event.",8,[[],["option",4]]],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",8,[[],["option",4]]],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",8,[[],["option",4]]],[4,"ButtonState","","Stores button state.",null,null],[13,"Press","","Button was pressed.",24,null],[13,"Release","","Button was released.",24,null],[3,"ButtonArgs","","Button arguments.",null,null],[12,"state","","New state of the button.",25,null],[12,"button","","The button that changed state.",25,null],[12,"scancode","","An optional scancode that tells the physical layout of a …",25,null],[8,"ButtonEvent","","Changed button state.",null,null],[10,"from_button_args","","Creates a button event.",26,[[["buttonargs",3]],["option",4]]],[10,"button","","Calls closure if this is a button event.",26,[[],["option",4]]],[11,"button_args","","Returns button arguments.",26,[[],[["option",4],["buttonargs",3]]]],[8,"PressEvent","","The press of a button.",null,null],[10,"from_button","","Creates a press event.",27,[[["button",4]],["option",4]]],[10,"press","","Calls closure if this is a press event.",27,[[],["option",4]]],[11,"press_args","","Returns press arguments.",27,[[],[["option",4],["button",4]]]],[8,"ReleaseEvent","","The release of a button.",null,null],[10,"from_button","","Creates a release event.",28,[[["button",4]],["option",4]]],[10,"release","","Calls closure if this is a release event.",28,[[],["option",4]]],[11,"release_args","","Returns release arguments.",28,[[],[["option",4],["button",4]]]],[3,"ResizeArgs","","Resize arguments.",null,null],[12,"window_size","","The width and height of rendered area in points.",29,null],[12,"draw_size","","The width of rendered area in pixels.",29,null],[8,"ResizeEvent","","When the window is resized.",null,null],[10,"from_resize_args","","Creates a resize event.",30,[[["resizeargs",3]],["option",4]]],[10,"resize","","Calls closure if this is a resize event.",30,[[],["option",4]]],[11,"resize_args","","Returns resize arguments.",30,[[],[["resizeargs",3],["option",4]]]],[3,"RenderArgs","","Render arguments.",null,null],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",31,null],[12,"window_size","","The width and height of rendered area in points.",31,null],[12,"draw_size","","The width and height of rendered area in pixels.",31,null],[8,"RenderEvent","","When the next frame should be rendered.",null,null],[10,"from_render_args","","Creates a render event.",32,[[["renderargs",3]],["option",4]]],[10,"render","","Calls closure if this is a render event.",32,[[],["option",4]]],[11,"render_args","","Returns render arguments.",32,[[],[["option",4],["renderargs",3]]]],[8,"TextEvent","","When receiving text from user, such as typing a character.",null,null],[10,"from_text","","Creates a text event.",33,[[["str",15]],["option",4]]],[10,"text","","Calls closure if this is a text event.",33,[[],["option",4]]],[11,"text_args","","Returns text arguments.",33,[[],[["string",3],["option",4]]]],[4,"Touch","","Stores the touch state.",null,null],[13,"Start","","The start of touch, for example a finger pressed down on …",34,null],[13,"Move","","The move of touch, for example a finger moving while …",34,null],[13,"End","","The end of touch, for example taking a finger away from a …",34,null],[13,"Cancel","","The cancel of touch, for example the window loses focus.",34,null],[3,"TouchArgs","","Touch arguments",null,null],[12,"device","","A unique identifier for touch device.",35,null],[12,"id","","A unique identifier for touch event.",35,null],[12,"position_3d","","The touch position, normalized 0..1.",35,null],[12,"pressure_3d","","The touch pressure vector, normalized 0..1.",35,null],[12,"is_3d","","Whether the touch is in 3D.",35,null],[12,"touch","","The touch state.",35,null],[8,"TouchEvent","","When a touch is started, moved, ended or cancelled.",null,null],[10,"from_touch_args","","Creates a touch event.",36,[[["touchargs",3]],["option",4]]],[10,"touch","","Calls closure if this is a touch event.",36,[[],["option",4]]],[11,"touch_args","","Returns touch arguments.",36,[[],[["option",4],["touchargs",3]]]],[3,"UpdateArgs","","Update arguments, such as delta time in seconds.",null,null],[12,"dt","","Delta time in seconds.",37,null],[8,"UpdateEvent","","When the application state should be updated.",null,null],[10,"from_update_args","","Creates an update event.",38,[[["updateargs",3]],["option",4]]],[11,"from_dt","","Creates an update event with delta time.",38,[[["f64",15]],["option",4]]],[10,"update","","Calls closure if this is an update event.",38,[[],["option",4]]],[11,"update_args","","Returns update arguments.",38,[[],[["updateargs",3],["option",4]]]],[3,"EventSettings","","Stores event loop settings.",null,null],[12,"max_fps","","The maximum number of frames per second",39,null],[12,"ups","","The number of updates per second",39,null],[12,"ups_reset","","The number of delayed updates before skipping them to …",39,null],[12,"swap_buffers","","Enable or disable automatic swapping of buffers.",39,null],[12,"bench_mode","","Enable or disable benchmark mode. When enabled, it will …",39,null],[12,"lazy","","Enable or disable rendering only when receiving input. …",39,null],[3,"Events","","An event loop iterator",null,null],[17,"DEFAULT_UPS","","The default updates per second.",null,null],[17,"DEFAULT_UPS_RESET","","The default delayed updates reset.",null,null],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second.",null,null],[8,"EventLoop","","Methods implemented for changing event loop settings.",null,null],[10,"get_event_settings","","Returns event loop settings.",40,[[],["eventsettings",3]]],[10,"set_event_settings","","Sets event loop settings.",40,[[["eventsettings",3]]]],[11,"set_ups","","The number of updates per second",40,[[["u64",15]]]],[11,"ups","","The number of updates per second",40,[[["u64",15]]]],[11,"set_ups_reset","","The number of delayed updates before skipping them to …",40,[[["u64",15]]]],[11,"ups_reset","","The number of delayed updates before skipping them to …",40,[[["u64",15]]]],[11,"set_max_fps","","The maximum number of frames per second",40,[[["u64",15]]]],[11,"max_fps","","The maximum number of frames per second",40,[[["u64",15]]]],[11,"set_swap_buffers","","Enable or disable automatic swapping of buffers.",40,[[["bool",15]]]],[11,"swap_buffers","","Enable or disable automatic swapping of buffers.",40,[[["bool",15]]]],[11,"set_bench_mode","","Enable or disable benchmark mode. When enabled, it will …",40,[[["bool",15]]]],[11,"bench_mode","","Enable or disable benchmark mode. When enabled, it will …",40,[[["bool",15]]]],[11,"set_lazy","","Enable or disable rendering only when receiving input. …",40,[[["bool",15]]]],[11,"lazy","","Enable or disable rendering only when receiving input. …",40,[[["bool",15]]]],[6,"ProcAddress","","The type of an OpenGL function address.",null,null],[3,"Size","","Structure to store the window size.",null,null],[12,"width","","The width.",41,null],[12,"height","","The height.",41,null],[3,"Position","","Structure to store the window position.",null,null],[12,"x","","The x coordinate.",42,null],[12,"y","","The y coordinate.",42,null],[8,"BuildFromWindowSettings","","Constructs a window from a <code>WindowSettings</code> object.",null,null],[10,"build_from_window_settings","","Builds the window from a <code>WindowSettings</code> object.",43,[[["windowsettings",3]],[["box",3],["result",4]]]],[8,"Window","","Trait representing the minimum requirements for defining …",null,null],[10,"set_should_close","","Tells the window to close or stay open.",44,[[["bool",15]]]],[10,"should_close","","Returns true if the window should close.",44,[[],["bool",15]]],[10,"size","","Gets the size of the window.",44,[[],["size",3]]],[10,"swap_buffers","","Swaps render buffers.",44,[[]]],[10,"wait_event","","Wait indefinitely for an input event to be available from …",44,[[],["event",4]]],[10,"wait_event_timeout","","Wait for an input event to be available from the window …",44,[[["duration",3]],[["event",4],["option",4]]]],[10,"poll_event","","Polls an input event from the window.",44,[[],[["event",4],["option",4]]]],[10,"draw_size","","Gets the draw size of the window.",44,[[],["size",3]]],[8,"AdvancedWindow","","Trait representing a window with the most features that …",null,null],[10,"get_title","","Gets a copy of the title of the window.",45,[[],["string",3]]],[10,"set_title","","Sets the title of the window.",45,[[["string",3]]]],[11,"title","","Sets title on window.",45,[[["string",3]]]],[10,"get_exit_on_esc","","Gets whether to exit when pressing esc.",45,[[],["bool",15]]],[10,"set_exit_on_esc","","Sets whether to exit when pressing esc.",45,[[["bool",15]]]],[11,"exit_on_esc","","Sets whether to exit when pressing the Esc button.",45,[[["bool",15]]]],[10,"get_automatic_close","","Gets whether the window will automatically close when …",45,[[],["bool",15]]],[10,"set_automatic_close","","Sets whether the window will automatically close when …",45,[[["bool",15]]]],[11,"automatic_close","","Sets whether the window will automatically close when …",45,[[["bool",15]]]],[10,"set_capture_cursor","","Sets whether to capture/grab the cursor.",45,[[["bool",15]]]],[11,"capture_cursor","","Sets whether to capture/grab the cursor.",45,[[["bool",15]]]],[10,"show","","Shows the window.",45,[[]]],[10,"hide","","Hides the window.",45,[[]]],[10,"get_position","","Gets the position of window.",45,[[],[["position",3],["option",4]]]],[10,"set_position","","Sets the position of window.",45,[[]]],[10,"set_size","","Sets the window size.",45,[[]]],[11,"position","","Sets the position of window.",45,[[]]],[8,"OpenGLWindow","","Trait for OpenGL specific operations on a window.",null,null],[10,"get_proc_address","","Returns the address of the specified OpenGL function if …",46,[[["str",15]]]],[10,"is_current","","Returns true if this window\'s gl context is the current …",46,[[],["bool",15]]],[10,"make_current","","Make the window\'s gl context the current gl context.",46,[[]]],[3,"WindowSettings","","Settings structure for window behavior.",null,null],[3,"Api","","Stores graphics API version.",null,null],[12,"api","","A string identifying the API.",47,null],[12,"major","","Major version.",47,null],[12,"minor","","Minor version.",47,null],[3,"UnsupportedGraphicsApiError","","An error for when a graphics API is unsupported.",null,null],[12,"found","","The requiested graphics API.",48,null],[12,"expected","","A list of supported graphics APIs.",48,null],[3,"NoWindow","","A window without user interface, often used in server …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","piston::keyboard","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","piston","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","piston::event_id","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","piston","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from_button","","",17,[[["button",4]],["option",4]]],[11,"press","","",17,[[],["option",4]]],[11,"from_button","","",17,[[["button",4]],["option",4]]],[11,"release","","",17,[[],["option",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","piston::event_id","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","piston","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","piston::keyboard","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","piston","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",11,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",34,[[]]],[11,"hash","piston::keyboard","",49,[[]]],[11,"hash","piston","",25,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",5,[[]]],[11,"hash","piston::event_id","",9,[[]]],[11,"hash","piston","",1,[[]]],[11,"from_pos","","",17,[[["event",4]],[["event",4],["option",4]]]],[11,"mouse_scroll","","",17,[[],["option",4]]],[11,"partial_cmp","","",37,[[["updateargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",37,[[["updateargs",3]],["bool",15]]],[11,"le","","",37,[[["updateargs",3]],["bool",15]]],[11,"gt","","",37,[[["updateargs",3]],["bool",15]]],[11,"ge","","",37,[[["updateargs",3]],["bool",15]]],[11,"partial_cmp","","",1,[[["controllerhat",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["controllerhat",3]],["bool",15]]],[11,"le","","",1,[[["controllerhat",3]],["bool",15]]],[11,"gt","","",1,[[["controllerhat",3]],["bool",15]]],[11,"ge","","",1,[[["controllerhat",3]],["bool",15]]],[11,"partial_cmp","","",17,[[["event",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",25,[[["buttonargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",25,[[["buttonargs",3]],["bool",15]]],[11,"le","","",25,[[["buttonargs",3]],["bool",15]]],[11,"gt","","",25,[[["buttonargs",3]],["bool",15]]],[11,"ge","","",25,[[["buttonargs",3]],["bool",15]]],[11,"partial_cmp","","",13,[[["hatstate",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",12,[[["motion",4]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["motion",4]],["bool",15]]],[11,"le","","",12,[[["motion",4]],["bool",15]]],[11,"gt","","",12,[[["motion",4]],["bool",15]]],[11,"ge","","",12,[[["motion",4]],["bool",15]]],[11,"partial_cmp","","",31,[[["renderargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",31,[[["renderargs",3]],["bool",15]]],[11,"le","","",31,[[["renderargs",3]],["bool",15]]],[11,"gt","","",31,[[["renderargs",3]],["bool",15]]],[11,"ge","","",31,[[["renderargs",3]],["bool",15]]],[11,"partial_cmp","","",15,[[["input",4]],[["option",4],["ordering",4]]]],[11,"lt","","",15,[[["input",4]],["bool",15]]],[11,"le","","",15,[[["input",4]],["bool",15]]],[11,"gt","","",15,[[["input",4]],["bool",15]]],[11,"ge","","",15,[[["input",4]],["bool",15]]],[11,"partial_cmp","","",0,[[["controllerbutton",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["controllerbutton",3]],["bool",15]]],[11,"le","","",0,[[["controllerbutton",3]],["bool",15]]],[11,"gt","","",0,[[["controllerbutton",3]],["bool",15]]],[11,"ge","","",0,[[["controllerbutton",3]],["bool",15]]],[11,"partial_cmp","","",2,[[["controlleraxisargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"le","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"gt","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"ge","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"partial_cmp","","",24,[[["buttonstate",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["key",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","piston::event_id","",9,[[["eventid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["eventid",3]],["bool",15]]],[11,"le","","",9,[[["eventid",3]],["bool",15]]],[11,"gt","","",9,[[["eventid",3]],["bool",15]]],[11,"ge","","",9,[[["eventid",3]],["bool",15]]],[11,"partial_cmp","piston","",16,[[["loop",4]],[["option",4],["ordering",4]]]],[11,"lt","","",16,[[["loop",4]],["bool",15]]],[11,"le","","",16,[[["loop",4]],["bool",15]]],[11,"gt","","",16,[[["loop",4]],["bool",15]]],[11,"ge","","",16,[[["loop",4]],["bool",15]]],[11,"partial_cmp","","",51,[[["closeargs",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",14,[[["filedrag",4]],[["option",4],["ordering",4]]]],[11,"lt","","",14,[[["filedrag",4]],["bool",15]]],[11,"le","","",14,[[["filedrag",4]],["bool",15]]],[11,"gt","","",14,[[["filedrag",4]],["bool",15]]],[11,"ge","","",14,[[["filedrag",4]],["bool",15]]],[11,"partial_cmp","","",34,[[["touch",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",22,[[["idleargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["idleargs",3]],["bool",15]]],[11,"le","","",22,[[["idleargs",3]],["bool",15]]],[11,"gt","","",22,[[["idleargs",3]],["bool",15]]],[11,"ge","","",22,[[["idleargs",3]],["bool",15]]],[11,"partial_cmp","","",35,[[["touchargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",35,[[["touchargs",3]],["bool",15]]],[11,"le","","",35,[[["touchargs",3]],["bool",15]]],[11,"gt","","",35,[[["touchargs",3]],["bool",15]]],[11,"ge","","",35,[[["touchargs",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["mousebutton",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",29,[[["resizeargs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["resizeargs",3]],["bool",15]]],[11,"le","","",29,[[["resizeargs",3]],["bool",15]]],[11,"gt","","",29,[[["resizeargs",3]],["bool",15]]],[11,"ge","","",29,[[["resizeargs",3]],["bool",15]]],[11,"partial_cmp","piston::keyboard","",49,[[["modifierkey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",49,[[["modifierkey",3]],["bool",15]]],[11,"le","","",49,[[["modifierkey",3]],["bool",15]]],[11,"gt","","",49,[[["modifierkey",3]],["bool",15]]],[11,"ge","","",49,[[["modifierkey",3]],["bool",15]]],[11,"partial_cmp","piston","",50,[[["afterrenderargs",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",11,[[["button",4]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["button",4]],["bool",15]]],[11,"le","","",11,[[["button",4]],["bool",15]]],[11,"gt","","",11,[[["button",4]],["bool",15]]],[11,"ge","","",11,[[["button",4]],["bool",15]]],[11,"from_touch_args","","",17,[[["event",4],["touchargs",3]],[["event",4],["option",4]]]],[11,"touch","","",17,[[],["option",4]]],[11,"fmt","piston::keyboard","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_close_args","piston","",17,[[["closeargs",3],["event",4]],[["event",4],["option",4]]]],[11,"close","","",17,[[],["option",4]]],[11,"from","","",16,[[["updateargs",3]],["loop",4]]],[11,"from","","",15,[[["buttonargs",3]],["input",4]]],[11,"from","","",11,[[["controllerbutton",3]],["button",4]]],[11,"from","","",12,[[["touchargs",3]],["motion",4]]],[11,"from","","",11,[[["key",4]],["button",4]]],[11,"from","","",17,[[["loop",4]],["event",4]]],[11,"from","","",17,[[["renderargs",3]],["event",4]]],[11,"from","","",15,[[["controlleraxisargs",3]],["input",4]]],[11,"from","","",15,[[["closeargs",3]],["input",4]]],[11,"from","","",17,[[["idleargs",3]],["event",4]]],[11,"from","","",11,[[["mousebutton",4]],["button",4]]],[11,"from","","",15,[[["motion",4]],["input",4]]],[11,"from","","",4,[[["u32",15]],["key",4]]],[11,"from","","",17,[[],["event",4]]],[11,"from","","",17,[[["updateargs",3]],["event",4]]],[11,"from","","",17,[[],["event",4]]],[11,"from","","",5,[[["u32",15]],["mousebutton",4]]],[11,"from","","",15,[[["touchargs",3]],["input",4]]],[11,"from","","",17,[[["afterrenderargs",3]],["event",4]]],[11,"from","","",12,[[["controlleraxisargs",3]],["motion",4]]],[11,"from","","",16,[[["afterrenderargs",3]],["loop",4]]],[11,"from","","",16,[[["idleargs",3]],["loop",4]]],[11,"from","","",16,[[["renderargs",3]],["loop",4]]],[11,"from_text","","",17,[[["event",4],["str",15]],[["event",4],["option",4]]]],[11,"text","","",17,[[],["option",4]]],[11,"default","piston::keyboard","",49,[[],["modifierkey",3]]],[11,"clone","","",49,[[],["modifierkey",3]]],[11,"clone","piston","",22,[[],["idleargs",3]]],[11,"clone","","",37,[[],["updateargs",3]]],[11,"clone","","",17,[[],["event",4]]],[11,"clone","","",12,[[],["motion",4]]],[11,"clone","","",35,[[],["touchargs",3]]],[11,"clone","","",0,[[],["controllerbutton",3]]],[11,"clone","","",4,[[],["key",4]]],[11,"clone","","",11,[[],["button",4]]],[11,"clone","","",25,[[],["buttonargs",3]]],[11,"clone","","",2,[[],["controlleraxisargs",3]]],[11,"clone","","",14,[[],["filedrag",4]]],[11,"clone","","",29,[[],["resizeargs",3]]],[11,"clone","","",5,[[],["mousebutton",4]]],[11,"clone","","",15,[[],["input",4]]],[11,"clone","","",51,[[],["closeargs",3]]],[11,"clone","piston::event_id","",9,[[],["eventid",3]]],[11,"clone","piston","",34,[[],["touch",4]]],[11,"clone","","",16,[[],["loop",4]]],[11,"clone","","",31,[[],["renderargs",3]]],[11,"clone","","",24,[[],["buttonstate",4]]],[11,"clone","","",13,[[],["hatstate",4]]],[11,"clone","","",1,[[],["controllerhat",3]]],[11,"clone","","",50,[[],["afterrenderargs",3]]],[11,"from_iter","piston::keyboard","",49,[[],["modifierkey",3]]],[11,"cmp","piston","",5,[[["mousebutton",4]],["ordering",4]]],[11,"cmp","","",50,[[["afterrenderargs",3]],["ordering",4]]],[11,"cmp","","",51,[[["closeargs",3]],["ordering",4]]],[11,"cmp","","",11,[[["button",4]],["ordering",4]]],[11,"cmp","","",13,[[["hatstate",4]],["ordering",4]]],[11,"cmp","piston::keyboard","",49,[[["modifierkey",3]],["ordering",4]]],[11,"cmp","piston","",1,[[["controllerhat",3]],["ordering",4]]],[11,"cmp","","",34,[[["touch",4]],["ordering",4]]],[11,"cmp","","",25,[[["buttonargs",3]],["ordering",4]]],[11,"cmp","","",14,[[["filedrag",4]],["ordering",4]]],[11,"cmp","piston::event_id","",9,[[["eventid",3]],["ordering",4]]],[11,"cmp","piston","",24,[[["buttonstate",4]],["ordering",4]]],[11,"cmp","","",0,[[["controllerbutton",3]],["ordering",4]]],[11,"cmp","","",4,[[["key",4]],["ordering",4]]],[11,"from_button_args","","",17,[[["event",4],["buttonargs",3]],[["event",4],["option",4]]]],[11,"button","","",17,[[],["option",4]]],[11,"from_update_args","","",17,[[["event",4],["updateargs",3]],[["event",4],["option",4]]]],[11,"update","","",17,[[],["option",4]]],[11,"bitxor_assign","piston::keyboard","Toggles the set of flags.",49,[[["modifierkey",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_cursor","piston","",17,[[["bool",15],["event",4]],[["event",4],["option",4]]]],[11,"cursor","","",17,[[],["option",4]]],[11,"from_render_args","","",17,[[["event",4],["renderargs",3]],[["event",4],["option",4]]]],[11,"render","","",17,[[],["option",4]]],[11,"fmt","piston::keyboard","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_pos","piston","",17,[[["event",4]],[["event",4],["option",4]]]],[11,"mouse_relative","","",17,[[],["option",4]]],[11,"from_controller_axis_args","","",17,[[["event",4],["controlleraxisargs",3]],[["event",4],["option",4]]]],[11,"controller_axis","","",17,[[],["option",4]]],[11,"sub_assign","piston::keyboard","Disables all flags enabled in the set.",49,[[["modifierkey",3]]]],[11,"event_id","piston","",17,[[],["eventid",3]]],[11,"with_args","","",17,[[]]],[11,"time_stamp","","",17,[[],[["u32",15],["option",4]]]],[11,"bitor","piston::keyboard","Returns the union of the two sets of flags.",49,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",49,[[["modifierkey",3]],["modifierkey",3]]],[11,"not","","Returns the complement of this set of flags.",49,[[],["modifierkey",3]]],[11,"serialize","piston","",35,[[],["result",4]]],[11,"serialize","","",50,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","piston::keyboard","",49,[[],["result",4]]],[11,"serialize","piston","",34,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"from_focused","","",17,[[["bool",15],["event",4]],[["event",4],["option",4]]]],[11,"focus","","",17,[[],["option",4]]],[11,"extend","piston::keyboard","",49,[[]]],[11,"from_resize_args","piston","",17,[[["resizeargs",3],["event",4]],[["event",4],["option",4]]]],[11,"resize","","",17,[[],["option",4]]],[11,"bitor_assign","piston::keyboard","Adds the set of flags.",49,[[["modifierkey",3]]]],[11,"deserialize","piston","",14,[[],[["filedrag",4],["result",4]]]],[11,"deserialize","","",12,[[],[["result",4],["motion",4]]]],[11,"deserialize","","",24,[[],[["result",4],["buttonstate",4]]]],[11,"deserialize","","",50,[[],[["afterrenderargs",3],["result",4]]]],[11,"deserialize","","",51,[[],[["closeargs",3],["result",4]]]],[11,"deserialize","","",4,[[],[["key",4],["result",4]]]],[11,"deserialize","","",2,[[],[["result",4],["controlleraxisargs",3]]]],[11,"deserialize","","",31,[[],[["renderargs",3],["result",4]]]],[11,"deserialize","","",29,[[],[["result",4],["resizeargs",3]]]],[11,"deserialize","","",13,[[],[["result",4],["hatstate",4]]]],[11,"deserialize","","",37,[[],[["result",4],["updateargs",3]]]],[11,"deserialize","","",25,[[],[["result",4],["buttonargs",3]]]],[11,"deserialize","","",0,[[],[["controllerbutton",3],["result",4]]]],[11,"deserialize","","",35,[[],[["result",4],["touchargs",3]]]],[11,"deserialize","","",1,[[],[["controllerhat",3],["result",4]]]],[11,"deserialize","","",11,[[],[["result",4],["button",4]]]],[11,"deserialize","","",22,[[],[["idleargs",3],["result",4]]]],[11,"deserialize","","",34,[[],[["result",4],["touch",4]]]],[11,"deserialize","","",16,[[],[["loop",4],["result",4]]]],[11,"deserialize","","",5,[[],[["mousebutton",4],["result",4]]]],[11,"deserialize","","",15,[[],[["input",4],["result",4]]]],[11,"deserialize","piston::keyboard","",49,[[],[["modifierkey",3],["result",4]]]],[11,"sub","","Returns the set difference of the two sets of flags.",49,[[["modifierkey",3]],["modifierkey",3]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_after_render_args","piston","",17,[[["afterrenderargs",3],["event",4]],[["event",4],["option",4]]]],[11,"after_render","","",17,[[],["option",4]]],[11,"bitand_assign","piston::keyboard","Disables all flags disabled in the set.",49,[[["modifierkey",3]]]],[11,"into","piston","",17,[[],[["option",4],["input",4]]]],[11,"into","","",17,[[],[["option",4],["loop",4]]]],[11,"bitxor","piston::keyboard","Returns the left flags, but with all the right flags …",49,[[["modifierkey",3]],["modifierkey",3]]],[11,"eq","piston","",5,[[["mousebutton",4]],["bool",15]]],[11,"eq","piston::event_id","",9,[[["eventid",3]],["bool",15]]],[11,"ne","","",9,[[["eventid",3]],["bool",15]]],[11,"eq","piston","",37,[[["updateargs",3]],["bool",15]]],[11,"ne","","",37,[[["updateargs",3]],["bool",15]]],[11,"eq","","",12,[[["motion",4]],["bool",15]]],[11,"ne","","",12,[[["motion",4]],["bool",15]]],[11,"eq","","",0,[[["controllerbutton",3]],["bool",15]]],[11,"ne","","",0,[[["controllerbutton",3]],["bool",15]]],[11,"eq","","",25,[[["buttonargs",3]],["bool",15]]],[11,"ne","","",25,[[["buttonargs",3]],["bool",15]]],[11,"eq","","",35,[[["touchargs",3]],["bool",15]]],[11,"ne","","",35,[[["touchargs",3]],["bool",15]]],[11,"eq","","",50,[[["afterrenderargs",3]],["bool",15]]],[11,"eq","piston::keyboard","",49,[[["modifierkey",3]],["bool",15]]],[11,"ne","","",49,[[["modifierkey",3]],["bool",15]]],[11,"eq","piston","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"ne","","",2,[[["controlleraxisargs",3]],["bool",15]]],[11,"eq","","",24,[[["buttonstate",4]],["bool",15]]],[11,"eq","","",31,[[["renderargs",3]],["bool",15]]],[11,"ne","","",31,[[["renderargs",3]],["bool",15]]],[11,"eq","","",34,[[["touch",4]],["bool",15]]],[11,"eq","","",1,[[["controllerhat",3]],["bool",15]]],[11,"ne","","",1,[[["controllerhat",3]],["bool",15]]],[11,"eq","","",51,[[["closeargs",3]],["bool",15]]],[11,"eq","","",15,[[["input",4]],["bool",15]]],[11,"ne","","",15,[[["input",4]],["bool",15]]],[11,"eq","","",17,[[["event",4]],["bool",15]]],[11,"eq","","",13,[[["hatstate",4]],["bool",15]]],[11,"eq","","",11,[[["button",4]],["bool",15]]],[11,"ne","","",11,[[["button",4]],["bool",15]]],[11,"eq","","",22,[[["idleargs",3]],["bool",15]]],[11,"ne","","",22,[[["idleargs",3]],["bool",15]]],[11,"eq","","",29,[[["resizeargs",3]],["bool",15]]],[11,"ne","","",29,[[["resizeargs",3]],["bool",15]]],[11,"eq","","",16,[[["loop",4]],["bool",15]]],[11,"ne","","",16,[[["loop",4]],["bool",15]]],[11,"eq","","",4,[[["key",4]],["bool",15]]],[11,"eq","","",14,[[["filedrag",4]],["bool",15]]],[11,"ne","","",14,[[["filedrag",4]],["bool",15]]],[11,"from_idle_args","","",17,[[["event",4],["idleargs",3]],[["event",4],["option",4]]]],[11,"idle","","",17,[[],["option",4]]],[11,"from_pos","","",17,[[["event",4]],[["event",4],["option",4]]]],[11,"mouse_cursor","","",17,[[],["option",4]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",39,[[],["eventsettings",3]]],[11,"clone","","",52,[[],["events",3]]],[11,"clone","","",39,[[],["eventsettings",3]]],[11,"get_event_settings","","",39,[[],["eventsettings",3]]],[11,"set_event_settings","","",39,[[["eventsettings",3]]]],[11,"get_event_settings","","",52,[[],["eventsettings",3]]],[11,"set_event_settings","","",52,[[["eventsettings",3]]]],[11,"should_close","","",54,[[],["bool",15]]],[11,"set_should_close","","",54,[[["bool",15]]]],[11,"size","","",54,[[],["size",3]]],[11,"swap_buffers","","",54,[[]]],[11,"wait_event","","",54,[[],["event",4]]],[11,"wait_event_timeout","","",54,[[["duration",3]],[["event",4],["option",4]]]],[11,"poll_event","","",54,[[],[["event",4],["option",4]]]],[11,"draw_size","","",54,[[],["size",3]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",53,[[],["windowsettings",3]]],[11,"clone","","",41,[[],["size",3]]],[11,"clone","","",42,[[],["position",3]]],[11,"build_from_window_settings","","ErrorsThis function will always return without error.",54,[[["windowsettings",3]],[["box",3],["result",4],["nowindow",3]]]],[11,"eq","","",41,[[["size",3]],["bool",15]]],[11,"ne","","",41,[[["size",3]],["bool",15]]],[11,"eq","","",42,[[["position",3]],["bool",15]]],[11,"ne","","",42,[[["position",3]],["bool",15]]],[11,"get_title","","",54,[[],["string",3]]],[11,"set_title","","",54,[[["string",3]]]],[11,"get_exit_on_esc","","",54,[[],["bool",15]]],[11,"set_exit_on_esc","","",54,[[["bool",15]]]],[11,"get_automatic_close","","",54,[[],["bool",15]]],[11,"set_automatic_close","","",54,[[["bool",15]]]],[11,"set_capture_cursor","","",54,[[["bool",15]]]],[11,"show","","",54,[[]]],[11,"hide","","",54,[[]]],[11,"get_position","","",54,[[],[["position",3],["option",4]]]],[11,"set_position","","",54,[[]]],[11,"set_size","","",54,[[]]],[11,"from","","",41,[[],["size",3]]],[11,"from","","",41,[[],["size",3]]],[11,"from","","",41,[[],["size",3]]],[11,"from","","",42,[[],["position",3]]],[11,"from","","",41,[[],["size",3]]],[11,"from","","",42,[[],["position",3]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",47,[[],["version",3]]],[11,"partial_cmp","","",47,[[["version",3]],[["option",4],["ordering",4]]]],[11,"lt","","",47,[[["version",3]],["bool",15]]],[11,"le","","",47,[[["version",3]],["bool",15]]],[11,"gt","","",47,[[["version",3]],["bool",15]]],[11,"ge","","",47,[[["version",3]],["bool",15]]],[11,"cmp","","",47,[[["version",3]],["ordering",4]]],[11,"eq","","",47,[[["version",3]],["bool",15]]],[11,"ne","","",47,[[["version",3]],["bool",15]]],[11,"new","","Create a new ControllerButton object. Intended for use by …",0,[[["u32",15],["u8",15]],["controllerbutton",3]]],[11,"new","","Create a new ControllerButton object. Intended for use by …",1,[[["u32",15],["hatstate",4],["u8",15]],["controllerhat",3]]],[11,"new","","Create a new ControllerAxisArgs object. Intended for use …",2,[[["u32",15],["f64",15],["u8",15]],["controlleraxisargs",3]]],[11,"event","piston::keyboard","Change modifier key state depending on input.",49,[[]]],[18,"NO_MODIFIER","","No modifier.",49,null],[18,"CTRL","","Ctrl.",49,null],[18,"SHIFT","","Shift.",49,null],[18,"ALT","","Alt.",49,null],[18,"GUI","","Gui.",49,null],[18,"CTRL_SHIFT","","Ctrl + Shift.",49,null],[18,"CTRL_ALT","","Ctrl + Alt.",49,null],[18,"CTRL_GUI","","Ctrl + Gui.",49,null],[18,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",49,null],[18,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",49,null],[18,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",49,null],[18,"SHIFT_ALT","","Shift + Alt.",49,null],[18,"SHIFT_GUI","","Shift + Gui.",49,null],[18,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",49,null],[18,"ALT_GUI","","Alt + Gui.",49,null],[11,"empty","","Returns an empty set of flags",49,[[],["modifierkey",3]]],[11,"all","","Returns the set containing all flags.",49,[[],["modifierkey",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",49,[[],["u8",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",49,[[["u8",15]],[["option",4],["modifierkey",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",49,[[["u8",15]],["modifierkey",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",49,[[["u8",15]],["modifierkey",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",49,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",49,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",49,[[["modifierkey",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",49,[[["modifierkey",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",49,[[["modifierkey",3]]]],[11,"remove","","Removes the specified flags in-place.",49,[[["modifierkey",3]]]],[11,"toggle","","Toggles the specified flags in-place.",49,[[["modifierkey",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",49,[[["bool",15],["modifierkey",3]]]],[11,"code","piston","Returns an id of the key",4,[[],["i32",15]]],[11,"viewport","","Returns viewport information filling entire render area.",29,[[],["viewport",3]]],[11,"viewport","","Returns viewport information filling entire render area.",31,[[],["viewport",3]]],[11,"new","","Creates arguments for 2D touch.",35,[[["i64",15],["f64",15],["touch",4]],["touchargs",3]]],[11,"new_3d","","Creates arguments for 3D touch.",35,[[["i64",15],["touch",4]],["touchargs",3]]],[11,"position","","The position of the touch in 2D.",35,[[]]],[11,"position_3d","","The position of the touch in 3D.",35,[[]]],[11,"pressure","","The pressure magnitude, normalized 0..1.",35,[[],["f64",15]]],[11,"pressure_3d","","The pressure vector in 3D.",35,[[]]],[11,"new","","Creates new with default settings.",39,[[],["eventsettings",3]]],[11,"new","","Creates a new event iterator with default UPS and FPS …",52,[[["eventsettings",3]],["events",3]]],[11,"next","","Returns the next event.",52,[[],[["event",4],["option",4]]]],[11,"new","","Creates window settings with defaults.",53,[[],["windowsettings",3]]],[11,"build","","Builds window from the given settings.",53,[[],[["box",3],["result",4]]]],[11,"get_title","","Gets the title of built windows.",53,[[],["string",3]]],[11,"set_title","","Sets the title of built windows.",53,[[["string",3]]]],[11,"title","","Sets the title of built windows.",53,[[["string",3]],["windowsettings",3]]],[11,"get_size","","Gets the size of built windows.",53,[[],["size",3]]],[11,"set_size","","Sets the size of built windows.",53,[[["size",3]]]],[11,"size","","Sets the size of built windows.",53,[[["size",3]],["windowsettings",3]]],[11,"get_fullscreen","","Gets whether built windows will be fullscreen.",53,[[],["bool",15]]],[11,"set_fullscreen","","Sets whether built windows will be fullscreen.",53,[[["bool",15]]]],[11,"fullscreen","","Sets whether built windows will be fullscreen.",53,[[["bool",15]],["windowsettings",3]]],[11,"get_exit_on_esc","","Gets whether built windows should exit when the Esc key …",53,[[],["bool",15]]],[11,"set_exit_on_esc","","Sets whether built windows should exit when the Esc key …",53,[[["bool",15]]]],[11,"exit_on_esc","","Sets whether built windows should exit when the Esc key …",53,[[["bool",15]],["windowsettings",3]]],[11,"get_automatic_close","","Gets whether built windows should automatically close …",53,[[],["bool",15]]],[11,"set_automatic_close","","Sets whether built windows should automatically close …",53,[[["bool",15]]]],[11,"automatic_close","","Sets whether built windows should automatically close …",53,[[["bool",15]],["windowsettings",3]]],[11,"get_samples","","Gets the number of samples to use for anti-aliasing.",53,[[],["u8",15]]],[11,"set_samples","","Sets the number of samples to use for anti-aliasing.",53,[[["u8",15]]]],[11,"samples","","Sets the number of samples to use for anti-aliasing.",53,[[["u8",15]],["windowsettings",3]]],[11,"get_vsync","","Gets whether built windows should use vsync.",53,[[],["bool",15]]],[11,"set_vsync","","Sets whether built windows should use vsync.",53,[[["bool",15]]]],[11,"vsync","","Sets whether built windows should use vsync.",53,[[["bool",15]],["windowsettings",3]]],[11,"get_maybe_graphics_api","","Gets the graphics API version of built windows.",53,[[],[["option",4],["version",3]]]],[11,"set_maybe_graphics_api","","Sets graphics API version of built windows.",53,[[["option",4]]]],[11,"maybe_graphics_api","","Sets graphics API version of built windows.",53,[[["option",4]],["windowsettings",3]]],[11,"set_graphics_api","","Sets graphics API version of built windows.",53,[[]]],[11,"graphics_api","","Sets the graphics API version of built windows.",53,[[],["windowsettings",3]]],[11,"get_srgb","","Gets whether built windows should use hardware …",53,[[],["bool",15]]],[11,"set_srgb","","Sets whether built windows should use hardware …",53,[[["bool",15]]]],[11,"srgb","","Sets whether built windows should use hardware …",53,[[["bool",15]],["windowsettings",3]]],[11,"get_resizable","","Gets whether built windows should be resizable.",53,[[],["bool",15]]],[11,"set_resizable","","Sets whether built windows should be resizable.",53,[[["bool",15]]]],[11,"resizable","","Sets whether built windows should be resizable.",53,[[["bool",15]],["windowsettings",3]]],[11,"get_decorated","","Gets whether built windows should be decorated.",53,[[],["bool",15]]],[11,"set_decorated","","Sets whether built windows should be decorated.",53,[[["bool",15]]]],[11,"decorated","","Sets whether built windows should be decorated.",53,[[["bool",15]],["windowsettings",3]]],[11,"get_controllers","","Gets whether built windows should listen to controller …",53,[[],["bool",15]]],[11,"set_controllers","","Sets whether built windows should listen to controller …",53,[[["bool",15]]]],[11,"controllers","","Sets whether built windows should listen to controller …",53,[[["bool",15]],["windowsettings",3]]],[11,"get_transparent","","Gets whether built windows should be transparent.",53,[[],["bool",15]]],[11,"set_transparent","","Sets whether built windows should be transparent.",53,[[["bool",15]]]],[11,"transparent","","Sets whether built windows should be transparent.",53,[[["bool",15]],["windowsettings",3]]],[11,"opengl","","Creates a new OpenGL version.",47,[[["u32",15]],["version",3]]],[11,"vulkan","","Creates a new Vulkan version.",47,[[["u32",15]],["version",3]]],[11,"directx","","Creates a new DirectX version.",47,[[["u32",15]],["version",3]]],[11,"metal","","Creates a new Metal version.",47,[[["u32",15]],["version",3]]],[11,"is_opengl","","Returns <code>true</code> if the API is OpenGL, <code>false</code> otherwise.",47,[[],["bool",15]]],[11,"is_vulkan","","Returns <code>true</code> if the API is Vulkan, <code>false</code> otherwise.",47,[[],["bool",15]]],[11,"is_directx","","Returns <code>true</code> if the API is DirectX, <code>false</code> otherwise.",47,[[],["bool",15]]],[11,"is_metal","","Returns <code>true</code> if the API is metal, <code>false</code> otherwise.",47,[[],["bool",15]]],[11,"new","","Creates a new <code>NoWindow</code>.",54,[[["windowsettings",3]],["nowindow",3]]]],"p":[[3,"ControllerButton"],[3,"ControllerHat"],[3,"ControllerAxisArgs"],[8,"ControllerAxisEvent"],[4,"Key"],[4,"MouseButton"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[3,"EventId"],[8,"GenericEvent"],[4,"Button"],[4,"Motion"],[4,"HatState"],[4,"FileDrag"],[4,"Input"],[4,"Loop"],[4,"Event"],[8,"AfterRenderEvent"],[8,"CloseEvent"],[8,"CursorEvent"],[8,"FocusEvent"],[3,"IdleArgs"],[8,"IdleEvent"],[4,"ButtonState"],[3,"ButtonArgs"],[8,"ButtonEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[3,"ResizeArgs"],[8,"ResizeEvent"],[3,"RenderArgs"],[8,"RenderEvent"],[8,"TextEvent"],[4,"Touch"],[3,"TouchArgs"],[8,"TouchEvent"],[3,"UpdateArgs"],[8,"UpdateEvent"],[3,"EventSettings"],[8,"EventLoop"],[3,"Size"],[3,"Position"],[8,"BuildFromWindowSettings"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"],[3,"Api"],[3,"UnsupportedGraphicsApiError"],[3,"ModifierKey"],[3,"AfterRenderArgs"],[3,"CloseArgs"],[3,"Events"],[3,"WindowSettings"],[3,"NoWindow"]]},\
"png":{"doc":"PNG encoder and decoderThis crate contains a PNG encoder …","i":[[0,"chunk","png","Chunk types and functions",null,null],[6,"ChunkType","png::chunk","",null,null],[17,"IHDR","","Image header",null,null],[17,"PLTE","","Palette",null,null],[17,"IDAT","","Image data",null,null],[17,"IEND","","Image trailer",null,null],[17,"tRNS","","Transparency",null,null],[17,"bKGD","","Background colour",null,null],[17,"tIME","","Image last-modification time",null,null],[17,"pHYs","","Physical pixel dimensions",null,null],[17,"acTL","","Animation control",null,null],[17,"fcTL","","Frame control",null,null],[17,"fdAT","","Frame data",null,null],[5,"is_critical","","Returns true if the chunk is critical.",null,[[["chunktype",6]],["bool",15]]],[5,"is_private","","Returns true if the chunk is private.",null,[[["chunktype",6]],["bool",15]]],[5,"reserved_set","","Checks whether the reserved bit of the chunk name is set. …",null,[[["chunktype",6]],["bool",15]]],[5,"safe_to_copy","","Returns true if the chunk is safe to copy if unknown.",null,[[["chunktype",6]],["bool",15]]],[4,"ColorType","png","Describes the layout of samples in a pixel",null,null],[13,"Grayscale","","",0,null],[13,"RGB","","",0,null],[13,"Indexed","","",0,null],[13,"GrayscaleAlpha","","",0,null],[13,"RGBA","","",0,null],[4,"BitDepth","","Bit depth of the png file",null,null],[13,"One","","",1,null],[13,"Two","","",1,null],[13,"Four","","",1,null],[13,"Eight","","",1,null],[13,"Sixteen","","",1,null],[3,"PixelDimensions","","Pixel dimensions information",null,null],[12,"xppu","","Pixels per unit, X axis",2,null],[12,"yppu","","Pixels per unit, Y axis",2,null],[12,"unit","","Either <em>Meter</em> or <em>Unspecified</em>",2,null],[4,"Unit","","Physical unit of the pixel dimensions",null,null],[13,"Unspecified","","",3,null],[13,"Meter","","",3,null],[4,"DisposeOp","","How to reset buffer of an animated png (APNG) at the end …",null,null],[13,"None","","Leave the buffer unchanged.",4,null],[13,"Background","","Clear buffer with the background color.",4,null],[13,"Previous","","Reset the buffer to the state before the current frame.",4,null],[4,"BlendOp","","How pixels are written into the buffer.",null,null],[13,"Source","","Pixels overwrite the value at their position.",5,null],[13,"Over","","The new pixels are blended into the current state based …",5,null],[3,"FrameControl","","Frame control information",null,null],[12,"sequence_number","","Sequence number of the animation chunk, starting from 0",6,null],[12,"width","","Width of the following frame",6,null],[12,"height","","Height of the following frame",6,null],[12,"x_offset","","X position at which to render the following frame",6,null],[12,"y_offset","","Y position at which to render the following frame",6,null],[12,"delay_num","","Frame delay fraction numerator",6,null],[12,"delay_den","","Frame delay fraction denominator",6,null],[12,"dispose_op","","Type of frame area disposal to be done after rendering …",6,null],[12,"blend_op","","Type of frame area rendering for this frame",6,null],[3,"AnimationControl","","Animation control information",null,null],[12,"num_frames","","Number of frames",7,null],[12,"num_plays","","Number of times to loop this APNG.  0 indicates infinite …",7,null],[4,"Compression","","The type and strength of applied compression.",null,null],[13,"Default","","Default level  ",8,null],[13,"Fast","","Fast minimal compression",8,null],[13,"Best","","Higher compression level",8,null],[13,"Huffman","","",8,null],[13,"Rle","","",8,null],[3,"Info","","PNG info struct",null,null],[12,"width","","",9,null],[12,"height","","",9,null],[12,"bit_depth","","",9,null],[12,"color_type","","",9,null],[12,"interlaced","","",9,null],[12,"trns","","",9,null],[12,"pixel_dims","","",9,null],[12,"palette","","",9,null],[12,"frame_control","","",9,null],[12,"animation_control","","",9,null],[12,"compression","","",9,null],[12,"filter","","",9,null],[3,"Transformations","","Output transformationsOnly <code>IDENTITY</code> and …",null,null],[4,"Decoded","","Result of the decoding process",null,null],[13,"Nothing","","Nothing decoded yet",10,null],[13,"Header","","",10,null],[13,"ChunkBegin","","",10,null],[13,"ChunkComplete","","",10,null],[13,"PixelDimensions","","",10,null],[13,"AnimationControl","","",10,null],[13,"FrameControl","","",10,null],[13,"ImageData","","Decoded raw image data.",10,null],[13,"ImageDataFlushed","","The last of a consecutive chunk of IDAT was done. This is …",10,null],[13,"PartialChunk","","",10,null],[13,"ImageEnd","","",10,null],[3,"Decoder","","PNG Decoder",null,null],[4,"DecodingError","","",null,null],[13,"IoError","","",11,null],[13,"Format","","",11,null],[13,"InvalidSignature","","",11,null],[13,"CrcMismatch","","",11,null],[12,"recover","png::DecodingError","bytes to skip to try to recover from this error",12,null],[12,"crc_val","","Stored CRC32 value",12,null],[12,"crc_sum","","Calculated CRC32 sum",12,null],[12,"chunk","","",12,null],[13,"Other","png","",11,null],[13,"CorruptFlateStream","","",11,null],[13,"LimitsExceeded","","",11,null],[3,"Limits","","Limits on the resources the <code>Decoder</code> is allowed too use",null,null],[12,"bytes","","maximum number of bytes the decoder is allowed to …",13,null],[3,"OutputInfo","","Output info",null,null],[12,"width","","",14,null],[12,"height","","",14,null],[12,"color_type","","",14,null],[12,"bit_depth","","",14,null],[12,"line_size","","",14,null],[3,"Reader","","PNG reader (mostly high-level interface)",null,null],[3,"StreamingDecoder","","PNG StreamingDecoder (low-level interface)",null,null],[3,"Encoder","","PNG Encoder",null,null],[4,"EncodingError","","",null,null],[13,"IoError","","",15,null],[13,"Format","","",15,null],[3,"StreamWriter","","Streaming png writer",null,null],[3,"Writer","","PNG writer",null,null],[4,"FilterType","","The byte level filter applied to scanlines to prepare …",null,null],[13,"NoFilter","","",16,null],[13,"Sub","","",16,null],[13,"Up","","",16,null],[13,"Avg","","",16,null],[13,"Paeth","","",16,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"drop","","",22,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",8,[[["compression",4]]]],[11,"from","","",11,[[["error",3]],["decodingerror",4]]],[11,"from","","",11,[[["string",3]],["decodingerror",4]]],[11,"from","","",15,[[["error",3]],["encodingerror",4]]],[11,"extend","","",17,[[["intoiterator",8]]]],[11,"clone","","",0,[[],["colortype",4]]],[11,"clone","","",1,[[],["bitdepth",4]]],[11,"clone","","",2,[[],["pixeldimensions",3]]],[11,"clone","","",3,[[],["unit",4]]],[11,"clone","","",4,[[],["disposeop",4]]],[11,"clone","","",5,[[],["blendop",4]]],[11,"clone","","",6,[[],["framecontrol",3]]],[11,"clone","","",7,[[],["animationcontrol",3]]],[11,"clone","","",8,[[],["compression",4]]],[11,"clone","","",9,[[],["info",3]]],[11,"clone","","",17,[[],["transformations",3]]],[11,"clone","","",13,[[],["limits",3]]],[11,"clone","","",16,[[],["filtertype",4]]],[11,"default","","",6,[[],["framecontrol",3]]],[11,"default","","",9,[[],["info",3]]],[11,"default","","",18,[[]]],[11,"default","","",13,[[],["limits",3]]],[11,"cmp","","",17,[[["transformations",3]],["ordering",4]]],[11,"eq","","",0,[[["colortype",4]],["bool",15]]],[11,"eq","","",1,[[["bitdepth",4]],["bool",15]]],[11,"eq","","",3,[[["unit",4]],["bool",15]]],[11,"eq","","",4,[[["disposeop",4]],["bool",15]]],[11,"eq","","",5,[[["blendop",4]],["bool",15]]],[11,"eq","","",17,[[["transformations",3]],["bool",15]]],[11,"ne","","",17,[[["transformations",3]],["bool",15]]],[11,"eq","","",14,[[["outputinfo",3]],["bool",15]]],[11,"ne","","",14,[[["outputinfo",3]],["bool",15]]],[11,"eq","","",16,[[["filtertype",4]],["bool",15]]],[11,"partial_cmp","","",17,[[["transformations",3]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["transformations",3]],["bool",15]]],[11,"le","","",17,[[["transformations",3]],["bool",15]]],[11,"gt","","",17,[[["transformations",3]],["bool",15]]],[11,"ge","","",17,[[["transformations",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","Returns the set difference of the two sets of flags.",17,[[["transformations",3]],["transformations",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",17,[[["transformations",3]]]],[11,"not","","Returns the complement of this set of flags.",17,[[],["transformations",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",17,[[["transformations",3]],["transformations",3]]],[11,"bitor","","Returns the union of the two sets of flags.",17,[[["transformations",3]],["transformations",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",17,[[["transformations",3]],["transformations",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",17,[[["transformations",3]]]],[11,"bitor_assign","","Adds the set of flags.",17,[[["transformations",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",17,[[["transformations",3]]]],[11,"hash","","",17,[[]]],[11,"from_iter","","",17,[[["intoiterator",8]],["transformations",3]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"cause","","",11,[[],[["error",8],["option",4]]]],[11,"cause","","",15,[[],[["error",8],["option",4]]]],[11,"write","","",23,[[],[["usize",15],["result",6]]]],[11,"flush","","",23,[[],["result",6]]],[11,"samples","","Returns the number of samples used per pixel of <code>ColorType</code>",0,[[],["usize",15]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a …",0,[[["u8",15]],[["option",4],["colortype",4]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a …",1,[[["u8",15]],[["option",4],["bitdepth",4]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a …",3,[[["u8",15]],[["option",4],["unit",4]]]],[11,"from_u8","","u8 -> Self. Using enum_primitive or transmute is probably …",4,[[["u8",15]],[["disposeop",4],["option",4]]]],[11,"from_u8","","u8 -> Self. Using enum_primitive or transmute is probably …",5,[[["u8",15]],[["option",4],["blendop",4]]]],[11,"set_seq_num","","",6,[[["u32",15]]]],[11,"inc_seq_num","","",6,[[["u32",15]]]],[11,"size","","Size of the image",9,[[]]],[11,"is_animated","","Returns true if the image is an APNG image.",9,[[],["bool",15]]],[11,"animation_control","","Returns the frame control information of the image",9,[[],[["option",4],["animationcontrol",3]]]],[11,"frame_control","","Returns the frame control information of the current frame",9,[[],[["option",4],["framecontrol",3]]]],[11,"bits_per_pixel","","Returns the bits per pixel",9,[[],["usize",15]]],[11,"bytes_per_pixel","","Returns the bytes per pixel",9,[[],["usize",15]]],[11,"raw_bytes","","Returns the number of bytes needed for one deinterlaced …",9,[[],["usize",15]]],[11,"raw_row_length","","Returns the number of bytes needed for one deinterlaced …",9,[[],["usize",15]]],[11,"raw_row_length_from_width","","Returns the number of bytes needed for one deinterlaced …",9,[[["u32",15]],["usize",15]]],[18,"IDENTITY","","No transformation",17,null],[18,"STRIP_16","","Strip 16-bit samples to 8 bits",17,null],[18,"STRIP_ALPHA","","Discard the alpha channel",17,null],[18,"PACKING","","Expand 1; 2 and 4-bit samples to bytes",17,null],[18,"PACKSWAP","","Change order of packed pixels to LSB first",17,null],[18,"EXPAND","","Expand paletted images to RGB; expand grayscale images of …",17,null],[18,"INVERT_MONO","","Invert monochrome images",17,null],[18,"SHIFT","","Normalize pixels to the sBIT depth",17,null],[18,"BGR","","Flip RGB to BGR; RGBA to BGRA",17,null],[18,"SWAP_ALPHA","","Flip RGBA to ARGB or GA to AG",17,null],[18,"SWAP_ENDIAN","","Byte-swap 16-bit samples",17,null],[18,"INVERT_ALPHA","","Change alpha from opacity to transparency",17,null],[18,"STRIP_FILLER","","",17,null],[18,"STRIP_FILLER_BEFORE","","",17,null],[18,"STRIP_FILLER_AFTER","","",17,null],[18,"GRAY_TO_RGB","","",17,null],[18,"EXPAND_16","","",17,null],[18,"SCALE_16","","",17,null],[11,"empty","","Returns an empty set of flags",17,[[],["transformations",3]]],[11,"all","","Returns the set containing all flags.",17,[[],["transformations",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",17,[[["u32",15]],[["option",4],["transformations",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",17,[[["u32",15]],["transformations",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",17,[[["u32",15]],["transformations",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",17,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",17,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",17,[[["transformations",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",17,[[["transformations",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["transformations",3]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["transformations",3]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["transformations",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",17,[[["bool",15],["transformations",3]]]],[11,"new","","Creates a new StreamingDecoder",18,[[],["streamingdecoder",3]]],[11,"reset","","Resets the StreamingDecoder",18,[[]]],[11,"update","","Low level StreamingDecoder interface.",18,[[["vec",3]],[["decodingerror",4],["result",4]]]],[11,"buffer_size","","Returns the size needed to hold a decoded frame",14,[[],["usize",15]]],[11,"new","","",19,[[],["decoder",3]]],[11,"new_with_limits","","",19,[[["limits",3]],["decoder",3]]],[11,"set_limits","","Limit resource usage",19,[[["limits",3]]]],[11,"read_info","","Reads all meta data until the first IDAT chunk",19,[[],[["decodingerror",4],["result",4]]]],[11,"set_transformations","","Set the allowed and performed transformations.",19,[[["transformations",3]]]],[11,"info","","Get information on the image.",20,[[],["info",3]]],[11,"next_frame","","Decodes the next frame into <code>buf</code>.",20,[[],[["result",4],["decodingerror",4]]]],[11,"next_row","","Returns the next processed row of the image",20,[[],[["decodingerror",4],["option",4],["result",4]]]],[11,"next_interlaced_row","","Returns the next processed row of the image",20,[[],[["result",4],["decodingerror",4],["option",4]]]],[11,"output_color_type","","Returns the color type and the number of bits per sample …",20,[[]]],[11,"output_buffer_size","","Returns the number of bytes required to hold a …",20,[[],["usize",15]]],[11,"output_line_size","","Returns the number of bytes required to hold a …",20,[[["u32",15]],["usize",15]]],[11,"new","","",21,[[["u32",15]],["encoder",3]]],[11,"set_palette","","",21,[[["vec",3],["u8",15]]]],[11,"set_trns","","",21,[[["vec",3],["u8",15]]]],[11,"write_header","","",21,[[],[["result",4],["encodingerror",4],["writer",3]]]],[11,"set_color","","Set the color of the encoded image.",21,[[["colortype",4]]]],[11,"set_depth","","Set the indicated depth of the image data.",21,[[["bitdepth",4]]]],[11,"set_compression","","Set compression parameters.",21,[[["into",8],["compression",4]]]],[11,"set_filter","","Set the used filter type.",21,[[["filtertype",4]]]],[11,"write_chunk","","",22,[[],[["result",4],["encodingerror",4]]]],[11,"write_image_data","","Writes the image data.",22,[[],[["result",4],["encodingerror",4]]]],[11,"stream_writer","","Create an stream writer.",22,[[],["streamwriter",3]]],[11,"stream_writer_with_size","","Create a stream writer with custom buffer size.",22,[[["usize",15]],["streamwriter",3]]],[11,"into_stream_writer","","Turn this into a stream writer for image data.",22,[[],["streamwriter",3]]],[11,"into_stream_writer_with_size","","Turn this into a stream writer with custom buffer size.",22,[[["usize",15]],["streamwriter",3]]],[11,"finish","","",23,[[],[["result",4],["encodingerror",4]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a …",16,[[["u8",15]],[["option",4],["filtertype",4]]]]],"p":[[4,"ColorType"],[4,"BitDepth"],[3,"PixelDimensions"],[4,"Unit"],[4,"DisposeOp"],[4,"BlendOp"],[3,"FrameControl"],[3,"AnimationControl"],[4,"Compression"],[3,"Info"],[4,"Decoded"],[4,"DecodingError"],[13,"CrcMismatch"],[3,"Limits"],[3,"OutputInfo"],[4,"EncodingError"],[4,"FilterType"],[3,"Transformations"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[3,"StreamWriter"]]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the …","i":[[0,"token_stream","proc_macro2","Public implementation details for the <code>TokenStream</code> type, …",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over <code>TokenStream</code>\'s <code>TokenTree</code>s.",null,null],[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a …",null,null],[3,"LexError","","Error returned from <code>TokenStream::from_str</code>.",null,null],[11,"new","","Returns an empty <code>TokenStream</code> containing no token trees.",0,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this <code>TokenStream</code> is empty.",0,[[],["bool",15]]],[11,"span","","",1,[[],["span",3]]],[3,"Span","","A region of source code, along with macro expansion …",null,null],[11,"call_site","","The span of the invocation of the current procedural …",2,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural …",2,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information …",2,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior …",2,[[["span",3]],["span",3]]],[11,"unwrap","","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.",2,[[],["span",3]]],[11,"join","","Create a new span encompassing <code>self</code> and <code>other</code>.",2,[[["span",3]],[["option",4],["span",3]]]],[4,"TokenTree","","A single token or a delimited sequence of token trees …",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",3,null],[13,"Ident","","An identifier.",3,null],[13,"Punct","","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).",3,null],[13,"Literal","","A literal character (<code>\'a\'</code>), string (<code>\\\"hello\\\"</code>), number (<code>2.3</code>…",3,null],[11,"span","","Returns the span of this tree, delegating to the <code>span</code> …",3,[[],["span",3]]],[11,"set_span","","Configures the span for <em>only this token</em>.",3,[[["span",3]]]],[3,"Group","","A delimited token stream.",null,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","<code>( ... )</code>",4,null],[13,"Brace","","<code>{ ... }</code>",4,null],[13,"Bracket","","<code>[ ... ]</code>",4,null],[13,"None","","<code>Ø ... Ø</code>",4,null],[11,"new","","Creates a new <code>Group</code> with the given delimiter and token …",5,[[["tokenstream",3],["delimiter",4]],["group",3]]],[11,"delimiter","","Returns the delimiter of this <code>Group</code>",5,[[],["delimiter",4]]],[11,"stream","","Returns the <code>TokenStream</code> of tokens that are delimited in …",5,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream, …",5,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of …",5,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of …",5,[[],["span",3]]],[11,"set_span","","Configures the span for this <code>Group</code>\'s delimiters, but not …",5,[[["span",3]]]],[3,"Punct","","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.",null,null],[4,"Spacing","","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …",null,null],[13,"Alone","","E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.",6,null],[13,"Joint","","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>\'</code> is <code>Joint</code> in <code>\'#</code>.",6,null],[11,"new","","Creates a new <code>Punct</code> from the given character and spacing.",7,[[["spacing",4],["char",15]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as <code>char</code>.",7,[[],["char",15]]],[11,"spacing","","Returns the spacing of this punctuation character, …",7,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",7,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",7,[[["span",3]]]],[3,"Ident","","A word of Rust code, which may be a keyword or legal …",null,null],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",8,[[["span",3],["str",15]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",8,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",8,[[["span",3]]]],[3,"Literal","","A literal string (<code>\\\"hello\\\"</code>), byte string (<code>b\\\"hello\\\"</code>), …",null,null],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u8",15]],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u16",15]],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u32",15]],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u64",15]],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u128",15]],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["usize",15]],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i8",15]],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i16",15]],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i32",15]],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i64",15]],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i128",15]],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["isize",15]],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u8",15]],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u16",15]],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u32",15]],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u64",15]],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u128",15]],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["usize",15]],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i8",15]],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i16",15]],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i32",15]],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i64",15]],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i128",15]],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["isize",15]],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",9,[[["f64",15]],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",9,[[["f64",15]],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",9,[[["f32",15]],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",9,[[["f32",15]],["literal",3]]],[11,"string","","String literal.",9,[[["str",15]],["literal",3]]],[11,"character","","Character literal.",9,[[["char",15]],["literal",3]]],[11,"byte_string","","Byte string literal.",9,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",9,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",9,[[["span",3]]]],[11,"subspan","","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …",9,[[["usize",15],["rangebounds",8]],[["option",4],["span",3]]]],[11,"from","proc_macro2::token_stream","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","proc_macro2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",2,[[["span",3]],["span",3]]],[11,"from","","",0,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",0,[[["tokentree",4]]]],[11,"from","","",3,[[["group",3]],["tokentree",4]]],[11,"from","","",3,[[["ident",3]],["tokentree",4]]],[11,"from","","",3,[[["punct",3]],["tokentree",4]]],[11,"from","","",3,[[["literal",3]],["tokentree",4]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",10,[[],[["tokentree",4],["option",4]]]],[11,"clone","proc_macro2","",0,[[],["tokenstream",3]]],[11,"clone","","",2,[[],["span",3]]],[11,"clone","","",3,[[],["tokentree",4]]],[11,"clone","","",5,[[],["group",3]]],[11,"clone","","",4,[[],["delimiter",4]]],[11,"clone","","",7,[[],["punct",3]]],[11,"clone","","",6,[[],["spacing",4]]],[11,"clone","","",8,[[],["ident",3]]],[11,"clone","","",9,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",10,[[],["intoiter",3]]],[11,"default","proc_macro2","",0,[[]]],[11,"cmp","","",8,[[["ident",3]],["ordering",4]]],[11,"eq","","",4,[[["delimiter",4]],["bool",15]]],[11,"eq","","",6,[[["spacing",4]],["bool",15]]],[11,"eq","","",8,[[["ident",3]],["bool",15]]],[11,"eq","","",8,[[],["bool",15]]],[11,"partial_cmp","","",8,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"hash","","",8,[[]]],[11,"from_str","","",0,[[["str",15]],[["lexerror",3],["result",4],["tokenstream",3]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]]],"p":[[3,"TokenStream"],[3,"LexError"],[3,"Span"],[4,"TokenTree"],[4,"Delimiter"],[3,"Group"],[4,"Spacing"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"]]},\
"quote":{"doc":"github crates-io docs-rs","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending …",null,null],[10,"append","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_all","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_separated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_terminated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by <code>format_ident!</code>.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["span",3],["option",4]]]],[8,"ToTokens","","Types that can be interpolated inside a <code>quote!</code> invocation.",null,null],[10,"to_tokens","","Write <code>self</code> to the given <code>TokenStream</code>.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing <code>Ident</code>s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as <code>quote!</code>, but applies a given span to all tokens …",null,null],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["span",3],["option",4]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"raw_window_handle":{"doc":"Interoperability library for Rust Windowing applications.","i":[[0,"macos","raw_window_handle","",null,null],[3,"MacOSHandle","raw_window_handle::macos","Raw window handle for macOS.",null,null],[12,"ns_window","","",0,null],[12,"ns_view","","",0,null],[11,"empty","","",0,[[],["macoshandle",3]]],[8,"HasRawWindowHandle","raw_window_handle","Window that wraps around a raw window handle.",null,null],[10,"raw_window_handle","","",1,[[],["rawwindowhandle",4]]],[4,"RawWindowHandle","","",null,null],[13,"MacOS","","",2,null],[11,"from","raw_window_handle::macos","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","raw_window_handle","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","raw_window_handle::macos","",0,[[["formatter",3]],["result",6]]],[11,"fmt","raw_window_handle","",2,[[["formatter",3]],["result",6]]],[11,"eq","raw_window_handle::macos","",0,[[["macoshandle",3]],["bool",15]]],[11,"ne","","",0,[[["macoshandle",3]],["bool",15]]],[11,"eq","raw_window_handle","",2,[[["rawwindowhandle",4]],["bool",15]]],[11,"ne","","",2,[[["rawwindowhandle",4]],["bool",15]]],[11,"hash","raw_window_handle::macos","",0,[[]]],[11,"hash","raw_window_handle","",2,[[]]],[11,"clone","raw_window_handle::macos","",0,[[],["macoshandle",3]]],[11,"clone","raw_window_handle","",2,[[],["rawwindowhandle",4]]]],"p":[[3,"MacOSHandle"],[8,"HasRawWindowHandle"],[4,"RawWindowHandle"]]},\
"rayon":{"doc":"Data-parallelism library that makes it easy to convert …","i":[[0,"collections","rayon","Parallel iterator types for standard collections",null,null],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps…",null,null],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a binary …",null,null],[3,"Drain","","Draining parallel iterator that moves out of a binary …",null,null],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for …",null,null],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree …",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",null,null],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for …",null,null],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree …",null,null],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash …",null,null],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash …",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",null,null],[3,"Drain","","Draining parallel iterator that moves out of a hash map, …",null,null],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash …",null,null],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash …",null,null],[3,"Drain","","Draining parallel iterator that moves out of a hash set, …",null,null],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for …",null,null],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a linked …",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a linked …",null,null],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for …",null,null],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a …",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a …",null,null],[3,"Drain","","Draining parallel iterator that moves a range out of a …",null,null],[0,"iter","rayon","Traits for writing parallel programs using an …",null,null],[0,"plumbing","rayon::iter","Traits and functions used to implement parallel …",null,null],[8,"ProducerCallback","rayon::iter::plumbing","The <code>ProducerCallback</code> trait is a kind of generic closure, …",null,null],[16,"Output","","The type of value returned by this callback. Analogous to …",0,null],[10,"callback","","Invokes the callback with the given producer as argument. …",0,[[]]],[8,"Producer","","A <code>Producer</code> is effectively a \\\"splittable <code>IntoIterator</code>\\\". …",null,null],[16,"Item","","The type of item that will be produced by this producer …",1,null],[16,"IntoIter","","The type of iterator we will become.",1,null],[10,"into_iter","","Convert <code>self</code> into an iterator; at this point, no more …",1,[[]]],[11,"min_len","","The minimum number of items that we will process …",1,[[],["usize",15]]],[11,"max_len","","The maximum number of items that we will process …",1,[[],["usize",15]]],[10,"split_at","","Split into two producers; one produces items <code>0..index</code>, the…",1,[[["usize",15]]]],[11,"fold_with","","Iterate the producer, feeding each element to <code>folder</code>, and …",1,[[]]],[8,"Consumer","","A consumer is effectively a generalized \\\"fold\\\" operation, …",null,null],[16,"Folder","","The type of folder that this consumer can be converted …",2,null],[16,"Reducer","","The type of reducer that is produced if this consumer is …",2,null],[16,"Result","","The type of result that this consumer will ultimately …",2,null],[10,"split_at","","Divide the consumer into two consumers, one processing …",2,[[["usize",15]]]],[10,"into_folder","","Convert the consumer into a folder that can consume items …",2,[[]]],[10,"full","","Hint whether this <code>Consumer</code> would like to stop processing …",2,[[],["bool",15]]],[8,"Folder","","The <code>Folder</code> trait encapsulates the standard fold operation…",null,null],[16,"Result","","The type of result that will ultimately be produced by …",3,null],[10,"consume","","Consume next item and return new sequential state.",3,[[]]],[11,"consume_iter","","Consume items from the iterator until full, and return …",3,[[]]],[10,"complete","","Finish consuming items, produce final result.",3,[[]]],[10,"full","","Hint whether this <code>Folder</code> would like to stop processing …",3,[[],["bool",15]]],[8,"Reducer","","The reducer is the final step of a <code>Consumer</code> -- after a …",null,null],[10,"reduce","","Reduce two final results into one; this is executed after …",4,[[]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These …",null,null],[10,"split_off_left","","Splits off a \\\"left\\\" consumer and returns it. The <code>self</code> …",5,[[]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results …",5,[[]]],[8,"UnindexedProducer","","A variant on <code>Producer</code> which does not know its exact …",null,null],[16,"Item","","The type of item returned by this producer.",6,null],[10,"split","","Split midway into a new producer if possible, otherwise …",6,[[]]],[10,"fold_with","","Iterate the producer, feeding each element to <code>folder</code>, and …",6,[[]]],[5,"bridge","","This helper function is used to \\\"connect\\\" a parallel …",null,[[]]],[5,"bridge_producer_consumer","","This helper function is used to \\\"connect\\\" a producer and a…",null,[[["usize",15]]]],[5,"bridge_unindexed","","A variant of <code>bridge_producer_consumer</code> where the producer …",null,[[]]],[4,"Either","rayon::iter","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …",null,null],[13,"Left","","A value of type <code>L</code>.",7,null],[13,"Right","","A value of type <code>R</code>.",7,null],[3,"Chain","","<code>Chain</code> is an iterator that joins <code>b</code> after <code>a</code> in one …",null,null],[3,"Chunks","","<code>Chunks</code> is an iterator that groups elements of an …",null,null],[3,"Cloned","","<code>Cloned</code> is an iterator that clones the elements of an …",null,null],[3,"Copied","","<code>Copied</code> is an iterator that copies the elements of an …",null,null],[5,"empty","","Creates a parallel iterator that produces nothing.",null,[[],[["empty",3],["send",8]]]],[3,"Empty","","Iterator adaptor for the <code>empty()</code> function.",null,null],[3,"Enumerate","","<code>Enumerate</code> is an iterator that returns the current count …",null,null],[3,"Filter","","<code>Filter</code> takes a predicate <code>filter_op</code> and filters out …",null,null],[3,"FilterMap","","<code>FilterMap</code> creates an iterator that uses <code>filter_op</code> to both …",null,null],[3,"FlatMap","","<code>FlatMap</code> maps each element to a parallel iterator, then …",null,null],[3,"FlatMapIter","","<code>FlatMapIter</code> maps each element to a serial iterator, then …",null,null],[3,"Flatten","","<code>Flatten</code> turns each element to a parallel iterator, then …",null,null],[3,"FlattenIter","","<code>FlattenIter</code> turns each element to a serial iterator, then …",null,null],[3,"Fold","","<code>Fold</code> is an iterator that applies a function over an …",null,null],[3,"FoldWith","","<code>FoldWith</code> is an iterator that applies a function over an …",null,null],[3,"Inspect","","<code>Inspect</code> is an iterator that calls a function with a …",null,null],[3,"Interleave","","<code>Interleave</code> is an iterator that interleaves elements of …",null,null],[3,"InterleaveShortest","","<code>InterleaveShortest</code> is an iterator that works similarly to …",null,null],[3,"Intersperse","","<code>Intersperse</code> is an iterator that inserts a particular item …",null,null],[3,"MaxLen","","<code>MaxLen</code> is an iterator that imposes a maximum length on …",null,null],[3,"MinLen","","<code>MinLen</code> is an iterator that imposes a minimum length on …",null,null],[3,"Map","","<code>Map</code> is an iterator that transforms the elements of an …",null,null],[3,"MapInit","","<code>MapInit</code> is an iterator that transforms the elements of an …",null,null],[3,"MapWith","","<code>MapWith</code> is an iterator that transforms the elements of an …",null,null],[3,"MultiZip","","<code>MultiZip</code> is an iterator that zips up a tuple of parallel …",null,null],[5,"once","","Creates a parallel iterator that produces an element …",null,[[["send",8]],[["once",3],["send",8]]]],[3,"Once","","Iterator adaptor for the <code>once()</code> function.",null,null],[3,"PanicFuse","","<code>PanicFuse</code> is an adaptor that wraps an iterator with a …",null,null],[3,"IterBridge","","<code>IterBridge</code> is a parallel iterator that wraps a sequential …",null,null],[8,"ParallelBridge","","Conversion trait to convert an <code>Iterator</code> to a …",null,null],[10,"par_bridge","","Creates a bridge from this type to a <code>ParallelIterator</code>.",8,[[],["iterbridge",3]]],[3,"Positions","","<code>Positions</code> takes a predicate <code>predicate</code> and filters out …",null,null],[5,"repeat","","Creates a parallel iterator that endlessly repeats <code>elt</code> (by…",null,[[["clone",8],["send",8]],[["clone",8],["repeat",3],["send",8]]]],[5,"repeatn","","Creates a parallel iterator that produces <code>n</code> repeats of <code>elt</code>…",null,[[["clone",8],["usize",15],["send",8]],[["clone",8],["repeatn",3],["send",8]]]],[3,"Repeat","","Iterator adaptor for the <code>repeat()</code> function.",null,null],[3,"RepeatN","","Iterator adaptor for the <code>repeatn()</code> function.",null,null],[3,"Rev","","<code>Rev</code> is an iterator that produces elements in reverse …",null,null],[3,"Skip","","<code>Skip</code> is an iterator that skips over the first <code>n</code> elements. …",null,null],[5,"split","","The <code>split</code> function takes arbitrary data and a closure …",null,[[],["split",3]]],[3,"Split","","<code>Split</code> is a parallel iterator using arbitrary data and a …",null,null],[3,"Take","","<code>Take</code> is an iterator that iterates over the first <code>n</code> …",null,null],[3,"TryFold","","<code>TryFold</code> is an iterator that applies a function over an …",null,null],[3,"TryFoldWith","","<code>TryFoldWith</code> is an iterator that applies a function over …",null,null],[3,"Update","","<code>Update</code> is an iterator that mutates the elements of an …",null,null],[3,"WhileSome","","<code>WhileSome</code> is an iterator that yields the <code>Some</code> elements of …",null,null],[3,"Zip","","<code>Zip</code> is an iterator that zips up <code>a</code> and <code>b</code> into a single …",null,null],[3,"ZipEq","","An <code>IndexedParallelIterator</code> that iterates over two …",null,null],[3,"StepBy","","<code>StepBy</code> is an iterator that skips <code>n</code> elements between each …",null,null],[8,"IntoParallelIterator","","<code>IntoParallelIterator</code> implements the conversion to a …",null,null],[16,"Iter","","The parallel iterator type that will be created.",9,null],[16,"Item","","The type of item that the parallel iterator will produce.",9,null],[10,"into_par_iter","","Converts <code>self</code> into a parallel iterator.",9,[[]]],[8,"IntoParallelRefIterator","","<code>IntoParallelRefIterator</code> implements the conversion to a …",null,null],[16,"Iter","","The type of the parallel iterator that will be returned.",10,null],[16,"Item","","The type of item that the parallel iterator will produce. …",10,null],[10,"par_iter","","Converts <code>self</code> into a parallel iterator.",10,[[]]],[8,"IntoParallelRefMutIterator","","<code>IntoParallelRefMutIterator</code> implements the conversion to a …",null,null],[16,"Iter","","The type of iterator that will be created.",11,null],[16,"Item","","The type of item that will be produced; this is typically …",11,null],[10,"par_iter_mut","","Creates the parallel iterator from <code>self</code>.",11,[[]]],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",null,null],[16,"Item","","The type of item that this parallel iterator produces. …",12,null],[11,"for_each","","Executes <code>OP</code> on each item produced by the iterator, in …",12,[[]]],[11,"for_each_with","","Executes <code>OP</code> on the given <code>init</code> value with each item …",12,[[]]],[11,"for_each_init","","Executes <code>OP</code> on a value returned by <code>init</code> with each item …",12,[[]]],[11,"try_for_each","","Executes a fallible <code>OP</code> on each item produced by the …",12,[[]]],[11,"try_for_each_with","","Executes a fallible <code>OP</code> on the given <code>init</code> value with each …",12,[[]]],[11,"try_for_each_init","","Executes a fallible <code>OP</code> on a value returned by <code>init</code> with …",12,[[]]],[11,"count","","Counts the number of items in this parallel iterator.",12,[[],["usize",15]]],[11,"map","","Applies <code>map_op</code> to each item of this iterator, producing a …",12,[[],["map",3]]],[11,"map_with","","Applies <code>map_op</code> to the given <code>init</code> value with each item of …",12,[[],["mapwith",3]]],[11,"map_init","","Applies <code>map_op</code> to a value returned by <code>init</code> with each item …",12,[[],["mapinit",3]]],[11,"cloned","","Creates an iterator which clones all of its elements.  …",12,[[],["cloned",3]]],[11,"copied","","Creates an iterator which copies all of its elements.  …",12,[[],["copied",3]]],[11,"inspect","","Applies <code>inspect_op</code> to a reference to each item of this …",12,[[],["inspect",3]]],[11,"update","","Mutates each item of this iterator before yielding it.",12,[[],["update",3]]],[11,"filter","","Applies <code>filter_op</code> to each item of this iterator, …",12,[[],["filter",3]]],[11,"filter_map","","Applies <code>filter_op</code> to each item of this iterator to get an …",12,[[],["filtermap",3]]],[11,"flat_map","","Applies <code>map_op</code> to each item of this iterator to get …",12,[[],["flatmap",3]]],[11,"flat_map_iter","","Applies <code>map_op</code> to each item of this iterator to get …",12,[[],["flatmapiter",3]]],[11,"flatten","","An adaptor that flattens parallel-iterable <code>Item</code>s into one …",12,[[],["flatten",3]]],[11,"flatten_iter","","An adaptor that flattens serial-iterable <code>Item</code>s into one …",12,[[],["flatteniter",3]]],[11,"reduce","","Reduces the items in the iterator into one item using <code>op</code>. …",12,[[]]],[11,"reduce_with","","Reduces the items in the iterator into one item using <code>op</code>. …",12,[[],["option",4]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a …",12,[[]]],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a …",12,[[],["option",4]]],[11,"fold","","Parallel fold is similar to sequential fold except that …",12,[[],["fold",3]]],[11,"fold_with","","Applies <code>fold_op</code> to the given <code>init</code> value with each item of …",12,[[],["foldwith",3]]],[11,"try_fold","","Performs a fallible parallel fold.",12,[[],["tryfold",3]]],[11,"try_fold_with","","Performs a fallible parallel fold with a cloneable <code>init</code> …",12,[[],["tryfoldwith",3]]],[11,"sum","","Sums up the items in the iterator.",12,[[]]],[11,"product","","Multiplies all the items in the iterator.",12,[[]]],[11,"min","","Computes the minimum of all the items in the iterator. If …",12,[[],["option",4]]],[11,"min_by","","Computes the minimum of all the items in the iterator …",12,[[],["option",4]]],[11,"min_by_key","","Computes the item that yields the minimum value for the …",12,[[],["option",4]]],[11,"max","","Computes the maximum of all the items in the iterator. If …",12,[[],["option",4]]],[11,"max_by","","Computes the maximum of all the items in the iterator …",12,[[],["option",4]]],[11,"max_by_key","","Computes the item that yields the maximum value for the …",12,[[],["option",4]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",12,[[],["chain",3]]],[11,"find_any","","Searches for <strong>some</strong> item in the parallel iterator that …",12,[[],["option",4]]],[11,"find_first","","Searches for the sequentially <strong>first</strong> item in the parallel …",12,[[],["option",4]]],[11,"find_last","","Searches for the sequentially <strong>last</strong> item in the parallel …",12,[[],["option",4]]],[11,"find_map_any","","Applies the given predicate to the items in the parallel …",12,[[],["option",4]]],[11,"find_map_first","","Applies the given predicate to the items in the parallel …",12,[[],["option",4]]],[11,"find_map_last","","Applies the given predicate to the items in the parallel …",12,[[],["option",4]]],[11,"any","","Searches for <strong>some</strong> item in the parallel iterator that …",12,[[],["bool",15]]],[11,"all","","Tests that every item in the parallel iterator matches …",12,[[],["bool",15]]],[11,"while_some","","Creates an iterator over the <code>Some</code> items of this iterator, …",12,[[],["whilesome",3]]],[11,"panic_fuse","","Wraps an iterator with a fuse in case of panics, to halt …",12,[[],["panicfuse",3]]],[11,"collect","","Creates a fresh collection containing all the elements …",12,[[]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of …",12,[[]]],[11,"partition","","Partitions the items of a parallel iterator into a pair …",12,[[]]],[11,"partition_map","","Partitions and maps the items of a parallel iterator into …",12,[[]]],[11,"intersperse","","Intersperses clones of an element between items of this …",12,[[],["intersperse",3]]],[10,"drive_unindexed","","Internal method used to define the behavior of this …",12,[[]]],[11,"opt_len","","Internal method used to define the behavior of this …",12,[[],[["usize",15],["option",4]]]],[8,"IndexedParallelIterator","","An iterator that supports \\\"random access\\\" to its data, …",null,null],[11,"collect_into_vec","","Collects the results of the iterator into the specified …",13,[[["vec",3]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified …",13,[[["vec",3],["vec",3]]]],[11,"zip","","Iterates over tuples <code>(A, B)</code>, where the items <code>A</code> are from …",13,[[],["zip",3]]],[11,"zip_eq","","The same as <code>Zip</code>, but requires that both iterators have …",13,[[],["zipeq",3]]],[11,"interleave","","Interleaves elements of this iterator and the other given …",13,[[],["interleave",3]]],[11,"interleave_shortest","","Interleaves elements of this iterator and the other given …",13,[[],["interleaveshortest",3]]],[11,"chunks","","Splits an iterator up into fixed-size chunks.",13,[[["usize",15]],["chunks",3]]],[11,"cmp","","Lexicographically compares the elements of this …",13,[[],["ordering",4]]],[11,"partial_cmp","","Lexicographically compares the elements of this …",13,[[],[["option",4],["ordering",4]]]],[11,"eq","","Determines if the elements of this <code>ParallelIterator</code> are …",13,[[],["bool",15]]],[11,"ne","","Determines if the elements of this <code>ParallelIterator</code> are …",13,[[],["bool",15]]],[11,"lt","","Determines if the elements of this <code>ParallelIterator</code> are …",13,[[],["bool",15]]],[11,"le","","Determines if the elements of this <code>ParallelIterator</code> are …",13,[[],["bool",15]]],[11,"gt","","Determines if the elements of this <code>ParallelIterator</code> are …",13,[[],["bool",15]]],[11,"ge","","Determines if the elements of this <code>ParallelIterator</code> are …",13,[[],["bool",15]]],[11,"enumerate","","Yields an index along with each item.",13,[[],["enumerate",3]]],[11,"step_by","","Creates an iterator that steps by the given amount",13,[[["usize",15]],["stepby",3]]],[11,"skip","","Creates an iterator that skips the first <code>n</code> elements.",13,[[["usize",15]],["skip",3]]],[11,"take","","Creates an iterator that yields the first <code>n</code> elements.",13,[[["usize",15]],["take",3]]],[11,"position_any","","Searches for <strong>some</strong> item in the parallel iterator that …",13,[[],[["usize",15],["option",4]]]],[11,"position_first","","Searches for the sequentially <strong>first</strong> item in the parallel …",13,[[],[["usize",15],["option",4]]]],[11,"position_last","","Searches for the sequentially <strong>last</strong> item in the parallel …",13,[[],[["usize",15],["option",4]]]],[11,"positions","","Searches for items in the parallel iterator that match …",13,[[],["positions",3]]],[11,"rev","","Produces a new iterator with the elements of this …",13,[[],["rev",3]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process …",13,[[["usize",15]],["minlen",3]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process …",13,[[["usize",15]],["maxlen",3]]],[10,"len","","Produces an exact count of how many items this iterator …",13,[[],["usize",15]]],[10,"drive","","Internal method used to define the behavior of this …",13,[[["consumer",8]]]],[10,"with_producer","","Internal method used to define the behavior of this …",13,[[["producercallback",8]]]],[8,"FromParallelIterator","","<code>FromParallelIterator</code> implements the creation of a …",null,null],[10,"from_par_iter","","Creates an instance of the collection from the parallel …",14,[[]]],[8,"ParallelExtend","","<code>ParallelExtend</code> extends an existing collection with items …",null,null],[10,"par_extend","","Extends an instance of the collection with the elements …",15,[[]]],[8,"ParallelDrainFull","","<code>ParallelDrainFull</code> creates a parallel iterator that moves …",null,null],[16,"Iter","","The draining parallel iterator type that will be created.",16,null],[16,"Item","","The type of item that the parallel iterator will produce. …",16,null],[10,"par_drain","","Returns a draining parallel iterator over an entire …",16,[[]]],[8,"ParallelDrainRange","","<code>ParallelDrainRange</code> creates a parallel iterator that moves …",null,null],[16,"Iter","","The draining parallel iterator type that will be created.",17,null],[16,"Item","","The type of item that the parallel iterator will produce. …",17,null],[10,"par_drain","","Returns a draining parallel iterator over a range of the …",17,[[["rangebounds",8]]]],[0,"option","rayon","Parallel iterator types for options",null,null],[3,"IntoIter","rayon::option","A parallel iterator over the value in <code>Some</code> variant of an …",null,null],[3,"Iter","","A parallel iterator over a reference to the <code>Some</code> variant …",null,null],[3,"IterMut","","A parallel iterator over a mutable reference to the <code>Some</code> …",null,null],[0,"prelude","rayon","The rayon prelude imports the various <code>ParallelIterator</code> …",null,null],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an <code>Iterator</code> to a …",null,null],[10,"par_bridge","","Creates a bridge from this type to a <code>ParallelIterator</code>.",8,[[],["iterbridge",3]]],[0,"range","rayon","Parallel iterator types for ranges, the type for values …",null,null],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all …",null,null],[0,"range_inclusive","rayon","Parallel iterator types for inclusive ranges, the type …",null,null],[3,"Iter","rayon::range_inclusive","Parallel iterator over an inclusive range, implemented …",null,null],[0,"result","rayon","Parallel iterator types for results",null,null],[3,"IntoIter","rayon::result","Parallel iterator over a result",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a result",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a result",null,null],[0,"slice","rayon","Parallel iterator types for slices",null,null],[8,"ParallelSlice","rayon::slice","Parallel extensions for slices.",null,null],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the …",18,[[]]],[11,"par_split","","Returns a parallel iterator over subslices separated by …",18,[[],["split",3]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows …",18,[[["usize",15]],["windows",3]]],[11,"par_chunks","","Returns a parallel iterator over at most <code>chunk_size</code> …",18,[[["usize",15]],["chunks",3]]],[11,"par_chunks_exact","","Returns a parallel iterator over <code>chunk_size</code> elements of …",18,[[["usize",15]],["chunksexact",3]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",null,null],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement …",19,[[]]],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices …",19,[[],["splitmut",3]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most <code>chunk_size</code> …",19,[[["usize",15]],["chunksmut",3]]],[11,"par_chunks_exact_mut","","Returns a parallel iterator over <code>chunk_size</code> elements of …",19,[[["usize",15]],["chunksexactmut",3]]],[11,"par_sort","","Sorts the slice in parallel.",19,[[]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",19,[[]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction …",19,[[]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the …",19,[[]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function, …",19,[[]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction …",19,[[]]],[3,"Iter","","Parallel iterator over immutable items in a slice",null,null],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks …",null,null],[3,"ChunksExact","","Parallel iterator over immutable non-overlapping chunks …",null,null],[11,"remainder","","Return the remainder of the original slice that is not …",20,[[]]],[3,"Windows","","Parallel iterator over immutable overlapping windows of a …",null,null],[3,"IterMut","","Parallel iterator over mutable items in a slice",null,null],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of …",null,null],[3,"ChunksExactMut","","Parallel iterator over mutable non-overlapping chunks of …",null,null],[11,"into_remainder","","Return the remainder of the original slice that is not …",21,[[]]],[11,"remainder","","Return the remainder of the original slice that is not …",21,[[]]],[11,"take_remainder","","Return the remainder of the original slice that is not …",21,[[]]],[3,"Split","","Parallel iterator over slices separated by a predicate",null,null],[3,"SplitMut","","Parallel iterator over mutable slices separated by a …",null,null],[0,"str","rayon","Parallel iterator types for strings",null,null],[8,"ParallelString","rayon::str","Parallel extensions for strings.",null,null],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement …",22,[[],["str",15]]],[11,"par_chars","","Returns a parallel iterator over the characters of a …",22,[[],["chars",3]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a …",22,[[],["charindices",3]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",22,[[],["bytes",3]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as …",22,[[],["encodeutf16",3]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a…",22,[[["pattern",8]],[["pattern",8],["split",3]]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by …",22,[[["pattern",8]],[["splitterminator",3],["pattern",8]]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string, …",22,[[],["lines",3]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a …",22,[[],["splitwhitespace",3]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a …",22,[[["pattern",8]],[["pattern",8],["matches",3]]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a …",22,[[["pattern",8]],[["matchindices",3],["pattern",8]]]],[3,"Chars","","Parallel iterator over the characters of a string",null,null],[3,"CharIndices","","Parallel iterator over the characters of a string, with …",null,null],[3,"Bytes","","Parallel iterator over the bytes of a string",null,null],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",null,null],[3,"Split","","Parallel iterator over substrings separated by a pattern",null,null],[3,"SplitTerminator","","Parallel iterator over substrings separated by a …",null,null],[3,"Lines","","Parallel iterator over lines in a string",null,null],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",null,null],[3,"Matches","","Parallel iterator over substrings that match a pattern",null,null],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern, …",null,null],[0,"string","rayon","This module contains the parallel iterator types for …",null,null],[3,"Drain","rayon::string","Draining parallel iterator that moves a range of …",null,null],[0,"vec","rayon","Parallel iterator types for vectors (<code>Vec<T></code>)",null,null],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",null,null],[3,"Drain","","Draining parallel iterator that moves a range out of a …",null,null],[3,"FnContext","rayon","Provides the calling context to a closure called by …",null,null],[3,"ThreadBuilder","","Thread builder used for customization via …",null,null],[3,"ThreadPool","","Represents a user created thread-pool.",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new <code>ThreadPool</code> or to configure the …",null,null],[5,"current_num_threads","","Returns the number of threads in the current registry. If …",null,[[],["usize",15]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index …",null,[[],[["usize",15],["option",4]]]],[5,"join","","Takes two closures and <em>potentially</em> runs them in parallel. …",null,[[]]],[5,"join_context","","Identical to <code>join</code>, except that the closures have a …",null,[[]]],[5,"scope","","Creates a \\\"fork-join\\\" scope <code>s</code> and invokes the closure …",null,[[]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn …",null,null],[5,"scope_fifo","","Creates a \\\"fork-join\\\" scope <code>s</code> with FIFO order, and …",null,[[]]],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn …",null,null],[5,"spawn","","Fires off a task into the Rayon threadpool in the …",null,[[]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the …",null,[[]]],[11,"into_par_iter","rayon::collections::binary_heap","",23,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"into_par_iter","","",24,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"into_par_iter","","",25,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"into_par_iter","rayon::collections::btree_map","",26,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"into_par_iter","","",27,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"into_par_iter","","",28,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[],["usize",15]]],[11,"deref","","",28,[[["usize",15]]]],[11,"deref_mut","","",28,[[["usize",15]]]],[11,"drop","","",28,[[["usize",15]]]],[11,"into_par_iter","rayon::collections::btree_set","",29,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"into_par_iter","","",30,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"into_par_iter","rayon::collections::hash_map","",31,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"into_par_iter","","",32,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"into_par_iter","","",33,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"into_par_iter","","",34,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"into_par_iter","rayon::collections::hash_set","",35,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"init","","",35,[[],["usize",15]]],[11,"deref","","",35,[[["usize",15]]]],[11,"deref_mut","","",35,[[["usize",15]]]],[11,"drop","","",35,[[["usize",15]]]],[11,"into_par_iter","","",36,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"init","","",36,[[],["usize",15]]],[11,"deref","","",36,[[["usize",15]]]],[11,"deref_mut","","",36,[[["usize",15]]]],[11,"drop","","",36,[[["usize",15]]]],[11,"into_par_iter","","",37,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"into_par_iter","rayon::collections::linked_list","",38,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"init","","",38,[[],["usize",15]]],[11,"deref","","",38,[[["usize",15]]]],[11,"deref_mut","","",38,[[["usize",15]]]],[11,"drop","","",38,[[["usize",15]]]],[11,"into_par_iter","","",39,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"init","","",39,[[],["usize",15]]],[11,"deref","","",39,[[["usize",15]]]],[11,"deref_mut","","",39,[[["usize",15]]]],[11,"drop","","",39,[[["usize",15]]]],[11,"into_par_iter","","",40,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"into_par_iter","rayon::collections::vec_deque","",41,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"init","","",41,[[],["usize",15]]],[11,"deref","","",41,[[["usize",15]]]],[11,"deref_mut","","",41,[[["usize",15]]]],[11,"drop","","",41,[[["usize",15]]]],[11,"into_par_iter","","",42,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"init","","",42,[[],["usize",15]]],[11,"deref","","",42,[[["usize",15]]]],[11,"deref_mut","","",42,[[["usize",15]]]],[11,"drop","","",42,[[["usize",15]]]],[11,"into_par_iter","","",43,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"init","","",43,[[],["usize",15]]],[11,"deref","","",43,[[["usize",15]]]],[11,"deref_mut","","",43,[[["usize",15]]]],[11,"drop","","",43,[[["usize",15]]]],[11,"into_par_iter","","",44,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"init","","",44,[[],["usize",15]]],[11,"deref","","",44,[[["usize",15]]]],[11,"deref_mut","","",44,[[["usize",15]]]],[11,"drop","","",44,[[["usize",15]]]],[11,"into_par_iter","rayon::iter","",45,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"into_par_iter","","",46,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"into_par_iter","","",47,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"into_par_iter","","",48,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"into_par_iter","","",49,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"into_par_iter","","",50,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"into_par_iter","","",51,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"into_par_iter","","",52,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"init","","",52,[[],["usize",15]]],[11,"deref","","",52,[[["usize",15]]]],[11,"deref_mut","","",52,[[["usize",15]]]],[11,"drop","","",52,[[["usize",15]]]],[11,"into_par_iter","","",53,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"init","","",53,[[],["usize",15]]],[11,"deref","","",53,[[["usize",15]]]],[11,"deref_mut","","",53,[[["usize",15]]]],[11,"drop","","",53,[[["usize",15]]]],[11,"into_par_iter","","",54,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"init","","",54,[[],["usize",15]]],[11,"deref","","",54,[[["usize",15]]]],[11,"deref_mut","","",54,[[["usize",15]]]],[11,"drop","","",54,[[["usize",15]]]],[11,"into_par_iter","","",55,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"init","","",55,[[],["usize",15]]],[11,"deref","","",55,[[["usize",15]]]],[11,"deref_mut","","",55,[[["usize",15]]]],[11,"drop","","",55,[[["usize",15]]]],[11,"into_par_iter","","",56,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"init","","",56,[[],["usize",15]]],[11,"deref","","",56,[[["usize",15]]]],[11,"deref_mut","","",56,[[["usize",15]]]],[11,"drop","","",56,[[["usize",15]]]],[11,"into_par_iter","","",57,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"init","","",57,[[],["usize",15]]],[11,"deref","","",57,[[["usize",15]]]],[11,"deref_mut","","",57,[[["usize",15]]]],[11,"drop","","",57,[[["usize",15]]]],[11,"into_par_iter","","",58,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"init","","",58,[[],["usize",15]]],[11,"deref","","",58,[[["usize",15]]]],[11,"deref_mut","","",58,[[["usize",15]]]],[11,"drop","","",58,[[["usize",15]]]],[11,"into_par_iter","","",59,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"init","","",59,[[],["usize",15]]],[11,"deref","","",59,[[["usize",15]]]],[11,"deref_mut","","",59,[[["usize",15]]]],[11,"drop","","",59,[[["usize",15]]]],[11,"into_par_iter","","",60,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"init","","",60,[[],["usize",15]]],[11,"deref","","",60,[[["usize",15]]]],[11,"deref_mut","","",60,[[["usize",15]]]],[11,"drop","","",60,[[["usize",15]]]],[11,"into_par_iter","","",61,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"init","","",61,[[],["usize",15]]],[11,"deref","","",61,[[["usize",15]]]],[11,"deref_mut","","",61,[[["usize",15]]]],[11,"drop","","",61,[[["usize",15]]]],[11,"into_par_iter","","",62,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"init","","",62,[[],["usize",15]]],[11,"deref","","",62,[[["usize",15]]]],[11,"deref_mut","","",62,[[["usize",15]]]],[11,"drop","","",62,[[["usize",15]]]],[11,"into_par_iter","","",63,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"init","","",63,[[],["usize",15]]],[11,"deref","","",63,[[["usize",15]]]],[11,"deref_mut","","",63,[[["usize",15]]]],[11,"drop","","",63,[[["usize",15]]]],[11,"into_par_iter","","",64,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"init","","",64,[[],["usize",15]]],[11,"deref","","",64,[[["usize",15]]]],[11,"deref_mut","","",64,[[["usize",15]]]],[11,"drop","","",64,[[["usize",15]]]],[11,"into_par_iter","","",65,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"init","","",65,[[],["usize",15]]],[11,"deref","","",65,[[["usize",15]]]],[11,"deref_mut","","",65,[[["usize",15]]]],[11,"drop","","",65,[[["usize",15]]]],[11,"into_par_iter","","",66,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"init","","",66,[[],["usize",15]]],[11,"deref","","",66,[[["usize",15]]]],[11,"deref_mut","","",66,[[["usize",15]]]],[11,"drop","","",66,[[["usize",15]]]],[11,"into_par_iter","","",67,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"init","","",67,[[],["usize",15]]],[11,"deref","","",67,[[["usize",15]]]],[11,"deref_mut","","",67,[[["usize",15]]]],[11,"drop","","",67,[[["usize",15]]]],[11,"into_par_iter","","",68,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"init","","",68,[[],["usize",15]]],[11,"deref","","",68,[[["usize",15]]]],[11,"deref_mut","","",68,[[["usize",15]]]],[11,"drop","","",68,[[["usize",15]]]],[11,"into_par_iter","","",69,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"init","","",69,[[],["usize",15]]],[11,"deref","","",69,[[["usize",15]]]],[11,"deref_mut","","",69,[[["usize",15]]]],[11,"drop","","",69,[[["usize",15]]]],[11,"into_par_iter","","",70,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"init","","",70,[[],["usize",15]]],[11,"deref","","",70,[[["usize",15]]]],[11,"deref_mut","","",70,[[["usize",15]]]],[11,"drop","","",70,[[["usize",15]]]],[11,"into_par_iter","","",71,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"init","","",71,[[],["usize",15]]],[11,"deref","","",71,[[["usize",15]]]],[11,"deref_mut","","",71,[[["usize",15]]]],[11,"drop","","",71,[[["usize",15]]]],[11,"into_par_iter","","",72,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"init","","",72,[[],["usize",15]]],[11,"deref","","",72,[[["usize",15]]]],[11,"deref_mut","","",72,[[["usize",15]]]],[11,"drop","","",72,[[["usize",15]]]],[11,"into_par_iter","","",73,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"init","","",73,[[],["usize",15]]],[11,"deref","","",73,[[["usize",15]]]],[11,"deref_mut","","",73,[[["usize",15]]]],[11,"drop","","",73,[[["usize",15]]]],[11,"into_par_iter","","",74,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"init","","",74,[[],["usize",15]]],[11,"deref","","",74,[[["usize",15]]]],[11,"deref_mut","","",74,[[["usize",15]]]],[11,"drop","","",74,[[["usize",15]]]],[11,"into_par_iter","","",75,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"init","","",75,[[],["usize",15]]],[11,"deref","","",75,[[["usize",15]]]],[11,"deref_mut","","",75,[[["usize",15]]]],[11,"drop","","",75,[[["usize",15]]]],[11,"into_par_iter","","",76,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"init","","",76,[[],["usize",15]]],[11,"deref","","",76,[[["usize",15]]]],[11,"deref_mut","","",76,[[["usize",15]]]],[11,"drop","","",76,[[["usize",15]]]],[11,"into_par_iter","","",77,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"init","","",77,[[],["usize",15]]],[11,"deref","","",77,[[["usize",15]]]],[11,"deref_mut","","",77,[[["usize",15]]]],[11,"drop","","",77,[[["usize",15]]]],[11,"into_par_iter","","",78,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"init","","",78,[[],["usize",15]]],[11,"deref","","",78,[[["usize",15]]]],[11,"deref_mut","","",78,[[["usize",15]]]],[11,"drop","","",78,[[["usize",15]]]],[11,"into_par_iter","","",79,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"init","","",79,[[],["usize",15]]],[11,"deref","","",79,[[["usize",15]]]],[11,"deref_mut","","",79,[[["usize",15]]]],[11,"drop","","",79,[[["usize",15]]]],[11,"into_par_iter","","",80,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"init","","",80,[[],["usize",15]]],[11,"deref","","",80,[[["usize",15]]]],[11,"deref_mut","","",80,[[["usize",15]]]],[11,"drop","","",80,[[["usize",15]]]],[11,"into_par_iter","","",81,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"init","","",81,[[],["usize",15]]],[11,"deref","","",81,[[["usize",15]]]],[11,"deref_mut","","",81,[[["usize",15]]]],[11,"drop","","",81,[[["usize",15]]]],[11,"into_par_iter","","",82,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"init","","",82,[[],["usize",15]]],[11,"deref","","",82,[[["usize",15]]]],[11,"deref_mut","","",82,[[["usize",15]]]],[11,"drop","","",82,[[["usize",15]]]],[11,"into_par_iter","","",83,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"init","","",83,[[],["usize",15]]],[11,"deref","","",83,[[["usize",15]]]],[11,"deref_mut","","",83,[[["usize",15]]]],[11,"drop","","",83,[[["usize",15]]]],[11,"into_par_iter","","",84,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"init","","",84,[[],["usize",15]]],[11,"deref","","",84,[[["usize",15]]]],[11,"deref_mut","","",84,[[["usize",15]]]],[11,"drop","","",84,[[["usize",15]]]],[11,"into_par_iter","","",85,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"init","","",85,[[],["usize",15]]],[11,"deref","","",85,[[["usize",15]]]],[11,"deref_mut","","",85,[[["usize",15]]]],[11,"drop","","",85,[[["usize",15]]]],[11,"into_par_iter","","",7,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"into_par_iter","rayon::option","",86,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"init","","",86,[[],["usize",15]]],[11,"deref","","",86,[[["usize",15]]]],[11,"deref_mut","","",86,[[["usize",15]]]],[11,"drop","","",86,[[["usize",15]]]],[11,"into_par_iter","","",87,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"init","","",87,[[],["usize",15]]],[11,"deref","","",87,[[["usize",15]]]],[11,"deref_mut","","",87,[[["usize",15]]]],[11,"drop","","",87,[[["usize",15]]]],[11,"into_par_iter","","",88,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"init","","",88,[[],["usize",15]]],[11,"deref","","",88,[[["usize",15]]]],[11,"deref_mut","","",88,[[["usize",15]]]],[11,"drop","","",88,[[["usize",15]]]],[11,"into_par_iter","rayon::range","",89,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"init","","",89,[[],["usize",15]]],[11,"deref","","",89,[[["usize",15]]]],[11,"deref_mut","","",89,[[["usize",15]]]],[11,"drop","","",89,[[["usize",15]]]],[11,"into_par_iter","rayon::range_inclusive","",90,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"init","","",90,[[],["usize",15]]],[11,"deref","","",90,[[["usize",15]]]],[11,"deref_mut","","",90,[[["usize",15]]]],[11,"drop","","",90,[[["usize",15]]]],[11,"into_par_iter","rayon::result","",91,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"init","","",91,[[],["usize",15]]],[11,"deref","","",91,[[["usize",15]]]],[11,"deref_mut","","",91,[[["usize",15]]]],[11,"drop","","",91,[[["usize",15]]]],[11,"into_par_iter","","",92,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"init","","",92,[[],["usize",15]]],[11,"deref","","",92,[[["usize",15]]]],[11,"deref_mut","","",92,[[["usize",15]]]],[11,"drop","","",92,[[["usize",15]]]],[11,"into_par_iter","","",93,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"init","","",93,[[],["usize",15]]],[11,"deref","","",93,[[["usize",15]]]],[11,"deref_mut","","",93,[[["usize",15]]]],[11,"drop","","",93,[[["usize",15]]]],[11,"into_par_iter","rayon::slice","",94,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"init","","",94,[[],["usize",15]]],[11,"deref","","",94,[[["usize",15]]]],[11,"deref_mut","","",94,[[["usize",15]]]],[11,"drop","","",94,[[["usize",15]]]],[11,"into_par_iter","","",95,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"init","","",95,[[],["usize",15]]],[11,"deref","","",95,[[["usize",15]]]],[11,"deref_mut","","",95,[[["usize",15]]]],[11,"drop","","",95,[[["usize",15]]]],[11,"into_par_iter","","",20,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"into_par_iter","","",96,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"init","","",96,[[],["usize",15]]],[11,"deref","","",96,[[["usize",15]]]],[11,"deref_mut","","",96,[[["usize",15]]]],[11,"drop","","",96,[[["usize",15]]]],[11,"into_par_iter","","",97,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"init","","",97,[[],["usize",15]]],[11,"deref","","",97,[[["usize",15]]]],[11,"deref_mut","","",97,[[["usize",15]]]],[11,"drop","","",97,[[["usize",15]]]],[11,"into_par_iter","","",98,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"init","","",98,[[],["usize",15]]],[11,"deref","","",98,[[["usize",15]]]],[11,"deref_mut","","",98,[[["usize",15]]]],[11,"drop","","",98,[[["usize",15]]]],[11,"into_par_iter","","",21,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"into_par_iter","","",99,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"init","","",99,[[],["usize",15]]],[11,"deref","","",99,[[["usize",15]]]],[11,"deref_mut","","",99,[[["usize",15]]]],[11,"drop","","",99,[[["usize",15]]]],[11,"into_par_iter","","",100,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"init","","",100,[[],["usize",15]]],[11,"deref","","",100,[[["usize",15]]]],[11,"deref_mut","","",100,[[["usize",15]]]],[11,"drop","","",100,[[["usize",15]]]],[11,"into_par_iter","rayon::str","",101,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"init","","",101,[[],["usize",15]]],[11,"deref","","",101,[[["usize",15]]]],[11,"deref_mut","","",101,[[["usize",15]]]],[11,"drop","","",101,[[["usize",15]]]],[11,"into_par_iter","","",102,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"init","","",102,[[],["usize",15]]],[11,"deref","","",102,[[["usize",15]]]],[11,"deref_mut","","",102,[[["usize",15]]]],[11,"drop","","",102,[[["usize",15]]]],[11,"into_par_iter","","",103,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"init","","",103,[[],["usize",15]]],[11,"deref","","",103,[[["usize",15]]]],[11,"deref_mut","","",103,[[["usize",15]]]],[11,"drop","","",103,[[["usize",15]]]],[11,"into_par_iter","","",104,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"init","","",104,[[],["usize",15]]],[11,"deref","","",104,[[["usize",15]]]],[11,"deref_mut","","",104,[[["usize",15]]]],[11,"drop","","",104,[[["usize",15]]]],[11,"into_par_iter","","",105,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"init","","",105,[[],["usize",15]]],[11,"deref","","",105,[[["usize",15]]]],[11,"deref_mut","","",105,[[["usize",15]]]],[11,"drop","","",105,[[["usize",15]]]],[11,"into_par_iter","","",106,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"init","","",106,[[],["usize",15]]],[11,"deref","","",106,[[["usize",15]]]],[11,"deref_mut","","",106,[[["usize",15]]]],[11,"drop","","",106,[[["usize",15]]]],[11,"into_par_iter","","",107,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"init","","",107,[[],["usize",15]]],[11,"deref","","",107,[[["usize",15]]]],[11,"deref_mut","","",107,[[["usize",15]]]],[11,"drop","","",107,[[["usize",15]]]],[11,"into_par_iter","","",108,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"init","","",108,[[],["usize",15]]],[11,"deref","","",108,[[["usize",15]]]],[11,"deref_mut","","",108,[[["usize",15]]]],[11,"drop","","",108,[[["usize",15]]]],[11,"into_par_iter","","",109,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"init","","",109,[[],["usize",15]]],[11,"deref","","",109,[[["usize",15]]]],[11,"deref_mut","","",109,[[["usize",15]]]],[11,"drop","","",109,[[["usize",15]]]],[11,"into_par_iter","","",110,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"init","","",110,[[],["usize",15]]],[11,"deref","","",110,[[["usize",15]]]],[11,"deref_mut","","",110,[[["usize",15]]]],[11,"drop","","",110,[[["usize",15]]]],[11,"into_par_iter","rayon::string","",111,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"init","","",111,[[],["usize",15]]],[11,"deref","","",111,[[["usize",15]]]],[11,"deref_mut","","",111,[[["usize",15]]]],[11,"drop","","",111,[[["usize",15]]]],[11,"into_par_iter","rayon::vec","",112,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"init","","",112,[[],["usize",15]]],[11,"deref","","",112,[[["usize",15]]]],[11,"deref_mut","","",112,[[["usize",15]]]],[11,"drop","","",112,[[["usize",15]]]],[11,"into_par_iter","","",113,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"init","","",113,[[],["usize",15]]],[11,"deref","","",113,[[["usize",15]]]],[11,"deref_mut","","",113,[[["usize",15]]]],[11,"drop","","",113,[[["usize",15]]]],[11,"from","rayon","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"init","","",114,[[],["usize",15]]],[11,"deref","","",114,[[["usize",15]]]],[11,"deref_mut","","",114,[[["usize",15]]]],[11,"drop","","",114,[[["usize",15]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"init","","",115,[[],["usize",15]]],[11,"deref","","",115,[[["usize",15]]]],[11,"deref_mut","","",115,[[["usize",15]]]],[11,"drop","","",115,[[["usize",15]]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"init","","",116,[[],["usize",15]]],[11,"deref","","",116,[[["usize",15]]]],[11,"deref_mut","","",116,[[["usize",15]]]],[11,"drop","","",116,[[["usize",15]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_string","","",117,[[],["string",3]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"init","","",117,[[],["usize",15]]],[11,"deref","","",117,[[["usize",15]]]],[11,"deref_mut","","",117,[[["usize",15]]]],[11,"drop","","",117,[[["usize",15]]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"init","","",118,[[],["usize",15]]],[11,"deref","","",118,[[["usize",15]]]],[11,"deref_mut","","",118,[[["usize",15]]]],[11,"drop","","",118,[[["usize",15]]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"init","","",119,[[],["usize",15]]],[11,"deref","","",119,[[["usize",15]]]],[11,"deref_mut","","",119,[[["usize",15]]]],[11,"drop","","",119,[[["usize",15]]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"init","","",120,[[],["usize",15]]],[11,"deref","","",120,[[["usize",15]]]],[11,"deref_mut","","",120,[[["usize",15]]]],[11,"drop","","",120,[[["usize",15]]]],[11,"clone","rayon::iter","",7,[[],["either",4]]],[11,"into","","",7,[[],["result",4]]],[11,"next_back","","",7,[[],["option",4]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_ref","","",7,[[],["str",15]]],[11,"as_ref","","",7,[[]]],[11,"as_ref","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"extend","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"fold","","",7,[[]]],[11,"count","","",7,[[],["usize",15]]],[11,"last","","",7,[[],["option",4]]],[11,"nth","","",7,[[["usize",15]],["option",4]]],[11,"collect","","",7,[[]]],[11,"all","","",7,[[],["bool",15]]],[11,"as_mut","","",7,[[]]],[11,"as_mut","","",7,[[]]],[11,"as_mut","","",7,[[],["str",15]]],[11,"from","","",7,[[["result",4]],["either",4]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",7,[[["either",4]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["either",4]],["bool",15]]],[11,"le","","",7,[[["either",4]],["bool",15]]],[11,"gt","","",7,[[["either",4]],["bool",15]]],[11,"ge","","",7,[[["either",4]],["bool",15]]],[11,"hash","","",7,[[]]],[11,"cmp","","",7,[[["either",4]],["ordering",4]]],[11,"eq","","",7,[[["either",4]],["bool",15]]],[11,"ne","","",7,[[["either",4]],["bool",15]]],[11,"fmt","rayon","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",117,[[],["str",15]]],[11,"source","","",117,[[],[["option",4],["error",8]]]],[11,"default","","",118,[[],[["defaultspawn",3],["threadpoolbuilder",3]]]],[11,"drop","","",116,[[]]],[11,"drive_unindexed","rayon::collections::binary_heap","",23,[[]]],[11,"opt_len","","",23,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",24,[[]]],[11,"opt_len","","",24,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",25,[[]]],[11,"opt_len","","",25,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::collections::btree_map","",26,[[]]],[11,"opt_len","","",26,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",27,[[]]],[11,"opt_len","","",27,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",28,[[]]],[11,"opt_len","","",28,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::collections::btree_set","",29,[[]]],[11,"opt_len","","",29,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",30,[[]]],[11,"opt_len","","",30,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::collections::hash_map","",31,[[]]],[11,"opt_len","","",31,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",32,[[]]],[11,"opt_len","","",32,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",33,[[]]],[11,"opt_len","","",33,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",34,[[]]],[11,"opt_len","","",34,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::collections::hash_set","",35,[[]]],[11,"opt_len","","",35,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",36,[[]]],[11,"opt_len","","",36,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",37,[[]]],[11,"opt_len","","",37,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::collections::linked_list","",38,[[]]],[11,"opt_len","","",38,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",39,[[]]],[11,"opt_len","","",39,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",40,[[]]],[11,"opt_len","","",40,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::collections::vec_deque","",41,[[]]],[11,"opt_len","","",41,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",42,[[]]],[11,"opt_len","","",42,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",43,[[]]],[11,"opt_len","","",43,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",44,[[]]],[11,"opt_len","","",44,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::iter","",45,[[]]],[11,"opt_len","","",45,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",46,[[]]],[11,"opt_len","","",46,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",47,[[]]],[11,"opt_len","","",47,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",48,[[]]],[11,"opt_len","","",48,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",49,[[]]],[11,"opt_len","","",49,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",50,[[]]],[11,"opt_len","","",50,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",51,[[]]],[11,"drive_unindexed","","",52,[[]]],[11,"drive_unindexed","","",53,[[]]],[11,"drive_unindexed","","",54,[[]]],[11,"drive_unindexed","","",55,[[]]],[11,"drive_unindexed","","",56,[[]]],[11,"drive_unindexed","","",57,[[]]],[11,"drive_unindexed","","",58,[[]]],[11,"drive_unindexed","","",59,[[]]],[11,"opt_len","","",59,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",60,[[]]],[11,"opt_len","","",60,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",61,[[]]],[11,"opt_len","","",61,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",62,[[]]],[11,"opt_len","","",62,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",63,[[]]],[11,"opt_len","","",63,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",64,[[]]],[11,"opt_len","","",64,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",65,[[]]],[11,"opt_len","","",65,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",66,[[]]],[11,"opt_len","","",66,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",67,[[]]],[11,"opt_len","","",67,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",68,[[]]],[11,"opt_len","","",68,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",69,[[]]],[11,"opt_len","","",69,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",70,[[]]],[11,"opt_len","","",70,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",71,[[]]],[11,"drive_unindexed","","",72,[[]]],[11,"drive_unindexed","","",73,[[]]],[11,"drive_unindexed","","",74,[[]]],[11,"opt_len","","",74,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",75,[[]]],[11,"opt_len","","",75,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",76,[[]]],[11,"opt_len","","",76,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",77,[[]]],[11,"drive_unindexed","","",78,[[]]],[11,"opt_len","","",78,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",79,[[]]],[11,"drive_unindexed","","",80,[[]]],[11,"drive_unindexed","","",81,[[]]],[11,"opt_len","","",81,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",82,[[]]],[11,"drive_unindexed","","",83,[[]]],[11,"opt_len","","",83,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",84,[[]]],[11,"opt_len","","",84,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",85,[[]]],[11,"opt_len","","",85,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::option","",86,[[]]],[11,"opt_len","","",86,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",87,[[]]],[11,"opt_len","","",87,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",88,[[]]],[11,"opt_len","","",88,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::range","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",89,[[]]],[11,"opt_len","","",89,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::range_inclusive","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",90,[[]]],[11,"opt_len","","",90,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::result","",91,[[]]],[11,"opt_len","","",91,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",92,[[]]],[11,"opt_len","","",92,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",93,[[]]],[11,"opt_len","","",93,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::slice","",94,[[]]],[11,"opt_len","","",94,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",95,[[]]],[11,"opt_len","","",95,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",20,[[]]],[11,"opt_len","","",20,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",96,[[]]],[11,"opt_len","","",96,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",97,[[]]],[11,"opt_len","","",97,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",98,[[]]],[11,"opt_len","","",98,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",21,[[]]],[11,"opt_len","","",21,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",99,[[]]],[11,"drive_unindexed","","",100,[[]]],[11,"drive_unindexed","rayon::str","",101,[[]]],[11,"drive_unindexed","","",102,[[]]],[11,"drive_unindexed","","",103,[[]]],[11,"drive_unindexed","","",104,[[]]],[11,"drive_unindexed","","",105,[[]]],[11,"drive_unindexed","","",106,[[]]],[11,"drive_unindexed","","",107,[[]]],[11,"drive_unindexed","","",108,[[]]],[11,"drive_unindexed","","",109,[[]]],[11,"drive_unindexed","","",110,[[]]],[11,"drive_unindexed","rayon::string","",111,[[]]],[11,"drive_unindexed","rayon::vec","",112,[[]]],[11,"opt_len","","",112,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","","",113,[[]]],[11,"opt_len","","",113,[[],[["usize",15],["option",4]]]],[11,"drive_unindexed","rayon::iter","",7,[[]]],[11,"opt_len","","",7,[[],[["usize",15],["option",4]]]],[11,"drive","rayon::collections::binary_heap","",23,[[]]],[11,"len","","",23,[[],["usize",15]]],[11,"with_producer","","",23,[[]]],[11,"drive","","",24,[[]]],[11,"len","","",24,[[],["usize",15]]],[11,"with_producer","","",24,[[]]],[11,"drive","","",25,[[]]],[11,"len","","",25,[[],["usize",15]]],[11,"with_producer","","",25,[[]]],[11,"drive","rayon::collections::vec_deque","",41,[[]]],[11,"len","","",41,[[],["usize",15]]],[11,"with_producer","","",41,[[]]],[11,"drive","","",42,[[]]],[11,"len","","",42,[[],["usize",15]]],[11,"with_producer","","",42,[[]]],[11,"drive","","",43,[[]]],[11,"len","","",43,[[],["usize",15]]],[11,"with_producer","","",43,[[]]],[11,"drive","","",44,[[]]],[11,"len","","",44,[[],["usize",15]]],[11,"with_producer","","",44,[[]]],[11,"drive","rayon::iter","",45,[[]]],[11,"len","","",45,[[],["usize",15]]],[11,"with_producer","","",45,[[]]],[11,"drive","","",46,[[]]],[11,"len","","",46,[[],["usize",15]]],[11,"with_producer","","",46,[[]]],[11,"drive","","",47,[[]]],[11,"len","","",47,[[],["usize",15]]],[11,"with_producer","","",47,[[]]],[11,"drive","","",48,[[]]],[11,"len","","",48,[[],["usize",15]]],[11,"with_producer","","",48,[[]]],[11,"drive","","",49,[[]]],[11,"len","","",49,[[],["usize",15]]],[11,"with_producer","","",49,[[]]],[11,"drive","","",50,[[["consumer",8]]]],[11,"len","","",50,[[],["usize",15]]],[11,"with_producer","","",50,[[]]],[11,"drive","","",59,[[]]],[11,"len","","",59,[[],["usize",15]]],[11,"with_producer","","",59,[[]]],[11,"drive","","",60,[[]]],[11,"len","","",60,[[],["usize",15]]],[11,"with_producer","","",60,[[]]],[11,"drive","","",61,[[]]],[11,"len","","",61,[[],["usize",15]]],[11,"with_producer","","",61,[[]]],[11,"drive","","",62,[[]]],[11,"len","","",62,[[],["usize",15]]],[11,"with_producer","","",62,[[]]],[11,"drive","","",63,[[["consumer",8]]]],[11,"len","","",63,[[],["usize",15]]],[11,"with_producer","","",63,[[]]],[11,"drive","","",64,[[["consumer",8]]]],[11,"len","","",64,[[],["usize",15]]],[11,"with_producer","","",64,[[]]],[11,"drive","","",65,[[]]],[11,"len","","",65,[[],["usize",15]]],[11,"with_producer","","",65,[[]]],[11,"drive","","",66,[[]]],[11,"len","","",66,[[],["usize",15]]],[11,"with_producer","","",66,[[]]],[11,"drive","","",67,[[]]],[11,"len","","",67,[[],["usize",15]]],[11,"with_producer","","",67,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",68,[[]]],[11,"len","","",68,[[],["usize",15]]],[11,"with_producer","","",68,[[]]],[11,"drive","","",69,[[]]],[11,"len","","",69,[[],["usize",15]]],[11,"with_producer","","",69,[[]]],[11,"drive","","",70,[[]]],[11,"len","","",70,[[],["usize",15]]],[11,"with_producer","","",70,[[]]],[11,"drive","","",74,[[]]],[11,"with_producer","","",74,[[]]],[11,"len","","",74,[[],["usize",15]]],[11,"drive","","",75,[[["consumer",8]]]],[11,"len","","",75,[[],["usize",15]]],[11,"with_producer","","",75,[[]]],[11,"len","","",76,[[],["usize",15]]],[11,"drive","","",76,[[["consumer",8]]]],[11,"with_producer","","",76,[[]]],[11,"len","","",78,[[],["usize",15]]],[11,"drive","","",78,[[["consumer",8]]]],[11,"with_producer","","",78,[[]]],[11,"drive","","",81,[[]]],[11,"len","","",81,[[],["usize",15]]],[11,"with_producer","","",81,[[]]],[11,"drive","","",83,[[]]],[11,"len","","",83,[[],["usize",15]]],[11,"with_producer","","",83,[[]]],[11,"drive","","",84,[[]]],[11,"len","","",84,[[],["usize",15]]],[11,"with_producer","","",84,[[]]],[11,"drive","","",85,[[["consumer",8]]]],[11,"len","","",85,[[],["usize",15]]],[11,"with_producer","","",85,[[]]],[11,"drive","rayon::option","",86,[[]]],[11,"len","","",86,[[],["usize",15]]],[11,"with_producer","","",86,[[]]],[11,"drive","","",87,[[]]],[11,"len","","",87,[[],["usize",15]]],[11,"with_producer","","",87,[[]]],[11,"drive","","",88,[[]]],[11,"len","","",88,[[],["usize",15]]],[11,"with_producer","","",88,[[]]],[11,"drive","rayon::range","",89,[[]]],[11,"len","","",89,[[],["usize",15]]],[11,"with_producer","","",89,[[]]],[11,"drive","","",89,[[]]],[11,"len","","",89,[[],["usize",15]]],[11,"with_producer","","",89,[[]]],[11,"drive","","",89,[[]]],[11,"len","","",89,[[],["usize",15]]],[11,"with_producer","","",89,[[]]],[11,"drive","","",89,[[]]],[11,"len","","",89,[[],["usize",15]]],[11,"with_producer","","",89,[[]]],[11,"drive","","",89,[[]]],[11,"len","","",89,[[],["usize",15]]],[11,"with_producer","","",89,[[]]],[11,"drive","","",89,[[]]],[11,"len","","",89,[[],["usize",15]]],[11,"with_producer","","",89,[[]]],[11,"drive","","",89,[[]]],[11,"len","","",89,[[],["usize",15]]],[11,"with_producer","","",89,[[]]],[11,"drive","","",89,[[]]],[11,"len","","",89,[[],["usize",15]]],[11,"with_producer","","",89,[[]]],[11,"drive","","",89,[[]]],[11,"len","","",89,[[],["usize",15]]],[11,"with_producer","","",89,[[]]],[11,"drive","rayon::range_inclusive","",90,[[]]],[11,"len","","",90,[[],["usize",15]]],[11,"with_producer","","",90,[[]]],[11,"drive","","",90,[[]]],[11,"len","","",90,[[],["usize",15]]],[11,"with_producer","","",90,[[]]],[11,"drive","","",90,[[]]],[11,"len","","",90,[[],["usize",15]]],[11,"with_producer","","",90,[[]]],[11,"drive","","",90,[[]]],[11,"len","","",90,[[],["usize",15]]],[11,"with_producer","","",90,[[]]],[11,"drive","","",90,[[]]],[11,"len","","",90,[[],["usize",15]]],[11,"with_producer","","",90,[[]]],[11,"drive","rayon::result","",91,[[]]],[11,"len","","",91,[[],["usize",15]]],[11,"with_producer","","",91,[[]]],[11,"drive","","",92,[[]]],[11,"len","","",92,[[],["usize",15]]],[11,"with_producer","","",92,[[]]],[11,"drive","","",93,[[]]],[11,"len","","",93,[[],["usize",15]]],[11,"with_producer","","",93,[[]]],[11,"drive","rayon::slice","",94,[[]]],[11,"len","","",94,[[],["usize",15]]],[11,"with_producer","","",94,[[]]],[11,"drive","","",95,[[]]],[11,"len","","",95,[[],["usize",15]]],[11,"with_producer","","",95,[[]]],[11,"drive","","",20,[[]]],[11,"len","","",20,[[],["usize",15]]],[11,"with_producer","","",20,[[]]],[11,"drive","","",96,[[]]],[11,"len","","",96,[[],["usize",15]]],[11,"with_producer","","",96,[[]]],[11,"drive","","",97,[[]]],[11,"len","","",97,[[],["usize",15]]],[11,"with_producer","","",97,[[]]],[11,"drive","","",98,[[]]],[11,"len","","",98,[[],["usize",15]]],[11,"with_producer","","",98,[[]]],[11,"drive","","",21,[[]]],[11,"len","","",21,[[],["usize",15]]],[11,"with_producer","","",21,[[]]],[11,"drive","rayon::vec","",112,[[]]],[11,"len","","",112,[[],["usize",15]]],[11,"with_producer","","",112,[[]]],[11,"drive","","",113,[[]]],[11,"len","","",113,[[],["usize",15]]],[11,"with_producer","","",113,[[]]],[11,"drive","rayon::iter","",7,[[]]],[11,"len","","",7,[[],["usize",15]]],[11,"with_producer","","",7,[[]]],[11,"par_extend","","",7,[[]]],[11,"drop","rayon::collections::binary_heap","",25,[[]]],[11,"drop","rayon::collections::vec_deque","",44,[[]]],[11,"drop","rayon::string","",111,[[]]],[11,"drop","rayon::vec","",113,[[]]],[11,"clone","rayon::collections::binary_heap","",23,[[],["intoiter",3]]],[11,"clone","","",24,[[]]],[11,"clone","rayon::collections::btree_map","",27,[[]]],[11,"clone","rayon::collections::btree_set","",30,[[]]],[11,"clone","rayon::collections::hash_map","",32,[[]]],[11,"clone","rayon::collections::hash_set","",36,[[]]],[11,"clone","rayon::collections::linked_list","",38,[[],["intoiter",3]]],[11,"clone","","",39,[[]]],[11,"clone","rayon::collections::vec_deque","",41,[[],["intoiter",3]]],[11,"clone","","",42,[[]]],[11,"clone","rayon::iter","",45,[[],["chain",3]]],[11,"clone","","",46,[[],["chunks",3]]],[11,"clone","","",47,[[],["cloned",3]]],[11,"clone","","",48,[[],["copied",3]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[],["enumerate",3]]],[11,"clone","","",51,[[],["filter",3]]],[11,"clone","","",52,[[],["filtermap",3]]],[11,"clone","","",53,[[],["flatmap",3]]],[11,"clone","","",54,[[],["flatmapiter",3]]],[11,"clone","","",55,[[],["flatten",3]]],[11,"clone","","",56,[[],["flatteniter",3]]],[11,"clone","","",57,[[],["fold",3]]],[11,"clone","","",58,[[],["foldwith",3]]],[11,"clone","","",59,[[],["inspect",3]]],[11,"clone","","",60,[[],["interleave",3]]],[11,"clone","","",61,[[],["interleaveshortest",3]]],[11,"clone","","",62,[[],["intersperse",3]]],[11,"clone","","",63,[[],["minlen",3]]],[11,"clone","","",64,[[],["maxlen",3]]],[11,"clone","","",65,[[],["map",3]]],[11,"clone","","",66,[[],["mapwith",3]]],[11,"clone","","",67,[[],["mapinit",3]]],[11,"clone","","",68,[[],["multizip",3]]],[11,"clone","","",69,[[],["once",3]]],[11,"clone","","",70,[[],["panicfuse",3]]],[11,"clone","","",71,[[],["iterbridge",3]]],[11,"clone","","",72,[[],["positions",3]]],[11,"clone","","",73,[[],["repeat",3]]],[11,"clone","","",74,[[],["repeatn",3]]],[11,"clone","","",75,[[],["rev",3]]],[11,"clone","","",76,[[],["skip",3]]],[11,"clone","","",77,[[],["split",3]]],[11,"clone","","",78,[[],["take",3]]],[11,"clone","","",79,[[],["tryfold",3]]],[11,"clone","","",80,[[],["tryfoldwith",3]]],[11,"clone","","",81,[[],["update",3]]],[11,"clone","","",82,[[],["whilesome",3]]],[11,"clone","","",83,[[],["zip",3]]],[11,"clone","","",84,[[],["zipeq",3]]],[11,"clone","","",85,[[],["stepby",3]]],[11,"clone","rayon::option","",86,[[],["intoiter",3]]],[11,"clone","","",87,[[]]],[11,"clone","rayon::range","",89,[[],["iter",3]]],[11,"clone","rayon::range_inclusive","",90,[[],["iter",3]]],[11,"clone","rayon::result","",91,[[],["intoiter",3]]],[11,"clone","","",92,[[]]],[11,"clone","rayon::slice","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",99,[[]]],[11,"clone","rayon::str","",101,[[],["chars",3]]],[11,"clone","","",102,[[],["charindices",3]]],[11,"clone","","",103,[[],["bytes",3]]],[11,"clone","","",104,[[],["encodeutf16",3]]],[11,"clone","","",105,[[],["split",3]]],[11,"clone","","",106,[[],["splitterminator",3]]],[11,"clone","","",107,[[],["lines",3]]],[11,"clone","","",108,[[],["splitwhitespace",3]]],[11,"clone","","",109,[[],["matches",3]]],[11,"clone","","",110,[[],["matchindices",3]]],[11,"clone","rayon::vec","",112,[[],["intoiter",3]]],[11,"fmt","rayon::collections::binary_heap","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::btree_map","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::btree_set","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::hash_map","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::hash_set","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::linked_list","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::collections::vec_deque","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::iter","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::option","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::range","",89,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::range_inclusive","",90,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::result","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::slice","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::str","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::string","",111,[[["formatter",3]],["result",6]]],[11,"fmt","rayon::vec","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"take","rayon::iter","Takes only <code>n</code> repeats of the element, similar to the …",73,[[["usize",15]],["repeatn",3]]],[11,"zip","","Iterates tuples, repeating the element with items from …",73,[[],[["zip",3],["repeatn",3]]]],[11,"is_left","","Return true if the value is the <code>Left</code> variant.",7,[[],["bool",15]]],[11,"is_right","","Return true if the value is the <code>Right</code> variant.",7,[[],["bool",15]]],[11,"left","","Convert the left side of <code>Either<L, R></code> to an <code>Option<L></code>.",7,[[],["option",4]]],[11,"right","","Convert the right side of <code>Either<L, R></code> to an <code>Option<R></code>.",7,[[],["option",4]]],[11,"as_ref","","Convert <code>&Either<L, R></code> to <code>Either<&L, &R></code>.",7,[[],["either",4]]],[11,"as_mut","","Convert <code>&mut Either<L, R></code> to <code>Either<&mut L, &mut R></code>.",7,[[],["either",4]]],[11,"flip","","Convert <code>Either<L, R></code> to <code>Either<R, L></code>.",7,[[],["either",4]]],[11,"map_left","","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …",7,[[],["either",4]]],[11,"map_right","","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …",7,[[],["either",4]]],[11,"either","","Apply one of two functions depending on contents, …",7,[[]]],[11,"either_with","","Like <code>either</code>, but provide some context to whichever of the …",7,[[]]],[11,"left_and_then","","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …",7,[[],["either",4]]],[11,"right_and_then","","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …",7,[[],["either",4]]],[11,"into_iter","","Convert the inner value to an iterator.",7,[[],["either",4]]],[11,"left_or","","Return left value or given value",7,[[]]],[11,"left_or_default","","Return left or a default",7,[[]]],[11,"left_or_else","","Returns left value or computes it from a closure",7,[[]]],[11,"right_or","","Return right value or given value",7,[[]]],[11,"right_or_default","","Return right or a default",7,[[]]],[11,"right_or_else","","Returns right value or computes it from a closure",7,[[]]],[11,"unwrap_left","","Returns the left value",7,[[]]],[11,"unwrap_right","","Returns the right value",7,[[]]],[11,"expect_left","","Returns the left value",7,[[["str",15]]]],[11,"expect_right","","Returns the right value",7,[[["str",15]]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",7,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",7,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",7,[[]]],[11,"map","","Map <code>f</code> over the contained value and return the result in …",7,[[],["either",4]]],[11,"migrated","rayon","Returns <code>true</code> if the closure was called from a different …",114,[[],["bool",15]]],[11,"index","","Gets the index of this thread in the pool, within …",115,[[],["usize",15]]],[11,"name","","Gets the string that was specified by …",115,[[],[["str",15],["option",4]]]],[11,"stack_size","","Gets the value that was specified by …",115,[[],[["usize",15],["option",4]]]],[11,"run","","Executes the main loop for this thread. This will not …",115,[[]]],[11,"new","","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.",116,[[["configuration",3]],[["result",4],["box",3],["threadpool",3]]]],[11,"install","","Executes <code>op</code> within the threadpool. Any attempts to use …",116,[[]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread …",116,[[],["usize",15]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool, …",116,[[],[["usize",15],["option",4]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has …",116,[[],[["option",4],["bool",15]]]],[11,"join","","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …",116,[[]]],[11,"scope","","Creates a scope that executes within this thread-pool. …",116,[[]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool. …",116,[[]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This …",116,[[]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This …",116,[[]]],[11,"new","","Creates and returns a valid rayon thread pool builder, …",118,[[],[["defaultspawn",3],["threadpoolbuilder",3]]]],[11,"build","","Creates a new <code>ThreadPool</code> initialized using this …",118,[[],[["result",4],["threadpool",3],["threadpoolbuilderror",3]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",118,[[],[["result",4],["threadpoolbuilderror",3]]]],[11,"build_scoped","","Creates a scoped <code>ThreadPool</code> initialized using this …",118,[[],[["result",4],["threadpoolbuilderror",3]]]],[11,"spawn_handler","","Sets a custom function for spawning threads.",118,[[],[["threadpoolbuilder",3],["customspawn",3]]]],[11,"thread_name","","Sets a closure which takes a thread index and returns the …",118,[[],["threadpoolbuilder",3]]],[11,"num_threads","","Sets the number of threads to be used in the rayon …",118,[[["usize",15]],["threadpoolbuilder",3]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to …",118,[[],["threadpoolbuilder",3]]],[11,"stack_size","","Sets the stack size of the worker threads",118,[[["usize",15]],["threadpoolbuilder",3]]],[11,"breadth_first","","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …",118,[[],["threadpoolbuilder",3]]],[11,"start_handler","","Sets a callback to be invoked on thread start.",118,[[],["threadpoolbuilder",3]]],[11,"exit_handler","","Sets a callback to be invoked on thread exit.",118,[[],["threadpoolbuilder",3]]],[11,"spawn","","Spawns a job into the fork-join scope <code>self</code>. This job will …",119,[[]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope <code>self</code>. This job will …",120,[[]]]],"p":[[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[4,"Either"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelDrainFull"],[8,"ParallelDrainRange"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[3,"ChunksExact"],[3,"ChunksExactMut"],[8,"ParallelString"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[3,"Chain"],[3,"Chunks"],[3,"Cloned"],[3,"Copied"],[3,"Empty"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"FlatMapIter"],[3,"Flatten"],[3,"FlattenIter"],[3,"Fold"],[3,"FoldWith"],[3,"Inspect"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"MinLen"],[3,"MaxLen"],[3,"Map"],[3,"MapWith"],[3,"MapInit"],[3,"MultiZip"],[3,"Once"],[3,"PanicFuse"],[3,"IterBridge"],[3,"Positions"],[3,"Repeat"],[3,"RepeatN"],[3,"Rev"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Update"],[3,"WhileSome"],[3,"Zip"],[3,"ZipEq"],[3,"StepBy"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[3,"ThreadPoolBuilder"],[3,"Scope"],[3,"ScopeFifo"]]},\
"rayon_core":{"doc":"Under construction","i":[[5,"join","rayon_core","Takes two closures and <em>potentially</em> runs them in parallel. …",null,[[]]],[5,"join_context","","Identical to <code>join</code>, except that the closures have a …",null,[[]]],[3,"ThreadBuilder","","Thread builder used for customization via …",null,null],[5,"scope","","Creates a \\\"fork-join\\\" scope <code>s</code> and invokes the closure …",null,[[]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn …",null,null],[5,"scope_fifo","","Creates a \\\"fork-join\\\" scope <code>s</code> with FIFO order, and …",null,[[]]],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn …",null,null],[5,"spawn","","Fires off a task into the Rayon threadpool in the …",null,[[]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the …",null,[[]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether …",null,[[],[["bool",15],["option",4]]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index …",null,[[],[["usize",15],["option",4]]]],[3,"ThreadPool","","Represents a user created thread-pool.",null,null],[5,"current_num_threads","","Returns the number of threads in the current registry. If …",null,[[],["usize",15]]],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new <code>ThreadPool</code> or to configure the …",null,null],[3,"Configuration","","Contains the rayon thread pool configuration. Use …",null,null],[11,"new","","Creates and returns a valid rayon thread pool builder, …",0,[[]]],[11,"build","","Creates a new <code>ThreadPool</code> initialized using this …",0,[[],[["threadpoolbuilderror",3],["threadpool",3],["result",4]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",0,[[],[["threadpoolbuilderror",3],["result",4]]]],[11,"build_scoped","","Creates a scoped <code>ThreadPool</code> initialized using this …",0,[[],[["threadpoolbuilderror",3],["result",4]]]],[11,"spawn_handler","","Sets a custom function for spawning threads.",0,[[],[["customspawn",3],["threadpoolbuilder",3]]]],[11,"thread_name","","Sets a closure which takes a thread index and returns the …",0,[[]]],[11,"num_threads","","Sets the number of threads to be used in the rayon …",0,[[["usize",15]]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to …",0,[[]]],[11,"stack_size","","Sets the stack size of the worker threads",0,[[["usize",15]]]],[11,"breadth_first","","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …",0,[[]]],[11,"start_handler","","Sets a callback to be invoked on thread start.",0,[[]]],[11,"exit_handler","","Sets a callback to be invoked on thread exit.",0,[[]]],[11,"new","","Creates and return a valid rayon thread pool …",1,[[],["configuration",3]]],[11,"build","","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.",1,[[],[["box",3],["threadpool",3],["result",4]]]],[11,"thread_name","","Deprecated in favor of <code>ThreadPoolBuilder::thread_name</code>.",1,[[]]],[11,"num_threads","","Deprecated in favor of <code>ThreadPoolBuilder::num_threads</code>.",1,[[["usize",15]],["configuration",3]]],[11,"panic_handler","","Deprecated in favor of <code>ThreadPoolBuilder::panic_handler</code>.",1,[[],["configuration",3]]],[11,"stack_size","","Deprecated in favor of <code>ThreadPoolBuilder::stack_size</code>.",1,[[["usize",15]]]],[11,"breadth_first","","Deprecated in favor of <code>ThreadPoolBuilder::breadth_first</code>.",1,[[]]],[11,"start_handler","","Deprecated in favor of <code>ThreadPoolBuilder::start_handler</code>.",1,[[],["configuration",3]]],[11,"exit_handler","","Deprecated in favor of <code>ThreadPoolBuilder::exit_handler</code>.",1,[[],["configuration",3]]],[5,"initialize","","Deprecated in favor of <code>ThreadPoolBuilder::build_global</code>.",null,[[["configuration",3]],[["result",4],["box",3]]]],[3,"FnContext","","Provides the calling context to a closure called by …",null,null],[11,"migrated","","Returns <code>true</code> if the closure was called from a different …",2,[[],["bool",15]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"drop","","",6,[[]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"description","","",7,[[],["str",15]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"index","","Gets the index of this thread in the pool, within …",3,[[],["usize",15]]],[11,"name","","Gets the string that was specified by …",3,[[],[["option",4],["str",15]]]],[11,"stack_size","","Gets the value that was specified by …",3,[[],[["usize",15],["option",4]]]],[11,"run","","Executes the main loop for this thread. This will not …",3,[[]]],[11,"spawn","","Spawns a job into the fork-join scope <code>self</code>. This job will …",4,[[]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope <code>self</code>. This job will …",5,[[]]],[11,"new","","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.",6,[[["configuration",3]],[["result",4],["threadpool",3],["box",3]]]],[11,"install","","Executes <code>op</code> within the threadpool. Any attempts to use …",6,[[]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread …",6,[[],["usize",15]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool, …",6,[[],[["usize",15],["option",4]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has …",6,[[],[["bool",15],["option",4]]]],[11,"join","","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …",6,[[]]],[11,"scope","","Creates a scope that executes within this thread-pool. …",6,[[]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool. …",6,[[]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This …",6,[[]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This …",6,[[]]]],"p":[[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"]]},\
"read_color":{"doc":"A simple library for reading hex colors.","i":[[5,"char_to_hex","read_color","Converts a character into a u8 value.",null,[[["char",15]],[["u8",15],["option",4]]]],[5,"hex","","Reads a hex value from an iterator of characters.",null,[[["chars",3]],[["u8",15],["option",4]]]],[5,"hex_pair","","Reads a pair of hex values, joining them in value range …",null,[[["chars",3]],[["u8",15],["option",4]]]],[5,"rgb","","Reads RGB colors from iterator of characters.",null,[[["chars",3]],["option",4]]],[5,"rgba","","Reads RGBA colors from iterator of characters.",null,[[["chars",3]],["option",4]]],[5,"rgb_maybe_a","","Reads RGB with optional alpha from iterator of characters.",null,[[["chars",3]],["option",4]]]],"p":[]},\
"rusttype":{"doc":"RustType is a pure Rust alternative to libraries like …","i":[[5,"point","rusttype","A convenience function for generating <code>Point</code>s.",null,[[],["point",3]]],[5,"vector","","A convenience function for generating <code>Vector</code>s.",null,[[],["vector",3]]],[3,"Point","","A point in 2-dimensional space, with each dimension of …",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"Rect","","A rectangle, with top-left corner at <code>min</code>, and …",null,null],[12,"min","","",1,null],[12,"max","","",1,null],[3,"Vector","","A vector in 2-dimensional space, with each dimension of …",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[4,"Font","","A single font. This may or may not own the font data.",null,null],[13,"Ref","","",3,null],[13,"Owned","","",3,null],[8,"OutlineBuilder","","A trait for glyph outline construction.",null,null],[10,"move_to","","Appends a MoveTo segment.",4,[[["f32",15]]]],[10,"line_to","","Appends a LineTo segment.",4,[[["f32",15]]]],[10,"quad_to","","Appends a QuadTo segment.",4,[[["f32",15]]]],[10,"curve_to","","Appends a CurveTo segment.",4,[[["f32",15]]]],[10,"close","","Appends a ClosePath segment.",4,[[]]],[3,"GlyphId","","",null,null],[12,"0","","",5,null],[3,"Glyph","","A single glyph of a font.",null,null],[11,"font","","The font to which this glyph belongs.",6,[[],["font",4]]],[11,"id","","The glyph identifier for this glyph.",6,[[],["glyphid",3]]],[11,"scaled","","Augments this glyph with scaling information, making …",6,[[["scale",3]],["scaledglyph",3]]],[3,"HMetrics","","The \\\"horizontal metrics\\\" of a glyph. This is useful for …",null,null],[12,"advance_width","","The horizontal offset that the origin of the next glyph …",7,null],[12,"left_side_bearing","","The horizontal offset between the origin of this glyph …",7,null],[3,"VMetrics","","The \\\"vertical metrics\\\" of a font at a particular scale. …",null,null],[12,"ascent","","The highest point that any glyph in the font extends to …",8,null],[12,"descent","","The lowest point that any glyph in the font extends to …",8,null],[12,"line_gap","","The gap to leave between the descent of one line and the …",8,null],[3,"ScaledGlyph","","A glyph augmented with scaling information. You can query …",null,null],[11,"id","","The glyph identifier for this glyph.",9,[[],["glyphid",3]]],[11,"font","","The font to which this glyph belongs.",9,[[],["font",4]]],[11,"into_unscaled","","A reference to this glyph without the scaling",9,[[],["glyph",3]]],[11,"unscaled","","Removes the scaling from this glyph",9,[[],["glyph",3]]],[11,"build_outline","","Builds the outline of the glyph with the builder …",9,[[],["bool",15]]],[11,"positioned","","Augments this glyph with positioning information, making …",9,[[["f32",15],["point",3]],["positionedglyph",3]]],[11,"scale","","",9,[[],["scale",3]]],[11,"h_metrics","","Retrieves the \\\"horizontal metrics\\\" of this glyph. See …",9,[[],["hmetrics",3]]],[11,"exact_bounding_box","","The bounding box of the shape of this glyph, not to be …",9,[[],[["rect",3],["option",4]]]],[3,"PositionedGlyph","","A glyph augmented with positioning and scaling …",null,null],[11,"id","","The glyph identifier for this glyph.",10,[[],["glyphid",3]]],[11,"font","","The font to which this glyph belongs.",10,[[],["font",4]]],[11,"unpositioned","","A reference to this glyph without positioning",10,[[],["scaledglyph",3]]],[11,"into_unpositioned","","Removes the positioning from this glyph",10,[[],["scaledglyph",3]]],[11,"pixel_bounding_box","","The conservative pixel-boundary bounding box for this …",10,[[],[["option",4],["rect",3]]]],[11,"scale","","",10,[[],["scale",3]]],[11,"position","","",10,[[],[["f32",15],["point",3]]]],[11,"build_outline","","Builds the outline of the glyph with the builder …",10,[[],["bool",15]]],[11,"draw","","Rasterises this glyph. For each pixel in the rect given by…",10,[[["fnmut",8]]]],[11,"set_position","","Resets positioning information and recalculates the pixel …",10,[[["f32",15],["point",3]]]],[3,"Scale","","Defines the size of a rendered face of a font, in pixels, …",null,null],[12,"x","","Horizontal scale, in pixels.",11,null],[12,"y","","Vertical scale, in pixels.",11,null],[11,"uniform","","Uniform scaling, equivalent to <code>Scale { x: s, y: s }</code>.",11,[[["f32",15]],["scale",3]]],[8,"IntoGlyphId","","A trait for types that can be converted into a <code>GlyphId</code>, …",null,null],[10,"into_glyph_id","","Convert <code>self</code> into a <code>GlyphId</code>, consulting the index map of …",12,[[["font",4]],["glyphid",3]]],[3,"GlyphIter","","",null,null],[3,"LayoutIter","","",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_glyph_id","","",5,[[["font",4]],["glyphid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",5,[[["glyphid",3]]]],[11,"next","","",13,[[],[["glyph",3],["option",4]]]],[11,"next","","",14,[[],[["option",4],["positionedglyph",3]]]],[11,"clone","","",3,[[],["font",4]]],[11,"clone","","",0,[[],["point",3]]],[11,"clone","","",2,[[],["vector",3]]],[11,"clone","","",1,[[],["rect",3]]],[11,"clone","","",5,[[],["glyphid",3]]],[11,"clone","","",6,[[],["glyph",3]]],[11,"clone","","",7,[[],["hmetrics",3]]],[11,"clone","","",8,[[],["vmetrics",3]]],[11,"clone","","",9,[[],["scaledglyph",3]]],[11,"clone","","",10,[[],["positionedglyph",3]]],[11,"clone","","",11,[[],["scale",3]]],[11,"clone","","",13,[[],["glyphiter",3]]],[11,"clone","","",14,[[],["layoutiter",3]]],[11,"default","","",0,[[],["point",3]]],[11,"default","","",2,[[],["vector",3]]],[11,"default","","",1,[[],["rect",3]]],[11,"cmp","","",0,[[["point",3]],["ordering",4]]],[11,"cmp","","",2,[[["vector",3]],["ordering",4]]],[11,"cmp","","",1,[[["rect",3]],["ordering",4]]],[11,"cmp","","",5,[[["glyphid",3]],["ordering",4]]],[11,"eq","","",0,[[["point",3]],["bool",15]]],[11,"ne","","",0,[[["point",3]],["bool",15]]],[11,"eq","","",2,[[["vector",3]],["bool",15]]],[11,"ne","","",2,[[["vector",3]],["bool",15]]],[11,"eq","","",1,[[["rect",3]],["bool",15]]],[11,"ne","","",1,[[["rect",3]],["bool",15]]],[11,"eq","","",5,[[["glyphid",3]],["bool",15]]],[11,"ne","","",5,[[["glyphid",3]],["bool",15]]],[11,"eq","","",7,[[["hmetrics",3]],["bool",15]]],[11,"ne","","",7,[[["hmetrics",3]],["bool",15]]],[11,"eq","","",8,[[["vmetrics",3]],["bool",15]]],[11,"ne","","",8,[[["vmetrics",3]],["bool",15]]],[11,"eq","","",11,[[["scale",3]],["bool",15]]],[11,"ne","","",11,[[["scale",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["point",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["point",3]],["bool",15]]],[11,"le","","",0,[[["point",3]],["bool",15]]],[11,"gt","","",0,[[["point",3]],["bool",15]]],[11,"ge","","",0,[[["point",3]],["bool",15]]],[11,"partial_cmp","","",2,[[["vector",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["vector",3]],["bool",15]]],[11,"le","","",2,[[["vector",3]],["bool",15]]],[11,"gt","","",2,[[["vector",3]],["bool",15]]],[11,"ge","","",2,[[["vector",3]],["bool",15]]],[11,"partial_cmp","","",1,[[["rect",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["rect",3]],["bool",15]]],[11,"le","","",1,[[["rect",3]],["bool",15]]],[11,"gt","","",1,[[["rect",3]],["bool",15]]],[11,"ge","","",1,[[["rect",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["glyphid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["glyphid",3]],["bool",15]]],[11,"le","","",5,[[["glyphid",3]],["bool",15]]],[11,"gt","","",5,[[["glyphid",3]],["bool",15]]],[11,"ge","","",5,[[["glyphid",3]],["bool",15]]],[11,"partial_cmp","","",7,[[["hmetrics",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["hmetrics",3]],["bool",15]]],[11,"le","","",7,[[["hmetrics",3]],["bool",15]]],[11,"gt","","",7,[[["hmetrics",3]],["bool",15]]],[11,"ge","","",7,[[["hmetrics",3]],["bool",15]]],[11,"partial_cmp","","",8,[[["vmetrics",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["vmetrics",3]],["bool",15]]],[11,"le","","",8,[[["vmetrics",3]],["bool",15]]],[11,"gt","","",8,[[["vmetrics",3]],["bool",15]]],[11,"ge","","",8,[[["vmetrics",3]],["bool",15]]],[11,"partial_cmp","","",11,[[["scale",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["scale",3]],["bool",15]]],[11,"le","","",11,[[["scale",3]],["bool",15]]],[11,"gt","","",11,[[["scale",3]],["bool",15]]],[11,"ge","","",11,[[["scale",3]],["bool",15]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"div","","",2,[[["f32",15]],[["vector",3],["f32",15]]]],[11,"div","","",2,[[["f64",15]],[["vector",3],["f64",15]]]],[11,"sub","","",0,[[["point",3]],["vector",3]]],[11,"sub","","",2,[[["vector",3]],["vector",3]]],[11,"sub","","",0,[[["vector",3]],["point",3]]],[11,"add","","",2,[[["vector",3]],["vector",3]]],[11,"add","","",0,[[["vector",3]],["point",3]]],[11,"add","","",2,[[["point",3]],["point",3]]],[11,"mul","","",2,[[["f32",15]],[["vector",3],["f32",15]]]],[11,"mul","","",2,[[["f64",15]],[["vector",3],["f64",15]]]],[11,"mul","","",8,[[["f32",15]]]],[11,"hash","","",0,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",5,[[]]],[11,"try_from_bytes","","Creates a Font from byte-slice data.",3,[[],[["option",4],["font",4]]]],[11,"try_from_bytes_and_index","","Creates a Font from byte-slice data & a font collection …",3,[[["u32",15]],[["option",4],["font",4]]]],[11,"try_from_vec","","Creates a Font from owned font data.",3,[[["vec",3],["u8",15]],[["option",4],["font",4]]]],[11,"try_from_vec_and_index","","Creates a Font from owned font data & a font collection …",3,[[["u32",15],["vec",3],["u8",15]],[["option",4],["font",4]]]],[11,"v_metrics","","The \\\"vertical metrics\\\" for this font at a given scale. …",3,[[["scale",3]],["vmetrics",3]]],[11,"v_metrics_unscaled","","Get the unscaled VMetrics for this font, shared by all …",3,[[],["vmetrics",3]]],[11,"units_per_em","","Returns the units per EM square of this font",3,[[],["u16",15]]],[11,"glyph_count","","The number of glyphs present in this font. Glyph …",3,[[],["usize",15]]],[11,"glyph","","Returns the corresponding glyph for a Unicode code point …",3,[[["intoglyphid",8]],["glyph",3]]],[11,"glyphs_for","","A convenience function.",3,[[["iterator",8]],[["glyphiter",3],["iterator",8]]]],[11,"layout","","A convenience function for laying out glyphs for a string …",3,[[["f32",15],["scale",3],["str",15],["point",3]],["layoutiter",3]]],[11,"pair_kerning","","Returns additional kerning to apply as well as that given …",3,[[["scale",3]],["f32",15]]],[11,"scale_for_pixel_height","","Computes a scale factor to produce a font whose \\\"height\\\" …",3,[[["f32",15]],["f32",15]]],[11,"width","","",1,[[]]],[11,"height","","",1,[[]]]],"p":[[3,"Point"],[3,"Rect"],[3,"Vector"],[4,"Font"],[8,"OutlineBuilder"],[3,"GlyphId"],[3,"Glyph"],[3,"HMetrics"],[3,"VMetrics"],[3,"ScaledGlyph"],[3,"PositionedGlyph"],[3,"Scale"],[8,"IntoGlyphId"],[3,"GlyphIter"],[3,"LayoutIter"]]},\
"scoped_threadpool":{"doc":"This crate provides a stable, safe and scoped threadpool.","i":[[3,"Pool","scoped_threadpool","A threadpool that acts as a handle to a number of threads …",null,null],[11,"new","","Construct a threadpool with the given number of threads. …",0,[[["u32",15]],["pool",3]]],[11,"scoped","","Borrows the pool and allows executing jobs on other …",0,[[]]],[11,"thread_count","","Returns the number of threads inside this pool.",0,[[],["u32",15]]],[3,"Scope","","Handle to the scope during which the threadpool is …",null,null],[11,"execute","","Execute a job on the threadpool.",1,[[]]],[11,"join_all","","Blocks until all currently queued jobs have run to …",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"drop","","",1,[[]]]],"p":[[3,"Pool"],[3,"Scope"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out …","i":[[8,"Strategy","scopeguard","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return <code>true</code> if the guard’s associated code should run …",0,[[],["bool",15]]],[4,"Always","","Always run on scope exit.",null,null],[3,"ScopeGuard","","<code>ScopeGuard</code> is a scope guard that may own a protected …",null,null],[11,"with_strategy","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through …",1,[[],["scopeguard",3]]],[11,"into_inner","","“Defuse” the guard and extract the value without …",1,[[]]],[5,"guard","","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred …",null,[[],[["scopeguard",3],["always",4]]]],[14,"defer","","Macro to create a <code>ScopeGuard</code> (always run).",null,null],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"should_run","","",2,[[],["bool",15]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"drop","","",1,[[]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]},\
"serde":{"doc":"SerdeSerde is a framework for <em><strong>ser</strong></em>ializing and <em><strong>de</strong></em>…","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[0,"value","serde::de","Building blocks for deserializing basic values using the …",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can …",null,null],[3,"UnitDeserializer","","A deserializer holding a <code>()</code>.",null,null],[3,"BoolDeserializer","","A deserializer holding a <code>bool</code>.",null,null],[3,"I8Deserializer","","A deserializer holding an <code>i8</code>.",null,null],[3,"I16Deserializer","","A deserializer holding an <code>i16</code>.",null,null],[3,"I32Deserializer","","A deserializer holding an <code>i32</code>.",null,null],[3,"I64Deserializer","","A deserializer holding an <code>i64</code>.",null,null],[3,"IsizeDeserializer","","A deserializer holding an <code>isize</code>.",null,null],[3,"U8Deserializer","","A deserializer holding a <code>u8</code>.",null,null],[3,"U16Deserializer","","A deserializer holding a <code>u16</code>.",null,null],[3,"U64Deserializer","","A deserializer holding a <code>u64</code>.",null,null],[3,"UsizeDeserializer","","A deserializer holding a <code>usize</code>.",null,null],[3,"F32Deserializer","","A deserializer holding an <code>f32</code>.",null,null],[3,"F64Deserializer","","A deserializer holding an <code>f64</code>.",null,null],[3,"CharDeserializer","","A deserializer holding a <code>char</code>.",null,null],[3,"I128Deserializer","","A deserializer holding an <code>i128</code>.",null,null],[3,"U128Deserializer","","A deserializer holding a <code>u128</code>.",null,null],[3,"U32Deserializer","","A deserializer holding a <code>u32</code>.",null,null],[3,"StrDeserializer","","A deserializer holding a <code>&str</code>.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a <code>&str</code> with a lifetime tied to …",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",0,[[["str",15]],["borrowedstrdeserializer",3]]],[3,"StringDeserializer","","A deserializer holding a <code>String</code>.",null,null],[3,"CowStrDeserializer","","A deserializer holding a <code>Cow<str></code>.",null,null],[3,"BytesDeserializer","","A deserializer holding a <code>&[u8]</code>. Always calls […",null,null],[11,"new","","Create a new deserializer from the given bytes.",1,[[]]],[3,"BorrowedBytesDeserializer","","A deserializer holding a <code>&[u8]</code> with a lifetime tied to …",null,null],[11,"new","","Create a new borrowed deserializer from the given …",2,[[]]],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[11,"new","","Construct a new <code>SeqDeserializer<I, E></code>.",3,[[]]],[11,"end","","Check for remaining elements after passing a …",3,[[],["result",4]]],[3,"SeqAccessDeserializer","","A deserializer holding a <code>SeqAccess</code>.",null,null],[11,"new","","Construct a new <code>SeqAccessDeserializer<A></code>.",4,[[]]],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[11,"new","","Construct a new <code>MapDeserializer<I, E></code>.",5,[[]]],[11,"end","","Check for remaining elements after passing a …",5,[[],["result",4]]],[3,"MapAccessDeserializer","","A deserializer holding a <code>MapAccess</code>.",null,null],[11,"new","","Construct a new <code>MapAccessDeserializer<A></code>.",6,[[]]],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[8,"Error","","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …",null,null],[10,"custom","","Raised when there is general error when deserializing a …",7,[[]]],[11,"invalid_type","","Raised when a <code>Deserialize</code> receives a type different from …",7,[[["expected",8],["unexpected",4]]]],[11,"invalid_value","","Raised when a <code>Deserialize</code> receives a value of the right …",7,[[["expected",8],["unexpected",4]]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input …",7,[[["usize",15],["expected",8]]]],[11,"unknown_variant","","Raised when a <code>Deserialize</code> enum type received a variant …",7,[[["str",15]]]],[11,"unknown_field","","Raised when a <code>Deserialize</code> struct type received a field …",7,[[["str",15]]]],[11,"missing_field","","Raised when a <code>Deserialize</code> struct type expected to receive …",7,[[["str",15]]]],[11,"duplicate_field","","Raised when a <code>Deserialize</code> struct type received more than …",7,[[["str",15]]]],[4,"Unexpected","","<code>Unexpected</code> represents an unexpected invocation of any one …",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",8,null],[13,"Unsigned","","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or …",8,null],[13,"Signed","","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …",8,null],[13,"Float","","The input contained a floating point <code>f32</code> or <code>f64</code> that was …",8,null],[13,"Char","","The input contained a <code>char</code> that was not expected.",8,null],[13,"Str","","The input contained a <code>&str</code> or <code>String</code> that was not …",8,null],[13,"Bytes","","The input contained a <code>&[u8]</code> or <code>Vec<u8></code> that was not …",8,null],[13,"Unit","","The input contained a unit <code>()</code> that was not expected.",8,null],[13,"Option","","The input contained an <code>Option<T></code> that was not expected.",8,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not …",8,null],[13,"Seq","","The input contained a sequence that was not expected.",8,null],[13,"Map","","The input contained a map that was not expected.",8,null],[13,"Enum","","The input contained an enum that was not expected.",8,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",8,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not …",8,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",8,null],[13,"StructVariant","","The input contained a struct variant that was not …",8,null],[13,"Other","","A message stating what uncategorized thing the input …",8,null],[8,"Expected","","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …",null,null],[10,"fmt","","Format an explanation of what data was being expected. …",9,[[["formatter",3]],["result",6]]],[8,"Deserialize","","A <strong>data structure</strong> that can be deserialized from any data …",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",10,[[],["result",4]]],[8,"DeserializeOwned","","A data structure that can be deserialized without …",null,null],[8,"DeserializeSeed","","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …",null,null],[16,"Value","","The type produced by using this seed.",11,null],[10,"deserialize","","Equivalent to the more common <code>Deserialize::deserialize</code> …",11,[[],["result",4]]],[8,"Deserializer","","A <strong>data format</strong> that can deserialize any data structure …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",12,null],[10,"deserialize_any","","Require the <code>Deserializer</code> to figure out how to drive the …",12,[[],["result",4]]],[10,"deserialize_bool","","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.",12,[[],["result",4]]],[10,"deserialize_i8","","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.",12,[[],["result",4]]],[10,"deserialize_i16","","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.",12,[[],["result",4]]],[10,"deserialize_i32","","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.",12,[[],["result",4]]],[10,"deserialize_i64","","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.",12,[[],["result",4]]],[11,"deserialize_i128","","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.",12,[[],["result",4]]],[10,"deserialize_u8","","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.",12,[[],["result",4]]],[10,"deserialize_u16","","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.",12,[[],["result",4]]],[10,"deserialize_u32","","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.",12,[[],["result",4]]],[10,"deserialize_u64","","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.",12,[[],["result",4]]],[11,"deserialize_u128","","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.",12,[[],["result",4]]],[10,"deserialize_f32","","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.",12,[[],["result",4]]],[10,"deserialize_f64","","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.",12,[[],["result",4]]],[10,"deserialize_char","","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.",12,[[],["result",4]]],[10,"deserialize_str","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_string","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_option","","Hint that the <code>Deserialize</code> type is expecting an optional …",12,[[],["result",4]]],[10,"deserialize_unit","","Hint that the <code>Deserialize</code> type is expecting a unit value.",12,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the <code>Deserialize</code> type is expecting a unit struct …",12,[[["str",15]],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the <code>Deserialize</code> type is expecting a newtype …",12,[[["str",15]],["result",4]]],[10,"deserialize_seq","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[["usize",15]],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the <code>Deserialize</code> type is expecting a tuple …",12,[[["usize",15],["str",15]],["result",4]]],[10,"deserialize_map","","Hint that the <code>Deserialize</code> type is expecting a map of …",12,[[],["result",4]]],[10,"deserialize_struct","","Hint that the <code>Deserialize</code> type is expecting a struct with …",12,[[["str",15]],["result",4]]],[10,"deserialize_enum","","Hint that the <code>Deserialize</code> type is expecting an enum value …",12,[[["str",15]],["result",4]]],[10,"deserialize_identifier","","Hint that the <code>Deserialize</code> type is expecting the name of a …",12,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the <code>Deserialize</code> type needs to deserialize a …",12,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Deserialize</code> implementations should …",12,[[],["bool",15]]],[8,"Visitor","","This trait represents a visitor that walks through a …",null,null],[16,"Value","","The value produced by this visitor.",13,null],[10,"expecting","","Format a message stating what data this Visitor expects …",13,[[["formatter",3]],["result",6]]],[11,"visit_bool","","The input contains a boolean.",13,[[["bool",15]],["result",4]]],[11,"visit_i8","","The input contains an <code>i8</code>.",13,[[["i8",15]],["result",4]]],[11,"visit_i16","","The input contains an <code>i16</code>.",13,[[["i16",15]],["result",4]]],[11,"visit_i32","","The input contains an <code>i32</code>.",13,[[["i32",15]],["result",4]]],[11,"visit_i64","","The input contains an <code>i64</code>.",13,[[["i64",15]],["result",4]]],[11,"visit_i128","","The input contains a <code>i128</code>.",13,[[["i128",15]],["result",4]]],[11,"visit_u8","","The input contains a <code>u8</code>.",13,[[["u8",15]],["result",4]]],[11,"visit_u16","","The input contains a <code>u16</code>.",13,[[["u16",15]],["result",4]]],[11,"visit_u32","","The input contains a <code>u32</code>.",13,[[["u32",15]],["result",4]]],[11,"visit_u64","","The input contains a <code>u64</code>.",13,[[["u64",15]],["result",4]]],[11,"visit_u128","","The input contains a <code>u128</code>.",13,[[["u128",15]],["result",4]]],[11,"visit_f32","","The input contains an <code>f32</code>.",13,[[["f32",15]],["result",4]]],[11,"visit_f64","","The input contains an <code>f64</code>.",13,[[["f64",15]],["result",4]]],[11,"visit_char","","The input contains a <code>char</code>.",13,[[["char",15]],["result",4]]],[11,"visit_str","","The input contains a string. The lifetime of the string …",13,[[["str",15]],["result",4]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long …",13,[[["str",15]],["result",4]]],[11,"visit_string","","The input contains a string and ownership of the string …",13,[[["string",3]],["result",4]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte …",13,[[],["result",4]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as …",13,[[],["result",4]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte …",13,[[["vec",3],["u8",15]],["result",4]]],[11,"visit_none","","The input contains an optional that is absent.",13,[[],["result",4]]],[11,"visit_some","","The input contains an optional that is present.",13,[[],["result",4]]],[11,"visit_unit","","The input contains a unit <code>()</code>.",13,[[],["result",4]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",13,[[],["result",4]]],[11,"visit_seq","","The input contains a sequence of elements.",13,[[],["result",4]]],[11,"visit_map","","The input contains a key-value map.",13,[[],["result",4]]],[11,"visit_enum","","The input contains an enum.",13,[[],["result",4]]],[8,"SeqAccess","","Provides a <code>Visitor</code> access to each element of a sequence …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",14,null],[10,"next_element_seed","","This returns <code>Ok(Some(value))</code> for the next value in the …",14,[[],[["option",4],["result",4]]]],[11,"next_element","","This returns <code>Ok(Some(value))</code> for the next value in the …",14,[[],[["option",4],["result",4]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence, …",14,[[],[["usize",15],["option",4]]]],[8,"MapAccess","","Provides a <code>Visitor</code> access to each entry of a map in the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",15,null],[10,"next_key_seed","","This returns <code>Ok(Some(key))</code> for the next key in the map, …",15,[[],[["option",4],["result",4]]]],[10,"next_value_seed","","This returns a <code>Ok(value)</code> for the next value in the map.",15,[[],["result",4]]],[11,"next_entry_seed","","This returns <code>Ok(Some((key, value)))</code> for the next …",15,[[],[["result",4],["option",4]]]],[11,"next_key","","This returns <code>Ok(Some(key))</code> for the next key in the map, …",15,[[],[["option",4],["result",4]]]],[11,"next_value","","This returns a <code>Ok(value)</code> for the next value in the map.",15,[[],["result",4]]],[11,"next_entry","","This returns <code>Ok(Some((key, value)))</code> for the next …",15,[[],[["option",4],["result",4]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if …",15,[[],[["usize",15],["option",4]]]],[8,"EnumAccess","","Provides a <code>Visitor</code> access to the data of an enum in the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",16,null],[16,"Variant","","The <code>Visitor</code> that will be used to deserialize the content …",16,null],[10,"variant_seed","","<code>variant</code> is called to identify which variant to …",16,[[],["result",4]]],[11,"variant","","<code>variant</code> is called to identify which variant to …",16,[[],["result",4]]],[8,"VariantAccess","","<code>VariantAccess</code> is a visitor that is created by the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",17,null],[10,"unit_variant","","Called when deserializing a variant with no values.",17,[[],["result",4]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",17,[[],["result",4]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",17,[[],["result",4]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",17,[[["usize",15]],["result",4]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",17,[[],["result",4]]],[8,"IntoDeserializer","","Converts an existing value into a <code>Deserializer</code> from which …",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",18,null],[10,"into_deserializer","","Convert this value into a deserializer.",18,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a <code>Serializer</code> that does not …",null,null],[8,"Error","","Trait used by <code>Serialize</code> implementations to generically …",null,null],[10,"custom","","Used when a <code>Serialize</code> implementation encounters any error …",19,[[]]],[8,"Serialize","","A <strong>data structure</strong> that can be serialized into any data …",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",20,[[],["result",4]]],[8,"Serializer","","A <strong>data format</strong> that can serialize any data structure …",null,null],[16,"Ok","","The output type produced by this <code>Serializer</code> during …",21,null],[16,"Error","","The error type when some error occurs during …",21,null],[16,"SerializeSeq","","Type returned from <code>serialize_seq</code> for serializing the …",21,null],[16,"SerializeTuple","","Type returned from <code>serialize_tuple</code> for serializing the …",21,null],[16,"SerializeTupleStruct","","Type returned from <code>serialize_tuple_struct</code> for serializing …",21,null],[16,"SerializeTupleVariant","","Type returned from <code>serialize_tuple_variant</code> for …",21,null],[16,"SerializeMap","","Type returned from <code>serialize_map</code> for serializing the …",21,null],[16,"SerializeStruct","","Type returned from <code>serialize_struct</code> for serializing the …",21,null],[16,"SerializeStructVariant","","Type returned from <code>serialize_struct_variant</code> for …",21,null],[10,"serialize_bool","","Serialize a <code>bool</code> value.",21,[[["bool",15]],["result",4]]],[10,"serialize_i8","","Serialize an <code>i8</code> value.",21,[[["i8",15]],["result",4]]],[10,"serialize_i16","","Serialize an <code>i16</code> value.",21,[[["i16",15]],["result",4]]],[10,"serialize_i32","","Serialize an <code>i32</code> value.",21,[[["i32",15]],["result",4]]],[10,"serialize_i64","","Serialize an <code>i64</code> value.",21,[[["i64",15]],["result",4]]],[11,"serialize_i128","","Serialize an <code>i128</code> value.",21,[[["i128",15]],["result",4]]],[10,"serialize_u8","","Serialize a <code>u8</code> value.",21,[[["u8",15]],["result",4]]],[10,"serialize_u16","","Serialize a <code>u16</code> value.",21,[[["u16",15]],["result",4]]],[10,"serialize_u32","","Serialize a <code>u32</code> value.",21,[[["u32",15]],["result",4]]],[10,"serialize_u64","","Serialize a <code>u64</code> value.",21,[[["u64",15]],["result",4]]],[11,"serialize_u128","","Serialize a <code>u128</code> value.",21,[[["u128",15]],["result",4]]],[10,"serialize_f32","","Serialize an <code>f32</code> value.",21,[[["f32",15]],["result",4]]],[10,"serialize_f64","","Serialize an <code>f64</code> value.",21,[[["f64",15]],["result",4]]],[10,"serialize_char","","Serialize a character.",21,[[["char",15]],["result",4]]],[10,"serialize_str","","Serialize a <code>&str</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",21,[[],["result",4]]],[10,"serialize_none","","Serialize a <code>None</code> value.",21,[[],["result",4]]],[10,"serialize_some","","Serialize a <code>Some(T)</code> value.",21,[[],["result",4]]],[10,"serialize_unit","","Serialize a <code>()</code> value.",21,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…",21,[[["str",15]],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose …",21,[[["usize",15]],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like <code>E::T</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like <code>E::S</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",21,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",21,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of …",21,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Serialize</code> implementations should …",21,[[],["bool",15]]],[8,"SerializeSeq","","Returned from <code>Serializer::serialize_seq</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",22,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",22,null],[10,"serialize_element","","Serialize a sequence element.",22,[[],["result",4]]],[10,"end","","Finish serializing a sequence.",22,[[],["result",4]]],[8,"SerializeTuple","","Returned from <code>Serializer::serialize_tuple</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",23,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",23,null],[10,"serialize_element","","Serialize a tuple element.",23,[[],["result",4]]],[10,"end","","Finish serializing a tuple.",23,[[],["result",4]]],[8,"SerializeTupleStruct","","Returned from <code>Serializer::serialize_tuple_struct</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",24,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",24,null],[10,"serialize_field","","Serialize a tuple struct field.",24,[[],["result",4]]],[10,"end","","Finish serializing a tuple struct.",24,[[],["result",4]]],[8,"SerializeTupleVariant","","Returned from <code>Serializer::serialize_tuple_variant</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",25,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",25,null],[10,"serialize_field","","Serialize a tuple variant field.",25,[[],["result",4]]],[10,"end","","Finish serializing a tuple variant.",25,[[],["result",4]]],[8,"SerializeMap","","Returned from <code>Serializer::serialize_map</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",26,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",26,null],[10,"serialize_key","","Serialize a map key.",26,[[],["result",4]]],[10,"serialize_value","","Serialize a map value.",26,[[],["result",4]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",26,[[],["result",4]]],[10,"end","","Finish serializing a map.",26,[[],["result",4]]],[8,"SerializeStruct","","Returned from <code>Serializer::serialize_struct</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",27,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",27,null],[10,"serialize_field","","Serialize a struct field.",27,[[["str",15]],["result",4]]],[11,"skip_field","","Indicate that a struct field has been skipped.",27,[[["str",15]],["result",4]]],[10,"end","","Finish serializing a struct.",27,[[],["result",4]]],[8,"SerializeStructVariant","","Returned from <code>Serializer::serialize_struct_variant</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",28,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",28,null],[10,"serialize_field","","Serialize a struct variant field.",28,[[["str",15]],["result",4]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",28,[[["str",15]],["result",4]]],[10,"end","","Finish serializing a struct variant.",28,[[],["result",4]]],[8,"Deserialize","serde","A <strong>data structure</strong> that can be deserialized from any data …",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",10,[[],["result",4]]],[8,"Deserializer","","A <strong>data format</strong> that can deserialize any data structure …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",12,null],[10,"deserialize_any","","Require the <code>Deserializer</code> to figure out how to drive the …",12,[[],["result",4]]],[10,"deserialize_bool","","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.",12,[[],["result",4]]],[10,"deserialize_i8","","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.",12,[[],["result",4]]],[10,"deserialize_i16","","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.",12,[[],["result",4]]],[10,"deserialize_i32","","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.",12,[[],["result",4]]],[10,"deserialize_i64","","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.",12,[[],["result",4]]],[11,"deserialize_i128","","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.",12,[[],["result",4]]],[10,"deserialize_u8","","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.",12,[[],["result",4]]],[10,"deserialize_u16","","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.",12,[[],["result",4]]],[10,"deserialize_u32","","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.",12,[[],["result",4]]],[10,"deserialize_u64","","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.",12,[[],["result",4]]],[11,"deserialize_u128","","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.",12,[[],["result",4]]],[10,"deserialize_f32","","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.",12,[[],["result",4]]],[10,"deserialize_f64","","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.",12,[[],["result",4]]],[10,"deserialize_char","","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.",12,[[],["result",4]]],[10,"deserialize_str","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_string","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_option","","Hint that the <code>Deserialize</code> type is expecting an optional …",12,[[],["result",4]]],[10,"deserialize_unit","","Hint that the <code>Deserialize</code> type is expecting a unit value.",12,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the <code>Deserialize</code> type is expecting a unit struct …",12,[[["str",15]],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the <code>Deserialize</code> type is expecting a newtype …",12,[[["str",15]],["result",4]]],[10,"deserialize_seq","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[["usize",15]],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the <code>Deserialize</code> type is expecting a tuple …",12,[[["usize",15],["str",15]],["result",4]]],[10,"deserialize_map","","Hint that the <code>Deserialize</code> type is expecting a map of …",12,[[],["result",4]]],[10,"deserialize_struct","","Hint that the <code>Deserialize</code> type is expecting a struct with …",12,[[["str",15]],["result",4]]],[10,"deserialize_enum","","Hint that the <code>Deserialize</code> type is expecting an enum value …",12,[[["str",15]],["result",4]]],[10,"deserialize_identifier","","Hint that the <code>Deserialize</code> type is expecting the name of a …",12,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the <code>Deserialize</code> type needs to deserialize a …",12,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Deserialize</code> implementations should …",12,[[],["bool",15]]],[8,"Serialize","","A <strong>data structure</strong> that can be serialized into any data …",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",20,[[],["result",4]]],[8,"Serializer","","A <strong>data format</strong> that can serialize any data structure …",null,null],[16,"Ok","","The output type produced by this <code>Serializer</code> during …",21,null],[16,"Error","","The error type when some error occurs during …",21,null],[16,"SerializeSeq","","Type returned from <code>serialize_seq</code> for serializing the …",21,null],[16,"SerializeTuple","","Type returned from <code>serialize_tuple</code> for serializing the …",21,null],[16,"SerializeTupleStruct","","Type returned from <code>serialize_tuple_struct</code> for serializing …",21,null],[16,"SerializeTupleVariant","","Type returned from <code>serialize_tuple_variant</code> for …",21,null],[16,"SerializeMap","","Type returned from <code>serialize_map</code> for serializing the …",21,null],[16,"SerializeStruct","","Type returned from <code>serialize_struct</code> for serializing the …",21,null],[16,"SerializeStructVariant","","Type returned from <code>serialize_struct_variant</code> for …",21,null],[10,"serialize_bool","","Serialize a <code>bool</code> value.",21,[[["bool",15]],["result",4]]],[10,"serialize_i8","","Serialize an <code>i8</code> value.",21,[[["i8",15]],["result",4]]],[10,"serialize_i16","","Serialize an <code>i16</code> value.",21,[[["i16",15]],["result",4]]],[10,"serialize_i32","","Serialize an <code>i32</code> value.",21,[[["i32",15]],["result",4]]],[10,"serialize_i64","","Serialize an <code>i64</code> value.",21,[[["i64",15]],["result",4]]],[11,"serialize_i128","","Serialize an <code>i128</code> value.",21,[[["i128",15]],["result",4]]],[10,"serialize_u8","","Serialize a <code>u8</code> value.",21,[[["u8",15]],["result",4]]],[10,"serialize_u16","","Serialize a <code>u16</code> value.",21,[[["u16",15]],["result",4]]],[10,"serialize_u32","","Serialize a <code>u32</code> value.",21,[[["u32",15]],["result",4]]],[10,"serialize_u64","","Serialize a <code>u64</code> value.",21,[[["u64",15]],["result",4]]],[11,"serialize_u128","","Serialize a <code>u128</code> value.",21,[[["u128",15]],["result",4]]],[10,"serialize_f32","","Serialize an <code>f32</code> value.",21,[[["f32",15]],["result",4]]],[10,"serialize_f64","","Serialize an <code>f64</code> value.",21,[[["f64",15]],["result",4]]],[10,"serialize_char","","Serialize a character.",21,[[["char",15]],["result",4]]],[10,"serialize_str","","Serialize a <code>&str</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",21,[[],["result",4]]],[10,"serialize_none","","Serialize a <code>None</code> value.",21,[[],["result",4]]],[10,"serialize_some","","Serialize a <code>Some(T)</code> value.",21,[[],["result",4]]],[10,"serialize_unit","","Serialize a <code>()</code> value.",21,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…",21,[[["str",15]],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose …",21,[[["usize",15]],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like <code>E::T</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like <code>E::S</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",21,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",21,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of …",21,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Serialize</code> implementations should …",21,[[],["bool",15]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the <code>Deserializer</code> part of a …",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is …",null,null],[11,"from","serde::de::value","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"fmt","serde::de","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","serde::ser","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"deserialize","serde::de","",50,[[],[["result",4],["ignoredany",3]]]],[11,"deserialize_bool","serde::de::value","",30,[[],["result",4]]],[11,"deserialize_i8","","",30,[[],["result",4]]],[11,"deserialize_i16","","",30,[[],["result",4]]],[11,"deserialize_i32","","",30,[[],["result",4]]],[11,"deserialize_i64","","",30,[[],["result",4]]],[11,"deserialize_i128","","",30,[[],["result",4]]],[11,"deserialize_u8","","",30,[[],["result",4]]],[11,"deserialize_u16","","",30,[[],["result",4]]],[11,"deserialize_u32","","",30,[[],["result",4]]],[11,"deserialize_u64","","",30,[[],["result",4]]],[11,"deserialize_u128","","",30,[[],["result",4]]],[11,"deserialize_f32","","",30,[[],["result",4]]],[11,"deserialize_f64","","",30,[[],["result",4]]],[11,"deserialize_char","","",30,[[],["result",4]]],[11,"deserialize_str","","",30,[[],["result",4]]],[11,"deserialize_string","","",30,[[],["result",4]]],[11,"deserialize_bytes","","",30,[[],["result",4]]],[11,"deserialize_byte_buf","","",30,[[],["result",4]]],[11,"deserialize_unit","","",30,[[],["result",4]]],[11,"deserialize_unit_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",30,[[],["result",4]]],[11,"deserialize_tuple","","",30,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",30,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",30,[[],["result",4]]],[11,"deserialize_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",30,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",30,[[],["result",4]]],[11,"deserialize_ignored_any","","",30,[[],["result",4]]],[11,"deserialize_any","","",30,[[],["result",4]]],[11,"deserialize_option","","",30,[[],["result",4]]],[11,"deserialize_bool","","",31,[[],["result",4]]],[11,"deserialize_i8","","",31,[[],["result",4]]],[11,"deserialize_i16","","",31,[[],["result",4]]],[11,"deserialize_i32","","",31,[[],["result",4]]],[11,"deserialize_i64","","",31,[[],["result",4]]],[11,"deserialize_i128","","",31,[[],["result",4]]],[11,"deserialize_u8","","",31,[[],["result",4]]],[11,"deserialize_u16","","",31,[[],["result",4]]],[11,"deserialize_u32","","",31,[[],["result",4]]],[11,"deserialize_u64","","",31,[[],["result",4]]],[11,"deserialize_u128","","",31,[[],["result",4]]],[11,"deserialize_f32","","",31,[[],["result",4]]],[11,"deserialize_f64","","",31,[[],["result",4]]],[11,"deserialize_char","","",31,[[],["result",4]]],[11,"deserialize_str","","",31,[[],["result",4]]],[11,"deserialize_string","","",31,[[],["result",4]]],[11,"deserialize_bytes","","",31,[[],["result",4]]],[11,"deserialize_byte_buf","","",31,[[],["result",4]]],[11,"deserialize_option","","",31,[[],["result",4]]],[11,"deserialize_unit","","",31,[[],["result",4]]],[11,"deserialize_unit_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",31,[[],["result",4]]],[11,"deserialize_tuple","","",31,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",31,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",31,[[],["result",4]]],[11,"deserialize_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",31,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",31,[[],["result",4]]],[11,"deserialize_ignored_any","","",31,[[],["result",4]]],[11,"deserialize_any","","",31,[[],["result",4]]],[11,"deserialize_bool","","",32,[[],["result",4]]],[11,"deserialize_i8","","",32,[[],["result",4]]],[11,"deserialize_i16","","",32,[[],["result",4]]],[11,"deserialize_i32","","",32,[[],["result",4]]],[11,"deserialize_i64","","",32,[[],["result",4]]],[11,"deserialize_i128","","",32,[[],["result",4]]],[11,"deserialize_u8","","",32,[[],["result",4]]],[11,"deserialize_u16","","",32,[[],["result",4]]],[11,"deserialize_u32","","",32,[[],["result",4]]],[11,"deserialize_u64","","",32,[[],["result",4]]],[11,"deserialize_u128","","",32,[[],["result",4]]],[11,"deserialize_f32","","",32,[[],["result",4]]],[11,"deserialize_f64","","",32,[[],["result",4]]],[11,"deserialize_char","","",32,[[],["result",4]]],[11,"deserialize_str","","",32,[[],["result",4]]],[11,"deserialize_string","","",32,[[],["result",4]]],[11,"deserialize_bytes","","",32,[[],["result",4]]],[11,"deserialize_byte_buf","","",32,[[],["result",4]]],[11,"deserialize_option","","",32,[[],["result",4]]],[11,"deserialize_unit","","",32,[[],["result",4]]],[11,"deserialize_unit_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",32,[[],["result",4]]],[11,"deserialize_tuple","","",32,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",32,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",32,[[],["result",4]]],[11,"deserialize_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",32,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",32,[[],["result",4]]],[11,"deserialize_ignored_any","","",32,[[],["result",4]]],[11,"deserialize_any","","",32,[[],["result",4]]],[11,"deserialize_bool","","",33,[[],["result",4]]],[11,"deserialize_i8","","",33,[[],["result",4]]],[11,"deserialize_i16","","",33,[[],["result",4]]],[11,"deserialize_i32","","",33,[[],["result",4]]],[11,"deserialize_i64","","",33,[[],["result",4]]],[11,"deserialize_i128","","",33,[[],["result",4]]],[11,"deserialize_u8","","",33,[[],["result",4]]],[11,"deserialize_u16","","",33,[[],["result",4]]],[11,"deserialize_u32","","",33,[[],["result",4]]],[11,"deserialize_u64","","",33,[[],["result",4]]],[11,"deserialize_u128","","",33,[[],["result",4]]],[11,"deserialize_f32","","",33,[[],["result",4]]],[11,"deserialize_f64","","",33,[[],["result",4]]],[11,"deserialize_char","","",33,[[],["result",4]]],[11,"deserialize_str","","",33,[[],["result",4]]],[11,"deserialize_string","","",33,[[],["result",4]]],[11,"deserialize_bytes","","",33,[[],["result",4]]],[11,"deserialize_byte_buf","","",33,[[],["result",4]]],[11,"deserialize_option","","",33,[[],["result",4]]],[11,"deserialize_unit","","",33,[[],["result",4]]],[11,"deserialize_unit_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",33,[[],["result",4]]],[11,"deserialize_tuple","","",33,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",33,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",33,[[],["result",4]]],[11,"deserialize_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",33,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",33,[[],["result",4]]],[11,"deserialize_ignored_any","","",33,[[],["result",4]]],[11,"deserialize_any","","",33,[[],["result",4]]],[11,"deserialize_bool","","",34,[[],["result",4]]],[11,"deserialize_i8","","",34,[[],["result",4]]],[11,"deserialize_i16","","",34,[[],["result",4]]],[11,"deserialize_i32","","",34,[[],["result",4]]],[11,"deserialize_i64","","",34,[[],["result",4]]],[11,"deserialize_i128","","",34,[[],["result",4]]],[11,"deserialize_u8","","",34,[[],["result",4]]],[11,"deserialize_u16","","",34,[[],["result",4]]],[11,"deserialize_u32","","",34,[[],["result",4]]],[11,"deserialize_u64","","",34,[[],["result",4]]],[11,"deserialize_u128","","",34,[[],["result",4]]],[11,"deserialize_f32","","",34,[[],["result",4]]],[11,"deserialize_f64","","",34,[[],["result",4]]],[11,"deserialize_char","","",34,[[],["result",4]]],[11,"deserialize_str","","",34,[[],["result",4]]],[11,"deserialize_string","","",34,[[],["result",4]]],[11,"deserialize_bytes","","",34,[[],["result",4]]],[11,"deserialize_byte_buf","","",34,[[],["result",4]]],[11,"deserialize_option","","",34,[[],["result",4]]],[11,"deserialize_unit","","",34,[[],["result",4]]],[11,"deserialize_unit_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",34,[[],["result",4]]],[11,"deserialize_tuple","","",34,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",34,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",34,[[],["result",4]]],[11,"deserialize_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",34,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",34,[[],["result",4]]],[11,"deserialize_ignored_any","","",34,[[],["result",4]]],[11,"deserialize_any","","",34,[[],["result",4]]],[11,"deserialize_bool","","",35,[[],["result",4]]],[11,"deserialize_i8","","",35,[[],["result",4]]],[11,"deserialize_i16","","",35,[[],["result",4]]],[11,"deserialize_i32","","",35,[[],["result",4]]],[11,"deserialize_i64","","",35,[[],["result",4]]],[11,"deserialize_i128","","",35,[[],["result",4]]],[11,"deserialize_u8","","",35,[[],["result",4]]],[11,"deserialize_u16","","",35,[[],["result",4]]],[11,"deserialize_u32","","",35,[[],["result",4]]],[11,"deserialize_u64","","",35,[[],["result",4]]],[11,"deserialize_u128","","",35,[[],["result",4]]],[11,"deserialize_f32","","",35,[[],["result",4]]],[11,"deserialize_f64","","",35,[[],["result",4]]],[11,"deserialize_char","","",35,[[],["result",4]]],[11,"deserialize_str","","",35,[[],["result",4]]],[11,"deserialize_string","","",35,[[],["result",4]]],[11,"deserialize_bytes","","",35,[[],["result",4]]],[11,"deserialize_byte_buf","","",35,[[],["result",4]]],[11,"deserialize_option","","",35,[[],["result",4]]],[11,"deserialize_unit","","",35,[[],["result",4]]],[11,"deserialize_unit_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",35,[[],["result",4]]],[11,"deserialize_tuple","","",35,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",35,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",35,[[],["result",4]]],[11,"deserialize_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",35,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",35,[[],["result",4]]],[11,"deserialize_ignored_any","","",35,[[],["result",4]]],[11,"deserialize_any","","",35,[[],["result",4]]],[11,"deserialize_bool","","",36,[[],["result",4]]],[11,"deserialize_i8","","",36,[[],["result",4]]],[11,"deserialize_i16","","",36,[[],["result",4]]],[11,"deserialize_i32","","",36,[[],["result",4]]],[11,"deserialize_i64","","",36,[[],["result",4]]],[11,"deserialize_i128","","",36,[[],["result",4]]],[11,"deserialize_u8","","",36,[[],["result",4]]],[11,"deserialize_u16","","",36,[[],["result",4]]],[11,"deserialize_u32","","",36,[[],["result",4]]],[11,"deserialize_u64","","",36,[[],["result",4]]],[11,"deserialize_u128","","",36,[[],["result",4]]],[11,"deserialize_f32","","",36,[[],["result",4]]],[11,"deserialize_f64","","",36,[[],["result",4]]],[11,"deserialize_char","","",36,[[],["result",4]]],[11,"deserialize_str","","",36,[[],["result",4]]],[11,"deserialize_string","","",36,[[],["result",4]]],[11,"deserialize_bytes","","",36,[[],["result",4]]],[11,"deserialize_byte_buf","","",36,[[],["result",4]]],[11,"deserialize_option","","",36,[[],["result",4]]],[11,"deserialize_unit","","",36,[[],["result",4]]],[11,"deserialize_unit_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",36,[[],["result",4]]],[11,"deserialize_tuple","","",36,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",36,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",36,[[],["result",4]]],[11,"deserialize_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",36,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",36,[[],["result",4]]],[11,"deserialize_ignored_any","","",36,[[],["result",4]]],[11,"deserialize_any","","",36,[[],["result",4]]],[11,"deserialize_bool","","",37,[[],["result",4]]],[11,"deserialize_i8","","",37,[[],["result",4]]],[11,"deserialize_i16","","",37,[[],["result",4]]],[11,"deserialize_i32","","",37,[[],["result",4]]],[11,"deserialize_i64","","",37,[[],["result",4]]],[11,"deserialize_i128","","",37,[[],["result",4]]],[11,"deserialize_u8","","",37,[[],["result",4]]],[11,"deserialize_u16","","",37,[[],["result",4]]],[11,"deserialize_u32","","",37,[[],["result",4]]],[11,"deserialize_u64","","",37,[[],["result",4]]],[11,"deserialize_u128","","",37,[[],["result",4]]],[11,"deserialize_f32","","",37,[[],["result",4]]],[11,"deserialize_f64","","",37,[[],["result",4]]],[11,"deserialize_char","","",37,[[],["result",4]]],[11,"deserialize_str","","",37,[[],["result",4]]],[11,"deserialize_string","","",37,[[],["result",4]]],[11,"deserialize_bytes","","",37,[[],["result",4]]],[11,"deserialize_byte_buf","","",37,[[],["result",4]]],[11,"deserialize_option","","",37,[[],["result",4]]],[11,"deserialize_unit","","",37,[[],["result",4]]],[11,"deserialize_unit_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",37,[[],["result",4]]],[11,"deserialize_tuple","","",37,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",37,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",37,[[],["result",4]]],[11,"deserialize_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",37,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",37,[[],["result",4]]],[11,"deserialize_ignored_any","","",37,[[],["result",4]]],[11,"deserialize_any","","",37,[[],["result",4]]],[11,"deserialize_bool","","",38,[[],["result",4]]],[11,"deserialize_i8","","",38,[[],["result",4]]],[11,"deserialize_i16","","",38,[[],["result",4]]],[11,"deserialize_i32","","",38,[[],["result",4]]],[11,"deserialize_i64","","",38,[[],["result",4]]],[11,"deserialize_i128","","",38,[[],["result",4]]],[11,"deserialize_u8","","",38,[[],["result",4]]],[11,"deserialize_u16","","",38,[[],["result",4]]],[11,"deserialize_u32","","",38,[[],["result",4]]],[11,"deserialize_u64","","",38,[[],["result",4]]],[11,"deserialize_u128","","",38,[[],["result",4]]],[11,"deserialize_f32","","",38,[[],["result",4]]],[11,"deserialize_f64","","",38,[[],["result",4]]],[11,"deserialize_char","","",38,[[],["result",4]]],[11,"deserialize_str","","",38,[[],["result",4]]],[11,"deserialize_string","","",38,[[],["result",4]]],[11,"deserialize_bytes","","",38,[[],["result",4]]],[11,"deserialize_byte_buf","","",38,[[],["result",4]]],[11,"deserialize_option","","",38,[[],["result",4]]],[11,"deserialize_unit","","",38,[[],["result",4]]],[11,"deserialize_unit_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",38,[[],["result",4]]],[11,"deserialize_tuple","","",38,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",38,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",38,[[],["result",4]]],[11,"deserialize_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",38,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",38,[[],["result",4]]],[11,"deserialize_ignored_any","","",38,[[],["result",4]]],[11,"deserialize_any","","",38,[[],["result",4]]],[11,"deserialize_bool","","",39,[[],["result",4]]],[11,"deserialize_i8","","",39,[[],["result",4]]],[11,"deserialize_i16","","",39,[[],["result",4]]],[11,"deserialize_i32","","",39,[[],["result",4]]],[11,"deserialize_i64","","",39,[[],["result",4]]],[11,"deserialize_i128","","",39,[[],["result",4]]],[11,"deserialize_u8","","",39,[[],["result",4]]],[11,"deserialize_u16","","",39,[[],["result",4]]],[11,"deserialize_u32","","",39,[[],["result",4]]],[11,"deserialize_u64","","",39,[[],["result",4]]],[11,"deserialize_u128","","",39,[[],["result",4]]],[11,"deserialize_f32","","",39,[[],["result",4]]],[11,"deserialize_f64","","",39,[[],["result",4]]],[11,"deserialize_char","","",39,[[],["result",4]]],[11,"deserialize_str","","",39,[[],["result",4]]],[11,"deserialize_string","","",39,[[],["result",4]]],[11,"deserialize_bytes","","",39,[[],["result",4]]],[11,"deserialize_byte_buf","","",39,[[],["result",4]]],[11,"deserialize_option","","",39,[[],["result",4]]],[11,"deserialize_unit","","",39,[[],["result",4]]],[11,"deserialize_unit_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",39,[[],["result",4]]],[11,"deserialize_tuple","","",39,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",39,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",39,[[],["result",4]]],[11,"deserialize_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",39,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",39,[[],["result",4]]],[11,"deserialize_ignored_any","","",39,[[],["result",4]]],[11,"deserialize_any","","",39,[[],["result",4]]],[11,"deserialize_bool","","",40,[[],["result",4]]],[11,"deserialize_i8","","",40,[[],["result",4]]],[11,"deserialize_i16","","",40,[[],["result",4]]],[11,"deserialize_i32","","",40,[[],["result",4]]],[11,"deserialize_i64","","",40,[[],["result",4]]],[11,"deserialize_i128","","",40,[[],["result",4]]],[11,"deserialize_u8","","",40,[[],["result",4]]],[11,"deserialize_u16","","",40,[[],["result",4]]],[11,"deserialize_u32","","",40,[[],["result",4]]],[11,"deserialize_u64","","",40,[[],["result",4]]],[11,"deserialize_u128","","",40,[[],["result",4]]],[11,"deserialize_f32","","",40,[[],["result",4]]],[11,"deserialize_f64","","",40,[[],["result",4]]],[11,"deserialize_char","","",40,[[],["result",4]]],[11,"deserialize_str","","",40,[[],["result",4]]],[11,"deserialize_string","","",40,[[],["result",4]]],[11,"deserialize_bytes","","",40,[[],["result",4]]],[11,"deserialize_byte_buf","","",40,[[],["result",4]]],[11,"deserialize_option","","",40,[[],["result",4]]],[11,"deserialize_unit","","",40,[[],["result",4]]],[11,"deserialize_unit_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",40,[[],["result",4]]],[11,"deserialize_tuple","","",40,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",40,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",40,[[],["result",4]]],[11,"deserialize_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",40,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",40,[[],["result",4]]],[11,"deserialize_ignored_any","","",40,[[],["result",4]]],[11,"deserialize_any","","",40,[[],["result",4]]],[11,"deserialize_bool","","",41,[[],["result",4]]],[11,"deserialize_i8","","",41,[[],["result",4]]],[11,"deserialize_i16","","",41,[[],["result",4]]],[11,"deserialize_i32","","",41,[[],["result",4]]],[11,"deserialize_i64","","",41,[[],["result",4]]],[11,"deserialize_i128","","",41,[[],["result",4]]],[11,"deserialize_u8","","",41,[[],["result",4]]],[11,"deserialize_u16","","",41,[[],["result",4]]],[11,"deserialize_u32","","",41,[[],["result",4]]],[11,"deserialize_u64","","",41,[[],["result",4]]],[11,"deserialize_u128","","",41,[[],["result",4]]],[11,"deserialize_f32","","",41,[[],["result",4]]],[11,"deserialize_f64","","",41,[[],["result",4]]],[11,"deserialize_char","","",41,[[],["result",4]]],[11,"deserialize_str","","",41,[[],["result",4]]],[11,"deserialize_string","","",41,[[],["result",4]]],[11,"deserialize_bytes","","",41,[[],["result",4]]],[11,"deserialize_byte_buf","","",41,[[],["result",4]]],[11,"deserialize_option","","",41,[[],["result",4]]],[11,"deserialize_unit","","",41,[[],["result",4]]],[11,"deserialize_unit_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",41,[[],["result",4]]],[11,"deserialize_tuple","","",41,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",41,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",41,[[],["result",4]]],[11,"deserialize_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",41,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",41,[[],["result",4]]],[11,"deserialize_ignored_any","","",41,[[],["result",4]]],[11,"deserialize_any","","",41,[[],["result",4]]],[11,"deserialize_bool","","",42,[[],["result",4]]],[11,"deserialize_i8","","",42,[[],["result",4]]],[11,"deserialize_i16","","",42,[[],["result",4]]],[11,"deserialize_i32","","",42,[[],["result",4]]],[11,"deserialize_i64","","",42,[[],["result",4]]],[11,"deserialize_i128","","",42,[[],["result",4]]],[11,"deserialize_u8","","",42,[[],["result",4]]],[11,"deserialize_u16","","",42,[[],["result",4]]],[11,"deserialize_u32","","",42,[[],["result",4]]],[11,"deserialize_u64","","",42,[[],["result",4]]],[11,"deserialize_u128","","",42,[[],["result",4]]],[11,"deserialize_f32","","",42,[[],["result",4]]],[11,"deserialize_f64","","",42,[[],["result",4]]],[11,"deserialize_char","","",42,[[],["result",4]]],[11,"deserialize_str","","",42,[[],["result",4]]],[11,"deserialize_string","","",42,[[],["result",4]]],[11,"deserialize_bytes","","",42,[[],["result",4]]],[11,"deserialize_byte_buf","","",42,[[],["result",4]]],[11,"deserialize_option","","",42,[[],["result",4]]],[11,"deserialize_unit","","",42,[[],["result",4]]],[11,"deserialize_unit_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",42,[[],["result",4]]],[11,"deserialize_tuple","","",42,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",42,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",42,[[],["result",4]]],[11,"deserialize_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",42,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",42,[[],["result",4]]],[11,"deserialize_ignored_any","","",42,[[],["result",4]]],[11,"deserialize_any","","",42,[[],["result",4]]],[11,"deserialize_bool","","",43,[[],["result",4]]],[11,"deserialize_i8","","",43,[[],["result",4]]],[11,"deserialize_i16","","",43,[[],["result",4]]],[11,"deserialize_i32","","",43,[[],["result",4]]],[11,"deserialize_i64","","",43,[[],["result",4]]],[11,"deserialize_i128","","",43,[[],["result",4]]],[11,"deserialize_u8","","",43,[[],["result",4]]],[11,"deserialize_u16","","",43,[[],["result",4]]],[11,"deserialize_u32","","",43,[[],["result",4]]],[11,"deserialize_u64","","",43,[[],["result",4]]],[11,"deserialize_u128","","",43,[[],["result",4]]],[11,"deserialize_f32","","",43,[[],["result",4]]],[11,"deserialize_f64","","",43,[[],["result",4]]],[11,"deserialize_char","","",43,[[],["result",4]]],[11,"deserialize_str","","",43,[[],["result",4]]],[11,"deserialize_string","","",43,[[],["result",4]]],[11,"deserialize_bytes","","",43,[[],["result",4]]],[11,"deserialize_byte_buf","","",43,[[],["result",4]]],[11,"deserialize_option","","",43,[[],["result",4]]],[11,"deserialize_unit","","",43,[[],["result",4]]],[11,"deserialize_unit_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",43,[[],["result",4]]],[11,"deserialize_tuple","","",43,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",43,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",43,[[],["result",4]]],[11,"deserialize_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",43,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",43,[[],["result",4]]],[11,"deserialize_ignored_any","","",43,[[],["result",4]]],[11,"deserialize_any","","",43,[[],["result",4]]],[11,"deserialize_bool","","",44,[[],["result",4]]],[11,"deserialize_i8","","",44,[[],["result",4]]],[11,"deserialize_i16","","",44,[[],["result",4]]],[11,"deserialize_i32","","",44,[[],["result",4]]],[11,"deserialize_i64","","",44,[[],["result",4]]],[11,"deserialize_i128","","",44,[[],["result",4]]],[11,"deserialize_u8","","",44,[[],["result",4]]],[11,"deserialize_u16","","",44,[[],["result",4]]],[11,"deserialize_u32","","",44,[[],["result",4]]],[11,"deserialize_u64","","",44,[[],["result",4]]],[11,"deserialize_u128","","",44,[[],["result",4]]],[11,"deserialize_f32","","",44,[[],["result",4]]],[11,"deserialize_f64","","",44,[[],["result",4]]],[11,"deserialize_char","","",44,[[],["result",4]]],[11,"deserialize_str","","",44,[[],["result",4]]],[11,"deserialize_string","","",44,[[],["result",4]]],[11,"deserialize_bytes","","",44,[[],["result",4]]],[11,"deserialize_byte_buf","","",44,[[],["result",4]]],[11,"deserialize_option","","",44,[[],["result",4]]],[11,"deserialize_unit","","",44,[[],["result",4]]],[11,"deserialize_unit_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",44,[[],["result",4]]],[11,"deserialize_tuple","","",44,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",44,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",44,[[],["result",4]]],[11,"deserialize_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",44,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",44,[[],["result",4]]],[11,"deserialize_ignored_any","","",44,[[],["result",4]]],[11,"deserialize_any","","",44,[[],["result",4]]],[11,"deserialize_bool","","",45,[[],["result",4]]],[11,"deserialize_i8","","",45,[[],["result",4]]],[11,"deserialize_i16","","",45,[[],["result",4]]],[11,"deserialize_i32","","",45,[[],["result",4]]],[11,"deserialize_i64","","",45,[[],["result",4]]],[11,"deserialize_i128","","",45,[[],["result",4]]],[11,"deserialize_u8","","",45,[[],["result",4]]],[11,"deserialize_u16","","",45,[[],["result",4]]],[11,"deserialize_u32","","",45,[[],["result",4]]],[11,"deserialize_u64","","",45,[[],["result",4]]],[11,"deserialize_u128","","",45,[[],["result",4]]],[11,"deserialize_f32","","",45,[[],["result",4]]],[11,"deserialize_f64","","",45,[[],["result",4]]],[11,"deserialize_char","","",45,[[],["result",4]]],[11,"deserialize_str","","",45,[[],["result",4]]],[11,"deserialize_string","","",45,[[],["result",4]]],[11,"deserialize_bytes","","",45,[[],["result",4]]],[11,"deserialize_byte_buf","","",45,[[],["result",4]]],[11,"deserialize_option","","",45,[[],["result",4]]],[11,"deserialize_unit","","",45,[[],["result",4]]],[11,"deserialize_unit_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",45,[[],["result",4]]],[11,"deserialize_tuple","","",45,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",45,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",45,[[],["result",4]]],[11,"deserialize_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",45,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",45,[[],["result",4]]],[11,"deserialize_ignored_any","","",45,[[],["result",4]]],[11,"deserialize_any","","",45,[[],["result",4]]],[11,"deserialize_bool","","",46,[[],["result",4]]],[11,"deserialize_i8","","",46,[[],["result",4]]],[11,"deserialize_i16","","",46,[[],["result",4]]],[11,"deserialize_i32","","",46,[[],["result",4]]],[11,"deserialize_i64","","",46,[[],["result",4]]],[11,"deserialize_i128","","",46,[[],["result",4]]],[11,"deserialize_u8","","",46,[[],["result",4]]],[11,"deserialize_u16","","",46,[[],["result",4]]],[11,"deserialize_u32","","",46,[[],["result",4]]],[11,"deserialize_u64","","",46,[[],["result",4]]],[11,"deserialize_u128","","",46,[[],["result",4]]],[11,"deserialize_f32","","",46,[[],["result",4]]],[11,"deserialize_f64","","",46,[[],["result",4]]],[11,"deserialize_char","","",46,[[],["result",4]]],[11,"deserialize_str","","",46,[[],["result",4]]],[11,"deserialize_string","","",46,[[],["result",4]]],[11,"deserialize_bytes","","",46,[[],["result",4]]],[11,"deserialize_byte_buf","","",46,[[],["result",4]]],[11,"deserialize_option","","",46,[[],["result",4]]],[11,"deserialize_unit","","",46,[[],["result",4]]],[11,"deserialize_unit_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",46,[[],["result",4]]],[11,"deserialize_tuple","","",46,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",46,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",46,[[],["result",4]]],[11,"deserialize_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",46,[[],["result",4]]],[11,"deserialize_ignored_any","","",46,[[],["result",4]]],[11,"deserialize_any","","",46,[[],["result",4]]],[11,"deserialize_enum","","",46,[[["str",15]],["result",4]]],[11,"deserialize_any","","",47,[[],["result",4]]],[11,"deserialize_enum","","",47,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",47,[[],["result",4]]],[11,"deserialize_i8","","",47,[[],["result",4]]],[11,"deserialize_i16","","",47,[[],["result",4]]],[11,"deserialize_i32","","",47,[[],["result",4]]],[11,"deserialize_i64","","",47,[[],["result",4]]],[11,"deserialize_i128","","",47,[[],["result",4]]],[11,"deserialize_u8","","",47,[[],["result",4]]],[11,"deserialize_u16","","",47,[[],["result",4]]],[11,"deserialize_u32","","",47,[[],["result",4]]],[11,"deserialize_u64","","",47,[[],["result",4]]],[11,"deserialize_u128","","",47,[[],["result",4]]],[11,"deserialize_f32","","",47,[[],["result",4]]],[11,"deserialize_f64","","",47,[[],["result",4]]],[11,"deserialize_char","","",47,[[],["result",4]]],[11,"deserialize_str","","",47,[[],["result",4]]],[11,"deserialize_string","","",47,[[],["result",4]]],[11,"deserialize_bytes","","",47,[[],["result",4]]],[11,"deserialize_byte_buf","","",47,[[],["result",4]]],[11,"deserialize_option","","",47,[[],["result",4]]],[11,"deserialize_unit","","",47,[[],["result",4]]],[11,"deserialize_unit_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",47,[[],["result",4]]],[11,"deserialize_tuple","","",47,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",47,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",47,[[],["result",4]]],[11,"deserialize_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",47,[[],["result",4]]],[11,"deserialize_ignored_any","","",47,[[],["result",4]]],[11,"deserialize_any","","",0,[[],["result",4]]],[11,"deserialize_enum","","",0,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",0,[[],["result",4]]],[11,"deserialize_i8","","",0,[[],["result",4]]],[11,"deserialize_i16","","",0,[[],["result",4]]],[11,"deserialize_i32","","",0,[[],["result",4]]],[11,"deserialize_i64","","",0,[[],["result",4]]],[11,"deserialize_i128","","",0,[[],["result",4]]],[11,"deserialize_u8","","",0,[[],["result",4]]],[11,"deserialize_u16","","",0,[[],["result",4]]],[11,"deserialize_u32","","",0,[[],["result",4]]],[11,"deserialize_u64","","",0,[[],["result",4]]],[11,"deserialize_u128","","",0,[[],["result",4]]],[11,"deserialize_f32","","",0,[[],["result",4]]],[11,"deserialize_f64","","",0,[[],["result",4]]],[11,"deserialize_char","","",0,[[],["result",4]]],[11,"deserialize_str","","",0,[[],["result",4]]],[11,"deserialize_string","","",0,[[],["result",4]]],[11,"deserialize_bytes","","",0,[[],["result",4]]],[11,"deserialize_byte_buf","","",0,[[],["result",4]]],[11,"deserialize_option","","",0,[[],["result",4]]],[11,"deserialize_unit","","",0,[[],["result",4]]],[11,"deserialize_unit_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",0,[[],["result",4]]],[11,"deserialize_tuple","","",0,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",0,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",0,[[],["result",4]]],[11,"deserialize_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",0,[[],["result",4]]],[11,"deserialize_ignored_any","","",0,[[],["result",4]]],[11,"deserialize_any","","",48,[[],["result",4]]],[11,"deserialize_enum","","",48,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",48,[[],["result",4]]],[11,"deserialize_i8","","",48,[[],["result",4]]],[11,"deserialize_i16","","",48,[[],["result",4]]],[11,"deserialize_i32","","",48,[[],["result",4]]],[11,"deserialize_i64","","",48,[[],["result",4]]],[11,"deserialize_i128","","",48,[[],["result",4]]],[11,"deserialize_u8","","",48,[[],["result",4]]],[11,"deserialize_u16","","",48,[[],["result",4]]],[11,"deserialize_u32","","",48,[[],["result",4]]],[11,"deserialize_u64","","",48,[[],["result",4]]],[11,"deserialize_u128","","",48,[[],["result",4]]],[11,"deserialize_f32","","",48,[[],["result",4]]],[11,"deserialize_f64","","",48,[[],["result",4]]],[11,"deserialize_char","","",48,[[],["result",4]]],[11,"deserialize_str","","",48,[[],["result",4]]],[11,"deserialize_string","","",48,[[],["result",4]]],[11,"deserialize_bytes","","",48,[[],["result",4]]],[11,"deserialize_byte_buf","","",48,[[],["result",4]]],[11,"deserialize_option","","",48,[[],["result",4]]],[11,"deserialize_unit","","",48,[[],["result",4]]],[11,"deserialize_unit_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",48,[[],["result",4]]],[11,"deserialize_tuple","","",48,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",48,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",48,[[],["result",4]]],[11,"deserialize_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",48,[[],["result",4]]],[11,"deserialize_ignored_any","","",48,[[],["result",4]]],[11,"deserialize_any","","",49,[[],["result",4]]],[11,"deserialize_enum","","",49,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",49,[[],["result",4]]],[11,"deserialize_i8","","",49,[[],["result",4]]],[11,"deserialize_i16","","",49,[[],["result",4]]],[11,"deserialize_i32","","",49,[[],["result",4]]],[11,"deserialize_i64","","",49,[[],["result",4]]],[11,"deserialize_i128","","",49,[[],["result",4]]],[11,"deserialize_u8","","",49,[[],["result",4]]],[11,"deserialize_u16","","",49,[[],["result",4]]],[11,"deserialize_u32","","",49,[[],["result",4]]],[11,"deserialize_u64","","",49,[[],["result",4]]],[11,"deserialize_u128","","",49,[[],["result",4]]],[11,"deserialize_f32","","",49,[[],["result",4]]],[11,"deserialize_f64","","",49,[[],["result",4]]],[11,"deserialize_char","","",49,[[],["result",4]]],[11,"deserialize_str","","",49,[[],["result",4]]],[11,"deserialize_string","","",49,[[],["result",4]]],[11,"deserialize_bytes","","",49,[[],["result",4]]],[11,"deserialize_byte_buf","","",49,[[],["result",4]]],[11,"deserialize_option","","",49,[[],["result",4]]],[11,"deserialize_unit","","",49,[[],["result",4]]],[11,"deserialize_unit_struct","","",49,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",49,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",49,[[],["result",4]]],[11,"deserialize_tuple","","",49,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",49,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",49,[[],["result",4]]],[11,"deserialize_struct","","",49,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",49,[[],["result",4]]],[11,"deserialize_ignored_any","","",49,[[],["result",4]]],[11,"deserialize_any","","",1,[[],["result",4]]],[11,"deserialize_bool","","",1,[[],["result",4]]],[11,"deserialize_i8","","",1,[[],["result",4]]],[11,"deserialize_i16","","",1,[[],["result",4]]],[11,"deserialize_i32","","",1,[[],["result",4]]],[11,"deserialize_i64","","",1,[[],["result",4]]],[11,"deserialize_i128","","",1,[[],["result",4]]],[11,"deserialize_u8","","",1,[[],["result",4]]],[11,"deserialize_u16","","",1,[[],["result",4]]],[11,"deserialize_u32","","",1,[[],["result",4]]],[11,"deserialize_u64","","",1,[[],["result",4]]],[11,"deserialize_u128","","",1,[[],["result",4]]],[11,"deserialize_f32","","",1,[[],["result",4]]],[11,"deserialize_f64","","",1,[[],["result",4]]],[11,"deserialize_char","","",1,[[],["result",4]]],[11,"deserialize_str","","",1,[[],["result",4]]],[11,"deserialize_string","","",1,[[],["result",4]]],[11,"deserialize_bytes","","",1,[[],["result",4]]],[11,"deserialize_byte_buf","","",1,[[],["result",4]]],[11,"deserialize_option","","",1,[[],["result",4]]],[11,"deserialize_unit","","",1,[[],["result",4]]],[11,"deserialize_unit_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",1,[[],["result",4]]],[11,"deserialize_tuple","","",1,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",1,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",1,[[],["result",4]]],[11,"deserialize_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",1,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",1,[[],["result",4]]],[11,"deserialize_ignored_any","","",1,[[],["result",4]]],[11,"deserialize_any","","",2,[[],["result",4]]],[11,"deserialize_bool","","",2,[[],["result",4]]],[11,"deserialize_i8","","",2,[[],["result",4]]],[11,"deserialize_i16","","",2,[[],["result",4]]],[11,"deserialize_i32","","",2,[[],["result",4]]],[11,"deserialize_i64","","",2,[[],["result",4]]],[11,"deserialize_i128","","",2,[[],["result",4]]],[11,"deserialize_u8","","",2,[[],["result",4]]],[11,"deserialize_u16","","",2,[[],["result",4]]],[11,"deserialize_u32","","",2,[[],["result",4]]],[11,"deserialize_u64","","",2,[[],["result",4]]],[11,"deserialize_u128","","",2,[[],["result",4]]],[11,"deserialize_f32","","",2,[[],["result",4]]],[11,"deserialize_f64","","",2,[[],["result",4]]],[11,"deserialize_char","","",2,[[],["result",4]]],[11,"deserialize_str","","",2,[[],["result",4]]],[11,"deserialize_string","","",2,[[],["result",4]]],[11,"deserialize_bytes","","",2,[[],["result",4]]],[11,"deserialize_byte_buf","","",2,[[],["result",4]]],[11,"deserialize_option","","",2,[[],["result",4]]],[11,"deserialize_unit","","",2,[[],["result",4]]],[11,"deserialize_unit_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",2,[[],["result",4]]],[11,"deserialize_tuple","","",2,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",2,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",2,[[],["result",4]]],[11,"deserialize_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",2,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",2,[[],["result",4]]],[11,"deserialize_ignored_any","","",2,[[],["result",4]]],[11,"deserialize_any","","",3,[[],["result",4]]],[11,"deserialize_bool","","",3,[[],["result",4]]],[11,"deserialize_i8","","",3,[[],["result",4]]],[11,"deserialize_i16","","",3,[[],["result",4]]],[11,"deserialize_i32","","",3,[[],["result",4]]],[11,"deserialize_i64","","",3,[[],["result",4]]],[11,"deserialize_i128","","",3,[[],["result",4]]],[11,"deserialize_u8","","",3,[[],["result",4]]],[11,"deserialize_u16","","",3,[[],["result",4]]],[11,"deserialize_u32","","",3,[[],["result",4]]],[11,"deserialize_u64","","",3,[[],["result",4]]],[11,"deserialize_u128","","",3,[[],["result",4]]],[11,"deserialize_f32","","",3,[[],["result",4]]],[11,"deserialize_f64","","",3,[[],["result",4]]],[11,"deserialize_char","","",3,[[],["result",4]]],[11,"deserialize_str","","",3,[[],["result",4]]],[11,"deserialize_string","","",3,[[],["result",4]]],[11,"deserialize_bytes","","",3,[[],["result",4]]],[11,"deserialize_byte_buf","","",3,[[],["result",4]]],[11,"deserialize_option","","",3,[[],["result",4]]],[11,"deserialize_unit","","",3,[[],["result",4]]],[11,"deserialize_unit_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",3,[[],["result",4]]],[11,"deserialize_tuple","","",3,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",3,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",3,[[],["result",4]]],[11,"deserialize_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",3,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",3,[[],["result",4]]],[11,"deserialize_ignored_any","","",3,[[],["result",4]]],[11,"deserialize_any","","",4,[[],["result",4]]],[11,"deserialize_bool","","",4,[[],["result",4]]],[11,"deserialize_i8","","",4,[[],["result",4]]],[11,"deserialize_i16","","",4,[[],["result",4]]],[11,"deserialize_i32","","",4,[[],["result",4]]],[11,"deserialize_i64","","",4,[[],["result",4]]],[11,"deserialize_i128","","",4,[[],["result",4]]],[11,"deserialize_u8","","",4,[[],["result",4]]],[11,"deserialize_u16","","",4,[[],["result",4]]],[11,"deserialize_u32","","",4,[[],["result",4]]],[11,"deserialize_u64","","",4,[[],["result",4]]],[11,"deserialize_u128","","",4,[[],["result",4]]],[11,"deserialize_f32","","",4,[[],["result",4]]],[11,"deserialize_f64","","",4,[[],["result",4]]],[11,"deserialize_char","","",4,[[],["result",4]]],[11,"deserialize_str","","",4,[[],["result",4]]],[11,"deserialize_string","","",4,[[],["result",4]]],[11,"deserialize_bytes","","",4,[[],["result",4]]],[11,"deserialize_byte_buf","","",4,[[],["result",4]]],[11,"deserialize_option","","",4,[[],["result",4]]],[11,"deserialize_unit","","",4,[[],["result",4]]],[11,"deserialize_unit_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",4,[[],["result",4]]],[11,"deserialize_tuple","","",4,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",4,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",4,[[],["result",4]]],[11,"deserialize_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",4,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",4,[[],["result",4]]],[11,"deserialize_ignored_any","","",4,[[],["result",4]]],[11,"deserialize_any","","",5,[[],["result",4]]],[11,"deserialize_seq","","",5,[[],["result",4]]],[11,"deserialize_tuple","","",5,[[["usize",15]],["result",4]]],[11,"deserialize_bool","","",5,[[],["result",4]]],[11,"deserialize_i8","","",5,[[],["result",4]]],[11,"deserialize_i16","","",5,[[],["result",4]]],[11,"deserialize_i32","","",5,[[],["result",4]]],[11,"deserialize_i64","","",5,[[],["result",4]]],[11,"deserialize_i128","","",5,[[],["result",4]]],[11,"deserialize_u8","","",5,[[],["result",4]]],[11,"deserialize_u16","","",5,[[],["result",4]]],[11,"deserialize_u32","","",5,[[],["result",4]]],[11,"deserialize_u64","","",5,[[],["result",4]]],[11,"deserialize_u128","","",5,[[],["result",4]]],[11,"deserialize_f32","","",5,[[],["result",4]]],[11,"deserialize_f64","","",5,[[],["result",4]]],[11,"deserialize_char","","",5,[[],["result",4]]],[11,"deserialize_str","","",5,[[],["result",4]]],[11,"deserialize_string","","",5,[[],["result",4]]],[11,"deserialize_bytes","","",5,[[],["result",4]]],[11,"deserialize_byte_buf","","",5,[[],["result",4]]],[11,"deserialize_option","","",5,[[],["result",4]]],[11,"deserialize_unit","","",5,[[],["result",4]]],[11,"deserialize_unit_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_tuple_struct","","",5,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",5,[[],["result",4]]],[11,"deserialize_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",5,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",5,[[],["result",4]]],[11,"deserialize_ignored_any","","",5,[[],["result",4]]],[11,"deserialize_any","","",6,[[],["result",4]]],[11,"deserialize_enum","","",6,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",6,[[],["result",4]]],[11,"deserialize_i8","","",6,[[],["result",4]]],[11,"deserialize_i16","","",6,[[],["result",4]]],[11,"deserialize_i32","","",6,[[],["result",4]]],[11,"deserialize_i64","","",6,[[],["result",4]]],[11,"deserialize_i128","","",6,[[],["result",4]]],[11,"deserialize_u8","","",6,[[],["result",4]]],[11,"deserialize_u16","","",6,[[],["result",4]]],[11,"deserialize_u32","","",6,[[],["result",4]]],[11,"deserialize_u64","","",6,[[],["result",4]]],[11,"deserialize_u128","","",6,[[],["result",4]]],[11,"deserialize_f32","","",6,[[],["result",4]]],[11,"deserialize_f64","","",6,[[],["result",4]]],[11,"deserialize_char","","",6,[[],["result",4]]],[11,"deserialize_str","","",6,[[],["result",4]]],[11,"deserialize_string","","",6,[[],["result",4]]],[11,"deserialize_bytes","","",6,[[],["result",4]]],[11,"deserialize_byte_buf","","",6,[[],["result",4]]],[11,"deserialize_option","","",6,[[],["result",4]]],[11,"deserialize_unit","","",6,[[],["result",4]]],[11,"deserialize_unit_struct","","",6,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",6,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",6,[[],["result",4]]],[11,"deserialize_tuple","","",6,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",6,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",6,[[],["result",4]]],[11,"deserialize_struct","","",6,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",6,[[],["result",4]]],[11,"deserialize_ignored_any","","",6,[[],["result",4]]],[11,"expecting","serde::de","",50,[[["formatter",3]],["result",6]]],[11,"visit_bool","","",50,[[["bool",15]],["result",4]]],[11,"visit_i64","","",50,[[["i64",15]],["result",4]]],[11,"visit_i128","","",50,[[["i128",15]],["result",4]]],[11,"visit_u64","","",50,[[["u64",15]],["result",4]]],[11,"visit_u128","","",50,[[["u128",15]],["result",4]]],[11,"visit_f64","","",50,[[["f64",15]],["result",4]]],[11,"visit_str","","",50,[[["str",15]],["result",4]]],[11,"visit_none","","",50,[[],["result",4]]],[11,"visit_some","","",50,[[],["result",4]]],[11,"visit_newtype_struct","","",50,[[],["result",4]]],[11,"visit_unit","","",50,[[],["result",4]]],[11,"visit_seq","","",50,[[],["result",4]]],[11,"visit_map","","",50,[[],["result",4]]],[11,"visit_bytes","","",50,[[],["result",4]]],[11,"visit_enum","","",50,[[],["result",4]]],[11,"next_element_seed","serde::de::value","",3,[[],[["option",4],["result",4]]]],[11,"size_hint","","",3,[[],[["usize",15],["option",4]]]],[11,"next_element_seed","","",5,[[],[["option",4],["result",4]]]],[11,"size_hint","","",5,[[],[["usize",15],["option",4]]]],[11,"next_key_seed","","",5,[[],[["result",4],["option",4]]]],[11,"next_value_seed","","",5,[[],["result",4]]],[11,"next_entry_seed","","",5,[[],[["result",4],["option",4]]]],[11,"size_hint","","",5,[[],[["usize",15],["option",4]]]],[11,"variant_seed","","",46,[[],["result",4]]],[11,"variant_seed","","",47,[[],["result",4]]],[11,"variant_seed","","",0,[[],["result",4]]],[11,"variant_seed","","",48,[[],["result",4]]],[11,"variant_seed","","",49,[[],["result",4]]],[11,"variant_seed","","",6,[[],["result",4]]],[11,"serialize_element","serde::ser","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_element","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_key","","",51,[[],["result",4]]],[11,"serialize_value","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[["str",15]],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[["str",15]],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"custom","serde::de::value","",29,[[]]],[11,"custom","","",29,[[]]],[11,"clone","","",29,[[],["error",3]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[],["seqdeserializer",3]]],[11,"clone","","",4,[[],["seqaccessdeserializer",3]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[],["mapaccessdeserializer",3]]],[11,"clone","serde::de","",50,[[],["ignoredany",3]]],[11,"clone","","",8,[[],["unexpected",4]]],[11,"default","","",50,[[],["ignoredany",3]]],[11,"eq","serde::de::value","",29,[[["error",3]],["bool",15]]],[11,"ne","","",29,[[["error",3]],["bool",15]]],[11,"eq","serde::de","",8,[[["unexpected",4]],["bool",15]]],[11,"ne","","",8,[[["unexpected",4]],["bool",15]]],[11,"fmt","serde::de::value","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de::value","",29,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"description","serde::de::value","",29,[[],["str",15]]]],"p":[[3,"BorrowedStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[4,"Unexpected"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"IgnoredAny"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde\'s two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]},\
"shader_version":{"doc":"A helper library for detecting and picking compatible …","i":[[0,"opengl","shader_version","Models versions of OpenGL",null,null],[4,"OpenGL","shader_version::opengl","",null,null],[13,"V2_0","","",0,null],[13,"V2_1","","",0,null],[13,"V3_0","","",0,null],[13,"V3_1","","",0,null],[13,"V3_2","","",0,null],[13,"V3_3","","",0,null],[13,"V4_0","","",0,null],[13,"V4_1","","",0,null],[13,"V4_2","","",0,null],[13,"V4_3","","",0,null],[13,"V4_4","","",0,null],[13,"V4_5","","",0,null],[11,"from_api","","Creates a new <code>OpenGL</code> version from graphics API version.",0,[[["version",3]],[["option",4],["opengl",4]]]],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,[[]]],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,[[],["glsl",4]]],[3,"ParseOpenGLError","","Represents an error while trying to get <code>OpenGL</code> from <code>&str</code>.",null,null],[0,"glsl","shader_version","Models versions of OpenGL Shader Language (GLSL)",null,null],[4,"GLSL","shader_version::glsl","For OpenGL version 3.3 and above, the GLSL version is the …",null,null],[13,"V1_10","","",1,null],[13,"V1_20","","",1,null],[13,"V1_30","","",1,null],[13,"V1_40","","",1,null],[13,"V1_50","","",1,null],[13,"V3_30","","",1,null],[13,"V4_00","","",1,null],[13,"V4_10","","",1,null],[13,"V4_20","","",1,null],[13,"V4_30","","",1,null],[13,"V4_40","","",1,null],[13,"V4_50","","",1,null],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",1,[[],["opengl",4]]],[3,"ParseGLSLError","","Represents an error while trying to get <code>GLSL</code> from <code>&str</code>.",null,null],[3,"Shaders","shader_version","Shader picker.",null,null],[11,"new","","Creates a new shader picker.",2,[[]]],[11,"set","","Sets source for a shader version.",2,[[]]],[11,"get","","Get the closest shader to a shader version.",2,[[],["option",4]]],[8,"PickShader","","Implemented by shader version enums.",null,null],[10,"pick_shader","","Pick shader.",3,[[["shaders",3]],["option",4]]],[11,"from","shader_version::opengl","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","shader_version::glsl","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","shader_version","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pick_shader","shader_version::glsl","",1,[[["shaders",3]],["option",4]]],[11,"into","shader_version::opengl","",0,[[],["version",3]]],[11,"clone","","",0,[[],["opengl",4]]],[11,"clone","shader_version::glsl","",1,[[],["glsl",4]]],[11,"cmp","shader_version::opengl","",0,[[["opengl",4]],["ordering",4]]],[11,"cmp","shader_version::glsl","",1,[[["glsl",4]],["ordering",4]]],[11,"eq","shader_version::opengl","",0,[[["opengl",4]],["bool",15]]],[11,"eq","shader_version::glsl","",1,[[["glsl",4]],["bool",15]]],[11,"partial_cmp","shader_version::opengl","",0,[[["opengl",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","shader_version::glsl","",1,[[["glsl",4]],[["option",4],["ordering",4]]]],[11,"fmt","shader_version::opengl","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","shader_version::glsl","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","shader_version::opengl","",4,[[["formatter",3]],["result",6]]],[11,"fmt","shader_version::glsl","",5,[[["formatter",3]],["result",6]]],[11,"from_str","shader_version::opengl","",0,[[["str",15]],["result",4]]],[11,"from_str","shader_version::glsl","",1,[[["str",15]],["result",4]]],[11,"description","shader_version::opengl","",4,[[],["str",15]]],[11,"description","shader_version::glsl","",5,[[],["str",15]]]],"p":[[4,"OpenGL"],[4,"GLSL"],[3,"Shaders"],[8,"PickShader"],[3,"ParseOpenGLError"],[3,"ParseGLSLError"]]},\
"shaders_graphics2d":{"doc":"Shaders for 2D graphics backends.","i":[[0,"colored","shaders_graphics2d","Shaders for colored rendering.",null,null],[17,"VERTEX_GLSL_120","shaders_graphics2d::colored","Vertex shader for GLSL 1.20",null,null],[17,"VERTEX_GLSL_150_CORE","","Vertex shader for GLSL 1.50",null,null],[17,"FRAGMENT_GLSL_120","","Fragment shader for GLSL 1.20",null,null],[17,"FRAGMENT_GLSL_150_CORE","","Fragmentshader for GLSL 1.50",null,null],[17,"VERTEX_GLSL_120_WEBGL","","Vertex shader for GLSL 1.20 WebGL",null,null],[17,"VERTEX_GLSL_150_CORE_WEBGL","","Vertex shader for GLSL 1.50 WebGL",null,null],[17,"FRAGMENT_GLSL_120_WEBGL","","Fragment shader for GLSL 1.20 WebGL",null,null],[17,"FRAGMENT_GLSL_150_CORE_WEBGL","","Fragmentshader for GLSL 1.50 WebGL",null,null],[0,"textured","shaders_graphics2d","Shaders for textured rendering.",null,null],[17,"VERTEX_GLSL_120","shaders_graphics2d::textured","Vertex shader for GLSL 1.20",null,null],[17,"VERTEX_GLSL_150_CORE","","Vertex shader for GLSL 1.50",null,null],[17,"FRAGMENT_GLSL_120","","Fragment shader for GLSL 1.20",null,null],[17,"FRAGMENT_GLSL_150_CORE","","Fragment shader for GLSL 1.50",null,null],[17,"VERTEX_GLSL_120_WEBGL","","Vertex shader for GLSL 1.20",null,null],[17,"VERTEX_GLSL_150_CORE_WEBGL","","Vertex shader for GLSL 1.50",null,null],[17,"FRAGMENT_GLSL_120_WEBGL","","Fragment shader for GLSL 1.20",null,null],[17,"FRAGMENT_GLSL_150_CORE_WEBGL","","Fragment shader for GLSL 1.50",null,null],[0,"textured_color","shaders_graphics2d","Shaders for textured rendering with individual vertex …",null,null],[17,"VERTEX_GLSL_120","shaders_graphics2d::textured_color","Vertex shader for GLSL 1.20",null,null],[17,"VERTEX_GLSL_150_CORE","","Vertex shader for GLSL 1.50",null,null],[17,"FRAGMENT_GLSL_120","","Fragment shader for GLSL 1.20",null,null],[17,"FRAGMENT_GLSL_150_CORE","","Fragment shader for GLSL 1.50",null,null],[17,"VERTEX_GLSL_120_WEBGL","","Vertex shader for GLSL 1.20",null,null],[17,"VERTEX_GLSL_150_CORE_WEBGL","","Vertex shader for GLSL 1.50",null,null],[17,"FRAGMENT_GLSL_120_WEBGL","","Fragment shader for GLSL 1.20",null,null],[17,"FRAGMENT_GLSL_150_CORE_WEBGL","","Fragment shader for GLSL 1.50",null,null]],"p":[]},\
"spin_sleep":{"doc":"Accurate sleeping. Only use native sleep as far as it can …","i":[[3,"LoopHelper","spin_sleep","Tool for loop rate reporting and control.",null,null],[3,"LoopHelperBuilder","","Builds <code>LoopHelper</code>.",null,null],[6,"Seconds","","Marker alias to show the meaning of a <code>f64</code> in certain …",null,null],[6,"RatePerSecond","","Marker alias to show the meaning of a <code>f64</code> in certain …",null,null],[6,"Nanoseconds","","Marker alias to show the meaning of a <code>u64</code> in certain …",null,null],[6,"SubsecondNanoseconds","","Marker alias to show the meaning of a <code>u32</code> in certain …",null,null],[3,"SpinSleeper","","Accuracy container for spin sleeping. See crate docs.",null,null],[11,"new","","Constructs new SpinSleeper with the input native sleep …",0,[[["subsecondnanoseconds",6]],["spinsleeper",3]]],[11,"native_accuracy_ns","","Returns configured native_accuracy_ns",0,[[],["subsecondnanoseconds",6]]],[11,"sleep","","Puts the current thread to sleep, if duration is long …",0,[[["duration",3]]]],[11,"sleep_s","","Puts the current thread to sleep, if duration is long …",0,[[["seconds",6]]]],[11,"sleep_ns","","Puts the current thread to sleep, if duration is long …",0,[[["nanoseconds",6]]]],[5,"sleep","","Puts the current thread to sleep, if duration is long …",null,[[["duration",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",1,[[],["loophelper",3]]],[11,"clone","","",2,[[],["loophelperbuilder",3]]],[11,"clone","","",0,[[],["spinsleeper",3]]],[11,"default","","Constructs new SpinSleeper with defaults suiting the …",0,[[]]],[11,"eq","","",1,[[["loophelper",3]],["bool",15]]],[11,"ne","","",1,[[["loophelper",3]],["bool",15]]],[11,"eq","","",2,[[["loophelperbuilder",3]],["bool",15]]],[11,"ne","","",2,[[["loophelperbuilder",3]],["bool",15]]],[11,"eq","","",0,[[["spinsleeper",3]],["bool",15]]],[11,"ne","","",0,[[["spinsleeper",3]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"report_interval_s","","Sets the interval between <code>LoopHelper::report_rate</code> reports …",2,[[["seconds",6]]]],[11,"report_interval","","Sets the interval between <code>LoopHelper::report_rate</code> reports.",2,[[["duration",3]]]],[11,"native_accuracy_ns","","Sets the native sleep accuracy. See <code>SpinSleeper::new</code> for …",2,[[["subsecondnanoseconds",6]]]],[11,"build_without_target_rate","","Builds a <code>LoopHelper</code> without targeting a rate. This means …",2,[[],["loophelper",3]]],[11,"build_with_target_rate","","Builds a <code>LoopHelper</code> targeting an input <code>target_rate</code>. Note: …",2,[[["ratepersecond",6],["into",8]],["loophelper",3]]],[11,"builder","","Returns a <code>LoopHelperBuilder</code> with which to build a …",1,[[],["loophelperbuilder",3]]],[11,"loop_start","","Notifies the helper that a new loop has begun. Returns …",1,[[],["duration",3]]],[11,"loop_start_s","","Notifies the helper that a new loop has begun. Returns …",1,[[],["seconds",6]]],[11,"loop_sleep","","Generally called at the end of a loop to sleep until the …",1,[[]]],[11,"loop_sleep_no_spin","","Generally called at the end of a loop to sleep until the …",1,[[]]],[11,"report_rate","","Returns the mean rate per second recorded since the last …",1,[[],[["ratepersecond",6],["option",4]]]],[11,"set_target_rate","","Changes the target loop rate",1,[[["ratepersecond",6],["into",8]]]],[11,"target_rate","","Returns the current target loop rate",1,[[],["ratepersecond",6]]]],"p":[[3,"SpinSleeper"],[3,"LoopHelper"],[3,"LoopHelperBuilder"]]},\
"sudoku":{"doc":"","i":[[5,"main","sudoku","",null,[[]]]],"p":[]},\
"syn":{"doc":"github crates-io docs-rs","i":[[0,"token","syn","Tokens representing Rust punctuation, keywords, and …",null,null],[8,"Token","syn::token","Marker trait for types that represent single tokens.",null,null],[3,"Underscore","","<code>_</code>",null,null],[12,"spans","","",0,null],[3,"Abstract","","<code>abstract</code>",null,null],[12,"span","","",1,null],[3,"As","","<code>as</code>",null,null],[12,"span","","",2,null],[3,"Async","","<code>async</code>",null,null],[12,"span","","",3,null],[3,"Auto","","<code>auto</code>",null,null],[12,"span","","",4,null],[3,"Await","","<code>await</code>",null,null],[12,"span","","",5,null],[3,"Become","","<code>become</code>",null,null],[12,"span","","",6,null],[3,"Box","","<code>box</code>",null,null],[12,"span","","",7,null],[3,"Break","","<code>break</code>",null,null],[12,"span","","",8,null],[3,"Const","","<code>const</code>",null,null],[12,"span","","",9,null],[3,"Continue","","<code>continue</code>",null,null],[12,"span","","",10,null],[3,"Crate","","<code>crate</code>",null,null],[12,"span","","",11,null],[3,"Default","","<code>default</code>",null,null],[12,"span","","",12,null],[3,"Do","","<code>do</code>",null,null],[12,"span","","",13,null],[3,"Dyn","","<code>dyn</code>",null,null],[12,"span","","",14,null],[3,"Else","","<code>else</code>",null,null],[12,"span","","",15,null],[3,"Enum","","<code>enum</code>",null,null],[12,"span","","",16,null],[3,"Extern","","<code>extern</code>",null,null],[12,"span","","",17,null],[3,"Final","","<code>final</code>",null,null],[12,"span","","",18,null],[3,"Fn","","<code>fn</code>",null,null],[12,"span","","",19,null],[3,"For","","<code>for</code>",null,null],[12,"span","","",20,null],[3,"If","","<code>if</code>",null,null],[12,"span","","",21,null],[3,"Impl","","<code>impl</code>",null,null],[12,"span","","",22,null],[3,"In","","<code>in</code>",null,null],[12,"span","","",23,null],[3,"Let","","<code>let</code>",null,null],[12,"span","","",24,null],[3,"Loop","","<code>loop</code>",null,null],[12,"span","","",25,null],[3,"Macro","","<code>macro</code>",null,null],[12,"span","","",26,null],[3,"Match","","<code>match</code>",null,null],[12,"span","","",27,null],[3,"Mod","","<code>mod</code>",null,null],[12,"span","","",28,null],[3,"Move","","<code>move</code>",null,null],[12,"span","","",29,null],[3,"Mut","","<code>mut</code>",null,null],[12,"span","","",30,null],[3,"Override","","<code>override</code>",null,null],[12,"span","","",31,null],[3,"Priv","","<code>priv</code>",null,null],[12,"span","","",32,null],[3,"Pub","","<code>pub</code>",null,null],[12,"span","","",33,null],[3,"Ref","","<code>ref</code>",null,null],[12,"span","","",34,null],[3,"Return","","<code>return</code>",null,null],[12,"span","","",35,null],[3,"SelfType","","<code>Self</code>",null,null],[12,"span","","",36,null],[3,"SelfValue","","<code>self</code>",null,null],[12,"span","","",37,null],[3,"Static","","<code>static</code>",null,null],[12,"span","","",38,null],[3,"Struct","","<code>struct</code>",null,null],[12,"span","","",39,null],[3,"Super","","<code>super</code>",null,null],[12,"span","","",40,null],[3,"Trait","","<code>trait</code>",null,null],[12,"span","","",41,null],[3,"Try","","<code>try</code>",null,null],[12,"span","","",42,null],[3,"Type","","<code>type</code>",null,null],[12,"span","","",43,null],[3,"Typeof","","<code>typeof</code>",null,null],[12,"span","","",44,null],[3,"Union","","<code>union</code>",null,null],[12,"span","","",45,null],[3,"Unsafe","","<code>unsafe</code>",null,null],[12,"span","","",46,null],[3,"Unsized","","<code>unsized</code>",null,null],[12,"span","","",47,null],[3,"Use","","<code>use</code>",null,null],[12,"span","","",48,null],[3,"Virtual","","<code>virtual</code>",null,null],[12,"span","","",49,null],[3,"Where","","<code>where</code>",null,null],[12,"span","","",50,null],[3,"While","","<code>while</code>",null,null],[12,"span","","",51,null],[3,"Yield","","<code>yield</code>",null,null],[12,"span","","",52,null],[3,"Add","","<code>+</code>",null,null],[12,"spans","","",53,null],[3,"AddEq","","<code>+=</code>",null,null],[12,"spans","","",54,null],[3,"And","","<code>&</code>",null,null],[12,"spans","","",55,null],[3,"AndAnd","","<code>&&</code>",null,null],[12,"spans","","",56,null],[3,"AndEq","","<code>&=</code>",null,null],[12,"spans","","",57,null],[3,"At","","<code>@</code>",null,null],[12,"spans","","",58,null],[3,"Bang","","<code>!</code>",null,null],[12,"spans","","",59,null],[3,"Caret","","<code>^</code>",null,null],[12,"spans","","",60,null],[3,"CaretEq","","<code>^=</code>",null,null],[12,"spans","","",61,null],[3,"Colon","","<code>:</code>",null,null],[12,"spans","","",62,null],[3,"Colon2","","<code>::</code>",null,null],[12,"spans","","",63,null],[3,"Comma","","<code>,</code>",null,null],[12,"spans","","",64,null],[3,"Div","","<code>/</code>",null,null],[12,"spans","","",65,null],[3,"DivEq","","<code>/=</code>",null,null],[12,"spans","","",66,null],[3,"Dollar","","<code>$</code>",null,null],[12,"spans","","",67,null],[3,"Dot","","<code>.</code>",null,null],[12,"spans","","",68,null],[3,"Dot2","","<code>..</code>",null,null],[12,"spans","","",69,null],[3,"Dot3","","<code>...</code>",null,null],[12,"spans","","",70,null],[3,"DotDotEq","","<code>..=</code>",null,null],[12,"spans","","",71,null],[3,"Eq","","<code>=</code>",null,null],[12,"spans","","",72,null],[3,"EqEq","","<code>==</code>",null,null],[12,"spans","","",73,null],[3,"Ge","","<code>>=</code>",null,null],[12,"spans","","",74,null],[3,"Gt","","<code>></code>",null,null],[12,"spans","","",75,null],[3,"Le","","<code><=</code>",null,null],[12,"spans","","",76,null],[3,"Lt","","<code><</code>",null,null],[12,"spans","","",77,null],[3,"MulEq","","<code>*=</code>",null,null],[12,"spans","","",78,null],[3,"Ne","","<code>!=</code>",null,null],[12,"spans","","",79,null],[3,"Or","","<code>|</code>",null,null],[12,"spans","","",80,null],[3,"OrEq","","<code>|=</code>",null,null],[12,"spans","","",81,null],[3,"OrOr","","<code>||</code>",null,null],[12,"spans","","",82,null],[3,"Pound","","<code>#</code>",null,null],[12,"spans","","",83,null],[3,"Question","","<code>?</code>",null,null],[12,"spans","","",84,null],[3,"RArrow","","<code>-></code>",null,null],[12,"spans","","",85,null],[3,"LArrow","","<code><-</code>",null,null],[12,"spans","","",86,null],[3,"Rem","","<code>%</code>",null,null],[12,"spans","","",87,null],[3,"RemEq","","<code>%=</code>",null,null],[12,"spans","","",88,null],[3,"FatArrow","","<code>=></code>",null,null],[12,"spans","","",89,null],[3,"Semi","","<code>;</code>",null,null],[12,"spans","","",90,null],[3,"Shl","","<code><<</code>",null,null],[12,"spans","","",91,null],[3,"ShlEq","","<code><<=</code>",null,null],[12,"spans","","",92,null],[3,"Shr","","<code>>></code>",null,null],[12,"spans","","",93,null],[3,"ShrEq","","<code>>>=</code>",null,null],[12,"spans","","",94,null],[3,"Star","","<code>*</code>",null,null],[12,"spans","","",95,null],[3,"Sub","","<code>-</code>",null,null],[12,"spans","","",96,null],[3,"SubEq","","<code>-=</code>",null,null],[12,"spans","","",97,null],[3,"Tilde","","<code>~</code>",null,null],[12,"spans","","",98,null],[3,"Brace","","<code>{...}</code>",null,null],[12,"span","","",99,null],[11,"surround","","",99,[[["tokenstream",3]]]],[3,"Bracket","","<code>[...]</code>",null,null],[12,"span","","",100,null],[11,"surround","","",100,[[["tokenstream",3]]]],[3,"Paren","","<code>(...)</code>",null,null],[12,"span","","",101,null],[11,"surround","","",101,[[["tokenstream",3]]]],[3,"Group","","None-delimited group",null,null],[12,"span","","",102,null],[11,"surround","","",102,[[["tokenstream",3]]]],[0,"buffer","syn","A stably addressed token buffer supporting efficient …",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple …",null,null],[11,"new","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the …",103,[[],["cursor",3]]],[3,"Cursor","","A cheaply copyable cursor into a <code>TokenBuffer</code>.",null,null],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",104,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the …",104,[[],["bool",15]]],[11,"group","","If the cursor is pointing at a <code>Group</code> with the given …",104,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a <code>Ident</code>, returns it along …",104,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an <code>Punct</code>, returns it along …",104,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a <code>Literal</code>, return it along …",104,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a <code>Lifetime</code>, returns it along …",104,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into …",104,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a <code>TokenTree</code>, returns it …",104,[[],["option",4]]],[11,"span","","Returns the <code>Span</code> of the current token, or …",104,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign …",null,null],[8,"IdentExt","syn::ext","Additional methods for <code>Ident</code> not provided by proc-macro2 …",null,null],[10,"parse_any","","Parses any identifier including keywords.",105,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage: …",105,null],[10,"unraw","","Strips the raw marker <code>r#</code>, if any, from the beginning of …",105,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by …",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type <code>T</code> …",null,null],[11,"new","","Creates an empty punctuated sequence.",106,[[]]],[11,"is_empty","","Determines whether this punctuated sequence is empty, …",106,[[],["bool",15]]],[11,"len","","Returns the number of syntax tree nodes in this …",106,[[],["usize",15]]],[11,"first","","Borrows the first element in this sequence.",106,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",106,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",106,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",106,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of …",106,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree …",106,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as …",106,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this …",106,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or …",106,[[],[["option",4],["pair",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a …",106,[[],["bool",15]]],[11,"empty_or_trailing","","Returns true if either this <code>Punctuated</code> is empty, or it …",106,[[],["bool",15]]],[11,"push","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"insert","","Inserts an element at position <code>index</code>.",106,[[["usize",15]]]],[11,"clear","","Clears the sequence of all values and punctuation, making …",106,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of <code>T</code> using the given …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of <code>T</code> using the given parse …",106,[[["parsestream",6]],["result",6]]],[3,"Pairs","","An iterator over borrowed pairs of type <code>Pair<&T, &P></code>.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type …",null,null],[3,"IntoPairs","","An iterator over owned pairs of type <code>Pair<T, P></code>.",null,null],[3,"IntoIter","","An iterator over owned values of type <code>T</code>.",null,null],[3,"Iter","","An iterator over borrowed values of type <code>&T</code>.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type <code>&mut T</code>.",null,null],[4,"Pair","","A single syntax tree node of type <code>T</code> followed by its …",null,null],[13,"Punctuated","","",107,null],[13,"End","","",107,null],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, …",107,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",107,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated …",107,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless …",107,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and …",107,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree …",107,[[]]],[0,"spanned","syn","A trait that can provide the <code>Span</code> of the complete …",null,null],[8,"Spanned","syn::spanned","A trait that can provide the <code>Span</code> of the complete …",null,null],[10,"span","","Returns a <code>Span</code> covering the complete contents of this …",108,[[],["span",3]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax …",null,null],[8,"Visit","syn::visit","Syntax tree traversal to walk a shared borrow of a syntax …",null,null],[11,"visit_abi","","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",109,[[["arm",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_block","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_array","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async","","",109,[[["exprasync",3]]]],[11,"visit_expr_await","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block","","",109,[[["exprblock",3]]]],[11,"visit_expr_box","","",109,[[["exprbox",3]]]],[11,"visit_expr_break","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if","","",109,[[["exprif",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_let","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_range","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",109,[[["expryield",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_field_pat","","",109,[[["fieldpat",3]]]],[11,"visit_field_value","","",109,[[["fieldvalue",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file","","",109,[[["file",3]]]],[11,"visit_fn_arg","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_impl_item","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",109,[[["implitemtype",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_item","","",109,[[["item",4]]]],[11,"visit_item_const","","",109,[[["itemconst",3]]]],[11,"visit_item_enum","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",109,[[["itemmod",3]]]],[11,"visit_item_static","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",109,[[["itemtype",3]]]],[11,"visit_item_union","","",109,[[["itemunion",3]]]],[11,"visit_item_use","","",109,[[["itemuse",3]]]],[11,"visit_label","","",109,[[["label",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_local","","",109,[[["local",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",109,[[["pat",4]]]],[11,"visit_pat_box","","",109,[[["patbox",3]]]],[11,"visit_pat_ident","","",109,[[["patident",3]]]],[11,"visit_pat_lit","","",109,[[["patlit",3]]]],[11,"visit_pat_macro","","",109,[[["patmacro",3]]]],[11,"visit_pat_or","","",109,[[["pator",3]]]],[11,"visit_pat_path","","",109,[[["patpath",3]]]],[11,"visit_pat_range","","",109,[[["patrange",3]]]],[11,"visit_pat_reference","","",109,[[["patreference",3]]]],[11,"visit_pat_rest","","",109,[[["patrest",3]]]],[11,"visit_pat_slice","","",109,[[["patslice",3]]]],[11,"visit_pat_struct","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",109,[[["pattype",3]]]],[11,"visit_pat_wild","","",109,[[["patwild",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_range_limits","","",109,[[["rangelimits",4]]]],[11,"visit_receiver","","",109,[[["receiver",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_signature","","",109,[[["signature",3]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_stmt","","",109,[[["stmt",4]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",109,[[["traititemtype",3]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_use_glob","","",109,[[["useglob",3]]]],[11,"visit_use_group","","",109,[[["usegroup",3]]]],[11,"visit_use_name","","",109,[[["usename",3]]]],[11,"visit_use_path","","",109,[[["usepath",3]]]],[11,"visit_use_rename","","",109,[[["userename",3]]]],[11,"visit_use_tree","","",109,[[["usetree",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[5,"visit_abi","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm","","",null,[[["arm",3]]]],[5,"visit_attr_style","","",null,[[["attrstyle",4]]]],[5,"visit_attribute","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op","","",null,[[["binop",4]]]],[5,"visit_binding","","",null,[[["binding",3]]]],[5,"visit_block","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param","","",null,[[["constparam",3]]]],[5,"visit_constraint","","",null,[[["constraint",3]]]],[5,"visit_data","","",null,[[["data",4]]]],[5,"visit_data_enum","","",null,[[["dataenum",3]]]],[5,"visit_data_struct","","",null,[[["datastruct",3]]]],[5,"visit_data_union","","",null,[[["dataunion",3]]]],[5,"visit_derive_input","","",null,[[["deriveinput",3]]]],[5,"visit_expr","","",null,[[["expr",4]]]],[5,"visit_expr_array","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async","","",null,[[["exprasync",3]]]],[5,"visit_expr_await","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block","","",null,[[["exprblock",3]]]],[5,"visit_expr_box","","",null,[[["exprbox",3]]]],[5,"visit_expr_break","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if","","",null,[[["exprif",3]]]],[5,"visit_expr_index","","",null,[[["exprindex",3]]]],[5,"visit_expr_let","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren","","",null,[[["exprparen",3]]]],[5,"visit_expr_path","","",null,[[["exprpath",3]]]],[5,"visit_expr_range","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield","","",null,[[["expryield",3]]]],[5,"visit_field","","",null,[[["field",3]]]],[5,"visit_field_pat","","",null,[[["fieldpat",3]]]],[5,"visit_field_value","","",null,[[["fieldvalue",3]]]],[5,"visit_fields","","",null,[[["fields",4]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file","","",null,[[["file",3]]]],[5,"visit_fn_arg","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param","","",null,[[["genericparam",4]]]],[5,"visit_generics","","",null,[[["generics",3]]]],[5,"visit_ident","","",null,[[["ident",3]]]],[5,"visit_impl_item","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type","","",null,[[["implitemtype",3]]]],[5,"visit_index","","",null,[[["index",3]]]],[5,"visit_item","","",null,[[["item",4]]]],[5,"visit_item_const","","",null,[[["itemconst",3]]]],[5,"visit_item_enum","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod","","",null,[[["itemmod",3]]]],[5,"visit_item_static","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type","","",null,[[["itemtype",3]]]],[5,"visit_item_union","","",null,[[["itemunion",3]]]],[5,"visit_item_use","","",null,[[["itemuse",3]]]],[5,"visit_label","","",null,[[["label",3]]]],[5,"visit_lifetime","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef",3]]]],[5,"visit_lit","","",null,[[["lit",4]]]],[5,"visit_lit_bool","","",null,[[["litbool",3]]]],[5,"visit_lit_byte","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char","","",null,[[["litchar",3]]]],[5,"visit_lit_float","","",null,[[["litfloat",3]]]],[5,"visit_lit_int","","",null,[[["litint",3]]]],[5,"visit_lit_str","","",null,[[["litstr",3]]]],[5,"visit_local","","",null,[[["local",3]]]],[5,"visit_macro","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter",4]]]],[5,"visit_member","","",null,[[["member",4]]]],[5,"visit_meta","","",null,[[["meta",4]]]],[5,"visit_meta_list","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat","","",null,[[["pat",4]]]],[5,"visit_pat_box","","",null,[[["patbox",3]]]],[5,"visit_pat_ident","","",null,[[["patident",3]]]],[5,"visit_pat_lit","","",null,[[["patlit",3]]]],[5,"visit_pat_macro","","",null,[[["patmacro",3]]]],[5,"visit_pat_or","","",null,[[["pator",3]]]],[5,"visit_pat_path","","",null,[[["patpath",3]]]],[5,"visit_pat_range","","",null,[[["patrange",3]]]],[5,"visit_pat_reference","","",null,[[["patreference",3]]]],[5,"visit_pat_rest","","",null,[[["patrest",3]]]],[5,"visit_pat_slice","","",null,[[["patslice",3]]]],[5,"visit_pat_struct","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type","","",null,[[["pattype",3]]]],[5,"visit_pat_wild","","",null,[[["patwild",3]]]],[5,"visit_path","","",null,[[["path",3]]]],[5,"visit_path_arguments","","",null,[[["patharguments",4]]]],[5,"visit_path_segment","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type","","",null,[[["predicatetype",3]]]],[5,"visit_qself","","",null,[[["qself",3]]]],[5,"visit_range_limits","","",null,[[["rangelimits",4]]]],[5,"visit_receiver","","",null,[[["receiver",3]]]],[5,"visit_return_type","","",null,[[["returntype",4]]]],[5,"visit_signature","","",null,[[["signature",3]]]],[5,"visit_span","","",null,[[["span",3]]]],[5,"visit_stmt","","",null,[[["stmt",4]]]],[5,"visit_trait_bound","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype",3]]]],[5,"visit_type","","",null,[[["type",4]]]],[5,"visit_type_array","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn",3]]]],[5,"visit_type_group","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro","","",null,[[["typemacro",3]]]],[5,"visit_type_never","","",null,[[["typenever",3]]]],[5,"visit_type_param","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren","","",null,[[["typeparen",3]]]],[5,"visit_type_path","","",null,[[["typepath",3]]]],[5,"visit_type_ptr","","",null,[[["typeptr",3]]]],[5,"visit_type_reference","","",null,[[["typereference",3]]]],[5,"visit_type_slice","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple","","",null,[[["typetuple",3]]]],[5,"visit_un_op","","",null,[[["unop",4]]]],[5,"visit_use_glob","","",null,[[["useglob",3]]]],[5,"visit_use_group","","",null,[[["usegroup",3]]]],[5,"visit_use_name","","",null,[[["usename",3]]]],[5,"visit_use_path","","",null,[[["usepath",3]]]],[5,"visit_use_rename","","",null,[[["userename",3]]]],[5,"visit_use_tree","","",null,[[["usetree",4]]]],[5,"visit_variadic","","",null,[[["variadic",3]]]],[5,"visit_variant","","",null,[[["variant",3]]]],[5,"visit_vis_crate","","",null,[[["viscrate",3]]]],[5,"visit_vis_public","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted",3]]]],[5,"visit_visibility","","",null,[[["visibility",4]]]],[5,"visit_where_clause","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a …",null,null],[0,"discouraged","syn::parse","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the <code>ParseStream</code> API to support speculative …",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked …",110,[[]]],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide …",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be …",null,null],[10,"parse","","",111,[[["parsestream",6]],["result",6]]],[6,"ParseStream","","Input to a Syn parser function.",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[11,"error","","Triggers an error at the current position of the parse …",112,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type <code>T</code>, advancing the …",113,[[],[["parse",8],["result",6]]]],[11,"call","","Calls the given parser function to parse a syntax tree …",113,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine …",113,[[["peek",8]],["bool",15]]],[11,"peek2","","Looks at the second-next token in the parse stream.",113,[[["peek",8]],["bool",15]]],[11,"peek3","","Looks at the third-next token in the parse stream.",113,[[["peek",8]],["bool",15]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",113,[[],[["punctuated",3],["result",6]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",113,[[],["bool",15]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this …",113,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either …",113,[[]]],[11,"error","","Triggers an error at the current position of the parse …",113,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream, …",113,[[],["result",6]]],[11,"span","","Returns the <code>Span</code> of the next token in the parse stream, or…",113,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation …",113,[[],["cursor",3]]],[8,"Parser","","Parser that can parse Rust tokens into a particular …",null,null],[16,"Output","","",114,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",114,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree …",114,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",114,[[["str",15]],["result",6]]],[3,"Nothing","","An empty syntax tree node that consumes no tokens when …",null,null],[11,"new","","Usually the <code>ParseStream::error</code> method will be used …",115,[[["span",3],["display",8]]]],[11,"new_spanned","","Creates an error with the specified message spanning the …",115,[[["totokens",8],["display",8]]]],[11,"span","","The source location of the error.",115,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of <code>compile_error!</code>.",115,[[],["tokenstream",3]]],[11,"into_compile_error","","Render the error as an invocation of <code>compile_error!</code>.",115,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when …",115,[[["error",3]]]],[3,"Ident","syn","A word of Rust code, which may be a keyword or legal …",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item …",null,null],[13,"Outer","","",116,null],[13,"Inner","","",116,null],[3,"Attribute","","An attribute like <code>#[repr(transparent)]</code>.",null,null],[12,"pound_token","","",117,null],[12,"style","","",117,null],[12,"bracket_token","","",117,null],[12,"path","","",117,null],[12,"tokens","","",117,null],[6,"AttributeArgs","","Conventional argument type associated with an invocation …",null,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",118,null],[13,"List","","A structured list within an attribute, like …",118,null],[13,"NameValue","","A name-value pair within an attribute, like …",118,null],[3,"MetaList","","A structured list within an attribute, like …",null,null],[12,"path","","",119,null],[12,"paren_token","","",119,null],[12,"nested","","",119,null],[3,"MetaNameValue","","A name-value pair within an attribute, like …",null,null],[12,"path","","",120,null],[12,"eq_token","","",120,null],[12,"lit","","",120,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …",121,null],[13,"Lit","","A Rust literal, like the <code>\\\"new_name\\\"</code> in …",121,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",122,null],[12,"vis","","Visibility of the field.",122,null],[12,"ident","","Name of the field, if any.",122,null],[12,"colon_token","","",122,null],[12,"ty","","Type of the field.",122,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as …",123,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as …",123,null],[13,"Unit","","Unit struct or unit variant such as <code>None</code>.",123,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as …",null,null],[12,"brace_token","","",124,null],[12,"named","","",124,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as …",null,null],[12,"paren_token","","",125,null],[12,"unnamed","","",125,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",126,null],[12,"ident","","Name of the variant.",126,null],[12,"fields","","Content stored in the variant.",126,null],[12,"discriminant","","Explicit discriminant: <code>Variant = 1</code>",126,null],[3,"VisCrate","","A crate-level visibility: <code>crate</code>.",null,null],[12,"crate_token","","",127,null],[3,"VisPublic","","A public visibility level: <code>pub</code>.",null,null],[12,"pub_token","","",128,null],[3,"VisRestricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",null,null],[12,"pub_token","","",129,null],[12,"paren_token","","",129,null],[12,"in_token","","",129,null],[12,"path","","",129,null],[4,"Visibility","","The visibility level of an item: inherited or <code>pub</code> or …",null,null],[13,"Public","","A public visibility level: <code>pub</code>.",130,null],[13,"Crate","","A crate-level visibility: <code>crate</code>.",130,null],[13,"Restricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",130,null],[13,"Inherited","","An inherited visibility, which usually means private.",130,null],[3,"Arm","","One arm of a <code>match</code> expression: <code>0...10 => { return true; }</code>.",null,null],[12,"attrs","","",131,null],[12,"pat","","",131,null],[12,"guard","","",131,null],[12,"fat_arrow_token","","",131,null],[12,"body","","",131,null],[12,"comma","","",131,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",132,null],[12,"member","","Name or index of the field.",132,null],[12,"colon_token","","The colon in <code>Struct { x: x }</code>. If written in shorthand like…",132,null],[12,"expr","","Value of the field.",132,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like <code>T</code>.",null,null],[13,"Type","","A type argument.",133,null],[13,"Const","","A const expression. Must be inside of a block.",133,null],[3,"Label","","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.",null,null],[12,"name","","",134,null],[12,"colon_token","","",134,null],[3,"MethodTurbofish","","The <code>::<></code> explicit type parameters passed to a method call:…",null,null],[12,"colon2_token","","",135,null],[12,"lt_token","","",135,null],[12,"args","","",135,null],[12,"gt_token","","",135,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",136,null],[13,"Closed","","Inclusive at the beginning and end.",136,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: <code>[a, b, c, d]</code>.",137,null],[13,"Assign","","An assignment expression: <code>a = compute()</code>.",137,null],[13,"AssignOp","","A compound assignment expression: <code>counter += 1</code>.",137,null],[13,"Async","","An async block: <code>async { ... }</code>.",137,null],[13,"Await","","An await expression: <code>fut.await</code>.",137,null],[13,"Binary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",137,null],[13,"Block","","A blocked scope: <code>{ ... }</code>.",137,null],[13,"Box","","A box expression: <code>box f</code>.",137,null],[13,"Break","","A <code>break</code>, with an optional label to break and an optional …",137,null],[13,"Call","","A function call expression: <code>invoke(a, b)</code>.",137,null],[13,"Cast","","A cast expression: <code>foo as f64</code>.",137,null],[13,"Closure","","A closure expression: <code>|a, b| a + b</code>.",137,null],[13,"Continue","","A <code>continue</code>, with an optional label.",137,null],[13,"Field","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",137,null],[13,"ForLoop","","A for loop: <code>for pat in expr { ... }</code>.",137,null],[13,"Group","","An expression contained within invisible delimiters.",137,null],[13,"If","","An <code>if</code> expression with an optional <code>else</code> block: …",137,null],[13,"Index","","A square bracketed indexing expression: <code>vector[2]</code>.",137,null],[13,"Let","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",137,null],[13,"Lit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",137,null],[13,"Loop","","Conditionless loop: <code>loop { ... }</code>.",137,null],[13,"Macro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",137,null],[13,"Match","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",137,null],[13,"MethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",137,null],[13,"Paren","","A parenthesized expression: <code>(a + b)</code>.",137,null],[13,"Path","","A path like <code>std::mem::replace</code> possibly containing generic …",137,null],[13,"Range","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",137,null],[13,"Reference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",137,null],[13,"Repeat","","An array literal constructed from one repeated element: …",137,null],[13,"Return","","A <code>return</code>, with an optional value to be returned.",137,null],[13,"Struct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",137,null],[13,"Try","","A try-expression: <code>expr?</code>.",137,null],[13,"TryBlock","","A try block: <code>try { ... }</code>.",137,null],[13,"Tuple","","A tuple expression: <code>(a, b, c, d)</code>.",137,null],[13,"Type","","A type ascription expression: <code>foo: f64</code>.",137,null],[13,"Unary","","A unary operation: <code>!x</code>, <code>*x</code>.",137,null],[13,"Unsafe","","An unsafe block: <code>unsafe { ... }</code>.",137,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",137,null],[13,"While","","A while loop: <code>while expr { ... }</code>.",137,null],[13,"Yield","","A yield expression: <code>yield expr</code>.",137,null],[3,"ExprArray","","A slice literal expression: <code>[a, b, c, d]</code>.",null,null],[12,"attrs","","",138,null],[12,"bracket_token","","",138,null],[12,"elems","","",138,null],[3,"ExprAssign","","An assignment expression: <code>a = compute()</code>.",null,null],[12,"attrs","","",139,null],[12,"left","","",139,null],[12,"eq_token","","",139,null],[12,"right","","",139,null],[3,"ExprAssignOp","","A compound assignment expression: <code>counter += 1</code>.",null,null],[12,"attrs","","",140,null],[12,"left","","",140,null],[12,"op","","",140,null],[12,"right","","",140,null],[3,"ExprAsync","","An async block: <code>async { ... }</code>.",null,null],[12,"attrs","","",141,null],[12,"async_token","","",141,null],[12,"capture","","",141,null],[12,"block","","",141,null],[3,"ExprAwait","","An await expression: <code>fut.await</code>.",null,null],[12,"attrs","","",142,null],[12,"base","","",142,null],[12,"dot_token","","",142,null],[12,"await_token","","",142,null],[3,"ExprBinary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",null,null],[12,"attrs","","",143,null],[12,"left","","",143,null],[12,"op","","",143,null],[12,"right","","",143,null],[3,"ExprBlock","","A blocked scope: <code>{ ... }</code>.",null,null],[12,"attrs","","",144,null],[12,"label","","",144,null],[12,"block","","",144,null],[3,"ExprBox","","A box expression: <code>box f</code>.",null,null],[12,"attrs","","",145,null],[12,"box_token","","",145,null],[12,"expr","","",145,null],[3,"ExprBreak","","A <code>break</code>, with an optional label to break and an optional …",null,null],[12,"attrs","","",146,null],[12,"break_token","","",146,null],[12,"label","","",146,null],[12,"expr","","",146,null],[3,"ExprCall","","A function call expression: <code>invoke(a, b)</code>.",null,null],[12,"attrs","","",147,null],[12,"func","","",147,null],[12,"paren_token","","",147,null],[12,"args","","",147,null],[3,"ExprCast","","A cast expression: <code>foo as f64</code>.",null,null],[12,"attrs","","",148,null],[12,"expr","","",148,null],[12,"as_token","","",148,null],[12,"ty","","",148,null],[3,"ExprClosure","","A closure expression: <code>|a, b| a + b</code>.",null,null],[12,"attrs","","",149,null],[12,"asyncness","","",149,null],[12,"movability","","",149,null],[12,"capture","","",149,null],[12,"or1_token","","",149,null],[12,"inputs","","",149,null],[12,"or2_token","","",149,null],[12,"output","","",149,null],[12,"body","","",149,null],[3,"ExprContinue","","A <code>continue</code>, with an optional label.",null,null],[12,"attrs","","",150,null],[12,"continue_token","","",150,null],[12,"label","","",150,null],[3,"ExprField","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",null,null],[12,"attrs","","",151,null],[12,"base","","",151,null],[12,"dot_token","","",151,null],[12,"member","","",151,null],[3,"ExprForLoop","","A for loop: <code>for pat in expr { ... }</code>.",null,null],[12,"attrs","","",152,null],[12,"label","","",152,null],[12,"for_token","","",152,null],[12,"pat","","",152,null],[12,"in_token","","",152,null],[12,"expr","","",152,null],[12,"body","","",152,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",153,null],[12,"group_token","","",153,null],[12,"expr","","",153,null],[3,"ExprIf","","An <code>if</code> expression with an optional <code>else</code> block: …",null,null],[12,"attrs","","",154,null],[12,"if_token","","",154,null],[12,"cond","","",154,null],[12,"then_branch","","",154,null],[12,"else_branch","","",154,null],[3,"ExprIndex","","A square bracketed indexing expression: <code>vector[2]</code>.",null,null],[12,"attrs","","",155,null],[12,"expr","","",155,null],[12,"bracket_token","","",155,null],[12,"index","","",155,null],[3,"ExprLet","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",null,null],[12,"attrs","","",156,null],[12,"let_token","","",156,null],[12,"pat","","",156,null],[12,"eq_token","","",156,null],[12,"expr","","",156,null],[3,"ExprLit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",null,null],[12,"attrs","","",157,null],[12,"lit","","",157,null],[3,"ExprLoop","","Conditionless loop: <code>loop { ... }</code>.",null,null],[12,"attrs","","",158,null],[12,"label","","",158,null],[12,"loop_token","","",158,null],[12,"body","","",158,null],[3,"ExprMacro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",null,null],[12,"attrs","","",159,null],[12,"mac","","",159,null],[3,"ExprMatch","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",null,null],[12,"attrs","","",160,null],[12,"match_token","","",160,null],[12,"expr","","",160,null],[12,"brace_token","","",160,null],[12,"arms","","",160,null],[3,"ExprMethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",null,null],[12,"attrs","","",161,null],[12,"receiver","","",161,null],[12,"dot_token","","",161,null],[12,"method","","",161,null],[12,"turbofish","","",161,null],[12,"paren_token","","",161,null],[12,"args","","",161,null],[3,"ExprParen","","A parenthesized expression: <code>(a + b)</code>.",null,null],[12,"attrs","","",162,null],[12,"paren_token","","",162,null],[12,"expr","","",162,null],[3,"ExprPath","","A path like <code>std::mem::replace</code> possibly containing generic …",null,null],[12,"attrs","","",163,null],[12,"qself","","",163,null],[12,"path","","",163,null],[3,"ExprRange","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",null,null],[12,"attrs","","",164,null],[12,"from","","",164,null],[12,"limits","","",164,null],[12,"to","","",164,null],[3,"ExprReference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",null,null],[12,"attrs","","",165,null],[12,"and_token","","",165,null],[12,"raw","","",165,null],[12,"mutability","","",165,null],[12,"expr","","",165,null],[3,"ExprRepeat","","An array literal constructed from one repeated element: …",null,null],[12,"attrs","","",166,null],[12,"bracket_token","","",166,null],[12,"expr","","",166,null],[12,"semi_token","","",166,null],[12,"len","","",166,null],[3,"ExprReturn","","A <code>return</code>, with an optional value to be returned.",null,null],[12,"attrs","","",167,null],[12,"return_token","","",167,null],[12,"expr","","",167,null],[3,"ExprStruct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",null,null],[12,"attrs","","",168,null],[12,"path","","",168,null],[12,"brace_token","","",168,null],[12,"fields","","",168,null],[12,"dot2_token","","",168,null],[12,"rest","","",168,null],[3,"ExprTry","","A try-expression: <code>expr?</code>.",null,null],[12,"attrs","","",169,null],[12,"expr","","",169,null],[12,"question_token","","",169,null],[3,"ExprTryBlock","","A try block: <code>try { ... }</code>.",null,null],[12,"attrs","","",170,null],[12,"try_token","","",170,null],[12,"block","","",170,null],[3,"ExprTuple","","A tuple expression: <code>(a, b, c, d)</code>.",null,null],[12,"attrs","","",171,null],[12,"paren_token","","",171,null],[12,"elems","","",171,null],[3,"ExprType","","A type ascription expression: <code>foo: f64</code>.",null,null],[12,"attrs","","",172,null],[12,"expr","","",172,null],[12,"colon_token","","",172,null],[12,"ty","","",172,null],[3,"ExprUnary","","A unary operation: <code>!x</code>, <code>*x</code>.",null,null],[12,"attrs","","",173,null],[12,"op","","",173,null],[12,"expr","","",173,null],[3,"ExprUnsafe","","An unsafe block: <code>unsafe { ... }</code>.",null,null],[12,"attrs","","",174,null],[12,"unsafe_token","","",174,null],[12,"block","","",174,null],[3,"ExprWhile","","A while loop: <code>while expr { ... }</code>.",null,null],[12,"attrs","","",175,null],[12,"label","","",175,null],[12,"while_token","","",175,null],[12,"cond","","",175,null],[12,"body","","",175,null],[3,"ExprYield","","A yield expression: <code>yield expr</code>.",null,null],[12,"attrs","","",176,null],[12,"yield_token","","",176,null],[12,"expr","","",176,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",177,null],[12,"span","","",177,null],[4,"Member","","A struct or tuple struct field accessed in a struct …",null,null],[13,"Named","","A named field like <code>self.x</code>.",178,null],[13,"Unnamed","","An unnamed field like <code>self.0</code>.",178,null],[3,"BoundLifetimes","","A set of bound lifetimes: <code>for<\'a, \'b, \'c></code>.",null,null],[12,"for_token","","",179,null],[12,"lt_token","","",179,null],[12,"lifetimes","","",179,null],[12,"gt_token","","",179,null],[3,"ConstParam","","A const generic parameter: <code>const LENGTH: usize</code>.",null,null],[12,"attrs","","",180,null],[12,"const_token","","",180,null],[12,"ident","","",180,null],[12,"colon_token","","",180,null],[12,"ty","","",180,null],[12,"eq_token","","",180,null],[12,"default","","",180,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: …",null,null],[13,"Type","","A generic type parameter: <code>T: Into<String></code>.",181,null],[13,"Lifetime","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",181,null],[13,"Const","","A const generic parameter: <code>const LENGTH: usize</code>.",181,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration …",null,null],[12,"lt_token","","",182,null],[12,"params","","",182,null],[12,"gt_token","","",182,null],[12,"where_clause","","",182,null],[3,"LifetimeDef","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",null,null],[12,"attrs","","",183,null],[12,"lifetime","","",183,null],[12,"colon_token","","",183,null],[12,"bounds","","",183,null],[3,"PredicateEq","","An equality predicate in a <code>where</code> clause (unsupported).",null,null],[12,"lhs_ty","","",184,null],[12,"eq_token","","",184,null],[12,"rhs_ty","","",184,null],[3,"PredicateLifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",null,null],[12,"lifetime","","",185,null],[12,"colon_token","","",185,null],[12,"bounds","","",185,null],[3,"PredicateType","","A type predicate in a <code>where</code> clause: …",null,null],[12,"lifetimes","","Any lifetimes from a <code>for</code> binding",186,null],[12,"bounded_ty","","The type being bounded",186,null],[12,"colon_token","","",186,null],[12,"bounds","","Trait and lifetime bounds (<code>Clone+Send+\'static</code>)",186,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",187,null],[12,"modifier","","",187,null],[12,"lifetimes","","The <code>for<\'a></code> in <code>for<\'a> Foo<&\'a T></code>",187,null],[12,"path","","The <code>Foo<&\'a T></code> in <code>for<\'a> Foo<&\'a T></code>",187,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the <code>?</code>…",null,null],[13,"None","","",188,null],[13,"Maybe","","",188,null],[3,"TypeParam","","A generic type parameter: <code>T: Into<String></code>.",null,null],[12,"attrs","","",189,null],[12,"ident","","",189,null],[12,"colon_token","","",189,null],[12,"bounds","","",189,null],[12,"eq_token","","",189,null],[12,"default","","",189,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",190,null],[13,"Lifetime","","",190,null],[3,"WhereClause","","A <code>where</code> clause in a definition: …",null,null],[12,"where_token","","",191,null],[12,"predicates","","",191,null],[4,"WherePredicate","","A single predicate in a <code>where</code> clause: <code>T: Deserialize<\'de></code>.",null,null],[13,"Type","","A type predicate in a <code>where</code> clause: …",192,null],[13,"Lifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",192,null],[13,"Eq","","An equality predicate in a <code>where</code> clause (unsupported).",192,null],[3,"ImplGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[3,"Turbofish","","Returned by <code>TypeGenerics::as_turbofish</code>.",null,null],[3,"TypeGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[4,"FnArg","","An argument in a function signature: the <code>n: usize</code> in …",null,null],[13,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",193,null],[13,"Typed","","A function argument accepted by pattern and type.",193,null],[4,"ForeignItem","","An item within an <code>extern</code> block.",null,null],[13,"Fn","","A foreign function in an <code>extern</code> block.",194,null],[13,"Static","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",194,null],[13,"Type","","A foreign type in an <code>extern</code> block: <code>type void</code>.",194,null],[13,"Macro","","A macro invocation within an extern block.",194,null],[13,"Verbatim","","Tokens in an <code>extern</code> block not interpreted by Syn.",194,null],[3,"ForeignItemFn","","A foreign function in an <code>extern</code> block.",null,null],[12,"attrs","","",195,null],[12,"vis","","",195,null],[12,"sig","","",195,null],[12,"semi_token","","",195,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",196,null],[12,"mac","","",196,null],[12,"semi_token","","",196,null],[3,"ForeignItemStatic","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",null,null],[12,"attrs","","",197,null],[12,"vis","","",197,null],[12,"static_token","","",197,null],[12,"mutability","","",197,null],[12,"ident","","",197,null],[12,"colon_token","","",197,null],[12,"ty","","",197,null],[12,"semi_token","","",197,null],[3,"ForeignItemType","","A foreign type in an <code>extern</code> block: <code>type void</code>.",null,null],[12,"attrs","","",198,null],[12,"vis","","",198,null],[12,"type_token","","",198,null],[12,"ident","","",198,null],[12,"semi_token","","",198,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",199,null],[13,"Method","","A method within an impl block.",199,null],[13,"Type","","An associated type within an impl block.",199,null],[13,"Macro","","A macro invocation within an impl block.",199,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",199,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",200,null],[12,"vis","","",200,null],[12,"defaultness","","",200,null],[12,"const_token","","",200,null],[12,"ident","","",200,null],[12,"colon_token","","",200,null],[12,"ty","","",200,null],[12,"eq_token","","",200,null],[12,"expr","","",200,null],[12,"semi_token","","",200,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",201,null],[12,"mac","","",201,null],[12,"semi_token","","",201,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",202,null],[12,"vis","","",202,null],[12,"defaultness","","",202,null],[12,"sig","","",202,null],[12,"block","","",202,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",203,null],[12,"vis","","",203,null],[12,"defaultness","","",203,null],[12,"type_token","","",203,null],[12,"ident","","",203,null],[12,"generics","","",203,null],[12,"eq_token","","",203,null],[12,"ty","","",203,null],[12,"semi_token","","",203,null],[4,"Item","","Things that can appear directly inside of a module or …",null,null],[13,"Const","","A constant item: <code>const MAX: u16 = 65535</code>.",204,null],[13,"Enum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",204,null],[13,"ExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",204,null],[13,"Fn","","A free-standing function: …",204,null],[13,"ForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",204,null],[13,"Impl","","An impl block providing trait or associated items: …",204,null],[13,"Macro","","A macro invocation, which includes <code>macro_rules!</code> …",204,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",204,null],[13,"Mod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",204,null],[13,"Static","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",204,null],[13,"Struct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",204,null],[13,"Trait","","A trait definition: <code>pub trait Iterator { ... }</code>.",204,null],[13,"TraitAlias","","A trait alias: …",204,null],[13,"Type","","A type alias: …",204,null],[13,"Union","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",204,null],[13,"Use","","A use declaration: <code>use std::collections::HashMap</code>.",204,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",204,null],[3,"ItemConst","","A constant item: <code>const MAX: u16 = 65535</code>.",null,null],[12,"attrs","","",205,null],[12,"vis","","",205,null],[12,"const_token","","",205,null],[12,"ident","","",205,null],[12,"colon_token","","",205,null],[12,"ty","","",205,null],[12,"eq_token","","",205,null],[12,"expr","","",205,null],[12,"semi_token","","",205,null],[3,"ItemEnum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",null,null],[12,"attrs","","",206,null],[12,"vis","","",206,null],[12,"enum_token","","",206,null],[12,"ident","","",206,null],[12,"generics","","",206,null],[12,"brace_token","","",206,null],[12,"variants","","",206,null],[3,"ItemExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",null,null],[12,"attrs","","",207,null],[12,"vis","","",207,null],[12,"extern_token","","",207,null],[12,"crate_token","","",207,null],[12,"ident","","",207,null],[12,"rename","","",207,null],[12,"semi_token","","",207,null],[3,"ItemFn","","A free-standing function: …",null,null],[12,"attrs","","",208,null],[12,"vis","","",208,null],[12,"sig","","",208,null],[12,"block","","",208,null],[3,"ItemForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",null,null],[12,"attrs","","",209,null],[12,"abi","","",209,null],[12,"brace_token","","",209,null],[12,"items","","",209,null],[3,"ItemImpl","","An impl block providing trait or associated items: …",null,null],[12,"attrs","","",210,null],[12,"defaultness","","",210,null],[12,"unsafety","","",210,null],[12,"impl_token","","",210,null],[12,"generics","","",210,null],[12,"trait_","","Trait this impl implements.",210,null],[12,"self_ty","","The Self type of the impl.",210,null],[12,"brace_token","","",210,null],[12,"items","","",210,null],[3,"ItemMacro","","A macro invocation, which includes <code>macro_rules!</code> …",null,null],[12,"attrs","","",211,null],[12,"ident","","The <code>example</code> in <code>macro_rules! example { ... }</code>.",211,null],[12,"mac","","",211,null],[12,"semi_token","","",211,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",null,null],[12,"attrs","","",212,null],[12,"vis","","",212,null],[12,"macro_token","","",212,null],[12,"ident","","",212,null],[12,"rules","","",212,null],[3,"ItemMod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",null,null],[12,"attrs","","",213,null],[12,"vis","","",213,null],[12,"mod_token","","",213,null],[12,"ident","","",213,null],[12,"content","","",213,null],[12,"semi","","",213,null],[3,"ItemStatic","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",null,null],[12,"attrs","","",214,null],[12,"vis","","",214,null],[12,"static_token","","",214,null],[12,"mutability","","",214,null],[12,"ident","","",214,null],[12,"colon_token","","",214,null],[12,"ty","","",214,null],[12,"eq_token","","",214,null],[12,"expr","","",214,null],[12,"semi_token","","",214,null],[3,"ItemStruct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",null,null],[12,"attrs","","",215,null],[12,"vis","","",215,null],[12,"struct_token","","",215,null],[12,"ident","","",215,null],[12,"generics","","",215,null],[12,"fields","","",215,null],[12,"semi_token","","",215,null],[3,"ItemTrait","","A trait definition: <code>pub trait Iterator { ... }</code>.",null,null],[12,"attrs","","",216,null],[12,"vis","","",216,null],[12,"unsafety","","",216,null],[12,"auto_token","","",216,null],[12,"trait_token","","",216,null],[12,"ident","","",216,null],[12,"generics","","",216,null],[12,"colon_token","","",216,null],[12,"supertraits","","",216,null],[12,"brace_token","","",216,null],[12,"items","","",216,null],[3,"ItemTraitAlias","","A trait alias: …",null,null],[12,"attrs","","",217,null],[12,"vis","","",217,null],[12,"trait_token","","",217,null],[12,"ident","","",217,null],[12,"generics","","",217,null],[12,"eq_token","","",217,null],[12,"bounds","","",217,null],[12,"semi_token","","",217,null],[3,"ItemType","","A type alias: …",null,null],[12,"attrs","","",218,null],[12,"vis","","",218,null],[12,"type_token","","",218,null],[12,"ident","","",218,null],[12,"generics","","",218,null],[12,"eq_token","","",218,null],[12,"ty","","",218,null],[12,"semi_token","","",218,null],[3,"ItemUnion","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",null,null],[12,"attrs","","",219,null],[12,"vis","","",219,null],[12,"union_token","","",219,null],[12,"ident","","",219,null],[12,"generics","","",219,null],[12,"fields","","",219,null],[3,"ItemUse","","A use declaration: <code>use std::collections::HashMap</code>.",null,null],[12,"attrs","","",220,null],[12,"vis","","",220,null],[12,"use_token","","",220,null],[12,"leading_colon","","",220,null],[12,"tree","","",220,null],[12,"semi_token","","",220,null],[3,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",null,null],[12,"attrs","","",221,null],[12,"reference","","",221,null],[12,"mutability","","",221,null],[12,"self_token","","",221,null],[3,"Signature","","A function signature in a trait or implementation: …",null,null],[12,"constness","","",222,null],[12,"asyncness","","",222,null],[12,"unsafety","","",222,null],[12,"abi","","",222,null],[12,"fn_token","","",222,null],[12,"ident","","",222,null],[12,"generics","","",222,null],[12,"paren_token","","",222,null],[12,"inputs","","",222,null],[12,"variadic","","",222,null],[12,"output","","",222,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",223,null],[13,"Method","","A trait method within the definition of a trait.",223,null],[13,"Type","","An associated type within the definition of a trait.",223,null],[13,"Macro","","A macro invocation within the definition of a trait.",223,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted …",223,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",224,null],[12,"const_token","","",224,null],[12,"ident","","",224,null],[12,"colon_token","","",224,null],[12,"ty","","",224,null],[12,"default","","",224,null],[12,"semi_token","","",224,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",225,null],[12,"mac","","",225,null],[12,"semi_token","","",225,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",226,null],[12,"sig","","",226,null],[12,"default","","",226,null],[12,"semi_token","","",226,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",227,null],[12,"type_token","","",227,null],[12,"ident","","",227,null],[12,"generics","","",227,null],[12,"colon_token","","",227,null],[12,"bounds","","",227,null],[12,"default","","",227,null],[12,"semi_token","","",227,null],[3,"UseGlob","","A glob import in a <code>use</code> item: <code>*</code>.",null,null],[12,"star_token","","",228,null],[3,"UseGroup","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",null,null],[12,"brace_token","","",229,null],[12,"items","","",229,null],[3,"UseName","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",null,null],[12,"ident","","",230,null],[3,"UsePath","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",null,null],[12,"ident","","",231,null],[12,"colon2_token","","",231,null],[12,"tree","","",231,null],[3,"UseRename","","An renamed identifier imported by a <code>use</code> item: …",null,null],[12,"ident","","",232,null],[12,"as_token","","",232,null],[12,"rename","","",232,null],[4,"UseTree","","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …",null,null],[13,"Path","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",233,null],[13,"Name","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",233,null],[13,"Rename","","An renamed identifier imported by a <code>use</code> item: …",233,null],[13,"Glob","","A glob import in a <code>use</code> item: <code>*</code>.",233,null],[13,"Group","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",233,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",234,null],[12,"attrs","","",234,null],[12,"items","","",234,null],[3,"Lifetime","","A Rust lifetime: <code>\'a</code>.",null,null],[12,"apostrophe","","",235,null],[12,"ident","","",235,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",236,null],[13,"ByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",236,null],[13,"Byte","","A byte literal: <code>b\'f\'</code>.",236,null],[13,"Char","","A character literal: <code>\'a\'</code>.",236,null],[13,"Int","","An integer literal: <code>1</code> or <code>1u16</code>.",236,null],[13,"Float","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",236,null],[13,"Bool","","A boolean literal: <code>true</code> or <code>false</code>.",236,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",236,null],[3,"LitBool","","A boolean literal: <code>true</code> or <code>false</code>.",null,null],[12,"value","","",237,null],[12,"span","","",237,null],[3,"LitByte","","A byte literal: <code>b\'f\'</code>.",null,null],[3,"LitByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",null,null],[3,"LitChar","","A character literal: <code>\'a\'</code>.",null,null],[3,"LitFloat","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",null,null],[3,"LitInt","","An integer literal: <code>1</code> or <code>1u16</code>.",null,null],[3,"LitStr","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",null,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a …",null,null],[13,"Cooked","","An ordinary string like <code>\\\"data\\\"</code>.",238,null],[13,"Raw","","A raw string like <code>r##\\\"data\\\"##</code>.",238,null],[3,"Macro","","A macro invocation: <code>println!(\\\"{}\\\", mac)</code>.",null,null],[12,"path","","",239,null],[12,"bang_token","","",239,null],[12,"delimiter","","",239,null],[12,"tokens","","",239,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: <code>m!(...)</code> or …",null,null],[13,"Paren","","",240,null],[13,"Brace","","",240,null],[13,"Bracket","","",240,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a <code>proc_macro_derive</code> macro.",241,null],[13,"Enum","","An enum input to a <code>proc_macro_derive</code> macro.",241,null],[13,"Union","","An untagged union input to a <code>proc_macro_derive</code> macro.",241,null],[3,"DataEnum","","An enum input to a <code>proc_macro_derive</code> macro.",null,null],[12,"enum_token","","",242,null],[12,"brace_token","","",242,null],[12,"variants","","",242,null],[3,"DataStruct","","A struct input to a <code>proc_macro_derive</code> macro.",null,null],[12,"struct_token","","",243,null],[12,"fields","","",243,null],[12,"semi_token","","",243,null],[3,"DataUnion","","An untagged union input to a <code>proc_macro_derive</code> macro.",null,null],[12,"union_token","","",244,null],[12,"fields","","",244,null],[3,"DeriveInput","","Data structure sent to a <code>proc_macro_derive</code> macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",245,null],[12,"vis","","Visibility of the struct or enum.",245,null],[12,"ident","","Name of the struct or enum.",245,null],[12,"generics","","Generics required to complete the definition.",245,null],[12,"data","","Data within the struct or enum.",245,null],[4,"BinOp","","A binary operator: <code>+</code>, <code>+=</code>, <code>&</code>.",null,null],[13,"Add","","The <code>+</code> operator (addition)",246,null],[13,"Sub","","The <code>-</code> operator (subtraction)",246,null],[13,"Mul","","The <code>*</code> operator (multiplication)",246,null],[13,"Div","","The <code>/</code> operator (division)",246,null],[13,"Rem","","The <code>%</code> operator (modulus)",246,null],[13,"And","","The <code>&&</code> operator (logical and)",246,null],[13,"Or","","The <code>||</code> operator (logical or)",246,null],[13,"BitXor","","The <code>^</code> operator (bitwise xor)",246,null],[13,"BitAnd","","The <code>&</code> operator (bitwise and)",246,null],[13,"BitOr","","The <code>|</code> operator (bitwise or)",246,null],[13,"Shl","","The <code><<</code> operator (shift left)",246,null],[13,"Shr","","The <code>>></code> operator (shift right)",246,null],[13,"Eq","","The <code>==</code> operator (equality)",246,null],[13,"Lt","","The <code><</code> operator (less than)",246,null],[13,"Le","","The <code><=</code> operator (less than or equal to)",246,null],[13,"Ne","","The <code>!=</code> operator (not equal to)",246,null],[13,"Ge","","The <code>>=</code> operator (greater than or equal to)",246,null],[13,"Gt","","The <code>></code> operator (greater than)",246,null],[13,"AddEq","","The <code>+=</code> operator",246,null],[13,"SubEq","","The <code>-=</code> operator",246,null],[13,"MulEq","","The <code>*=</code> operator",246,null],[13,"DivEq","","The <code>/=</code> operator",246,null],[13,"RemEq","","The <code>%=</code> operator",246,null],[13,"BitXorEq","","The <code>^=</code> operator",246,null],[13,"BitAndEq","","The <code>&=</code> operator",246,null],[13,"BitOrEq","","The <code>|=</code> operator",246,null],[13,"ShlEq","","The <code><<=</code> operator",246,null],[13,"ShrEq","","The <code>>>=</code> operator",246,null],[4,"UnOp","","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.",null,null],[13,"Deref","","The <code>*</code> operator for dereferencing",247,null],[13,"Not","","The <code>!</code> operator for logical inversion",247,null],[13,"Neg","","The <code>-</code> operator for negation",247,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",248,null],[12,"stmts","","Statements in a block",248,null],[3,"Local","","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.",null,null],[12,"attrs","","",249,null],[12,"let_token","","",249,null],[12,"pat","","",249,null],[12,"init","","",249,null],[12,"semi_token","","",249,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",250,null],[13,"Item","","An item definition.",250,null],[13,"Expr","","Expr without trailing semicolon.",250,null],[13,"Semi","","Expression with trailing semicolon.",250,null],[3,"Abi","","The binary interface of a function: <code>extern \\\"C\\\"</code>.",null,null],[12,"extern_token","","",251,null],[12,"name","","",251,null],[3,"BareFnArg","","An argument in a function type: the <code>usize</code> in …",null,null],[12,"attrs","","",252,null],[12,"name","","",252,null],[12,"ty","","",252,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",253,null],[13,"Type","","A particular type is returned.",253,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: <code>[T; n]</code>.",254,null],[13,"BareFn","","A bare function type: <code>fn(usize) -> bool</code>.",254,null],[13,"Group","","A type contained within invisible delimiters.",254,null],[13,"ImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",254,null],[13,"Infer","","Indication that a type should be inferred by the …",254,null],[13,"Macro","","A macro in the type position.",254,null],[13,"Never","","The never type: <code>!</code>.",254,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",254,null],[13,"Path","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",254,null],[13,"Ptr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",254,null],[13,"Reference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",254,null],[13,"Slice","","A dynamically sized slice type: <code>[T]</code>.",254,null],[13,"TraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",254,null],[13,"Tuple","","A tuple type: <code>(A, B, C, String)</code>.",254,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",254,null],[3,"TypeArray","","A fixed size array type: <code>[T; n]</code>.",null,null],[12,"bracket_token","","",255,null],[12,"elem","","",255,null],[12,"semi_token","","",255,null],[12,"len","","",255,null],[3,"TypeBareFn","","A bare function type: <code>fn(usize) -> bool</code>.",null,null],[12,"lifetimes","","",256,null],[12,"unsafety","","",256,null],[12,"abi","","",256,null],[12,"fn_token","","",256,null],[12,"paren_token","","",256,null],[12,"inputs","","",256,null],[12,"variadic","","",256,null],[12,"output","","",256,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",257,null],[12,"elem","","",257,null],[3,"TypeImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",null,null],[12,"impl_token","","",258,null],[12,"bounds","","",258,null],[3,"TypeInfer","","Indication that a type should be inferred by the …",null,null],[12,"underscore_token","","",259,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",260,null],[3,"TypeNever","","The never type: <code>!</code>.",null,null],[12,"bang_token","","",261,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",262,null],[12,"elem","","",262,null],[3,"TypePath","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",null,null],[12,"qself","","",263,null],[12,"path","","",263,null],[3,"TypePtr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",null,null],[12,"star_token","","",264,null],[12,"const_token","","",264,null],[12,"mutability","","",264,null],[12,"elem","","",264,null],[3,"TypeReference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",null,null],[12,"and_token","","",265,null],[12,"lifetime","","",265,null],[12,"mutability","","",265,null],[12,"elem","","",265,null],[3,"TypeSlice","","A dynamically sized slice type: <code>[T]</code>.",null,null],[12,"bracket_token","","",266,null],[12,"elem","","",266,null],[3,"TypeTraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",null,null],[12,"dyn_token","","",267,null],[12,"bounds","","",267,null],[3,"TypeTuple","","A tuple type: <code>(A, B, C, String)</code>.",null,null],[12,"paren_token","","",268,null],[12,"elems","","",268,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",269,null],[12,"dots","","",269,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",270,null],[12,"member","","",270,null],[12,"colon_token","","",270,null],[12,"pat","","",270,null],[4,"Pat","","A pattern in a local binding, function signature, match …",null,null],[13,"Box","","A box pattern: <code>box v</code>.",271,null],[13,"Ident","","A pattern that binds a new variable: …",271,null],[13,"Lit","","A literal pattern: <code>0</code>.",271,null],[13,"Macro","","A macro in pattern position.",271,null],[13,"Or","","A pattern that matches any one of a set of cases.",271,null],[13,"Path","","A path pattern like <code>Color::Red</code>, optionally qualified with …",271,null],[13,"Range","","A range pattern: <code>1..=2</code>.",271,null],[13,"Reference","","A reference pattern: <code>&mut var</code>.",271,null],[13,"Rest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",271,null],[13,"Slice","","A dynamically sized slice pattern: …",271,null],[13,"Struct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",271,null],[13,"Tuple","","A tuple pattern: <code>(a, b)</code>.",271,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: …",271,null],[13,"Type","","A type ascription pattern: <code>foo: f64</code>.",271,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",271,null],[13,"Wild","","A pattern that matches any value: <code>_</code>.",271,null],[3,"PatBox","","A box pattern: <code>box v</code>.",null,null],[12,"attrs","","",272,null],[12,"box_token","","",272,null],[12,"pat","","",272,null],[3,"PatIdent","","A pattern that binds a new variable: …",null,null],[12,"attrs","","",273,null],[12,"by_ref","","",273,null],[12,"mutability","","",273,null],[12,"ident","","",273,null],[12,"subpat","","",273,null],[3,"PatLit","","A literal pattern: <code>0</code>.",null,null],[12,"attrs","","",274,null],[12,"expr","","",274,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",275,null],[12,"mac","","",275,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",276,null],[12,"leading_vert","","",276,null],[12,"cases","","",276,null],[3,"PatPath","","A path pattern like <code>Color::Red</code>, optionally qualified with …",null,null],[12,"attrs","","",277,null],[12,"qself","","",277,null],[12,"path","","",277,null],[3,"PatRange","","A range pattern: <code>1..=2</code>.",null,null],[12,"attrs","","",278,null],[12,"lo","","",278,null],[12,"limits","","",278,null],[12,"hi","","",278,null],[3,"PatReference","","A reference pattern: <code>&mut var</code>.",null,null],[12,"attrs","","",279,null],[12,"and_token","","",279,null],[12,"mutability","","",279,null],[12,"pat","","",279,null],[3,"PatRest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",null,null],[12,"attrs","","",280,null],[12,"dot2_token","","",280,null],[3,"PatSlice","","A dynamically sized slice pattern: …",null,null],[12,"attrs","","",281,null],[12,"bracket_token","","",281,null],[12,"elems","","",281,null],[3,"PatStruct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",null,null],[12,"attrs","","",282,null],[12,"path","","",282,null],[12,"brace_token","","",282,null],[12,"fields","","",282,null],[12,"dot2_token","","",282,null],[3,"PatTuple","","A tuple pattern: <code>(a, b)</code>.",null,null],[12,"attrs","","",283,null],[12,"paren_token","","",283,null],[12,"elems","","",283,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: …",null,null],[12,"attrs","","",284,null],[12,"path","","",284,null],[12,"pat","","",284,null],[3,"PatType","","A type ascription pattern: <code>foo: f64</code>.",null,null],[12,"attrs","","",285,null],[12,"pat","","",285,null],[12,"colon_token","","",285,null],[12,"ty","","",285,null],[3,"PatWild","","A pattern that matches any value: <code>_</code>.",null,null],[12,"attrs","","",286,null],[12,"underscore_token","","",286,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the <code><K, V></code> …",null,null],[12,"colon2_token","","",287,null],[12,"lt_token","","",287,null],[12,"args","","",287,null],[12,"gt_token","","",287,null],[3,"Binding","","A binding (equality constraint) on an associated type: …",null,null],[12,"ident","","",288,null],[12,"eq_token","","",288,null],[12,"ty","","",288,null],[3,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",null,null],[12,"ident","","",289,null],[12,"colon_token","","",289,null],[12,"bounds","","",289,null],[4,"GenericArgument","","An individual generic argument, like <code>\'a</code>, <code>T</code>, or <code>Item = T</code>.",null,null],[13,"Lifetime","","A lifetime argument.",290,null],[13,"Type","","A type argument.",290,null],[13,"Binding","","A binding (equality constraint) on an associated type: …",290,null],[13,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",290,null],[13,"Const","","A const expression. Must be inside of a block.",290,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the <code>(A, B) -> C</code> in …",null,null],[12,"paren_token","","",291,null],[12,"inputs","","<code>(A, B)</code>",291,null],[12,"output","","<code>C</code>",291,null],[3,"Path","","A path at which a named item is exported (e.g. …",null,null],[12,"leading_colon","","",292,null],[12,"segments","","",292,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path …",null,null],[13,"None","","",293,null],[13,"AngleBracketed","","The <code><\'a, T></code> in <code>std::slice::iter<\'a, T></code>.",293,null],[13,"Parenthesized","","The <code>(A, B) -> C</code> in <code>Fn(A, B) -> C</code>.",293,null],[3,"PathSegment","","A segment of a path together with any path arguments on …",null,null],[12,"ident","","",294,null],[12,"arguments","","",294,null],[3,"QSelf","","The explicit Self type in a qualified path: the <code>T</code> in …",null,null],[12,"lt_token","","",295,null],[12,"ty","","",295,null],[12,"position","","",295,null],[12,"as_token","","",295,null],[12,"gt_token","","",295,null],[3,"Error","","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree …",null,[[["tokenstream",3]],[["parse",8],["result",6]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",null,[[["tokenstream",3]],[["parse",8],["result",6]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",null,[[["str",15]],[["parse",8],["result",6]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[["str",15]],[["file",3],["result",6]]]],[14,"parenthesized","","Parse a set of parentheses and expose their content to …",null,null],[14,"braced","","Parse a set of curly braces and expose their content to …",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content …",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type …",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the <code>quote!</code> …",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a …",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given …",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a …",null,null],[11,"span","syn::token","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"span","syn","",296,[[],["span",3]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"to_owned","","",296,[[]]],[11,"clone_into","","",296,[[]]],[11,"to_string","","",296,[[],["string",3]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"span","","",117,[[],["span",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",137,[[],["span",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"span","","",148,[[],["span",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"span","","",149,[[],["span",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"span","","",155,[[],["span",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"span","","",169,[[],["span",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"span","","",170,[[],["span",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"span","","",171,[[],["span",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"span","","",297,[[],["span",3]]],[11,"from","","",297,[[]]],[11,"into","","",297,[[]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"span","","",298,[[],["span",3]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"to_owned","","",298,[[]]],[11,"clone_into","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"span","","",299,[[],["span",3]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"to_owned","","",299,[[]]],[11,"clone_into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"to_string","","",235,[[],["string",3]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"span","","",300,[[],["span",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"span","","",301,[[],["span",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_owned","","",301,[[]]],[11,"clone_into","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"span","","",302,[[],["span",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"to_string","","",304,[[],["string",3]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",305,[[],["span",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"to_string","","",305,[[],["string",3]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"span","","",239,[[],["span",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"span","","",245,[[],["span",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"span","","",279,[[],["span",3]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"span","","",280,[[],["span",3]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"span","","",281,[[],["span",3]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"span","","",282,[[],["span",3]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"span","","",292,[[],["span",3]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"to_owned","","",292,[[]]],[11,"clone_into","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"span","","",294,[[],["span",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"span","","",290,[[],["span",3]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_owned","","",290,[[]]],[11,"clone_into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"span","","",291,[[],["span",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"to_owned","","",295,[[]]],[11,"clone_into","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"from","syn::buffer","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"span","syn::punctuated","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"into_iter","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"to_owned","","",308,[[]]],[11,"clone_into","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","syn::parse","",312,[[]]],[11,"into","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"to_string","","",115,[[],["string",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"fmt","syn","",296,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",296,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",296,[[]]],[11,"partial_cmp","","",296,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"clone","","",296,[[],["ident",3]]],[11,"cmp","","",296,[[["ident",3]],["ordering",4]]],[11,"eq","","",296,[[["ident",3]],["bool",15]]],[11,"eq","","",296,[[],["bool",15]]],[11,"to_tokens","","",296,[[["tokenstream",3]]]],[11,"span","","",296,[[],[["option",4],["span",3]]]],[11,"fmt","","",296,[[["formatter",3]],[["error",3],["result",4]]]],[11,"peek","","",235,[[["cursor",3]],["bool",15]]],[11,"display","","",235,[[],["str",15]]],[11,"peek","","",236,[[["cursor",3]],["bool",15]]],[11,"display","","",236,[[],["str",15]]],[11,"peek","","",300,[[["cursor",3]],["bool",15]]],[11,"display","","",300,[[],["str",15]]],[11,"peek","","",301,[[["cursor",3]],["bool",15]]],[11,"display","","",301,[[],["str",15]]],[11,"peek","","",302,[[["cursor",3]],["bool",15]]],[11,"display","","",302,[[],["str",15]]],[11,"peek","","",303,[[["cursor",3]],["bool",15]]],[11,"display","","",303,[[],["str",15]]],[11,"peek","","",304,[[["cursor",3]],["bool",15]]],[11,"display","","",304,[[],["str",15]]],[11,"peek","","",305,[[["cursor",3]],["bool",15]]],[11,"display","","",305,[[],["str",15]]],[11,"peek","","",237,[[["cursor",3]],["bool",15]]],[11,"display","","",237,[[],["str",15]]],[11,"peek","syn::token","",0,[[["cursor",3]],["bool",15]]],[11,"display","","",0,[[],["str",15]]],[11,"peek","","",101,[[["cursor",3]],["bool",15]]],[11,"display","","",101,[[],["str",15]]],[11,"peek","","",99,[[["cursor",3]],["bool",15]]],[11,"display","","",99,[[],["str",15]]],[11,"peek","","",100,[[["cursor",3]],["bool",15]]],[11,"display","","",100,[[],["str",15]]],[11,"peek","","",102,[[["cursor",3]],["bool",15]]],[11,"display","","",102,[[],["str",15]]],[11,"peek","","",1,[[["cursor",3]],["bool",15]]],[11,"display","","",1,[[],["str",15]]],[11,"peek","","",2,[[["cursor",3]],["bool",15]]],[11,"display","","",2,[[],["str",15]]],[11,"peek","","",3,[[["cursor",3]],["bool",15]]],[11,"display","","",3,[[],["str",15]]],[11,"peek","","",4,[[["cursor",3]],["bool",15]]],[11,"display","","",4,[[],["str",15]]],[11,"peek","","",5,[[["cursor",3]],["bool",15]]],[11,"display","","",5,[[],["str",15]]],[11,"peek","","",6,[[["cursor",3]],["bool",15]]],[11,"display","","",6,[[],["str",15]]],[11,"peek","","",7,[[["cursor",3]],["bool",15]]],[11,"display","","",7,[[],["str",15]]],[11,"peek","","",8,[[["cursor",3]],["bool",15]]],[11,"display","","",8,[[],["str",15]]],[11,"peek","","",9,[[["cursor",3]],["bool",15]]],[11,"display","","",9,[[],["str",15]]],[11,"peek","","",10,[[["cursor",3]],["bool",15]]],[11,"display","","",10,[[],["str",15]]],[11,"peek","","",11,[[["cursor",3]],["bool",15]]],[11,"display","","",11,[[],["str",15]]],[11,"peek","","",12,[[["cursor",3]],["bool",15]]],[11,"display","","",12,[[],["str",15]]],[11,"peek","","",13,[[["cursor",3]],["bool",15]]],[11,"display","","",13,[[],["str",15]]],[11,"peek","","",14,[[["cursor",3]],["bool",15]]],[11,"display","","",14,[[],["str",15]]],[11,"peek","","",15,[[["cursor",3]],["bool",15]]],[11,"display","","",15,[[],["str",15]]],[11,"peek","","",16,[[["cursor",3]],["bool",15]]],[11,"display","","",16,[[],["str",15]]],[11,"peek","","",17,[[["cursor",3]],["bool",15]]],[11,"display","","",17,[[],["str",15]]],[11,"peek","","",18,[[["cursor",3]],["bool",15]]],[11,"display","","",18,[[],["str",15]]],[11,"peek","","",19,[[["cursor",3]],["bool",15]]],[11,"display","","",19,[[],["str",15]]],[11,"peek","","",20,[[["cursor",3]],["bool",15]]],[11,"display","","",20,[[],["str",15]]],[11,"peek","","",21,[[["cursor",3]],["bool",15]]],[11,"display","","",21,[[],["str",15]]],[11,"peek","","",22,[[["cursor",3]],["bool",15]]],[11,"display","","",22,[[],["str",15]]],[11,"peek","","",23,[[["cursor",3]],["bool",15]]],[11,"display","","",23,[[],["str",15]]],[11,"peek","","",24,[[["cursor",3]],["bool",15]]],[11,"display","","",24,[[],["str",15]]],[11,"peek","","",25,[[["cursor",3]],["bool",15]]],[11,"display","","",25,[[],["str",15]]],[11,"peek","","",26,[[["cursor",3]],["bool",15]]],[11,"display","","",26,[[],["str",15]]],[11,"peek","","",27,[[["cursor",3]],["bool",15]]],[11,"display","","",27,[[],["str",15]]],[11,"peek","","",28,[[["cursor",3]],["bool",15]]],[11,"display","","",28,[[],["str",15]]],[11,"peek","","",29,[[["cursor",3]],["bool",15]]],[11,"display","","",29,[[],["str",15]]],[11,"peek","","",30,[[["cursor",3]],["bool",15]]],[11,"display","","",30,[[],["str",15]]],[11,"peek","","",31,[[["cursor",3]],["bool",15]]],[11,"display","","",31,[[],["str",15]]],[11,"peek","","",32,[[["cursor",3]],["bool",15]]],[11,"display","","",32,[[],["str",15]]],[11,"peek","","",33,[[["cursor",3]],["bool",15]]],[11,"display","","",33,[[],["str",15]]],[11,"peek","","",34,[[["cursor",3]],["bool",15]]],[11,"display","","",34,[[],["str",15]]],[11,"peek","","",35,[[["cursor",3]],["bool",15]]],[11,"display","","",35,[[],["str",15]]],[11,"peek","","",36,[[["cursor",3]],["bool",15]]],[11,"display","","",36,[[],["str",15]]],[11,"peek","","",37,[[["cursor",3]],["bool",15]]],[11,"display","","",37,[[],["str",15]]],[11,"peek","","",38,[[["cursor",3]],["bool",15]]],[11,"display","","",38,[[],["str",15]]],[11,"peek","","",39,[[["cursor",3]],["bool",15]]],[11,"display","","",39,[[],["str",15]]],[11,"peek","","",40,[[["cursor",3]],["bool",15]]],[11,"display","","",40,[[],["str",15]]],[11,"peek","","",41,[[["cursor",3]],["bool",15]]],[11,"display","","",41,[[],["str",15]]],[11,"peek","","",42,[[["cursor",3]],["bool",15]]],[11,"display","","",42,[[],["str",15]]],[11,"peek","","",43,[[["cursor",3]],["bool",15]]],[11,"display","","",43,[[],["str",15]]],[11,"peek","","",44,[[["cursor",3]],["bool",15]]],[11,"display","","",44,[[],["str",15]]],[11,"peek","","",45,[[["cursor",3]],["bool",15]]],[11,"display","","",45,[[],["str",15]]],[11,"peek","","",46,[[["cursor",3]],["bool",15]]],[11,"display","","",46,[[],["str",15]]],[11,"peek","","",47,[[["cursor",3]],["bool",15]]],[11,"display","","",47,[[],["str",15]]],[11,"peek","","",48,[[["cursor",3]],["bool",15]]],[11,"display","","",48,[[],["str",15]]],[11,"peek","","",49,[[["cursor",3]],["bool",15]]],[11,"display","","",49,[[],["str",15]]],[11,"peek","","",50,[[["cursor",3]],["bool",15]]],[11,"display","","",50,[[],["str",15]]],[11,"peek","","",51,[[["cursor",3]],["bool",15]]],[11,"display","","",51,[[],["str",15]]],[11,"peek","","",52,[[["cursor",3]],["bool",15]]],[11,"display","","",52,[[],["str",15]]],[11,"peek","","",53,[[["cursor",3]],["bool",15]]],[11,"display","","",53,[[],["str",15]]],[11,"peek","","",54,[[["cursor",3]],["bool",15]]],[11,"display","","",54,[[],["str",15]]],[11,"peek","","",55,[[["cursor",3]],["bool",15]]],[11,"display","","",55,[[],["str",15]]],[11,"peek","","",56,[[["cursor",3]],["bool",15]]],[11,"display","","",56,[[],["str",15]]],[11,"peek","","",57,[[["cursor",3]],["bool",15]]],[11,"display","","",57,[[],["str",15]]],[11,"peek","","",58,[[["cursor",3]],["bool",15]]],[11,"display","","",58,[[],["str",15]]],[11,"peek","","",59,[[["cursor",3]],["bool",15]]],[11,"display","","",59,[[],["str",15]]],[11,"peek","","",60,[[["cursor",3]],["bool",15]]],[11,"display","","",60,[[],["str",15]]],[11,"peek","","",61,[[["cursor",3]],["bool",15]]],[11,"display","","",61,[[],["str",15]]],[11,"peek","","",62,[[["cursor",3]],["bool",15]]],[11,"display","","",62,[[],["str",15]]],[11,"peek","","",63,[[["cursor",3]],["bool",15]]],[11,"display","","",63,[[],["str",15]]],[11,"peek","","",64,[[["cursor",3]],["bool",15]]],[11,"display","","",64,[[],["str",15]]],[11,"peek","","",65,[[["cursor",3]],["bool",15]]],[11,"display","","",65,[[],["str",15]]],[11,"peek","","",66,[[["cursor",3]],["bool",15]]],[11,"display","","",66,[[],["str",15]]],[11,"peek","","",67,[[["cursor",3]],["bool",15]]],[11,"display","","",67,[[],["str",15]]],[11,"peek","","",68,[[["cursor",3]],["bool",15]]],[11,"display","","",68,[[],["str",15]]],[11,"peek","","",69,[[["cursor",3]],["bool",15]]],[11,"display","","",69,[[],["str",15]]],[11,"peek","","",70,[[["cursor",3]],["bool",15]]],[11,"display","","",70,[[],["str",15]]],[11,"peek","","",71,[[["cursor",3]],["bool",15]]],[11,"display","","",71,[[],["str",15]]],[11,"peek","","",72,[[["cursor",3]],["bool",15]]],[11,"display","","",72,[[],["str",15]]],[11,"peek","","",73,[[["cursor",3]],["bool",15]]],[11,"display","","",73,[[],["str",15]]],[11,"peek","","",74,[[["cursor",3]],["bool",15]]],[11,"display","","",74,[[],["str",15]]],[11,"peek","","",75,[[["cursor",3]],["bool",15]]],[11,"display","","",75,[[],["str",15]]],[11,"peek","","",76,[[["cursor",3]],["bool",15]]],[11,"display","","",76,[[],["str",15]]],[11,"peek","","",77,[[["cursor",3]],["bool",15]]],[11,"display","","",77,[[],["str",15]]],[11,"peek","","",78,[[["cursor",3]],["bool",15]]],[11,"display","","",78,[[],["str",15]]],[11,"peek","","",79,[[["cursor",3]],["bool",15]]],[11,"display","","",79,[[],["str",15]]],[11,"peek","","",80,[[["cursor",3]],["bool",15]]],[11,"display","","",80,[[],["str",15]]],[11,"peek","","",81,[[["cursor",3]],["bool",15]]],[11,"display","","",81,[[],["str",15]]],[11,"peek","","",82,[[["cursor",3]],["bool",15]]],[11,"display","","",82,[[],["str",15]]],[11,"peek","","",83,[[["cursor",3]],["bool",15]]],[11,"display","","",83,[[],["str",15]]],[11,"peek","","",84,[[["cursor",3]],["bool",15]]],[11,"display","","",84,[[],["str",15]]],[11,"peek","","",85,[[["cursor",3]],["bool",15]]],[11,"display","","",85,[[],["str",15]]],[11,"peek","","",86,[[["cursor",3]],["bool",15]]],[11,"display","","",86,[[],["str",15]]],[11,"peek","","",87,[[["cursor",3]],["bool",15]]],[11,"display","","",87,[[],["str",15]]],[11,"peek","","",88,[[["cursor",3]],["bool",15]]],[11,"display","","",88,[[],["str",15]]],[11,"peek","","",89,[[["cursor",3]],["bool",15]]],[11,"display","","",89,[[],["str",15]]],[11,"peek","","",90,[[["cursor",3]],["bool",15]]],[11,"display","","",90,[[],["str",15]]],[11,"peek","","",91,[[["cursor",3]],["bool",15]]],[11,"display","","",91,[[],["str",15]]],[11,"peek","","",92,[[["cursor",3]],["bool",15]]],[11,"display","","",92,[[],["str",15]]],[11,"peek","","",93,[[["cursor",3]],["bool",15]]],[11,"display","","",93,[[],["str",15]]],[11,"peek","","",94,[[["cursor",3]],["bool",15]]],[11,"display","","",94,[[],["str",15]]],[11,"peek","","",95,[[["cursor",3]],["bool",15]]],[11,"display","","",95,[[],["str",15]]],[11,"peek","","",96,[[["cursor",3]],["bool",15]]],[11,"display","","",96,[[],["str",15]]],[11,"peek","","",97,[[["cursor",3]],["bool",15]]],[11,"display","","",97,[[],["str",15]]],[11,"peek","","",98,[[["cursor",3]],["bool",15]]],[11,"display","","",98,[[],["str",15]]],[11,"peek","syn","",296,[[["cursor",3]],["bool",15]]],[11,"display","","",296,[[],["str",15]]],[11,"parse_any","","",296,[[["parsestream",6]],["result",6]]],[11,"unraw","","",296,[[],["ident",3]]],[11,"advance_to","syn::parse","",113,[[]]],[11,"parse","syn::token","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",7,[[["parsestream",6]],["result",6]]],[11,"parse","","",8,[[["parsestream",6]],["result",6]]],[11,"parse","","",9,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",13,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",18,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",29,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",58,[[["parsestream",6]],["result",6]]],[11,"parse","","",59,[[["parsestream",6]],["result",6]]],[11,"parse","","",60,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",94,[[["parsestream",6]],["result",6]]],[11,"parse","","",95,[[["parsestream",6]],["result",6]]],[11,"parse","","",96,[[["parsestream",6]],["result",6]]],[11,"parse","","",97,[[["parsestream",6]],["result",6]]],[11,"parse","","",98,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",296,[[["parsestream",6]],["result",6]]],[11,"parse","","",118,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",126,[[["parsestream",6]],["result",6]]],[11,"parse","","",124,[[["parsestream",6]],["result",6]]],[11,"parse","","",125,[[["parsestream",6]],["result",6]]],[11,"parse","","",130,[[["parsestream",6]],["result",6]]],[11,"parse","","",137,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",138,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",154,[[["parsestream",6]],["result",6]]],[11,"parse","","",152,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",171,[[["parsestream",6]],["result",6]]],[11,"parse","","",143,[[["parsestream",6]],["result",6]]],[11,"parse","","",148,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",139,[[["parsestream",6]],["result",6]]],[11,"parse","","",140,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",169,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",149,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],["result",6]]],[11,"parse","","",170,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",141,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",134,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",132,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","","",136,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",131,[[["parsestream",6]],[["arm",3],["result",6]]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",179,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",187,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",233,[[["parsestream",6]],[["usetree",4],["result",6]]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",222,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",221,[[["parsestream",6]],["result",6]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",227,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",300,[[["parsestream",6]],["result",6]]],[11,"parse","","",301,[[["parsestream",6]],["result",6]]],[11,"parse","","",302,[[["parsestream",6]],["result",6]]],[11,"parse","","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",304,[[["parsestream",6]],["result",6]]],[11,"parse","","",305,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",239,[[["parsestream",6]],["result",6]]],[11,"parse","","",245,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",248,[[["parsestream",6]],["result",6]]],[11,"parse","","",250,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",268,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",271,[[["parsestream",6]],["result",6]]],[11,"parse","","",292,[[["parsestream",6]],["result",6]]],[11,"parse","","",290,[[["parsestream",6]],["result",6]]],[11,"parse","","",287,[[["parsestream",6]],["result",6]]],[11,"parse","","",291,[[["parsestream",6]],["result",6]]],[11,"parse","","",294,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",313,[[["parsestream",6]],["result",6]]],[11,"drop","","",113,[[]]],[11,"from","syn","",296,[[["selfvalue",3]],["ident",3]]],[11,"from","","",296,[[["selftype",3]],["ident",3]]],[11,"from","","",296,[[["super",3]],["ident",3]]],[11,"from","","",296,[[["crate",3]],["ident",3]]],[11,"from","","",296,[[["extern",3]],["ident",3]]],[11,"from","","",296,[[["underscore",3]],["ident",3]]],[11,"from","","",118,[[["path",3]],["meta",4]]],[11,"from","","",118,[[["metalist",3]],["meta",4]]],[11,"from","","",118,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",121,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",121,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",123,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",123,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",130,[[["vispublic",3]],["visibility",4]]],[11,"from","","",130,[[["viscrate",3]],["visibility",4]]],[11,"from","","",130,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",137,[[["exprarray",3]],["expr",4]]],[11,"from","","",137,[[["exprassign",3]],["expr",4]]],[11,"from","","",137,[[["exprassignop",3]],["expr",4]]],[11,"from","","",137,[[["exprasync",3]],["expr",4]]],[11,"from","","",137,[[["exprawait",3]],["expr",4]]],[11,"from","","",137,[[["exprbinary",3]],["expr",4]]],[11,"from","","",137,[[["exprblock",3]],["expr",4]]],[11,"from","","",137,[[["exprbox",3]],["expr",4]]],[11,"from","","",137,[[["exprbreak",3]],["expr",4]]],[11,"from","","",137,[[["exprcall",3]],["expr",4]]],[11,"from","","",137,[[["exprcast",3]],["expr",4]]],[11,"from","","",137,[[["exprclosure",3]],["expr",4]]],[11,"from","","",137,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",137,[[["exprfield",3]],["expr",4]]],[11,"from","","",137,[[["exprforloop",3]],["expr",4]]],[11,"from","","",137,[[["exprgroup",3]],["expr",4]]],[11,"from","","",137,[[["exprif",3]],["expr",4]]],[11,"from","","",137,[[["exprindex",3]],["expr",4]]],[11,"from","","",137,[[["exprlet",3]],["expr",4]]],[11,"from","","",137,[[["exprlit",3]],["expr",4]]],[11,"from","","",137,[[["exprloop",3]],["expr",4]]],[11,"from","","",137,[[["exprmacro",3]],["expr",4]]],[11,"from","","",137,[[["exprmatch",3]],["expr",4]]],[11,"from","","",137,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",137,[[["exprparen",3]],["expr",4]]],[11,"from","","",137,[[["exprpath",3]],["expr",4]]],[11,"from","","",137,[[["exprrange",3]],["expr",4]]],[11,"from","","",137,[[["exprreference",3]],["expr",4]]],[11,"from","","",137,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",137,[[["exprreturn",3]],["expr",4]]],[11,"from","","",137,[[["exprstruct",3]],["expr",4]]],[11,"from","","",137,[[["exprtry",3]],["expr",4]]],[11,"from","","",137,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",137,[[["exprtuple",3]],["expr",4]]],[11,"from","","",137,[[["exprtype",3]],["expr",4]]],[11,"from","","",137,[[["exprunary",3]],["expr",4]]],[11,"from","","",137,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",137,[[["exprwhile",3]],["expr",4]]],[11,"from","","",137,[[["expryield",3]],["expr",4]]],[11,"from","","",177,[[["usize",15]],["index",3]]],[11,"from","","",181,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",181,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",181,[[["constparam",3]],["genericparam",4]]],[11,"from","","",189,[[["ident",3]]]],[11,"from","","",190,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",190,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",192,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",192,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",192,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",204,[[["itemconst",3]],["item",4]]],[11,"from","","",204,[[["itemenum",3]],["item",4]]],[11,"from","","",204,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",204,[[["itemfn",3]],["item",4]]],[11,"from","","",204,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",204,[[["itemimpl",3]],["item",4]]],[11,"from","","",204,[[["itemmacro",3]],["item",4]]],[11,"from","","",204,[[["itemmacro2",3]],["item",4]]],[11,"from","","",204,[[["itemmod",3]],["item",4]]],[11,"from","","",204,[[["itemstatic",3]],["item",4]]],[11,"from","","",204,[[["itemstruct",3]],["item",4]]],[11,"from","","",204,[[["itemtrait",3]],["item",4]]],[11,"from","","",204,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",204,[[["itemtype",3]],["item",4]]],[11,"from","","",204,[[["itemunion",3]],["item",4]]],[11,"from","","",204,[[["itemuse",3]],["item",4]]],[11,"from","","",204,[[["deriveinput",3]],["item",4]]],[11,"from","","",245,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",245,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",245,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",233,[[["usepath",3]],["usetree",4]]],[11,"from","","",233,[[["usename",3]],["usetree",4]]],[11,"from","","",233,[[["userename",3]],["usetree",4]]],[11,"from","","",233,[[["useglob",3]],["usetree",4]]],[11,"from","","",233,[[["usegroup",3]],["usetree",4]]],[11,"from","","",194,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",194,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",194,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",194,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",223,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",223,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",223,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",223,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",199,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",199,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",199,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",199,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",193,[[["receiver",3]],["fnarg",4]]],[11,"from","","",193,[[["pattype",3]],["fnarg",4]]],[11,"from","","",236,[[["litstr",3]],["lit",4]]],[11,"from","","",236,[[["litbytestr",3]],["lit",4]]],[11,"from","","",236,[[["litbyte",3]],["lit",4]]],[11,"from","","",236,[[["litchar",3]],["lit",4]]],[11,"from","","",236,[[["litint",3]],["lit",4]]],[11,"from","","",236,[[["litfloat",3]],["lit",4]]],[11,"from","","",236,[[["litbool",3]],["lit",4]]],[11,"from","","",304,[[["literal",3]]]],[11,"from","","",305,[[["literal",3]]]],[11,"from","","",241,[[["datastruct",3]],["data",4]]],[11,"from","","",241,[[["dataenum",3]],["data",4]]],[11,"from","","",241,[[["dataunion",3]],["data",4]]],[11,"from","","",254,[[["typearray",3]],["type",4]]],[11,"from","","",254,[[["typebarefn",3]],["type",4]]],[11,"from","","",254,[[["typegroup",3]],["type",4]]],[11,"from","","",254,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",254,[[["typeinfer",3]],["type",4]]],[11,"from","","",254,[[["typemacro",3]],["type",4]]],[11,"from","","",254,[[["typenever",3]],["type",4]]],[11,"from","","",254,[[["typeparen",3]],["type",4]]],[11,"from","","",254,[[["typepath",3]],["type",4]]],[11,"from","","",254,[[["typeptr",3]],["type",4]]],[11,"from","","",254,[[["typereference",3]],["type",4]]],[11,"from","","",254,[[["typeslice",3]],["type",4]]],[11,"from","","",254,[[["typetraitobject",3]],["type",4]]],[11,"from","","",254,[[["typetuple",3]],["type",4]]],[11,"from","","",271,[[["patbox",3]],["pat",4]]],[11,"from","","",271,[[["patident",3]],["pat",4]]],[11,"from","","",271,[[["patlit",3]],["pat",4]]],[11,"from","","",271,[[["patmacro",3]],["pat",4]]],[11,"from","","",271,[[["pator",3]],["pat",4]]],[11,"from","","",271,[[["patpath",3]],["pat",4]]],[11,"from","","",271,[[["patrange",3]],["pat",4]]],[11,"from","","",271,[[["patreference",3]],["pat",4]]],[11,"from","","",271,[[["patrest",3]],["pat",4]]],[11,"from","","",271,[[["patslice",3]],["pat",4]]],[11,"from","","",271,[[["patstruct",3]],["pat",4]]],[11,"from","","",271,[[["pattuple",3]],["pat",4]]],[11,"from","","",271,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",271,[[["pattype",3]],["pat",4]]],[11,"from","","",271,[[["patwild",3]],["pat",4]]],[11,"from","","",292,[[]]],[11,"from","","",294,[[]]],[11,"from","syn::parse","",115,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",306,[[],["option",4]]],[11,"next_back","","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","","",311,[[],["option",4]]],[11,"len","","",306,[[],["usize",15]]],[11,"len","","",307,[[],["usize",15]]],[11,"len","","",308,[[],["usize",15]]],[11,"len","","",309,[[],["usize",15]]],[11,"len","","",310,[[],["usize",15]]],[11,"len","","",311,[[],["usize",15]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","syn::parse","",115,[[["intoiterator",8]]]],[11,"into_iter","syn","",123,[[]]],[11,"into_iter","syn::punctuated","",106,[[]]],[11,"into_iter","syn::parse","",115,[[]]],[11,"next","syn::punctuated","",306,[[],["option",4]]],[11,"size_hint","","",306,[[]]],[11,"next","","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"clone","syn::token","",0,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","syn","",297,[[]]],[11,"clone","","",298,[[]]],[11,"clone","","",299,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",300,[[]]],[11,"clone","","",301,[[]]],[11,"clone","","",302,[[]]],[11,"clone","","",303,[[]]],[11,"clone","","",304,[[]]],[11,"clone","","",305,[[]]],[11,"clone","syn::buffer","",104,[[]]],[11,"clone","syn::punctuated","",106,[[]]],[11,"clone","","",306,[[]]],[11,"clone","","",308,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",310,[[]]],[11,"clone","","",107,[[]]],[11,"clone","syn","",251,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",116,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",252,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",180,[[]]],[11,"clone","","",289,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",161,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",169,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",193,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",290,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",237,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",239,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",291,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",292,[[]]],[11,"clone","","",293,[[]]],[11,"clone","","",294,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",295,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",250,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",192,[[]]],[11,"clone","syn::parse","",112,[[]]],[11,"clone","","",115,[[]]],[11,"default","syn::token","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","","",25,[[]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[]]],[11,"default","","",30,[[]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[]]],[11,"default","","",38,[[]]],[11,"default","","",39,[[]]],[11,"default","","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"default","","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","","",47,[[]]],[11,"default","","",48,[[]]],[11,"default","","",49,[[]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[]]],[11,"default","","",52,[[]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[]]],[11,"default","","",61,[[]]],[11,"default","","",62,[[]]],[11,"default","","",63,[[]]],[11,"default","","",64,[[]]],[11,"default","","",65,[[]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[]]],[11,"default","","",68,[[]]],[11,"default","","",69,[[]]],[11,"default","","",70,[[]]],[11,"default","","",71,[[]]],[11,"default","","",72,[[]]],[11,"default","","",73,[[]]],[11,"default","","",74,[[]]],[11,"default","","",75,[[]]],[11,"default","","",76,[[]]],[11,"default","","",77,[[]]],[11,"default","","",78,[[]]],[11,"default","","",79,[[]]],[11,"default","","",80,[[]]],[11,"default","","",81,[[]]],[11,"default","","",82,[[]]],[11,"default","","",83,[[]]],[11,"default","","",84,[[]]],[11,"default","","",85,[[]]],[11,"default","","",86,[[]]],[11,"default","","",87,[[]]],[11,"default","","",88,[[]]],[11,"default","","",89,[[]]],[11,"default","","",90,[[]]],[11,"default","","",91,[[]]],[11,"default","","",92,[[]]],[11,"default","","",93,[[]]],[11,"default","","",94,[[]]],[11,"default","","",95,[[]]],[11,"default","","",96,[[]]],[11,"default","","",97,[[]]],[11,"default","","",98,[[]]],[11,"default","","",99,[[]]],[11,"default","","",100,[[]]],[11,"default","","",101,[[]]],[11,"default","","",102,[[]]],[11,"default","syn","",182,[[]]],[11,"default","","",179,[[]]],[11,"default","","",293,[[]]],[11,"default","syn::punctuated","",106,[[]]],[11,"cmp","syn","",235,[[["lifetime",3]],["ordering",4]]],[11,"eq","syn::token","",0,[[["underscore",3]],["bool",15]]],[11,"eq","","",1,[[["abstract",3]],["bool",15]]],[11,"eq","","",2,[[["as",3]],["bool",15]]],[11,"eq","","",3,[[["async",3]],["bool",15]]],[11,"eq","","",4,[[["auto",3]],["bool",15]]],[11,"eq","","",5,[[["await",3]],["bool",15]]],[11,"eq","","",6,[[["become",3]],["bool",15]]],[11,"eq","","",7,[[["box",3]],["bool",15]]],[11,"eq","","",8,[[["break",3]],["bool",15]]],[11,"eq","","",9,[[["const",3]],["bool",15]]],[11,"eq","","",10,[[["continue",3]],["bool",15]]],[11,"eq","","",11,[[["crate",3]],["bool",15]]],[11,"eq","","",12,[[["default",3]],["bool",15]]],[11,"eq","","",13,[[["do",3]],["bool",15]]],[11,"eq","","",14,[[["dyn",3]],["bool",15]]],[11,"eq","","",15,[[["else",3]],["bool",15]]],[11,"eq","","",16,[[["enum",3]],["bool",15]]],[11,"eq","","",17,[[["extern",3]],["bool",15]]],[11,"eq","","",18,[[["final",3]],["bool",15]]],[11,"eq","","",19,[[["fn",3]],["bool",15]]],[11,"eq","","",20,[[["for",3]],["bool",15]]],[11,"eq","","",21,[[["if",3]],["bool",15]]],[11,"eq","","",22,[[["impl",3]],["bool",15]]],[11,"eq","","",23,[[["in",3]],["bool",15]]],[11,"eq","","",24,[[["let",3]],["bool",15]]],[11,"eq","","",25,[[["loop",3]],["bool",15]]],[11,"eq","","",26,[[["macro",3]],["bool",15]]],[11,"eq","","",27,[[["match",3]],["bool",15]]],[11,"eq","","",28,[[["mod",3]],["bool",15]]],[11,"eq","","",29,[[["move",3]],["bool",15]]],[11,"eq","","",30,[[["mut",3]],["bool",15]]],[11,"eq","","",31,[[["override",3]],["bool",15]]],[11,"eq","","",32,[[["priv",3]],["bool",15]]],[11,"eq","","",33,[[["pub",3]],["bool",15]]],[11,"eq","","",34,[[["ref",3]],["bool",15]]],[11,"eq","","",35,[[["return",3]],["bool",15]]],[11,"eq","","",36,[[["selftype",3]],["bool",15]]],[11,"eq","","",37,[[["selfvalue",3]],["bool",15]]],[11,"eq","","",38,[[["static",3]],["bool",15]]],[11,"eq","","",39,[[["struct",3]],["bool",15]]],[11,"eq","","",40,[[["super",3]],["bool",15]]],[11,"eq","","",41,[[["trait",3]],["bool",15]]],[11,"eq","","",42,[[["try",3]],["bool",15]]],[11,"eq","","",43,[[["type",3]],["bool",15]]],[11,"eq","","",44,[[["typeof",3]],["bool",15]]],[11,"eq","","",45,[[["union",3]],["bool",15]]],[11,"eq","","",46,[[["unsafe",3]],["bool",15]]],[11,"eq","","",47,[[["unsized",3]],["bool",15]]],[11,"eq","","",48,[[["use",3]],["bool",15]]],[11,"eq","","",49,[[["virtual",3]],["bool",15]]],[11,"eq","","",50,[[["where",3]],["bool",15]]],[11,"eq","","",51,[[["while",3]],["bool",15]]],[11,"eq","","",52,[[["yield",3]],["bool",15]]],[11,"eq","","",53,[[["add",3]],["bool",15]]],[11,"eq","","",54,[[["addeq",3]],["bool",15]]],[11,"eq","","",55,[[["and",3]],["bool",15]]],[11,"eq","","",56,[[["andand",3]],["bool",15]]],[11,"eq","","",57,[[["andeq",3]],["bool",15]]],[11,"eq","","",58,[[["at",3]],["bool",15]]],[11,"eq","","",59,[[["bang",3]],["bool",15]]],[11,"eq","","",60,[[["caret",3]],["bool",15]]],[11,"eq","","",61,[[["careteq",3]],["bool",15]]],[11,"eq","","",62,[[["colon",3]],["bool",15]]],[11,"eq","","",63,[[["colon2",3]],["bool",15]]],[11,"eq","","",64,[[["comma",3]],["bool",15]]],[11,"eq","","",65,[[["div",3]],["bool",15]]],[11,"eq","","",66,[[["diveq",3]],["bool",15]]],[11,"eq","","",67,[[["dollar",3]],["bool",15]]],[11,"eq","","",68,[[["dot",3]],["bool",15]]],[11,"eq","","",69,[[["dot2",3]],["bool",15]]],[11,"eq","","",70,[[["dot3",3]],["bool",15]]],[11,"eq","","",71,[[["dotdoteq",3]],["bool",15]]],[11,"eq","","",72,[[["eq",3]],["bool",15]]],[11,"eq","","",73,[[["eqeq",3]],["bool",15]]],[11,"eq","","",74,[[["ge",3]],["bool",15]]],[11,"eq","","",75,[[["gt",3]],["bool",15]]],[11,"eq","","",76,[[["le",3]],["bool",15]]],[11,"eq","","",77,[[["lt",3]],["bool",15]]],[11,"eq","","",78,[[["muleq",3]],["bool",15]]],[11,"eq","","",79,[[["ne",3]],["bool",15]]],[11,"eq","","",80,[[["or",3]],["bool",15]]],[11,"eq","","",81,[[["oreq",3]],["bool",15]]],[11,"eq","","",82,[[["oror",3]],["bool",15]]],[11,"eq","","",83,[[["pound",3]],["bool",15]]],[11,"eq","","",84,[[["question",3]],["bool",15]]],[11,"eq","","",85,[[["rarrow",3]],["bool",15]]],[11,"eq","","",86,[[["larrow",3]],["bool",15]]],[11,"eq","","",87,[[["rem",3]],["bool",15]]],[11,"eq","","",88,[[["remeq",3]],["bool",15]]],[11,"eq","","",89,[[["fatarrow",3]],["bool",15]]],[11,"eq","","",90,[[["semi",3]],["bool",15]]],[11,"eq","","",91,[[["shl",3]],["bool",15]]],[11,"eq","","",92,[[["shleq",3]],["bool",15]]],[11,"eq","","",93,[[["shr",3]],["bool",15]]],[11,"eq","","",94,[[["shreq",3]],["bool",15]]],[11,"eq","","",95,[[["star",3]],["bool",15]]],[11,"eq","","",96,[[["sub",3]],["bool",15]]],[11,"eq","","",97,[[["subeq",3]],["bool",15]]],[11,"eq","","",98,[[["tilde",3]],["bool",15]]],[11,"eq","","",99,[[["brace",3]],["bool",15]]],[11,"eq","","",100,[[["bracket",3]],["bool",15]]],[11,"eq","","",101,[[["paren",3]],["bool",15]]],[11,"eq","","",102,[[["group",3]],["bool",15]]],[11,"eq","syn","",178,[[],["bool",15]]],[11,"eq","","",177,[[],["bool",15]]],[11,"eq","","",297,[[],["bool",15]]],[11,"eq","","",298,[[],["bool",15]]],[11,"eq","","",299,[[],["bool",15]]],[11,"eq","","",235,[[["lifetime",3]],["bool",15]]],[11,"eq","","",300,[[],["bool",15]]],[11,"eq","","",301,[[],["bool",15]]],[11,"eq","","",302,[[],["bool",15]]],[11,"eq","","",303,[[],["bool",15]]],[11,"eq","","",304,[[],["bool",15]]],[11,"eq","","",305,[[],["bool",15]]],[11,"eq","syn::buffer","",104,[[],["bool",15]]],[11,"eq","syn::punctuated","",106,[[],["bool",15]]],[11,"eq","syn","",251,[[],["bool",15]]],[11,"eq","","",287,[[],["bool",15]]],[11,"eq","","",131,[[],["bool",15]]],[11,"eq","","",116,[[],["bool",15]]],[11,"eq","","",117,[[],["bool",15]]],[11,"eq","","",252,[[],["bool",15]]],[11,"eq","","",246,[[],["bool",15]]],[11,"eq","","",288,[[],["bool",15]]],[11,"eq","","",248,[[],["bool",15]]],[11,"eq","","",179,[[],["bool",15]]],[11,"eq","","",180,[[],["bool",15]]],[11,"eq","","",289,[[],["bool",15]]],[11,"eq","","",241,[[],["bool",15]]],[11,"eq","","",242,[[],["bool",15]]],[11,"eq","","",243,[[],["bool",15]]],[11,"eq","","",244,[[],["bool",15]]],[11,"eq","","",245,[[],["bool",15]]],[11,"eq","","",137,[[],["bool",15]]],[11,"eq","","",138,[[],["bool",15]]],[11,"eq","","",139,[[],["bool",15]]],[11,"eq","","",140,[[],["bool",15]]],[11,"eq","","",141,[[],["bool",15]]],[11,"eq","","",142,[[],["bool",15]]],[11,"eq","","",143,[[],["bool",15]]],[11,"eq","","",144,[[],["bool",15]]],[11,"eq","","",145,[[],["bool",15]]],[11,"eq","","",146,[[],["bool",15]]],[11,"eq","","",147,[[],["bool",15]]],[11,"eq","","",148,[[],["bool",15]]],[11,"eq","","",149,[[],["bool",15]]],[11,"eq","","",150,[[],["bool",15]]],[11,"eq","","",151,[[],["bool",15]]],[11,"eq","","",152,[[],["bool",15]]],[11,"eq","","",153,[[],["bool",15]]],[11,"eq","","",154,[[],["bool",15]]],[11,"eq","","",155,[[],["bool",15]]],[11,"eq","","",156,[[],["bool",15]]],[11,"eq","","",157,[[],["bool",15]]],[11,"eq","","",158,[[],["bool",15]]],[11,"eq","","",159,[[],["bool",15]]],[11,"eq","","",160,[[],["bool",15]]],[11,"eq","","",161,[[],["bool",15]]],[11,"eq","","",162,[[],["bool",15]]],[11,"eq","","",163,[[],["bool",15]]],[11,"eq","","",164,[[],["bool",15]]],[11,"eq","","",165,[[],["bool",15]]],[11,"eq","","",166,[[],["bool",15]]],[11,"eq","","",167,[[],["bool",15]]],[11,"eq","","",168,[[],["bool",15]]],[11,"eq","","",169,[[],["bool",15]]],[11,"eq","","",170,[[],["bool",15]]],[11,"eq","","",171,[[],["bool",15]]],[11,"eq","","",172,[[],["bool",15]]],[11,"eq","","",173,[[],["bool",15]]],[11,"eq","","",174,[[],["bool",15]]],[11,"eq","","",175,[[],["bool",15]]],[11,"eq","","",176,[[],["bool",15]]],[11,"eq","","",122,[[],["bool",15]]],[11,"eq","","",270,[[],["bool",15]]],[11,"eq","","",132,[[],["bool",15]]],[11,"eq","","",123,[[],["bool",15]]],[11,"eq","","",124,[[],["bool",15]]],[11,"eq","","",125,[[],["bool",15]]],[11,"eq","","",234,[[],["bool",15]]],[11,"eq","","",193,[[],["bool",15]]],[11,"eq","","",194,[[],["bool",15]]],[11,"eq","","",195,[[],["bool",15]]],[11,"eq","","",196,[[],["bool",15]]],[11,"eq","","",197,[[],["bool",15]]],[11,"eq","","",198,[[],["bool",15]]],[11,"eq","","",290,[[],["bool",15]]],[11,"eq","","",133,[[],["bool",15]]],[11,"eq","","",181,[[],["bool",15]]],[11,"eq","","",182,[[],["bool",15]]],[11,"eq","","",199,[[],["bool",15]]],[11,"eq","","",200,[[],["bool",15]]],[11,"eq","","",201,[[],["bool",15]]],[11,"eq","","",202,[[],["bool",15]]],[11,"eq","","",203,[[],["bool",15]]],[11,"eq","","",204,[[],["bool",15]]],[11,"eq","","",205,[[],["bool",15]]],[11,"eq","","",206,[[],["bool",15]]],[11,"eq","","",207,[[],["bool",15]]],[11,"eq","","",208,[[],["bool",15]]],[11,"eq","","",209,[[],["bool",15]]],[11,"eq","","",210,[[],["bool",15]]],[11,"eq","","",211,[[],["bool",15]]],[11,"eq","","",212,[[],["bool",15]]],[11,"eq","","",213,[[],["bool",15]]],[11,"eq","","",214,[[],["bool",15]]],[11,"eq","","",215,[[],["bool",15]]],[11,"eq","","",216,[[],["bool",15]]],[11,"eq","","",217,[[],["bool",15]]],[11,"eq","","",218,[[],["bool",15]]],[11,"eq","","",219,[[],["bool",15]]],[11,"eq","","",220,[[],["bool",15]]],[11,"eq","","",134,[[],["bool",15]]],[11,"eq","","",183,[[],["bool",15]]],[11,"eq","","",236,[[],["bool",15]]],[11,"eq","","",237,[[],["bool",15]]],[11,"eq","","",249,[[],["bool",15]]],[11,"eq","","",239,[[],["bool",15]]],[11,"eq","","",240,[[],["bool",15]]],[11,"eq","","",118,[[],["bool",15]]],[11,"eq","","",119,[[],["bool",15]]],[11,"eq","","",120,[[],["bool",15]]],[11,"eq","","",135,[[],["bool",15]]],[11,"eq","","",121,[[],["bool",15]]],[11,"eq","","",291,[[],["bool",15]]],[11,"eq","","",271,[[],["bool",15]]],[11,"eq","","",272,[[],["bool",15]]],[11,"eq","","",273,[[],["bool",15]]],[11,"eq","","",274,[[],["bool",15]]],[11,"eq","","",275,[[],["bool",15]]],[11,"eq","","",276,[[],["bool",15]]],[11,"eq","","",277,[[],["bool",15]]],[11,"eq","","",278,[[],["bool",15]]],[11,"eq","","",279,[[],["bool",15]]],[11,"eq","","",280,[[],["bool",15]]],[11,"eq","","",281,[[],["bool",15]]],[11,"eq","","",282,[[],["bool",15]]],[11,"eq","","",283,[[],["bool",15]]],[11,"eq","","",284,[[],["bool",15]]],[11,"eq","","",285,[[],["bool",15]]],[11,"eq","","",286,[[],["bool",15]]],[11,"eq","","",292,[[],["bool",15]]],[11,"eq","","",293,[[],["bool",15]]],[11,"eq","","",294,[[],["bool",15]]],[11,"eq","","",184,[[],["bool",15]]],[11,"eq","","",185,[[],["bool",15]]],[11,"eq","","",186,[[],["bool",15]]],[11,"eq","","",295,[[],["bool",15]]],[11,"eq","","",136,[[],["bool",15]]],[11,"eq","","",221,[[],["bool",15]]],[11,"eq","","",253,[[],["bool",15]]],[11,"eq","","",222,[[],["bool",15]]],[11,"eq","","",250,[[],["bool",15]]],[11,"eq","","",187,[[],["bool",15]]],[11,"eq","","",188,[[],["bool",15]]],[11,"eq","","",223,[[],["bool",15]]],[11,"eq","","",224,[[],["bool",15]]],[11,"eq","","",225,[[],["bool",15]]],[11,"eq","","",226,[[],["bool",15]]],[11,"eq","","",227,[[],["bool",15]]],[11,"eq","","",254,[[],["bool",15]]],[11,"eq","","",255,[[],["bool",15]]],[11,"eq","","",256,[[],["bool",15]]],[11,"eq","","",257,[[],["bool",15]]],[11,"eq","","",258,[[],["bool",15]]],[11,"eq","","",259,[[],["bool",15]]],[11,"eq","","",260,[[],["bool",15]]],[11,"eq","","",261,[[],["bool",15]]],[11,"eq","","",189,[[],["bool",15]]],[11,"eq","","",190,[[],["bool",15]]],[11,"eq","","",262,[[],["bool",15]]],[11,"eq","","",263,[[],["bool",15]]],[11,"eq","","",264,[[],["bool",15]]],[11,"eq","","",265,[[],["bool",15]]],[11,"eq","","",266,[[],["bool",15]]],[11,"eq","","",267,[[],["bool",15]]],[11,"eq","","",268,[[],["bool",15]]],[11,"eq","","",247,[[],["bool",15]]],[11,"eq","","",228,[[],["bool",15]]],[11,"eq","","",229,[[],["bool",15]]],[11,"eq","","",230,[[],["bool",15]]],[11,"eq","","",231,[[],["bool",15]]],[11,"eq","","",232,[[],["bool",15]]],[11,"eq","","",233,[[],["bool",15]]],[11,"eq","","",269,[[],["bool",15]]],[11,"eq","","",126,[[],["bool",15]]],[11,"eq","","",127,[[],["bool",15]]],[11,"eq","","",128,[[],["bool",15]]],[11,"eq","","",129,[[],["bool",15]]],[11,"eq","","",130,[[],["bool",15]]],[11,"eq","","",191,[[],["bool",15]]],[11,"eq","","",192,[[],["bool",15]]],[11,"partial_cmp","","",235,[[["lifetime",3]],[["option",4],["ordering",4]]]],[11,"deref","syn::token","",0,[[]]],[11,"deref","","",53,[[]]],[11,"deref","","",55,[[]]],[11,"deref","","",58,[[]]],[11,"deref","","",59,[[]]],[11,"deref","","",60,[[]]],[11,"deref","","",62,[[]]],[11,"deref","","",64,[[]]],[11,"deref","","",65,[[]]],[11,"deref","","",67,[[]]],[11,"deref","","",68,[[]]],[11,"deref","","",72,[[]]],[11,"deref","","",75,[[]]],[11,"deref","","",77,[[]]],[11,"deref","","",80,[[]]],[11,"deref","","",83,[[]]],[11,"deref","","",84,[[]]],[11,"deref","","",87,[[]]],[11,"deref","","",90,[[]]],[11,"deref","","",95,[[]]],[11,"deref","","",96,[[]]],[11,"deref","","",98,[[]]],[11,"deref","syn::parse","",112,[[]]],[11,"deref_mut","syn::token","",0,[[]]],[11,"deref_mut","","",53,[[]]],[11,"deref_mut","","",55,[[]]],[11,"deref_mut","","",58,[[]]],[11,"deref_mut","","",59,[[]]],[11,"deref_mut","","",60,[[]]],[11,"deref_mut","","",62,[[]]],[11,"deref_mut","","",64,[[]]],[11,"deref_mut","","",65,[[]]],[11,"deref_mut","","",67,[[]]],[11,"deref_mut","","",68,[[]]],[11,"deref_mut","","",72,[[]]],[11,"deref_mut","","",75,[[]]],[11,"deref_mut","","",77,[[]]],[11,"deref_mut","","",80,[[]]],[11,"deref_mut","","",83,[[]]],[11,"deref_mut","","",84,[[]]],[11,"deref_mut","","",87,[[]]],[11,"deref_mut","","",90,[[]]],[11,"deref_mut","","",95,[[]]],[11,"deref_mut","","",96,[[]]],[11,"deref_mut","","",98,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",297,[[["formatter",3]],["result",6]]],[11,"fmt","","",298,[[["formatter",3]],["result",6]]],[11,"fmt","","",299,[[["formatter",3]],["result",6]]],[11,"fmt","","",300,[[["formatter",3]],["result",6]]],[11,"fmt","","",301,[[["formatter",3]],["result",6]]],[11,"fmt","","",302,[[["formatter",3]],["result",6]]],[11,"fmt","","",303,[[["formatter",3]],["result",6]]],[11,"fmt","","",304,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","","",237,[[["formatter",3]],["result",6]]],[11,"fmt","syn::punctuated","",106,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",251,[[["formatter",3]],["result",6]]],[11,"fmt","","",287,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",252,[[["formatter",3]],["result",6]]],[11,"fmt","","",246,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",248,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",289,[[["formatter",3]],["result",6]]],[11,"fmt","","",241,[[["formatter",3]],["result",6]]],[11,"fmt","","",242,[[["formatter",3]],["result",6]]],[11,"fmt","","",243,[[["formatter",3]],["result",6]]],[11,"fmt","","",244,[[["formatter",3]],["result",6]]],[11,"fmt","","",245,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",270,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",290,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","","",212,[[["formatter",3]],["result",6]]],[11,"fmt","","",213,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",219,[[["formatter",3]],["result",6]]],[11,"fmt","","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",249,[[["formatter",3]],["result",6]]],[11,"fmt","","",239,[[["formatter",3]],["result",6]]],[11,"fmt","","",240,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",291,[[["formatter",3]],["result",6]]],[11,"fmt","","",271,[[["formatter",3]],["result",6]]],[11,"fmt","","",272,[[["formatter",3]],["result",6]]],[11,"fmt","","",273,[[["formatter",3]],["result",6]]],[11,"fmt","","",274,[[["formatter",3]],["result",6]]],[11,"fmt","","",275,[[["formatter",3]],["result",6]]],[11,"fmt","","",276,[[["formatter",3]],["result",6]]],[11,"fmt","","",277,[[["formatter",3]],["result",6]]],[11,"fmt","","",278,[[["formatter",3]],["result",6]]],[11,"fmt","","",279,[[["formatter",3]],["result",6]]],[11,"fmt","","",280,[[["formatter",3]],["result",6]]],[11,"fmt","","",281,[[["formatter",3]],["result",6]]],[11,"fmt","","",282,[[["formatter",3]],["result",6]]],[11,"fmt","","",283,[[["formatter",3]],["result",6]]],[11,"fmt","","",284,[[["formatter",3]],["result",6]]],[11,"fmt","","",285,[[["formatter",3]],["result",6]]],[11,"fmt","","",286,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",221,[[["formatter",3]],["result",6]]],[11,"fmt","","",253,[[["formatter",3]],["result",6]]],[11,"fmt","","",222,[[["formatter",3]],["result",6]]],[11,"fmt","","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",226,[[["formatter",3]],["result",6]]],[11,"fmt","","",227,[[["formatter",3]],["result",6]]],[11,"fmt","","",254,[[["formatter",3]],["result",6]]],[11,"fmt","","",255,[[["formatter",3]],["result",6]]],[11,"fmt","","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",257,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",259,[[["formatter",3]],["result",6]]],[11,"fmt","","",260,[[["formatter",3]],["result",6]]],[11,"fmt","","",261,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",262,[[["formatter",3]],["result",6]]],[11,"fmt","","",263,[[["formatter",3]],["result",6]]],[11,"fmt","","",264,[[["formatter",3]],["result",6]]],[11,"fmt","","",265,[[["formatter",3]],["result",6]]],[11,"fmt","","",266,[[["formatter",3]],["result",6]]],[11,"fmt","","",267,[[["formatter",3]],["result",6]]],[11,"fmt","","",268,[[["formatter",3]],["result",6]]],[11,"fmt","","",247,[[["formatter",3]],["result",6]]],[11,"fmt","","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","","",230,[[["formatter",3]],["result",6]]],[11,"fmt","","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","","",269,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",304,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",106,[[["usize",15]]]],[11,"index_mut","","",106,[[["usize",15]]]],[11,"hash","syn::token","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",102,[[]]],[11,"hash","syn","",178,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",297,[[]]],[11,"hash","","",298,[[]]],[11,"hash","","",299,[[]]],[11,"hash","","",235,[[]]],[11,"hash","","",300,[[]]],[11,"hash","","",301,[[]]],[11,"hash","","",302,[[]]],[11,"hash","","",303,[[]]],[11,"hash","","",304,[[]]],[11,"hash","","",305,[[]]],[11,"hash","syn::punctuated","",106,[[]]],[11,"hash","syn","",251,[[]]],[11,"hash","","",287,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",252,[[]]],[11,"hash","","",246,[[]]],[11,"hash","","",288,[[]]],[11,"hash","","",248,[[]]],[11,"hash","","",179,[[]]],[11,"hash","","",180,[[]]],[11,"hash","","",289,[[]]],[11,"hash","","",241,[[]]],[11,"hash","","",242,[[]]],[11,"hash","","",243,[[]]],[11,"hash","","",244,[[]]],[11,"hash","","",245,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",138,[[]]],[11,"hash","","",139,[[]]],[11,"hash","","",140,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",142,[[]]],[11,"hash","","",143,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",145,[[]]],[11,"hash","","",146,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",148,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",150,[[]]],[11,"hash","","",151,[[]]],[11,"hash","","",152,[[]]],[11,"hash","","",153,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",155,[[]]],[11,"hash","","",156,[[]]],[11,"hash","","",157,[[]]],[11,"hash","","",158,[[]]],[11,"hash","","",159,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",161,[[]]],[11,"hash","","",162,[[]]],[11,"hash","","",163,[[]]],[11,"hash","","",164,[[]]],[11,"hash","","",165,[[]]],[11,"hash","","",166,[[]]],[11,"hash","","",167,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",169,[[]]],[11,"hash","","",170,[[]]],[11,"hash","","",171,[[]]],[11,"hash","","",172,[[]]],[11,"hash","","",173,[[]]],[11,"hash","","",174,[[]]],[11,"hash","","",175,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",122,[[]]],[11,"hash","","",270,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",234,[[]]],[11,"hash","","",193,[[]]],[11,"hash","","",194,[[]]],[11,"hash","","",195,[[]]],[11,"hash","","",196,[[]]],[11,"hash","","",197,[[]]],[11,"hash","","",198,[[]]],[11,"hash","","",290,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",181,[[]]],[11,"hash","","",182,[[]]],[11,"hash","","",199,[[]]],[11,"hash","","",200,[[]]],[11,"hash","","",201,[[]]],[11,"hash","","",202,[[]]],[11,"hash","","",203,[[]]],[11,"hash","","",204,[[]]],[11,"hash","","",205,[[]]],[11,"hash","","",206,[[]]],[11,"hash","","",207,[[]]],[11,"hash","","",208,[[]]],[11,"hash","","",209,[[]]],[11,"hash","","",210,[[]]],[11,"hash","","",211,[[]]],[11,"hash","","",212,[[]]],[11,"hash","","",213,[[]]],[11,"hash","","",214,[[]]],[11,"hash","","",215,[[]]],[11,"hash","","",216,[[]]],[11,"hash","","",217,[[]]],[11,"hash","","",218,[[]]],[11,"hash","","",219,[[]]],[11,"hash","","",220,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",183,[[]]],[11,"hash","","",236,[[]]],[11,"hash","","",237,[[]]],[11,"hash","","",249,[[]]],[11,"hash","","",239,[[]]],[11,"hash","","",240,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",135,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",291,[[]]],[11,"hash","","",271,[[]]],[11,"hash","","",272,[[]]],[11,"hash","","",273,[[]]],[11,"hash","","",274,[[]]],[11,"hash","","",275,[[]]],[11,"hash","","",276,[[]]],[11,"hash","","",277,[[]]],[11,"hash","","",278,[[]]],[11,"hash","","",279,[[]]],[11,"hash","","",280,[[]]],[11,"hash","","",281,[[]]],[11,"hash","","",282,[[]]],[11,"hash","","",283,[[]]],[11,"hash","","",284,[[]]],[11,"hash","","",285,[[]]],[11,"hash","","",286,[[]]],[11,"hash","","",292,[[]]],[11,"hash","","",293,[[]]],[11,"hash","","",294,[[]]],[11,"hash","","",184,[[]]],[11,"hash","","",185,[[]]],[11,"hash","","",186,[[]]],[11,"hash","","",295,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",221,[[]]],[11,"hash","","",253,[[]]],[11,"hash","","",222,[[]]],[11,"hash","","",250,[[]]],[11,"hash","","",187,[[]]],[11,"hash","","",188,[[]]],[11,"hash","","",223,[[]]],[11,"hash","","",224,[[]]],[11,"hash","","",225,[[]]],[11,"hash","","",226,[[]]],[11,"hash","","",227,[[]]],[11,"hash","","",254,[[]]],[11,"hash","","",255,[[]]],[11,"hash","","",256,[[]]],[11,"hash","","",257,[[]]],[11,"hash","","",258,[[]]],[11,"hash","","",259,[[]]],[11,"hash","","",260,[[]]],[11,"hash","","",261,[[]]],[11,"hash","","",189,[[]]],[11,"hash","","",190,[[]]],[11,"hash","","",262,[[]]],[11,"hash","","",263,[[]]],[11,"hash","","",264,[[]]],[11,"hash","","",265,[[]]],[11,"hash","","",266,[[]]],[11,"hash","","",267,[[]]],[11,"hash","","",268,[[]]],[11,"hash","","",247,[[]]],[11,"hash","","",228,[[]]],[11,"hash","","",229,[[]]],[11,"hash","","",230,[[]]],[11,"hash","","",231,[[]]],[11,"hash","","",232,[[]]],[11,"hash","","",233,[[]]],[11,"hash","","",269,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",191,[[]]],[11,"hash","","",192,[[]]],[11,"from_iter","syn::punctuated","",106,[[["intoiterator",8]]]],[11,"from_iter","","",106,[[["intoiterator",8]]]],[11,"to_tokens","syn::token","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","syn","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",117,[[["tokenstream",3]]]],[11,"to_tokens","","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",137,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",171,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",148,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",170,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",149,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",155,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",169,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",297,[[["tokenstream",3]]]],[11,"to_tokens","","",298,[[["tokenstream",3]]]],[11,"to_tokens","","",299,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",300,[[["tokenstream",3]]]],[11,"to_tokens","","",301,[[["tokenstream",3]]]],[11,"to_tokens","","",302,[[["tokenstream",3]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",305,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",239,[[["tokenstream",3]]]],[11,"to_tokens","","",245,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",282,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",279,[[["tokenstream",3]]]],[11,"to_tokens","","",280,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","","",281,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",292,[[["tokenstream",3]]]],[11,"to_tokens","","",294,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"to_tokens","","",290,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",291,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"fmt","syn","",178,[[["formatter",3]],["result",6]]],[11,"span","","",178,[[],[["option",4],["span",3]]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"span","","",177,[[],[["option",4],["span",3]]]],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",296,[[["span",3],["str",15]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",296,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",296,[[["span",3]]]],[11,"parse_meta","","Parses the content of the attribute, consisting of the …",117,[[],[["meta",4],["result",6]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",117,[[],[["parse",8],["result",6]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given …",117,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",117,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",117,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"path","","Returns the identifier that begins this structured meta …",118,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",122,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",122,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [<code>Field</code>] items in this …",123,[[],[["iter",3],["field",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [<code>Field</code>] items …",123,[[],[["itermut",3],["field",3]]]],[11,"len","","Returns the number of fields.",123,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if there are zero fields.",123,[[],["bool",15]]],[11,"parse_without_eager_brace","","An alternative to the primary <code>Expr::parse</code> parser (from the…",137,[[["parsestream",6]],[["result",6],["expr",4]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type …",182,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type …",182,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the …",182,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the …",182,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant …",182,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the …",182,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty <code>where</code>-clause if there is not one …",182,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for …",182,[[]]],[11,"as_turbofish","","Turn a type\'s generics like <code><X, Y></code> into a turbofish like …",298,[[],["turbofish",3]]],[11,"new","","",183,[[["lifetime",3]]]],[11,"receiver","","A method\'s <code>self</code> receiver, such as <code>&self</code> or <code>self: Box<Self></code>…",222,[[],[["fnarg",4],["option",4]]]],[11,"lifetime","","",221,[[],[["option",4],["lifetime",3]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the …",235,[[["span",3],["str",15]]]],[11,"span","","",235,[[],["span",3]]],[11,"set_span","","",235,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",236,[[["literal",3]]]],[11,"suffix","","",236,[[],["str",15]]],[11,"span","","",236,[[],["span",3]]],[11,"set_span","","",236,[[["span",3]]]],[11,"new","","",300,[[["span",3],["str",15]]]],[11,"value","","",300,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string …",300,[[],[["parse",8],["result",6]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",300,[[["parser",8]],["result",6]]],[11,"span","","",300,[[],["span",3]]],[11,"set_span","","",300,[[["span",3]]]],[11,"suffix","","",300,[[],["str",15]]],[11,"new","","",301,[[["span",3]]]],[11,"value","","",301,[[],[["vec",3],["u8",15]]]],[11,"span","","",301,[[],["span",3]]],[11,"set_span","","",301,[[["span",3]]]],[11,"suffix","","",301,[[],["str",15]]],[11,"new","","",302,[[["span",3],["u8",15]]]],[11,"value","","",302,[[],["u8",15]]],[11,"span","","",302,[[],["span",3]]],[11,"set_span","","",302,[[["span",3]]]],[11,"suffix","","",302,[[],["str",15]]],[11,"new","","",303,[[["char",15],["span",3]]]],[11,"value","","",303,[[],["char",15]]],[11,"span","","",303,[[],["span",3]]],[11,"set_span","","",303,[[["span",3]]]],[11,"suffix","","",303,[[],["str",15]]],[11,"new","","",304,[[["span",3],["str",15]]]],[11,"base10_digits","","",304,[[],["str",15]]],[11,"base10_parse","","Parses the literal into a selected number type.",304,[[],["result",6]]],[11,"suffix","","",304,[[],["str",15]]],[11,"span","","",304,[[],["span",3]]],[11,"set_span","","",304,[[["span",3]]]],[11,"new","","",305,[[["span",3],["str",15]]]],[11,"base10_digits","","",305,[[],["str",15]]],[11,"base10_parse","","",305,[[],["result",6]]],[11,"suffix","","",305,[[],["str",15]]],[11,"span","","",305,[[],["span",3]]],[11,"set_span","","",305,[[["span",3]]]],[11,"new","","",237,[[["bool",15],["span",3]]]],[11,"value","","",237,[[],["bool",15]]],[11,"span","","",237,[[],["span",3]]],[11,"set_span","","",237,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters …",239,[[],[["parse",8],["result",6]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters …",239,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements, …",248,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"without_plus","","In some positions, types may not contain the <code>+</code> character, …",254,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",253,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",267,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a <code>Path</code> containing no path arguments on any of its …",292,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to …",292,[[],["bool",15]]],[11,"get_ident","","If this path consists of a single ident, returns the …",292,[[],[["option",4],["ident",3]]]],[11,"is_empty","","",293,[[],["bool",15]]],[11,"visit_abi","syn::visit","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",109,[[["arm",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_block","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_array","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async","","",109,[[["exprasync",3]]]],[11,"visit_expr_await","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block","","",109,[[["exprblock",3]]]],[11,"visit_expr_box","","",109,[[["exprbox",3]]]],[11,"visit_expr_break","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if","","",109,[[["exprif",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_let","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_range","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",109,[[["expryield",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_field_pat","","",109,[[["fieldpat",3]]]],[11,"visit_field_value","","",109,[[["fieldvalue",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file","","",109,[[["file",3]]]],[11,"visit_fn_arg","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_impl_item","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",109,[[["implitemtype",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_item","","",109,[[["item",4]]]],[11,"visit_item_const","","",109,[[["itemconst",3]]]],[11,"visit_item_enum","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",109,[[["itemmod",3]]]],[11,"visit_item_static","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",109,[[["itemtype",3]]]],[11,"visit_item_union","","",109,[[["itemunion",3]]]],[11,"visit_item_use","","",109,[[["itemuse",3]]]],[11,"visit_label","","",109,[[["label",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_local","","",109,[[["local",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",109,[[["pat",4]]]],[11,"visit_pat_box","","",109,[[["patbox",3]]]],[11,"visit_pat_ident","","",109,[[["patident",3]]]],[11,"visit_pat_lit","","",109,[[["patlit",3]]]],[11,"visit_pat_macro","","",109,[[["patmacro",3]]]],[11,"visit_pat_or","","",109,[[["pator",3]]]],[11,"visit_pat_path","","",109,[[["patpath",3]]]],[11,"visit_pat_range","","",109,[[["patrange",3]]]],[11,"visit_pat_reference","","",109,[[["patreference",3]]]],[11,"visit_pat_rest","","",109,[[["patrest",3]]]],[11,"visit_pat_slice","","",109,[[["patslice",3]]]],[11,"visit_pat_struct","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",109,[[["pattype",3]]]],[11,"visit_pat_wild","","",109,[[["patwild",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_range_limits","","",109,[[["rangelimits",4]]]],[11,"visit_receiver","","",109,[[["receiver",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_signature","","",109,[[["signature",3]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_stmt","","",109,[[["stmt",4]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",109,[[["traititemtype",3]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_use_glob","","",109,[[["useglob",3]]]],[11,"visit_use_group","","",109,[[["usegroup",3]]]],[11,"visit_use_name","","",109,[[["usename",3]]]],[11,"visit_use_path","","",109,[[["usepath",3]]]],[11,"visit_use_rename","","",109,[[["userename",3]]]],[11,"visit_use_tree","","",109,[[["usetree",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine …",312,[[["peek",8]],["bool",15]]],[11,"error","","Triggers an error at the current position of the parse …",312,[[],["error",3]]]],"p":[[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[3,"Punctuated"],[4,"Pair"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[3,"StepCursor"],[3,"ParseBuffer"],[8,"Parser"],[3,"Error"],[4,"AttrStyle"],[3,"Attribute"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Field"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[4,"Visibility"],[3,"Arm"],[3,"FieldValue"],[4,"GenericMethodArgument"],[3,"Label"],[3,"MethodTurbofish"],[4,"RangeLimits"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[4,"Member"],[3,"BoundLifetimes"],[3,"ConstParam"],[4,"GenericParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"TypeParam"],[4,"TypeParamBound"],[3,"WhereClause"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[4,"UseTree"],[3,"File"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[4,"StrStyle"],[3,"Macro"],[4,"MacroDelimiter"],[4,"Data"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[4,"BinOp"],[4,"UnOp"],[3,"Block"],[3,"Local"],[4,"Stmt"],[3,"Abi"],[3,"BareFnArg"],[4,"ReturnType"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[4,"Pat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[4,"GenericArgument"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[4,"PathArguments"],[3,"PathSegment"],[3,"QSelf"],[3,"Ident"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"texture":{"doc":"A generic library for textures.","i":[[0,"ops","texture","Image operations for textures.",null,null],[5,"flip_vertical","texture::ops","Flips the image vertically.",null,[[["u8",15]],[["vec",3],["u8",15]]]],[5,"alpha_to_rgba8","","Converts from alpha to rgba8.",null,[[],[["vec",3],["u8",15]]]],[8,"ImageSize","texture","Implemented by all images to be used with generic …",null,null],[10,"get_size","","Get the image size.",0,[[]]],[11,"get_width","","Gets the image width.",0,[[],["u32",15]]],[11,"get_height","","Gets the image height.",0,[[],["u32",15]]],[3,"TextureSettings","","Texture creation parameters.",null,null],[11,"new","","Create default settings.",1,[[],["texturesettings",3]]],[11,"get_convert_gamma","","Gets whether to convert gamma, treated as sRGB color …",1,[[],["bool",15]]],[11,"set_convert_gamma","","Sets convert gamma.",1,[[["bool",15]]]],[11,"convert_gamma","","Sets convert gamma.",1,[[["bool",15]]]],[11,"get_compress","","Gets wheter compress on the GPU.",1,[[],["bool",15]]],[11,"set_compress","","Sets compress.",1,[[["bool",15]]]],[11,"compress","","Sets compress.",1,[[["bool",15]]]],[11,"get_generate_mipmap","","Gets generate mipmap.",1,[[],["bool",15]]],[11,"set_generate_mipmap","","Sets generate mipmap.",1,[[["bool",15]]]],[11,"generate_mipmap","","Sets generate mipmap.",1,[[["bool",15]]]],[11,"get_min","","Gets minify filter.",1,[[],["filter",4]]],[11,"set_min","","Sets minify filter.",1,[[["filter",4]]]],[11,"min","","Sets minify filter.",1,[[["filter",4]]]],[11,"get_mag","","Gets magnify filter",1,[[],["filter",4]]],[11,"set_mag","","Sets magnify filter",1,[[["filter",4]]]],[11,"mag","","Sets magnify filter",1,[[["filter",4]]]],[11,"get_mipmap","","Gets minify mipmap filter",1,[[],["filter",4]]],[11,"set_mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to …",1,[[["filter",4]]]],[11,"mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to …",1,[[["filter",4]]]],[11,"get_filter","","Returns the min and mag filter",1,[[]]],[11,"set_filter","","Sets the min and mag filter",1,[[["filter",4]]]],[11,"filter","","Sets the min and mag filter",1,[[["filter",4]]]],[11,"get_wrap_u","","Gets the wrapping mode for the u coordinate",1,[[],["wrap",4]]],[11,"set_wrap_u","","Sets the wrapping mode for the u coordinate",1,[[["wrap",4]]]],[11,"wrap_u","","Sets the wrapping mode for the u coordinate",1,[[["wrap",4]]]],[11,"get_wrap_v","","Gets the wrapping mode for the v coordinate",1,[[],["wrap",4]]],[11,"set_wrap_v","","Sets the wrapping mode for the v coordinate",1,[[["wrap",4]]]],[11,"wrap_v","","Sets the wrapping mode for the v coordinate",1,[[["wrap",4]]]],[11,"get_border_color","","Gets the border color",1,[[]]],[11,"set_border_color","","Sets the border color",1,[[]]],[11,"border_color","","Sets the border color",1,[[]]],[4,"Format","","Texture format.",null,null],[13,"Rgba8","","<code>(red, green, blue, alpha)</code> with values 0-255.",2,null],[8,"TextureOp","","Implemented by texture operations.",null,null],[16,"Error","","The error when performing an operation.",3,null],[8,"CreateTexture","","Implemented by textures for creation.",null,null],[10,"create","","Create texture from memory.",4,[[["texturesettings",3],["into",8],["format",4]],["result",4]]],[8,"UpdateTexture","","Implemented by textures for updating.",null,null],[10,"update","","Update the texture.",5,[[["format",4]],["result",4]]],[4,"Filter","","Sampling filter",null,null],[13,"Linear","","A Weighted Linear Blend",6,null],[13,"Nearest","","Nearest Texel",6,null],[4,"Wrap","","Wrap mode",null,null],[13,"Repeat","","Repeats the texture by ignoring the integer part of the …",7,null],[13,"MirroredRepeat","","Repeats the texture and mirrors it, when the integer part …",7,null],[13,"ClampToEdge","","The coordinate will be clamped between 0 and 1.",7,null],[13,"ClampToBorder","","Coordinates outside the range [0.0, 1.0] will be given a …",7,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"clone","","",1,[[],["texturesettings",3]]],[11,"clone","","",2,[[],["format",4]]],[11,"clone","","",6,[[],["filter",4]]],[11,"clone","","",7,[[],["wrap",4]]],[11,"eq","","",7,[[["wrap",4]],["bool",15]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]]],"p":[[8,"ImageSize"],[3,"TextureSettings"],[4,"Format"],[8,"TextureOp"],[8,"CreateTexture"],[8,"UpdateTexture"],[4,"Filter"],[4,"Wrap"]]},\
"tiff":{"doc":"Decoding and Encoding of TIFF Images","i":[[0,"decoder","tiff","",null,null],[0,"ifd","tiff::decoder","Function for reading TIFF tags",null,null],[4,"Value","tiff::decoder::ifd","",null,null],[13,"Byte","","",0,null],[13,"Short","","",0,null],[13,"Signed","","",0,null],[13,"SignedBig","","",0,null],[13,"Unsigned","","",0,null],[13,"UnsignedBig","","",0,null],[13,"Float","","",0,null],[13,"Double","","",0,null],[13,"List","","",0,null],[13,"Rational","","",0,null],[13,"RationalBig","","",0,null],[13,"SRational","","",0,null],[13,"SRationalBig","","",0,null],[13,"Ascii","","",0,null],[11,"into_u8","","",0,[[],[["tiffresult",6],["u8",15]]]],[11,"into_u16","","",0,[[],[["tiffresult",6],["u16",15]]]],[11,"into_u32","","",0,[[],[["u32",15],["tiffresult",6]]]],[11,"into_i32","","",0,[[],[["tiffresult",6],["i32",15]]]],[11,"into_u64","","",0,[[],[["tiffresult",6],["u64",15]]]],[11,"into_i64","","",0,[[],[["i64",15],["tiffresult",6]]]],[11,"into_f32","","",0,[[],[["f32",15],["tiffresult",6]]]],[11,"into_f64","","",0,[[],[["f64",15],["tiffresult",6]]]],[11,"into_string","","",0,[[],[["tiffresult",6],["string",3]]]],[11,"into_u32_vec","","",0,[[],[["vec",3],["tiffresult",6]]]],[11,"into_u8_vec","","",0,[[],[["tiffresult",6],["vec",3]]]],[11,"into_u16_vec","","",0,[[],[["vec",3],["tiffresult",6]]]],[11,"into_i32_vec","","",0,[[],[["tiffresult",6],["vec",3]]]],[11,"into_f32_vec","","",0,[[],[["vec",3],["tiffresult",6]]]],[11,"into_f64_vec","","",0,[[],[["vec",3],["tiffresult",6]]]],[11,"into_u64_vec","","",0,[[],[["vec",3],["tiffresult",6]]]],[11,"into_i64_vec","","",0,[[],[["vec",3],["tiffresult",6]]]],[3,"Entry","","",null,null],[11,"new","","",1,[[["type",4],["u32",15]],["entry",3]]],[11,"new_u64","","",1,[[["type",4],["u64",15]],["entry",3]]],[11,"val","","",1,[[["decoder",3],["limits",3]],[["tiffresult",6],["value",4]]]],[6,"Directory","","Type representing an Image File Directory",null,null],[4,"DecodingResult","tiff::decoder","Result of a decoding process",null,null],[13,"U8","","A vector of unsigned bytes",2,null],[13,"U16","","A vector of unsigned words",2,null],[13,"U32","","A vector of 32 bit unsigned ints",2,null],[13,"U64","","A vector of 64 bit unsigned ints",2,null],[13,"F32","","A vector of 32 bit IEEE floats",2,null],[13,"F64","","A vector of 64 bit IEEE floats",2,null],[11,"as_buffer","","",2,[[["usize",15]],["decodingbuffer",4]]],[4,"DecodingBuffer","","",null,null],[13,"U8","","A slice of unsigned bytes",3,null],[13,"U16","","A slice of unsigned words",3,null],[13,"U32","","A slice of 32 bit unsigned ints",3,null],[13,"U64","","A slice of 64 bit unsigned ints",3,null],[13,"F32","","A slice of 32 bit IEEE floats",3,null],[13,"F64","","A slice of 64 bit IEEE floats",3,null],[3,"Limits","","Decoding limits",null,null],[12,"decoding_buffer_size","","The maximum size of any <code>DecodingResult</code> in bytes, the …",4,null],[12,"ifd_value_size","","The maximum size of any ifd value in bytes, the default is…",4,null],[12,"intermediate_buffer_size","","Maximum size for intermediate buffer which may be used to …",4,null],[11,"unlimited","","A configuration that does not impose any limits.",4,[[],["limits",3]]],[3,"Decoder","","The representation of a TIFF decoder",null,null],[11,"new","","Create a new decoder that decodes from the stream <code>r</code>",5,[[],[["tiffresult",6],["decoder",3]]]],[11,"with_limits","","",5,[[["limits",3]],["decoder",3]]],[11,"dimensions","","",5,[[],["tiffresult",6]]],[11,"colortype","","",5,[[],[["colortype",4],["tiffresult",6]]]],[11,"init","","Initializes the decoder.",5,[[],[["tiffresult",6],["decoder",3]]]],[11,"next_image","","Reads in the next image. If there is no further image in …",5,[[],["tiffresult",6]]],[11,"more_images","","Returns <code>true</code> if there is at least one more image …",5,[[],["bool",15]]],[11,"byte_order","","Returns the byte_order",5,[[],["byteorder",4]]],[11,"read_ifd_offset","","",5,[[],[["result",4],["error",3],["u64",15]]]],[11,"read_byte","","Reads a TIFF byte value",5,[[],[["u8",15],["error",3],["result",4]]]],[11,"read_short","","Reads a TIFF short value",5,[[],[["error",3],["result",4],["u16",15]]]],[11,"read_sshort","","Reads a TIFF sshort value",5,[[],[["result",4],["i16",15],["error",3]]]],[11,"read_long","","Reads a TIFF long value",5,[[],[["result",4],["u32",15],["error",3]]]],[11,"read_slong","","Reads a TIFF slong value",5,[[],[["error",3],["result",4],["i32",15]]]],[11,"read_float","","Reads a TIFF float value",5,[[],[["result",4],["error",3],["f32",15]]]],[11,"read_double","","Reads a TIFF double value",5,[[],[["f64",15],["result",4],["error",3]]]],[11,"read_long8","","",5,[[],[["result",4],["error",3],["u64",15]]]],[11,"read_string","","Reads a string",5,[[["usize",15]],[["tiffresult",6],["string",3]]]],[11,"read_offset","","Reads a TIFF IFA offset/value field",5,[[],["tiffresult",6]]],[11,"read_offset_u64","","Reads a TIFF IFA offset/value field",5,[[],[["result",4],["error",3]]]],[11,"goto_offset","","Moves the cursor to the specified offset",5,[[["u32",15]],["result",6]]],[11,"goto_offset_u64","","",5,[[["u64",15]],["result",6]]],[11,"find_tag","","Tries to retrieve a tag. Return <code>Ok(None)</code> if the tag is …",5,[[["tag",4]],[["option",4],["tiffresult",6]]]],[11,"find_tag_unsigned","","Tries to retrieve a tag and convert it to the desired …",5,[[["tag",4]],[["tiffresult",6],["option",4]]]],[11,"find_tag_unsigned_vec","","Tries to retrieve a vector of all a tag\'s values and …",5,[[["tag",4]],[["tiffresult",6],["option",4]]]],[11,"get_tag_unsigned","","Tries to retrieve a tag and convert it to the desired …",5,[[["tag",4]],[["tiffresult",6],["tryfrom",8],["u64",15]]]],[11,"get_tag","","Tries to retrieve a tag. Returns an error if the tag is …",5,[[["tag",4]],[["value",4],["tiffresult",6]]]],[11,"get_tag_u32","","Tries to retrieve a tag and convert it to the desired …",5,[[["tag",4]],[["u32",15],["tiffresult",6]]]],[11,"get_tag_u64","","",5,[[["tag",4]],[["tiffresult",6],["u64",15]]]],[11,"get_tag_f32","","Tries to retrieve a tag and convert it to the desired …",5,[[["tag",4]],[["f32",15],["tiffresult",6]]]],[11,"get_tag_f64","","Tries to retrieve a tag and convert it to the desired …",5,[[["tag",4]],[["f64",15],["tiffresult",6]]]],[11,"get_tag_u32_vec","","Tries to retrieve a tag and convert it to the desired …",5,[[["tag",4]],[["vec",3],["tiffresult",6]]]],[11,"get_tag_u16_vec","","",5,[[["tag",4]],[["vec",3],["tiffresult",6]]]],[11,"get_tag_u64_vec","","",5,[[["tag",4]],[["vec",3],["tiffresult",6]]]],[11,"get_tag_f32_vec","","Tries to retrieve a tag and convert it to the desired …",5,[[["tag",4]],[["vec",3],["tiffresult",6]]]],[11,"get_tag_f64_vec","","Tries to retrieve a tag and convert it to the desired …",5,[[["tag",4]],[["vec",3],["tiffresult",6]]]],[11,"get_tag_u8_vec","","Tries to retrieve a tag and convert it to a 8bit vector.",5,[[["tag",4]],[["tiffresult",6],["vec",3]]]],[11,"get_tag_ascii_string","","Tries to retrieve a tag and convert it to a ascii vector.",5,[[["tag",4]],[["tiffresult",6],["string",3]]]],[11,"strip_count","","Number of strips in image",5,[[],[["u32",15],["tiffresult",6]]]],[11,"read_jpeg","","",5,[[],[["tiffresult",6],["decodingresult",4]]]],[11,"read_strip_to_buffer","","",5,[[["decodingbuffer",4]],["tiffresult",6]]],[11,"read_strip","","Read a single strip from the image and return it as a …",5,[[],[["tiffresult",6],["decodingresult",4]]]],[11,"read_image","","Decodes the entire image and return it as a Vector",5,[[],[["tiffresult",6],["decodingresult",4]]]],[0,"encoder","tiff","",null,null],[0,"colortype","tiff::encoder","",null,null],[8,"ColorType","tiff::encoder::colortype","Trait for different colortypes that can be encoded.",null,null],[16,"Inner","","The type of each sample of this colortype",6,null],[18,"TIFF_VALUE","","The value of the tiff tag <code>PhotometricInterpretation</code>",6,null],[18,"BITS_PER_SAMPLE","","The value of the tiff tag <code>BitsPerSample</code>",6,null],[18,"SAMPLE_FORMAT","","The value of the tiff tag <code>SampleFormat</code>",6,null],[3,"Gray8","","",null,null],[3,"Gray16","","",null,null],[3,"Gray32","","",null,null],[3,"Gray32Float","","",null,null],[3,"Gray64","","",null,null],[3,"Gray64Float","","",null,null],[3,"RGB8","","",null,null],[3,"RGB16","","",null,null],[3,"RGB32","","",null,null],[3,"RGB32Float","","",null,null],[3,"RGB64","","",null,null],[3,"RGB64Float","","",null,null],[3,"RGBA8","","",null,null],[3,"RGBA16","","",null,null],[3,"RGBA32","","",null,null],[3,"RGBA32Float","","",null,null],[3,"RGBA64","","",null,null],[3,"RGBA64Float","","",null,null],[3,"CMYK8","","",null,null],[3,"CMYK16","","",null,null],[3,"CMYK32","","",null,null],[3,"CMYK32Float","","",null,null],[3,"CMYK64","","",null,null],[3,"CMYK64Float","","",null,null],[3,"Rational","tiff::encoder","Type to represent tiff values of type <code>RATIONAL</code>",null,null],[12,"n","","",7,null],[12,"d","","",7,null],[3,"SRational","","Type to represent tiff values of type <code>SRATIONAL</code>",null,null],[12,"n","","",8,null],[12,"d","","",8,null],[8,"TiffValue","","Trait for types that can be encoded in a tiff file",null,null],[18,"BYTE_LEN","","",9,null],[18,"FIELD_TYPE","","",9,null],[10,"count","","",9,[[],["u32",15]]],[11,"bytes","","",9,[[],["u32",15]]],[10,"write","","",9,[[["tiffwriter",3]],["tiffresult",6]]],[3,"TiffEncoder","","Tiff encoder.",null,null],[11,"new","","",10,[[],[["tiffresult",6],["tiffencoder",3]]]],[11,"new_directory","","Create a <code>DirectoryEncoder</code> to encode an ifd directory.",10,[[],[["directoryencoder",3],["tiffresult",6]]]],[11,"new_image","","Create an \'ImageEncoder\' to encode an image one slice at …",10,[[["u32",15]],[["imageencoder",3],["tiffresult",6]]]],[11,"write_image","","Convenience function to write an entire image from memory.",10,[[["u32",15]],["tiffresult",6]]],[3,"DirectoryEncoder","","Low level interface to encode ifd directories.",null,null],[11,"write_tag","","Write a single ifd tag.",11,[[["tag",4],["tiffvalue",8]],["tiffresult",6]]],[11,"write_data","","Write some data to the tiff file, the offset of the data …",11,[[["tiffvalue",8]],[["tiffresult",6],["u64",15]]]],[11,"finish","","Write out the ifd directory.",11,[[],["tiffresult",6]]],[3,"ImageEncoder","","Type to encode images strip by strip.",null,null],[11,"next_strip_sample_count","","Number of samples the next strip should have.",12,[[],["u64",15]]],[11,"write_strip","","Write a single strip.",12,[[],["tiffresult",6]]],[11,"write_data","","Write strips from data",12,[[],["tiffresult",6]]],[11,"resolution","","Set image resolution",12,[[["rational",3],["resolutionunit",4]]]],[11,"resolution_unit","","Set image resolution unit",12,[[["resolutionunit",4]]]],[11,"x_resolution","","Set image x-resolution",12,[[["rational",3]]]],[11,"y_resolution","","Set image y-resolution",12,[[["rational",3]]]],[11,"rows_per_strip","","Set image number of lines per strip",12,[[["u32",15]],["tiffresult",6]]],[11,"encoder","","Get a reference of the underlying <code>DirectoryEncoder</code>",12,[[],["directoryencoder",3]]],[11,"finish","","Write out image and ifd directory.",12,[[],["tiffresult",6]]],[0,"tags","tiff","",null,null],[4,"Tag","tiff::tags","TIFF tags",null,null],[13,"Artist","","",13,null],[13,"BitsPerSample","","",13,null],[13,"CellLength","","",13,null],[13,"CellWidth","","",13,null],[13,"ColorMap","","",13,null],[13,"Compression","","",13,null],[13,"Copyright","","",13,null],[13,"DateTime","","",13,null],[13,"ExtraSamples","","",13,null],[13,"FillOrder","","",13,null],[13,"FreeByteCounts","","",13,null],[13,"FreeOffsets","","",13,null],[13,"GrayResponseCurve","","",13,null],[13,"GrayResponseUnit","","",13,null],[13,"HostComputer","","",13,null],[13,"ImageDescription","","",13,null],[13,"ImageLength","","",13,null],[13,"ImageWidth","","",13,null],[13,"Make","","",13,null],[13,"MaxSampleValue","","",13,null],[13,"MinSampleValue","","",13,null],[13,"Model","","",13,null],[13,"NewSubfileType","","",13,null],[13,"Orientation","","",13,null],[13,"PhotometricInterpretation","","",13,null],[13,"PlanarConfiguration","","",13,null],[13,"ResolutionUnit","","",13,null],[13,"RowsPerStrip","","",13,null],[13,"SamplesPerPixel","","",13,null],[13,"Software","","",13,null],[13,"StripByteCounts","","",13,null],[13,"StripOffsets","","",13,null],[13,"SubfileType","","",13,null],[13,"Threshholding","","",13,null],[13,"XResolution","","",13,null],[13,"YResolution","","",13,null],[13,"JPEGTables","","",13,null],[13,"Predictor","","",13,null],[13,"TileWidth","","",13,null],[13,"TileLength","","",13,null],[13,"TileOffsets","","",13,null],[13,"TileByteCounts","","",13,null],[13,"SampleFormat","","",13,null],[13,"ModelPixelScaleTag","","",13,null],[13,"ModelTransformationTag","","",13,null],[13,"ModelTiepointTag","","",13,null],[13,"GeoKeyDirectoryTag","","",13,null],[13,"GeoDoubleParamsTag","","",13,null],[13,"GeoAsciiParamsTag","","",13,null],[13,"GdalNodata","","",13,null],[13,"Unknown","","A private or extension tag",13,null],[11,"from_u16","","",13,[[["u16",15]],["option",4]]],[11,"from_u16_exhaustive","","",13,[[["u16",15]]]],[11,"to_u16","","",13,[[],["u16",15]]],[4,"Type","","The type of an IFD entry (a 2 byte field).",null,null],[13,"BYTE","","",14,null],[13,"ASCII","","",14,null],[13,"SHORT","","",14,null],[13,"LONG","","",14,null],[13,"RATIONAL","","",14,null],[13,"SBYTE","","",14,null],[13,"UNDEFINED","","",14,null],[13,"SSHORT","","",14,null],[13,"SLONG","","",14,null],[13,"SRATIONAL","","",14,null],[13,"FLOAT","","",14,null],[13,"DOUBLE","","",14,null],[13,"LONG8","","BigTIFF 64-bit unsigned integer",14,null],[11,"from_u16","","",14,[[["u16",15]],["option",4]]],[11,"to_u16","","",14,[[],["u16",15]]],[4,"CompressionMethod","","See TIFF compression tags for reference.",null,null],[13,"None","","",15,null],[13,"Huffman","","",15,null],[13,"Fax3","","",15,null],[13,"Fax4","","",15,null],[13,"LZW","","",15,null],[13,"JPEG","","",15,null],[13,"ModernJPEG","","",15,null],[13,"Deflate","","",15,null],[13,"OldDeflate","","",15,null],[13,"PackBits","","",15,null],[11,"from_u16","","",15,[[["u16",15]],["option",4]]],[11,"to_u16","","",15,[[],["u16",15]]],[4,"PhotometricInterpretation","","",null,null],[13,"WhiteIsZero","","",16,null],[13,"BlackIsZero","","",16,null],[13,"RGB","","",16,null],[13,"RGBPalette","","",16,null],[13,"TransparencyMask","","",16,null],[13,"CMYK","","",16,null],[13,"YCbCr","","",16,null],[13,"CIELab","","",16,null],[11,"from_u16","","",16,[[["u16",15]],["option",4]]],[11,"to_u16","","",16,[[],["u16",15]]],[4,"PlanarConfiguration","","",null,null],[13,"Chunky","","",17,null],[13,"Planar","","",17,null],[11,"from_u16","","",17,[[["u16",15]],["option",4]]],[11,"to_u16","","",17,[[],["u16",15]]],[4,"Predictor","","",null,null],[13,"None","","",18,null],[13,"Horizontal","","",18,null],[11,"from_u16","","",18,[[["u16",15]],["option",4]]],[11,"to_u16","","",18,[[],["u16",15]]],[4,"ResolutionUnit","","Type to represent resolution units",null,null],[13,"None","","",19,null],[13,"Inch","","",19,null],[13,"Centimeter","","",19,null],[11,"from_u16","","",19,[[["u16",15]],["option",4]]],[11,"to_u16","","",19,[[],["u16",15]]],[4,"SampleFormat","","",null,null],[13,"Uint","","",20,null],[13,"Int","","",20,null],[13,"IEEEFP","","",20,null],[13,"Void","","",20,null],[13,"Unknown","","An unknown extension sample format",20,null],[11,"from_u16","","",20,[[["u16",15]],["option",4]]],[11,"from_u16_exhaustive","","",20,[[["u16",15]]]],[11,"to_u16","","",20,[[],["u16",15]]],[3,"InflateError","tiff","Decompression failed due to faulty compressed data.",null,null],[4,"TiffError","","Tiff error kinds.",null,null],[13,"FormatError","","The Image is not formatted properly.",21,null],[13,"UnsupportedError","","The Decoder does not support features required by the …",21,null],[13,"IoError","","An I/O Error occurred while decoding the image.",21,null],[13,"LimitsExceeded","","The Limits of the Decoder is exceeded.",21,null],[13,"IntSizeError","","An integer conversion to or from a platform size failed, …",21,null],[4,"TiffFormatError","","The image is not formatted properly.",null,null],[13,"TiffSignatureNotFound","","",22,null],[13,"TiffSignatureInvalid","","",22,null],[13,"ImageFileDirectoryNotFound","","",22,null],[13,"InconsistentSizesEncountered","","",22,null],[13,"UnexpectedCompressedData","","",22,null],[12,"actual_bytes","tiff::TiffFormatError","",23,null],[12,"required_bytes","","",23,null],[13,"InconsistentStripSamples","tiff","",22,null],[12,"actual_samples","tiff::TiffFormatError","",24,null],[12,"required_samples","","",24,null],[13,"InvalidTag","tiff","",22,null],[13,"InvalidTagValueType","","",22,null],[13,"RequiredTagNotFound","","",22,null],[13,"UnknownPredictor","","",22,null],[13,"ByteExpected","","",22,null],[13,"UnsignedIntegerExpected","","",22,null],[13,"SignedIntegerExpected","","",22,null],[13,"InflateError","","",22,null],[13,"Format","","",22,null],[13,"RequiredTagEmpty","","",22,null],[6,"TiffResult","","Result of an image decoding/encoding process",null,null],[4,"TiffUnsupportedError","","The Decoder does not support features required by the …",null,null],[13,"HorizontalPredictor","","",25,null],[13,"InterpretationWithBits","","",25,null],[13,"UnknownInterpretation","","",25,null],[13,"UnknownCompressionMethod","","",25,null],[13,"UnsupportedCompressionMethod","","",25,null],[13,"UnsupportedSampleDepth","","",25,null],[13,"UnsupportedSampleFormat","","",25,null],[13,"UnsupportedColorType","","",25,null],[13,"UnsupportedBitsPerChannel","","",25,null],[13,"UnsupportedPlanarConfig","","",25,null],[13,"UnsupportedDataType","","",25,null],[4,"ColorType","","An enumeration over supported color types and their bit …",null,null],[13,"Gray","","Pixel is grayscale",26,null],[13,"RGB","","Pixel contains R, G and B channels",26,null],[13,"Palette","","Pixel is an index into a color palette",26,null],[13,"GrayA","","Pixel is grayscale with an alpha channel",26,null],[13,"RGBA","","Pixel is RGB with an alpha channel",26,null],[13,"CMYK","","Pixel is CMYK",26,null],[11,"from","tiff::decoder::ifd","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","tiff::decoder","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","tiff::encoder::colortype","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[],["usize",15]]],[11,"deref","","",28,[[["usize",15]]]],[11,"deref_mut","","",28,[[["usize",15]]]],[11,"drop","","",28,[[["usize",15]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"init","","",35,[[],["usize",15]]],[11,"deref","","",35,[[["usize",15]]]],[11,"deref_mut","","",35,[[["usize",15]]]],[11,"drop","","",35,[[["usize",15]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"init","","",36,[[],["usize",15]]],[11,"deref","","",36,[[["usize",15]]]],[11,"deref_mut","","",36,[[["usize",15]]]],[11,"drop","","",36,[[["usize",15]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"init","","",38,[[],["usize",15]]],[11,"deref","","",38,[[["usize",15]]]],[11,"deref_mut","","",38,[[["usize",15]]]],[11,"drop","","",38,[[["usize",15]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"init","","",39,[[],["usize",15]]],[11,"deref","","",39,[[["usize",15]]]],[11,"deref_mut","","",39,[[["usize",15]]]],[11,"drop","","",39,[[["usize",15]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"init","","",41,[[],["usize",15]]],[11,"deref","","",41,[[["usize",15]]]],[11,"deref_mut","","",41,[[["usize",15]]]],[11,"drop","","",41,[[["usize",15]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"init","","",42,[[],["usize",15]]],[11,"deref","","",42,[[["usize",15]]]],[11,"deref_mut","","",42,[[["usize",15]]]],[11,"drop","","",42,[[["usize",15]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"init","","",43,[[],["usize",15]]],[11,"deref","","",43,[[["usize",15]]]],[11,"deref_mut","","",43,[[["usize",15]]]],[11,"drop","","",43,[[["usize",15]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"init","","",44,[[],["usize",15]]],[11,"deref","","",44,[[["usize",15]]]],[11,"deref_mut","","",44,[[["usize",15]]]],[11,"drop","","",44,[[["usize",15]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","tiff::encoder","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","tiff","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"from","tiff::tags","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"from","tiff","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"count","tiff::encoder","",7,[[],["u32",15]]],[11,"write","","",7,[[["tiffwriter",3]],["tiffresult",6]]],[11,"count","","",8,[[],["u32",15]]],[11,"write","","",8,[[["tiffwriter",3]],["tiffresult",6]]],[11,"drop","","",11,[[]]],[11,"drop","","",12,[[]]],[11,"from","tiff","",21,[[["error",3]],["tifferror",4]]],[11,"from","","",21,[[["fromutf8error",3]],["tifferror",4]]],[11,"from","","",21,[[["tiffformaterror",4]],["tifferror",4]]],[11,"from","","",21,[[["tiffunsupportederror",4]],["tifferror",4]]],[11,"from","","",21,[[["tryfrominterror",3]],["tifferror",4]]],[11,"clone","tiff::decoder::ifd","",0,[[],["value",4]]],[11,"clone","","",1,[[],["entry",3]]],[11,"clone","tiff::decoder","",4,[[],["limits",3]]],[11,"clone","tiff::encoder","",7,[[],["rational",3]]],[11,"clone","tiff","",22,[[],["tiffformaterror",4]]],[11,"clone","","",51,[[],["inflateerror",3]]],[11,"clone","","",25,[[],["tiffunsupportederror",4]]],[11,"clone","tiff::tags","",13,[[],["tag",4]]],[11,"clone","","",14,[[],["type",4]]],[11,"clone","","",15,[[],["compressionmethod",4]]],[11,"clone","","",16,[[],["photometricinterpretation",4]]],[11,"clone","","",17,[[],["planarconfiguration",4]]],[11,"clone","","",18,[[],["predictor",4]]],[11,"clone","","",19,[[],["resolutionunit",4]]],[11,"clone","","",20,[[],["sampleformat",4]]],[11,"clone","tiff","",26,[[],["colortype",4]]],[11,"default","tiff::decoder","",4,[[],["limits",3]]],[11,"eq","tiff::decoder::ifd","",0,[[["value",4]],["bool",15]]],[11,"ne","","",0,[[["value",4]],["bool",15]]],[11,"eq","tiff","",22,[[["tiffformaterror",4]],["bool",15]]],[11,"ne","","",22,[[["tiffformaterror",4]],["bool",15]]],[11,"eq","","",51,[[["inflateerror",3]],["bool",15]]],[11,"ne","","",51,[[["inflateerror",3]],["bool",15]]],[11,"eq","","",25,[[["tiffunsupportederror",4]],["bool",15]]],[11,"ne","","",25,[[["tiffunsupportederror",4]],["bool",15]]],[11,"eq","tiff::tags","",13,[[["tag",4]],["bool",15]]],[11,"ne","","",13,[[["tag",4]],["bool",15]]],[11,"eq","","",14,[[["type",4]],["bool",15]]],[11,"eq","","",15,[[["compressionmethod",4]],["bool",15]]],[11,"eq","","",16,[[["photometricinterpretation",4]],["bool",15]]],[11,"eq","","",17,[[["planarconfiguration",4]],["bool",15]]],[11,"eq","","",18,[[["predictor",4]],["bool",15]]],[11,"eq","","",19,[[["resolutionunit",4]],["bool",15]]],[11,"eq","","",20,[[["sampleformat",4]],["bool",15]]],[11,"ne","","",20,[[["sampleformat",4]],["bool",15]]],[11,"eq","tiff","",26,[[["colortype",4]],["bool",15]]],[11,"ne","","",26,[[["colortype",4]],["bool",15]]],[11,"fmt","tiff::decoder::ifd","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","tiff::decoder","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tiff","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","tiff::tags","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","tiff","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",51,[[]]],[11,"hash","","",25,[[]]],[11,"hash","tiff::tags","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","tiff","",26,[[]]],[11,"description","","",21,[[],["str",15]]],[11,"cause","","",21,[[],[["error",8],["option",4]]]]],"p":[[4,"Value"],[3,"Entry"],[4,"DecodingResult"],[4,"DecodingBuffer"],[3,"Limits"],[3,"Decoder"],[8,"ColorType"],[3,"Rational"],[3,"SRational"],[8,"TiffValue"],[3,"TiffEncoder"],[3,"DirectoryEncoder"],[3,"ImageEncoder"],[4,"Tag"],[4,"Type"],[4,"CompressionMethod"],[4,"PhotometricInterpretation"],[4,"PlanarConfiguration"],[4,"Predictor"],[4,"ResolutionUnit"],[4,"SampleFormat"],[4,"TiffError"],[4,"TiffFormatError"],[13,"UnexpectedCompressedData"],[13,"InconsistentStripSamples"],[4,"TiffUnsupportedError"],[4,"ColorType"],[3,"Gray8"],[3,"Gray16"],[3,"Gray32"],[3,"Gray32Float"],[3,"Gray64"],[3,"Gray64Float"],[3,"RGB8"],[3,"RGB16"],[3,"RGB32"],[3,"RGB32Float"],[3,"RGB64"],[3,"RGB64Float"],[3,"RGBA8"],[3,"RGBA16"],[3,"RGBA32"],[3,"RGBA32Float"],[3,"RGBA64"],[3,"RGBA64Float"],[3,"CMYK8"],[3,"CMYK16"],[3,"CMYK32"],[3,"CMYK32Float"],[3,"CMYK64"],[3,"CMYK64Float"],[3,"InflateError"]]},\
"ttf_parser":{"doc":"A high-level, safe, zero-allocation TrueType font parser.","i":[[0,"name_id","ttf_parser","A list of name ID\'s.",null,null],[17,"COPYRIGHT_NOTICE","ttf_parser::name_id","",null,null],[17,"FAMILY","","",null,null],[17,"SUBFAMILY","","",null,null],[17,"UNIQUE_ID","","",null,null],[17,"FULL_NAME","","",null,null],[17,"VERSION","","",null,null],[17,"POST_SCRIPT_NAME","","",null,null],[17,"TRADEMARK","","",null,null],[17,"MANUFACTURER","","",null,null],[17,"DESIGNER","","",null,null],[17,"DESCRIPTION","","",null,null],[17,"VENDOR_URL","","",null,null],[17,"DESIGNER_URL","","",null,null],[17,"LICENSE","","",null,null],[17,"LICENSE_URL","","",null,null],[17,"TYPOGRAPHIC_FAMILY","","",null,null],[17,"TYPOGRAPHIC_SUBFAMILY","","",null,null],[17,"COMPATIBLE_FULL","","",null,null],[17,"SAMPLE_TEXT","","",null,null],[17,"POST_SCRIPT_CID","","",null,null],[17,"WWS_FAMILY","","",null,null],[17,"WWS_SUBFAMILY","","",null,null],[17,"LIGHT_BACKGROUND_PALETTE","","",null,null],[17,"DARK_BACKGROUND_PALETTE","","",null,null],[17,"VARIATIONS_POST_SCRIPT_NAME_PREFIX","","",null,null],[0,"kern","ttf_parser","A kerning table implementation.",null,null],[0,"state_machine","ttf_parser::kern","A State Table for Contextual Kerning implementation.",null,null],[0,"class","ttf_parser::kern::state_machine","Predefined classes.",null,null],[17,"END_OF_TEXT","ttf_parser::kern::state_machine::class","",null,null],[17,"OUT_OF_BOUNDS","","",null,null],[17,"DELETED_GLYPH","","",null,null],[17,"END_OF_LINE","","",null,null],[17,"LETTER","","",null,null],[17,"SPACE","","",null,null],[17,"PUNCTUATION","","",null,null],[0,"state","ttf_parser::kern::state_machine","Predefined states.",null,null],[17,"START_OF_TEXT","ttf_parser::kern::state_machine::state","",null,null],[17,"START_OF_LINE","","",null,null],[17,"IN_WORD","","",null,null],[3,"State","ttf_parser::kern::state_machine","A type-safe wrapper for a state machine state.",null,null],[3,"ValueOffset","","A type-safe wrapper for a kerning value offset.",null,null],[3,"Entry","","A state machine entry.",null,null],[3,"Machine","","A state machine.",null,null],[3,"Subtable","ttf_parser::kern","A kerning subtable.",null,null],[3,"Subtables","","An iterator over kerning subtables.",null,null],[3,"VariationAxes","ttf_parser","An iterator over variation axes.",null,null],[3,"VariationAxis","","A variation axis.",null,null],[12,"tag","","",0,null],[12,"min_value","","",0,null],[12,"def_value","","",0,null],[12,"max_value","","",0,null],[12,"name_id","","An axis name in the <code>name</code> table.",0,null],[12,"hidden","","",0,null],[4,"GlyphClass","","A glyph class.",null,null],[13,"Base","","",1,null],[13,"Ligature","","",1,null],[13,"Mark","","",1,null],[13,"Component","","",1,null],[3,"Class","","A value of Class Definition Table.",null,null],[12,"0","","",2,null],[4,"PlatformId","","A platform ID.",null,null],[13,"Unicode","","",3,null],[13,"Macintosh","","",3,null],[13,"Iso","","",3,null],[13,"Windows","","",3,null],[13,"Custom","","",3,null],[3,"Name","","A Name Record.",null,null],[3,"Names","","An iterator over font\'s names.",null,null],[4,"Weight","","A font weight.",null,null],[13,"Thin","","",4,null],[13,"ExtraLight","","",4,null],[13,"Light","","",4,null],[13,"Normal","","",4,null],[13,"Medium","","",4,null],[13,"SemiBold","","",4,null],[13,"Bold","","",4,null],[13,"ExtraBold","","",4,null],[13,"Black","","",4,null],[13,"Other","","",4,null],[4,"Width","","A font width.",null,null],[13,"UltraCondensed","","",5,null],[13,"ExtraCondensed","","",5,null],[13,"Condensed","","",5,null],[13,"SemiCondensed","","",5,null],[13,"Normal","","",5,null],[13,"SemiExpanded","","",5,null],[13,"Expanded","","",5,null],[13,"ExtraExpanded","","",5,null],[13,"UltraExpanded","","",5,null],[3,"ScriptMetrics","","A script metrics used by subscript and superscript.",null,null],[12,"x_size","","Horizontal font size.",6,null],[12,"y_size","","Vertical font size.",6,null],[12,"x_offset","","X offset.",6,null],[12,"y_offset","","Y offset.",6,null],[3,"GlyphId","","A type-safe wrapper for glyph ID.",null,null],[12,"0","","",7,null],[3,"Variation","","A font variation value.",null,null],[12,"axis","","An axis tag name.",8,null],[12,"value","","An axis value.",8,null],[3,"Tag","","A 4-byte tag.",null,null],[12,"0","","",9,null],[11,"from_bytes","","Creates a <code>Tag</code> from bytes.",9,[[]]],[11,"from_bytes_lossy","","Creates a <code>Tag</code> from bytes.",9,[[]]],[11,"to_bytes","","Returns tag as 4-element byte array.",9,[[]]],[11,"to_chars","","Returns tag as 4-element byte array.",9,[[]]],[11,"is_null","","Checks if tag is null / <code>[0, 0, 0, 0]</code>.",9,[[],["bool",15]]],[11,"as_u32","","Returns tag value as <code>u32</code> number.",9,[[],["u32",15]]],[11,"to_lowercase","","Converts tag to lowercase.",9,[[]]],[11,"to_uppercase","","Converts tag to uppercase.",9,[[]]],[3,"LineMetrics","","A line metrics.",null,null],[12,"position","","Line position.",10,null],[12,"thickness","","Line thickness.",10,null],[3,"Rect","","A rectangle.",null,null],[12,"x_min","","",11,null],[12,"y_min","","",11,null],[12,"x_max","","",11,null],[12,"y_max","","",11,null],[11,"width","","Returns rect\'s width.",11,[[],["i16",15]]],[11,"height","","Returns rect\'s height.",11,[[],["i16",15]]],[8,"OutlineBuilder","","A trait for glyph outline construction.",null,null],[10,"move_to","","Appends a MoveTo segment.",12,[[["f32",15]]]],[10,"line_to","","Appends a LineTo segment.",12,[[["f32",15]]]],[10,"quad_to","","Appends a QuadTo segment.",12,[[["f32",15]]]],[10,"curve_to","","Appends a CurveTo segment.",12,[[["f32",15]]]],[10,"close","","Appends a ClosePath segment.",12,[[]]],[4,"RasterImageFormat","","A glyph raster image format.",null,null],[13,"PNG","","",13,null],[3,"RasterGlyphImage","","A glyph\'s raster image.",null,null],[12,"x","","Horizontal offset.",14,null],[12,"y","","Vertical offset.",14,null],[12,"width","","Image width.",14,null],[12,"height","","Image height.",14,null],[12,"pixels_per_em","","A pixels per em of the selected strike.",14,null],[12,"format","","An image format.",14,null],[12,"data","","A raw image data. It\'s up to the caller to decode it.",14,null],[4,"TableName","","A table name.",null,null],[13,"AxisVariations","","",15,null],[13,"CharacterToGlyphIndexMapping","","",15,null],[13,"ColorBitmapData","","",15,null],[13,"ColorBitmapLocation","","",15,null],[13,"CompactFontFormat","","",15,null],[13,"CompactFontFormat2","","",15,null],[13,"FontVariations","","",15,null],[13,"GlyphData","","",15,null],[13,"GlyphDefinition","","",15,null],[13,"GlyphVariations","","",15,null],[13,"Header","","",15,null],[13,"HorizontalHeader","","",15,null],[13,"HorizontalMetrics","","",15,null],[13,"HorizontalMetricsVariations","","",15,null],[13,"IndexToLocation","","",15,null],[13,"Kerning","","",15,null],[13,"MaximumProfile","","",15,null],[13,"MetricsVariations","","",15,null],[13,"Naming","","",15,null],[13,"PostScript","","",15,null],[13,"ScalableVectorGraphics","","",15,null],[13,"StandardBitmapGraphics","","",15,null],[13,"VerticalHeader","","",15,null],[13,"VerticalMetrics","","",15,null],[13,"VerticalMetricsVariations","","",15,null],[13,"VerticalOrigin","","",15,null],[13,"WindowsMetrics","","",15,null],[3,"Font","","A font data handle.",null,null],[11,"from_data","","Creates a <code>Font</code> object from a raw data.",16,[[["u32",15]],["option",4]]],[11,"has_table","","Checks that font has a specified table.",16,[[["tablename",4]],["bool",15]]],[11,"names","","Returns an iterator over Name Records.",16,[[],["names",3]]],[11,"family_name","","Returns font\'s family name.",16,[[],[["option",4],["string",3]]]],[11,"post_script_name","","Returns font\'s PostScript name.",16,[[],[["option",4],["string",3]]]],[11,"is_regular","","Checks that font is marked as <em>Regular</em>.",16,[[],["bool",15]]],[11,"is_italic","","Checks that font is marked as <em>Italic</em>.",16,[[],["bool",15]]],[11,"is_bold","","Checks that font is marked as <em>Bold</em>.",16,[[],["bool",15]]],[11,"is_oblique","","Checks that font is marked as <em>Oblique</em>.",16,[[],["bool",15]]],[11,"is_variable","","Checks that font is variable.",16,[[],["bool",15]]],[11,"weight","","Returns font\'s weight.",16,[[],["weight",4]]],[11,"width","","Returns font\'s width.",16,[[],["width",4]]],[11,"ascender","","Returns a horizontal font ascender.",16,[[],["i16",15]]],[11,"descender","","Returns a horizontal font descender.",16,[[],["i16",15]]],[11,"height","","Returns font\'s height.",16,[[],["i16",15]]],[11,"line_gap","","Returns a horizontal font line gap.",16,[[],["i16",15]]],[11,"vertical_ascender","","Returns a vertical font ascender.",16,[[],[["option",4],["i16",15]]]],[11,"vertical_descender","","Returns a vertical font descender.",16,[[],[["option",4],["i16",15]]]],[11,"vertical_height","","Returns a vertical font height.",16,[[],[["option",4],["i16",15]]]],[11,"vertical_line_gap","","Returns a vertical font line gap.",16,[[],[["option",4],["i16",15]]]],[11,"units_per_em","","Returns font\'s units per EM.",16,[[],[["option",4],["u16",15]]]],[11,"x_height","","Returns font\'s x height.",16,[[],[["option",4],["i16",15]]]],[11,"underline_metrics","","Returns font\'s underline metrics.",16,[[],[["linemetrics",3],["option",4]]]],[11,"strikeout_metrics","","Returns font\'s strikeout metrics.",16,[[],[["linemetrics",3],["option",4]]]],[11,"subscript_metrics","","Returns font\'s subscript metrics.",16,[[],[["option",4],["scriptmetrics",3]]]],[11,"superscript_metrics","","Returns font\'s superscript metrics.",16,[[],[["option",4],["scriptmetrics",3]]]],[11,"number_of_glyphs","","Returns a total number of glyphs in the font.",16,[[],["u16",15]]],[11,"glyph_index","","Resolves a Glyph ID for a code point.",16,[[["char",15]],[["option",4],["glyphid",3]]]],[11,"glyph_variation_index","","Resolves a variation of a Glyph ID from two code points.",16,[[["char",15]],[["option",4],["glyphid",3]]]],[11,"glyph_hor_advance","","Returns glyph\'s horizontal advance.",16,[[["glyphid",3]],[["option",4],["u16",15]]]],[11,"glyph_ver_advance","","Returns glyph\'s vertical advance.",16,[[["glyphid",3]],[["option",4],["u16",15]]]],[11,"glyph_hor_side_bearing","","Returns glyph\'s horizontal side bearing.",16,[[["glyphid",3]],[["option",4],["i16",15]]]],[11,"glyph_ver_side_bearing","","Returns glyph\'s vertical side bearing.",16,[[["glyphid",3]],[["option",4],["i16",15]]]],[11,"glyph_y_origin","","Returns glyph\'s vertical origin according to Vertical …",16,[[["glyphid",3]],[["option",4],["i16",15]]]],[11,"glyph_name","","Returns glyph\'s name.",16,[[["glyphid",3]],[["option",4],["str",15]]]],[11,"has_glyph_classes","","Checks that font has Glyph Class Definition Table.",16,[[],["bool",15]]],[11,"glyph_class","","Returns glyph\'s class according to Glyph Class Definition …",16,[[["glyphid",3]],[["option",4],["glyphclass",4]]]],[11,"glyph_mark_attachment_class","","Returns glyph\'s mark attachment class according to Mark …",16,[[["glyphid",3]],["class",3]]],[11,"is_mark_glyph","","Checks that glyph is a mark according to Mark Glyph Sets …",16,[[["u16",15],["glyphid",3],["option",4]],["bool",15]]],[11,"kerning_subtables","","Returns a iterator over kerning subtables.",16,[[],["subtables",3]]],[11,"outline_glyph","","Outlines a glyph and returns its tight bounding box.",16,[[["outlinebuilder",8],["glyphid",3]],[["option",4],["rect",3]]]],[11,"glyph_bounding_box","","Returns a tight glyph bounding box.",16,[[["glyphid",3]],[["option",4],["rect",3]]]],[11,"glyph_raster_image","","Returns a reference to a glyph\'s raster image.",16,[[["glyphid",3],["u16",15]],[["option",4],["rasterglyphimage",3]]]],[11,"glyph_svg_image","","Returns a reference to a glyph\'s SVG image.",16,[[["glyphid",3]],["option",4]]],[11,"variation_axes","","Returns an iterator over variation axes.",16,[[],["variationaxes",3]]],[11,"set_variation","","Sets a variation axis coordinate.",16,[[["f32",15],["tag",3]],["option",4]]],[5,"fonts_in_collection","","Returns the number of fonts stored in a TrueType font …",null,[[],[["option",4],["u32",15]]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"into_iter","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","ttf_parser::kern::state_machine","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","ttf_parser::kern","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"into_iter","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"from","ttf_parser","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"into_iter","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"from","","",4,[[["u16",15]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","ttf_parser::kern","",22,[[["formatter",3]],["result",6]]],[11,"fmt","ttf_parser::kern::state_machine","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","ttf_parser","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[["class",3]],["bool",15]]],[11,"ne","","",2,[[["class",3]],["bool",15]]],[11,"eq","","",0,[[["variationaxis",3]],["bool",15]]],[11,"ne","","",0,[[["variationaxis",3]],["bool",15]]],[11,"eq","","",1,[[["glyphclass",4]],["bool",15]]],[11,"eq","ttf_parser::kern::state_machine","",18,[[["state",3]],["bool",15]]],[11,"ne","","",18,[[["state",3]],["bool",15]]],[11,"eq","ttf_parser","",3,[[["platformid",4]],["bool",15]]],[11,"eq","","",4,[[["weight",4]],["bool",15]]],[11,"ne","","",4,[[["weight",4]],["bool",15]]],[11,"eq","","",5,[[["width",4]],["bool",15]]],[11,"eq","","",6,[[["scriptmetrics",3]],["bool",15]]],[11,"ne","","",6,[[["scriptmetrics",3]],["bool",15]]],[11,"eq","","",7,[[["glyphid",3]],["bool",15]]],[11,"ne","","",7,[[["glyphid",3]],["bool",15]]],[11,"eq","","",8,[[["variation",3]],["bool",15]]],[11,"ne","","",8,[[["variation",3]],["bool",15]]],[11,"eq","","",9,[[["tag",3]],["bool",15]]],[11,"ne","","",9,[[["tag",3]],["bool",15]]],[11,"eq","","",10,[[["linemetrics",3]],["bool",15]]],[11,"ne","","",10,[[["linemetrics",3]],["bool",15]]],[11,"eq","","",11,[[["rect",3]],["bool",15]]],[11,"ne","","",11,[[["rect",3]],["bool",15]]],[11,"eq","","",13,[[["rasterimageformat",4]],["bool",15]]],[11,"eq","","",14,[[["rasterglyphimage",3]],["bool",15]]],[11,"ne","","",14,[[["rasterglyphimage",3]],["bool",15]]],[11,"eq","","",15,[[["tablename",4]],["bool",15]]],[11,"cmp","","",7,[[["glyphid",3]],["ordering",4]]],[11,"cmp","","",9,[[["tag",3]],["ordering",4]]],[11,"partial_cmp","","",5,[[["width",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",7,[[["glyphid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["glyphid",3]],["bool",15]]],[11,"le","","",7,[[["glyphid",3]],["bool",15]]],[11,"gt","","",7,[[["glyphid",3]],["bool",15]]],[11,"ge","","",7,[[["glyphid",3]],["bool",15]]],[11,"partial_cmp","","",9,[[["tag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["tag",3]],["bool",15]]],[11,"le","","",9,[[["tag",3]],["bool",15]]],[11,"gt","","",9,[[["tag",3]],["bool",15]]],[11,"ge","","",9,[[["tag",3]],["bool",15]]],[11,"hash","","",9,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"count","","",17,[[],["usize",15]]],[11,"next","ttf_parser::kern","",23,[[],["option",4]]],[11,"next","ttf_parser","",25,[[],["option",4]]],[11,"count","","",25,[[],["usize",15]]],[11,"nth","","",25,[[["usize",15]],["option",4]]],[11,"clone","","",2,[[],["class",3]]],[11,"clone","","",0,[[],["variationaxis",3]]],[11,"clone","","",17,[[],["variationaxes",3]]],[11,"clone","","",1,[[],["glyphclass",4]]],[11,"clone","ttf_parser::kern","",22,[[],["subtable",3]]],[11,"clone","","",23,[[],["subtables",3]]],[11,"clone","ttf_parser::kern::state_machine","",18,[[],["state",3]]],[11,"clone","","",19,[[],["valueoffset",3]]],[11,"clone","","",20,[[],["entry",3]]],[11,"clone","ttf_parser","",3,[[],["platformid",4]]],[11,"clone","","",24,[[],["name",3]]],[11,"clone","","",25,[[],["names",3]]],[11,"clone","","",4,[[],["weight",4]]],[11,"clone","","",5,[[],["width",4]]],[11,"clone","","",6,[[],["scriptmetrics",3]]],[11,"clone","","",7,[[],["glyphid",3]]],[11,"clone","","",8,[[],["variation",3]]],[11,"clone","","",9,[[],["tag",3]]],[11,"clone","","",10,[[],["linemetrics",3]]],[11,"clone","","",11,[[],["rect",3]]],[11,"clone","","",13,[[],["rasterimageformat",4]]],[11,"clone","","",14,[[],["rasterglyphimage",3]]],[11,"clone","","",15,[[],["tablename",4]]],[11,"clone","","",16,[[],["font",3]]],[11,"default","","",17,[[],["variationaxes",3]]],[11,"default","ttf_parser::kern","",22,[[],["subtable",3]]],[11,"default","","",23,[[],["subtables",3]]],[11,"default","ttf_parser","",25,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",7,[[],["glyphid",3]]],[11,"next","ttf_parser::kern::state_machine","Returns the next offset.",19,[[]]],[11,"new_state","","Returns a new state.",20,[[],["state",3]]],[11,"has_offset","","Checks that entry has an offset.",20,[[],["bool",15]]],[11,"value_offset","","Returns a value offset.",20,[[],["valueoffset",3]]],[11,"has_push","","If set, push this glyph on the kerning stack.",20,[[],["bool",15]]],[11,"has_advance","","If set, advance to the next glyph before going to the new …",20,[[],["bool",15]]],[11,"class","","Returns a glyph class.",21,[[["glyphid",3]],[["option",4],["u8",15]]]],[11,"entry","","Returns a class entry.",21,[[["state",3],["u8",15]],[["option",4],["entry",3]]]],[11,"kerning","","Returns kerning at offset.",21,[[["valueoffset",3]],[["option",4],["i16",15]]]],[11,"new_state","","Produces a new state.",21,[[["state",3]],["state",3]]],[11,"is_horizontal","ttf_parser::kern","Checks that subtable is for horizontal text.",22,[[],["bool",15]]],[11,"is_variable","","Checks that subtable is variable.",22,[[],["bool",15]]],[11,"has_cross_stream","","Checks that subtable has a cross-stream values.",22,[[],["bool",15]]],[11,"has_state_machine","","Checks that subtable uses a state machine.",22,[[],["bool",15]]],[11,"glyphs_kerning","","Returns kerning for a pair of glyphs.",22,[[["glyphid",3]],[["option",4],["i16",15]]]],[11,"state_machine","","Returns subtable\'s state machine if there is one.",22,[[],[["option",4],["machine",3]]]],[11,"platform_id","ttf_parser","Parses the platform ID.",24,[[],[["option",4],["platformid",4]]]],[11,"encoding_id","","Parses the platform-specific encoding ID.",24,[[],["u16",15]]],[11,"language_id","","Parses the language ID.",24,[[],["u16",15]]],[11,"name_id","","Parses the Name ID.",24,[[],["u16",15]]],[11,"name","","Parses the Name\'s data as bytes.",24,[[]]],[11,"name_utf8","","Parses the Name\'s data as a UTF-8 string.",24,[[],[["option",4],["string",3]]]],[11,"is_unicode","","Checks that the current Name data has a Unicode encoding.",24,[[],["bool",15]]],[11,"to_number","","Returns a numeric representation of a weight.",4,[[],["u16",15]]],[11,"to_number","","Returns a numeric representation of a width.",5,[[],["u16",15]]]],"p":[[3,"VariationAxis"],[4,"GlyphClass"],[3,"Class"],[4,"PlatformId"],[4,"Weight"],[4,"Width"],[3,"ScriptMetrics"],[3,"GlyphId"],[3,"Variation"],[3,"Tag"],[3,"LineMetrics"],[3,"Rect"],[8,"OutlineBuilder"],[4,"RasterImageFormat"],[3,"RasterGlyphImage"],[4,"TableName"],[3,"Font"],[3,"VariationAxes"],[3,"State"],[3,"ValueOffset"],[3,"Entry"],[3,"Machine"],[3,"Subtable"],[3,"Subtables"],[3,"Name"],[3,"Names"]]},\
"unicode_xid":{"doc":"Determine if a <code>char</code> is a valid identifier for a parser …","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid …",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid …",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the …",0,[[],["bool",15]]],[10,"is_xid_continue","","Returns whether the specified <code>char</code> satisfies the …",0,[[],["bool",15]]]],"p":[[8,"UnicodeXID"]]},\
"vecmath":{"doc":"A simple and generic library for vector math.","i":[[0,"traits","vecmath","Various useful traits",null,null],[8,"Float","vecmath::traits","Convenience trait for floats.",null,null],[8,"Min","","Minimum value.",null,null],[10,"min","","Returns the minimum value of self or other.",0,[[]]],[8,"Max","","Maximum value.",null,null],[10,"max","","Returns the maximum value of self or other.",1,[[]]],[8,"Signum","","The sign of the number.",null,null],[10,"signum","","Returns number representing the sign of self",2,[[]]],[8,"Powf","","Floating number power.",null,null],[10,"powf","","Returns floating power of the number.",3,[[]]],[8,"Radians","","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",4,[[]]],[10,"_180","","Returns radians corresponding to 180 degrees.",4,[[]]],[10,"_360","","Returns radians corresponding to 360 degrees.",4,[[]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to …",4,[[]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to …",4,[[]]],[8,"One","","Number 1.",null,null],[10,"one","","Returns 1.",5,[[]]],[8,"Zero","","Number 0.",null,null],[10,"zero","","Returns 0.",6,[[]]],[8,"Sqrt","","Square root.",null,null],[10,"sqrt","","Returns square root.",7,[[]]],[8,"Trig","","Basic trigonometry functions",null,null],[10,"sin","","Returns sine of self.",8,[[]]],[10,"cos","","Returns cosine of self.",8,[[]]],[10,"tan","","Returns tangent of self.",8,[[]]],[10,"asin","","Returns inverse sine of self.",8,[[]]],[10,"acos","","Returns inverse cosine of self.",8,[[]]],[10,"atan","","Returns inverse tangent of self.",8,[[]]],[10,"atan2","","Returns the four quadrant arctangent of self (y) and …",8,[[]]],[10,"sinh","","Returns hyperbolic sine of self.",8,[[]]],[10,"cosh","","Returns hyperbolic cosine of self.",8,[[]]],[10,"tanh","","Returns hyperbolic tangent of self.",8,[[]]],[10,"asinh","","Returns inverse hyperbolic sine of self.",8,[[]]],[10,"acosh","","Returns inverse hyperbolic cosine of self.",8,[[]]],[10,"atanh","","Returns inverse hyperbolic tangent of self.",8,[[]]],[8,"Cast","","Casts into another type.",null,null],[10,"cast","","Casts into other type.",9,[[]]],[8,"FromPrimitive","","Trait for converting from different numeric types",null,null],[10,"from_f64","","from a f64",10,[[["f64",15]]]],[10,"from_f32","","from a f32",10,[[["f32",15]]]],[10,"from_isize","","from a isze",10,[[["isize",15]]]],[10,"from_u32","","from a u32",10,[[["u32",15]]]],[10,"from_i32","","from a i32",10,[[["i32",15]]]],[6,"Vector2","vecmath","A 2D vector.",null,null],[6,"Vector3","","A 3D vector.",null,null],[6,"Vector4","","A 4D vector.",null,null],[6,"Matrix2x3","","A 2x3 matrix.",null,null],[6,"Matrix3x2","","A 3x2 matrix.",null,null],[6,"Matrix3","","A 3x3 matrix.",null,null],[6,"Matrix3x4","","A 3x4 matrix.",null,null],[6,"Matrix4x3","","A 4x3 matrix.",null,null],[6,"Matrix4","","A 4x4 matrix.",null,null],[5,"col_mat3x2_mul_col","","Computes column vector in column matrix product.",null,[[["usize",15],["matrix3x2",6]],["vector2",6]]],[5,"col_mat3_mul_col","","Computes column vector in column matrix product.",null,[[["usize",15],["matrix3",6]],["vector3",6]]],[5,"col_mat4x3_mul_col","","Computes column vector in column matrix product.",null,[[["usize",15],["matrix4x3",6]],["vector3",6]]],[5,"col_mat4_mul_col","","Computes column vector in column matrix product.",null,[[["usize",15],["matrix4",6]],["vector4",6]]],[5,"row_mat2x3_mul_row","","Computes row vector in row matrix product.",null,[[["matrix2x3",6],["usize",15]],["vector3",6]]],[5,"row_mat3_mul_row","","Computes row vector in row matrix product.",null,[[["usize",15],["matrix3",6]],["vector3",6]]],[5,"row_mat3x4_mul_row","","Computes row vector in row matrix product.",null,[[["usize",15],["matrix3x4",6]],["vector4",6]]],[5,"row_mat4_mul_row","","Computes row vector in row matrix product.",null,[[["usize",15],["matrix4",6]],["vector4",6]]],[5,"col_mat3x2_mul","","Multiplies two matrices.",null,[[["matrix3x2",6]],["matrix3x2",6]]],[5,"col_mat3_mul","","Multiplies two matrices.",null,[[["matrix3",6]],["matrix3",6]]],[5,"col_mat4x3_mul","","Multiplies two matrices.",null,[[["matrix4x3",6]],["matrix4x3",6]]],[5,"col_mat4_mul","","Multiplies two matrices.",null,[[["matrix4",6]],["matrix4",6]]],[5,"row_mat2x3_mul","","Multiplies two matrices.",null,[[["matrix2x3",6]],["matrix2x3",6]]],[5,"row_mat3_mul","","Multiplies two matrices.",null,[[["matrix3",6]],["matrix3",6]]],[5,"row_mat3x4_mul","","Multiplies two matrices.",null,[[["matrix3x4",6]],["matrix3x4",6]]],[5,"row_mat4_mul","","Multiplies two matrices.",null,[[["matrix4",6]],["matrix4",6]]],[5,"mat2x3_id","","Constructs identity matrix.",null,[[],["matrix2x3",6]]],[5,"mat3x2_id","","Constructs identity matrix.",null,[[],["matrix3x2",6]]],[5,"mat3_id","","Constructs identity matrix.",null,[[],["matrix3",6]]],[5,"mat3x4_id","","Constructs identity matrix.",null,[[],["matrix3x4",6]]],[5,"mat4x3_id","","Constructs identity matrix.",null,[[],["matrix4x3",6]]],[5,"mat4_id","","Constructs identity matrix.",null,[[],["matrix4",6]]],[5,"vec2_cast","","Converts to another vector type.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_cast","","Converts to another vector type.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_cast","","Converts to another vector type.",null,[[["vector4",6]],["vector4",6]]],[5,"mat2x3_cast","","Converts to another matrix type.",null,[[["matrix2x3",6]],["matrix2x3",6]]],[5,"mat3x2_cast","","Converts to another matrix type.",null,[[["matrix3x2",6]],["matrix3x2",6]]],[5,"mat3_cast","","Converts to another matrix type.",null,[[["matrix3",6]],["matrix3",6]]],[5,"mat3x4_cast","","Converts to another matrix type.",null,[[["matrix3x4",6]],["matrix3x4",6]]],[5,"mat4x3_cast","","Converts to another matrix type.",null,[[["matrix4x3",6]],["matrix4x3",6]]],[5,"mat4_cast","","Converts to another matrix type.",null,[[["matrix4",6]],["matrix4",6]]],[5,"vec2_sub","","Subtracts \'b\' from \'a\'.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_sub","","Subtracts \'b\' from \'a\'.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_sub","","Subtracts \'b\' from \'a\'.",null,[[["vector4",6]],["vector4",6]]],[5,"mat2x3_sub","","Subtracts \'b\' from \'a\'.",null,[[["matrix2x3",6]],["matrix2x3",6]]],[5,"mat3x2_sub","","Subtracts \'b\' from \'a\'.",null,[[["matrix3x2",6]],["matrix3x2",6]]],[5,"mat3_sub","","Subtracts \'b\' from \'a\'.",null,[[["matrix3",6]],["matrix3",6]]],[5,"mat3x4_sub","","Subtracts \'b\' from \'a\'.",null,[[["matrix3x4",6]],["matrix3x4",6]]],[5,"mat4x3_sub","","Subtracts \'b\' from \'a\'.",null,[[["matrix4x3",6]],["matrix4x3",6]]],[5,"mat4_sub","","Subtracts \'b\' from \'a\'.",null,[[["matrix4",6]],["matrix4",6]]],[5,"vec2_add","","Adds two vectors.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_add","","Adds two vectors.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_add","","Adds two vectors.",null,[[["vector4",6]],["vector4",6]]],[5,"mat2x3_add","","Adds two matrices.",null,[[["matrix2x3",6]],["matrix2x3",6]]],[5,"mat3x2_add","","Adds two matrices.",null,[[["matrix3x2",6]],["matrix3x2",6]]],[5,"mat3_add","","Adds two matrices.",null,[[["matrix3",6]],["matrix3",6]]],[5,"mat3x4_add","","Adds two matrices.",null,[[["matrix3x4",6]],["matrix3x4",6]]],[5,"mat4x3_add","","Adds two matrices.",null,[[["matrix4x3",6]],["matrix4x3",6]]],[5,"mat4_add","","Adds two matrices.",null,[[["matrix4",6]],["matrix4",6]]],[5,"vec2_mul","","Multiplies two vectors component wise.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_mul","","Multiplies two vectors component wise.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_mul","","Multiplies two vectors component wise.",null,[[["vector4",6]],["vector4",6]]],[5,"vec2_dot","","Computes the dot product.",null,[[["vector2",6]]]],[5,"vec3_dot","","Computes the dot product.",null,[[["vector3",6]]]],[5,"vec4_dot","","Computes the dot product.",null,[[["vector4",6]]]],[5,"vec2_square_len","","Computes the square length of a vector.",null,[[["vector2",6]]]],[5,"vec3_square_len","","Computes the square length of a vector.",null,[[["vector3",6]]]],[5,"vec4_square_len","","Computes the square length of a vector.",null,[[["vector4",6]]]],[5,"vec2_cross","","Computes the cross product.",null,[[["vector2",6]]]],[5,"vec3_cross","","Computes the cross product.",null,[[["vector3",6]],["vector3",6]]],[5,"vec2_scale","","Multiplies the vector with a scalar.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_scale","","Multiplies the vector with a scalar.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_scale","","Multiplies the vector with a scalar.",null,[[["vector4",6]],["vector4",6]]],[5,"vec2_neg","","Negates the vector.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_neg","","Negates the vector.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_neg","","Negates the vector.",null,[[["vector4",6]],["vector4",6]]],[5,"vec2_len","","Computes the length of vector.",null,[[["vector2",6]]]],[5,"vec3_len","","Computes the length of vector.",null,[[["vector3",6]]]],[5,"vec4_len","","Computes the length of vector.",null,[[["vector4",6]]]],[5,"vec2_inv_len","","Computes the inverse length of a vector.",null,[[["vector2",6]]]],[5,"vec3_inv_len","","Computes the inverse length of a vector.",null,[[["vector3",6]]]],[5,"vec4_inv_len","","Computes the inverse length of a vector.",null,[[["vector4",6]]]],[5,"vec2_normalized","","Computes the normalized.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_normalized","","Computes the normalized.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_normalized","","Computes the normalized.",null,[[["vector4",6]],["vector4",6]]],[5,"vec2_normalized_sub","","Computes the normalized difference between two vectors.",null,[[["vector2",6]],["vector2",6]]],[5,"vec3_normalized_sub","","Computes the normalized difference between two vectors.",null,[[["vector3",6]],["vector3",6]]],[5,"vec4_normalized_sub","","Computes the normalized difference between two vectors.",null,[[["vector4",6]],["vector4",6]]],[5,"vec3_dot_vec2","","Computes transformed vector component.",null,[[["vector2",6],["vector3",6]]]],[5,"vec4_dot_vec3","","Computes transformed vector component.",null,[[["vector4",6],["vector3",6]]]],[5,"vec3_dot_pos2","","Computes transformed position component.",null,[[["vector2",6],["vector3",6]]]],[5,"vec4_dot_pos3","","Computes transformed position component.",null,[[["vector4",6],["vector3",6]]]],[5,"row_mat2x3_col","","Returns a column vector of a row matrix.",null,[[["matrix2x3",6],["usize",15],["copy",8]],[["vector2",6],["copy",8]]]],[5,"col_mat2x3_row","","Returns a row vector of a column matrix.",null,[[["matrix2x3",6],["usize",15],["copy",8]],[["vector2",6],["copy",8]]]],[5,"row_mat3x2_col","","Returns a column vector of a row matrix.",null,[[["usize",15],["matrix3x2",6],["copy",8]],[["copy",8],["vector3",6]]]],[5,"col_mat3x2_row","","Returns a row vector of a column matrix.",null,[[["usize",15],["matrix3x2",6],["copy",8]],[["copy",8],["vector3",6]]]],[5,"row_mat3_col","","Returns a column vector of a row matrix.",null,[[["matrix3",6],["usize",15],["copy",8]],[["copy",8],["vector3",6]]]],[5,"col_mat3_row","","Returns a row vector of a column matrix.",null,[[["matrix3",6],["usize",15],["copy",8]],[["copy",8],["vector3",6]]]],[5,"row_mat3x4_col","","Returns a column vector of a row matrix.",null,[[["usize",15],["matrix3x4",6],["copy",8]],[["copy",8],["vector3",6]]]],[5,"col_mat3x4_row","","Returns a row vector of a column matrix.",null,[[["usize",15],["matrix3x4",6],["copy",8]],[["copy",8],["vector3",6]]]],[5,"row_mat4x3_col","","Returns a column vector of a row matrix.",null,[[["matrix4x3",6],["usize",15],["copy",8]],[["vector4",6],["copy",8]]]],[5,"col_mat4x3_row","","Returns a column vector of a row matrix.",null,[[["matrix4x3",6],["usize",15],["copy",8]],[["vector4",6],["copy",8]]]],[5,"row_mat4_col","","Returns a column vector of a row matrix.",null,[[["usize",15],["matrix4",6],["copy",8]],[["vector4",6],["copy",8]]]],[5,"col_mat4_row","","Returns a row vector of a column matrix.",null,[[["usize",15],["matrix4",6],["copy",8]],[["vector4",6],["copy",8]]]],[5,"mat2x3_transposed","","Constructs the transpose of a matrix.",null,[[["matrix2x3",6],["copy",8]],[["matrix3x2",6],["copy",8]]]],[5,"mat3x2_transposed","","Constructs the transpose of a matrix.",null,[[["matrix3x2",6],["copy",8]],[["matrix2x3",6],["copy",8]]]],[5,"mat3_transposed","","Constructs the transpose of a matrix.",null,[[["matrix3",6],["copy",8]],[["copy",8],["matrix3",6]]]],[5,"mat3x4_transposed","","Constructs the transpose of a matrix.",null,[[["matrix3x4",6],["copy",8]],[["copy",8],["matrix4x3",6]]]],[5,"mat4x3_transposed","","Constructs the transpose of a matrix.",null,[[["matrix4x3",6],["copy",8]],[["matrix3x4",6],["copy",8]]]],[5,"mat4_transposed","","Constructs the transpose of a matrix.",null,[[["matrix4",6],["copy",8]],[["matrix4",6],["copy",8]]]],[5,"col_mat3_transform","","Transforms a 3D vector through a matrix.",null,[[["vector3",6],["matrix3",6]],["vector3",6]]],[5,"col_mat4_transform","","Transforms a 4D vector through a matrix.",null,[[["matrix4",6],["vector4",6]],["vector4",6]]],[5,"row_mat3_transform","","Transforms a 3D vector through a matrix.",null,[[["vector3",6],["matrix3",6]],["vector3",6]]],[5,"row_mat4_transform","","Transforms a 4D vector through a matrix.",null,[[["matrix4",6],["vector4",6]],["vector4",6]]],[5,"row_mat2x3_transform_pos2","","Transforms a 2D position through matrix.",null,[[["matrix2x3",6],["vector2",6]],["vector2",6]]],[5,"col_mat3x2_transform_pos2","","Transforms a 2D position through matrix.",null,[[["vector2",6],["matrix3x2",6]],["vector2",6]]],[5,"row_mat3_transform_pos2","","Transforms a 2D position through row matrix.",null,[[["vector2",6],["matrix3",6]],["vector2",6]]],[5,"col_mat3_transform_pos2","","Transforms a 2D position through column matrix.",null,[[["vector2",6],["matrix3",6]],["vector2",6]]],[5,"row_mat3x4_transform_pos3","","Transforms a 3D position through matrix.",null,[[["matrix3x4",6],["vector3",6]],["vector3",6]]],[5,"col_mat4x3_transform_pos3","","Transforms a 3D position through matrix.",null,[[["vector3",6],["matrix4x3",6]],["vector3",6]]],[5,"row_mat2x3_transform_vec2","","Transforms a 2D vector through matrix.",null,[[["matrix2x3",6],["vector2",6]],["vector2",6]]],[5,"col_mat3x2_transform_vec2","","Transforms a 2D vector through matrix.",null,[[["vector2",6],["matrix3x2",6]],["vector2",6]]],[5,"row_mat3_transform_vec2","","Transforms a 2D vector through row matrix.",null,[[["vector2",6],["matrix3",6]],["vector2",6]]],[5,"col_mat3_transform_vec2","","Transforms a 2D vector through column matrix.",null,[[["vector2",6],["matrix3",6]],["vector2",6]]],[5,"row_mat3x4_transform_vec3","","Transforms a 3D vector through matrix.",null,[[["matrix3x4",6],["vector3",6]],["vector3",6]]],[5,"col_mat4x3_transform_vec3","","Transforms a 3D vector through matrix.",null,[[["vector3",6],["matrix4x3",6]],["vector3",6]]],[5,"mat2x3_det","","Computes the determinant of a matrix.",null,[[["matrix2x3",6]]]],[5,"mat3x2_det","","Computes the determinant of a matrix.",null,[[["matrix3x2",6]]]],[5,"mat3_det","","Computes the determinant of a matrix.",null,[[["matrix3",6]]]],[5,"mat3x4_det","","Computes the determinant of a matrix.",null,[[["matrix3x4",6]]]],[5,"mat4x3_det","","Computes the determinant of a matrix.",null,[[["matrix4x3",6]]]],[5,"mat4_det","","Computes the determinant of a 4x4 matrix.",null,[[["matrix4",6]]]],[5,"mat2x3_inv_det","","Computes inverse determinant of a 2x3 matrix.",null,[[["matrix2x3",6]]]],[5,"mat3x2_inv_det","","Computes inverse determinant of a 3x2 matrix.",null,[[["matrix3x2",6]]]],[5,"mat3_inv_det","","Computes inverse determinant of a 3x3 matrix.",null,[[["matrix3",6]]]],[5,"mat3x4_inv_det","","Computes inverse determinant of a 3x4 matrix.",null,[[["matrix3x4",6]]]],[5,"mat4x3_inv_det","","Computes inverse determinant of a 4x3 matrix.",null,[[["matrix4x3",6]]]],[5,"mat4_inv_det","","Computes the inverse determinant of a 4x4 matrix.",null,[[["matrix4",6]]]],[5,"mat2x3_inv","","Computes the inverse of a 2x3 matrix.",null,[[["matrix2x3",6]],["matrix2x3",6]]],[5,"mat3x2_inv","","Computes the inverse of a 3x2 matrix.",null,[[["matrix3x2",6]],["matrix3x2",6]]],[5,"mat3_inv","","Computes the inverse of a 3x3 matrix.",null,[[["matrix3",6]],["matrix3",6]]],[5,"mat3x4_inv","","Computes the inverse of a 3x4 matrix.",null,[[["matrix3x4",6]],["matrix3x4",6]]],[5,"mat4x3_inv","","Computes the inverse of a 4x3 matrix.",null,[[["matrix4x3",6]],["matrix4x3",6]]],[5,"mat4_inv","","Computes the inverse of a 4x4 matrix.",null,[[["matrix4",6]],["matrix4",6]]]],"p":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Powf"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]},\
"viewport":{"doc":"A library for storing viewport information","i":[[3,"Viewport","viewport","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels. <code>[x, y, width height]</code> where <code>(x, y)</code> is …",0,null],[12,"draw_size","","The size of frame buffer in pixels.",0,null],[12,"window_size","","The size of window in points.",0,null],[11,"abs_transform","","Computes absolute transform for 2D graphics, which uses a …",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["viewport",3]]],[11,"eq","","",0,[[["viewport",3]],["bool",15]]],[11,"ne","","",0,[[["viewport",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Viewport"]]},\
"weezl":{"doc":"LZW decoder and encoderThis crates provides an <code>Encoder</code> …","i":[[0,"decode","weezl","A module for all decoding needs.",null,null],[3,"Decoder","weezl::decode","The state for decoding data with an LZW algorithm.",null,null],[3,"IntoStream","","A decoding stream sink.",null,null],[11,"new","","Create a new decoder with the specified bit order and …",0,[[["bitorder",4],["u8",15]]]],[11,"with_tiff_size_switch","","Create a TIFF compatible decoder with the specified bit …",0,[[["bitorder",4],["u8",15]]]],[11,"decode_bytes","","Decode some bytes from <code>inp</code> and write result to <code>out</code>.",0,[[],["bufferresult",3]]],[11,"into_stream","","Construct a decoder into a writer.",0,[[["write",8]],[["intostream",3],["write",8]]]],[11,"has_ended","","Check if the decoding has finished.",0,[[],["bool",15]]],[11,"reset","","Reset all internal state.",0,[[]]],[11,"decode","","Decode data from a reader.",1,[[],["streamresult",3]]],[11,"decode_all","","Decode data from a reader, requiring an end marker.",1,[[],["streamresult",3]]],[11,"set_buffer_size","","Set the size of the intermediate decode buffer.",1,[[["usize",15]]]],[11,"set_buffer","","Use a particular buffer as an intermediate decode buffer.",1,[[]]],[0,"encode","weezl","A module for all encoding needs.",null,null],[3,"Encoder","weezl::encode","The state for encoding data with an LZW algorithm.",null,null],[3,"IntoStream","","A encoding stream sink.",null,null],[11,"new","","Create a new encoder with the specified bit order and …",2,[[["bitorder",4],["u8",15]]]],[11,"with_tiff_size_switch","","Create a TIFF compatible encoder with the specified bit …",2,[[["bitorder",4],["u8",15]]]],[11,"encode_bytes","","Encode some bytes from <code>inp</code> into <code>out</code>.",2,[[],["bufferresult",3]]],[11,"into_stream","","Construct a encoder into a writer.",2,[[["write",8]],[["intostream",3],["write",8]]]],[11,"finish","","Mark the encoding as in the process of finishing.",2,[[]]],[11,"reset","","Reset all internal state.",2,[[]]],[11,"encode","","Encode data from a reader.",3,[[],["streamresult",3]]],[11,"encode_all","","Encode data from a reader and an end marker.",3,[[],["streamresult",3]]],[11,"set_buffer_size","","Set the size of the intermediate encode buffer.",3,[[["usize",15]]]],[11,"set_buffer","","Use a particular buffer as an intermediate encode buffer.",3,[[]]],[4,"BitOrder","weezl","The order of bits in bytes.",null,null],[13,"Msb","","The most significant bit is processed first.",4,null],[13,"Lsb","","The least significant bit is processed first.",4,null],[3,"StreamResult","","The result of coding into an output stream.",null,null],[12,"bytes_read","","The total number of bytes consumed from the reader.",5,null],[12,"bytes_written","","The total number of bytes written into the writer.",5,null],[12,"status","","The possible error that occurred.",5,null],[3,"BufferResult","","The result of a coding operation on a pair of buffer.",null,null],[12,"consumed_in","","The number of bytes consumed from the input buffer.",6,null],[12,"consumed_out","","The number of bytes written into the output buffer.",6,null],[12,"status","","The status after returning from the write call.",6,null],[4,"LzwError","","The error kind after unsuccessful coding of an LZW stream.",null,null],[13,"InvalidCode","","The input contained an invalid code.",7,null],[4,"LzwStatus","","The status after successful coding of an LZW stream.",null,null],[13,"Ok","","Everything went well.",8,null],[13,"NoProgress","","No bytes were read or written and no internal state …",8,null],[13,"Done","","No more data will be produced because an end marker was …",8,null],[11,"from","weezl::decode","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","weezl::encode","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","weezl","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"clone","","",4,[[],["bitorder",4]]],[11,"clone","","",8,[[],["lzwstatus",4]]],[11,"clone","","",7,[[],["lzwerror",4]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]]],"p":[[3,"Decoder"],[3,"IntoStream"],[3,"Encoder"],[3,"IntoStream"],[4,"BitOrder"],[3,"StreamResult"],[3,"BufferResult"],[4,"LzwError"],[4,"LzwStatus"]]},\
"window":{"doc":"Window storage and interfacing traits.","i":[[3,"Api","window","Stores graphics API version.",null,null],[12,"api","","A string identifying the API.",0,null],[12,"major","","Major version.",0,null],[12,"minor","","Minor version.",0,null],[3,"UnsupportedGraphicsApiError","","An error for when a graphics API is unsupported.",null,null],[12,"found","","The requiested graphics API.",1,null],[12,"expected","","A list of supported graphics APIs.",1,null],[3,"NoWindow","","A window without user interface, often used in server …",null,null],[6,"ProcAddress","","The type of an OpenGL function address.",null,null],[3,"Size","","Structure to store the window size.",null,null],[12,"width","","The width.",2,null],[12,"height","","The height.",2,null],[3,"Position","","Structure to store the window position.",null,null],[12,"x","","The x coordinate.",3,null],[12,"y","","The y coordinate.",3,null],[8,"BuildFromWindowSettings","","Constructs a window from a <code>WindowSettings</code> object.",null,null],[10,"build_from_window_settings","","Builds the window from a <code>WindowSettings</code> object.",4,[[["windowsettings",3]],[["result",4],["box",3]]]],[8,"Window","","Trait representing the minimum requirements for defining …",null,null],[10,"set_should_close","","Tells the window to close or stay open.",5,[[["bool",15]]]],[10,"should_close","","Returns true if the window should close.",5,[[],["bool",15]]],[10,"size","","Gets the size of the window.",5,[[],["size",3]]],[10,"swap_buffers","","Swaps render buffers.",5,[[]]],[10,"wait_event","","Wait indefinitely for an input event to be available from …",5,[[],["event",4]]],[10,"wait_event_timeout","","Wait for an input event to be available from the window …",5,[[["duration",3]],[["option",4],["event",4]]]],[10,"poll_event","","Polls an input event from the window.",5,[[],[["option",4],["event",4]]]],[10,"draw_size","","Gets the draw size of the window.",5,[[],["size",3]]],[8,"AdvancedWindow","","Trait representing a window with the most features that …",null,null],[10,"get_title","","Gets a copy of the title of the window.",6,[[],["string",3]]],[10,"set_title","","Sets the title of the window.",6,[[["string",3]]]],[11,"title","","Sets title on window.",6,[[["string",3]]]],[10,"get_exit_on_esc","","Gets whether to exit when pressing esc.",6,[[],["bool",15]]],[10,"set_exit_on_esc","","Sets whether to exit when pressing esc.",6,[[["bool",15]]]],[11,"exit_on_esc","","Sets whether to exit when pressing the Esc button.",6,[[["bool",15]]]],[10,"get_automatic_close","","Gets whether the window will automatically close when …",6,[[],["bool",15]]],[10,"set_automatic_close","","Sets whether the window will automatically close when …",6,[[["bool",15]]]],[11,"automatic_close","","Sets whether the window will automatically close when …",6,[[["bool",15]]]],[10,"set_capture_cursor","","Sets whether to capture/grab the cursor.",6,[[["bool",15]]]],[11,"capture_cursor","","Sets whether to capture/grab the cursor.",6,[[["bool",15]]]],[10,"show","","Shows the window.",6,[[]]],[10,"hide","","Hides the window.",6,[[]]],[10,"get_position","","Gets the position of window.",6,[[],[["position",3],["option",4]]]],[10,"set_position","","Sets the position of window.",6,[[["position",3],["into",8]]]],[10,"set_size","","Sets the window size.",6,[[["into",8],["size",3]]]],[11,"position","","Sets the position of window.",6,[[["position",3],["into",8]]]],[8,"OpenGLWindow","","Trait for OpenGL specific operations on a window.",null,null],[10,"get_proc_address","","Returns the address of the specified OpenGL function if …",7,[[["str",15]],["procaddress",6]]],[10,"is_current","","Returns true if this window\'s gl context is the current …",7,[[],["bool",15]]],[10,"make_current","","Make the window\'s gl context the current gl context.",7,[[]]],[3,"WindowSettings","","Settings structure for window behavior.",null,null],[11,"new","","Creates window settings with defaults.",8,[[["string",3],["into",8],["into",8],["size",3]],["windowsettings",3]]],[11,"build","","Builds window from the given settings.",8,[[],[["result",4],["buildfromwindowsettings",8],["box",3]]]],[11,"get_title","","Gets the title of built windows.",8,[[],["string",3]]],[11,"set_title","","Sets the title of built windows.",8,[[["string",3]]]],[11,"title","","Sets the title of built windows.",8,[[["string",3]]]],[11,"get_size","","Gets the size of built windows.",8,[[],["size",3]]],[11,"set_size","","Sets the size of built windows.",8,[[["size",3]]]],[11,"size","","Sets the size of built windows.",8,[[["size",3]]]],[11,"get_fullscreen","","Gets whether built windows will be fullscreen.",8,[[],["bool",15]]],[11,"set_fullscreen","","Sets whether built windows will be fullscreen.",8,[[["bool",15]]]],[11,"fullscreen","","Sets whether built windows will be fullscreen.",8,[[["bool",15]]]],[11,"get_exit_on_esc","","Gets whether built windows should exit when the Esc key …",8,[[],["bool",15]]],[11,"set_exit_on_esc","","Sets whether built windows should exit when the Esc key …",8,[[["bool",15]]]],[11,"exit_on_esc","","Sets whether built windows should exit when the Esc key …",8,[[["bool",15]]]],[11,"get_automatic_close","","Gets whether built windows should automatically close …",8,[[],["bool",15]]],[11,"set_automatic_close","","Sets whether built windows should automatically close …",8,[[["bool",15]]]],[11,"automatic_close","","Sets whether built windows should automatically close …",8,[[["bool",15]]]],[11,"get_samples","","Gets the number of samples to use for anti-aliasing.",8,[[],["u8",15]]],[11,"set_samples","","Sets the number of samples to use for anti-aliasing.",8,[[["u8",15]]]],[11,"samples","","Sets the number of samples to use for anti-aliasing.",8,[[["u8",15]]]],[11,"get_vsync","","Gets whether built windows should use vsync.",8,[[],["bool",15]]],[11,"set_vsync","","Sets whether built windows should use vsync.",8,[[["bool",15]]]],[11,"vsync","","Sets whether built windows should use vsync.",8,[[["bool",15]]]],[11,"get_maybe_graphics_api","","Gets the graphics API version of built windows.",8,[[],[["api",3],["option",4]]]],[11,"set_maybe_graphics_api","","Sets graphics API version of built windows.",8,[[["option",4],["into",8],["api",3]]]],[11,"maybe_graphics_api","","Sets graphics API version of built windows.",8,[[["option",4],["into",8],["api",3]]]],[11,"set_graphics_api","","Sets graphics API version of built windows.",8,[[["into",8],["api",3]]]],[11,"graphics_api","","Sets the graphics API version of built windows.",8,[[["into",8],["api",3]]]],[11,"get_srgb","","Gets whether built windows should use hardware …",8,[[],["bool",15]]],[11,"set_srgb","","Sets whether built windows should use hardware …",8,[[["bool",15]]]],[11,"srgb","","Sets whether built windows should use hardware …",8,[[["bool",15]]]],[11,"get_resizable","","Gets whether built windows should be resizable.",8,[[],["bool",15]]],[11,"set_resizable","","Sets whether built windows should be resizable.",8,[[["bool",15]]]],[11,"resizable","","Sets whether built windows should be resizable.",8,[[["bool",15]]]],[11,"get_decorated","","Gets whether built windows should be decorated.",8,[[],["bool",15]]],[11,"set_decorated","","Sets whether built windows should be decorated.",8,[[["bool",15]]]],[11,"decorated","","Sets whether built windows should be decorated.",8,[[["bool",15]]]],[11,"get_controllers","","Gets whether built windows should listen to controller …",8,[[],["bool",15]]],[11,"set_controllers","","Sets whether built windows should listen to controller …",8,[[["bool",15]]]],[11,"controllers","","Sets whether built windows should listen to controller …",8,[[["bool",15]]]],[11,"get_transparent","","Gets whether built windows should be transparent.",8,[[],["bool",15]]],[11,"set_transparent","","Sets whether built windows should be transparent.",8,[[["bool",15]]]],[11,"transparent","","Sets whether built windows should be transparent.",8,[[["bool",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",0,[[],["version",3]]],[11,"partial_cmp","","",0,[[["version",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["version",3]],["bool",15]]],[11,"le","","",0,[[["version",3]],["bool",15]]],[11,"gt","","",0,[[["version",3]],["bool",15]]],[11,"ge","","",0,[[["version",3]],["bool",15]]],[11,"cmp","","",0,[[["version",3]],["ordering",4]]],[11,"eq","","",0,[[["version",3]],["bool",15]]],[11,"ne","","",0,[[["version",3]],["bool",15]]],[11,"build_from_window_settings","","ErrorsThis function will always return without error.",9,[[["windowsettings",3]],[["result",4],["box",3]]]],[11,"should_close","","",9,[[],["bool",15]]],[11,"set_should_close","","",9,[[["bool",15]]]],[11,"size","","",9,[[],["size",3]]],[11,"swap_buffers","","",9,[[]]],[11,"wait_event","","",9,[[],["event",4]]],[11,"wait_event_timeout","","",9,[[["duration",3]],[["option",4],["event",4]]]],[11,"poll_event","","",9,[[],[["option",4],["event",4]]]],[11,"draw_size","","",9,[[],["size",3]]],[11,"get_title","","",9,[[],["string",3]]],[11,"set_title","","",9,[[["string",3]]]],[11,"get_exit_on_esc","","",9,[[],["bool",15]]],[11,"set_exit_on_esc","","",9,[[["bool",15]]]],[11,"get_automatic_close","","",9,[[],["bool",15]]],[11,"set_automatic_close","","",9,[[["bool",15]]]],[11,"set_capture_cursor","","",9,[[["bool",15]]]],[11,"show","","",9,[[]]],[11,"hide","","",9,[[]]],[11,"get_position","","",9,[[],[["position",3],["option",4]]]],[11,"set_position","","",9,[[["position",3],["into",8]]]],[11,"set_size","","",9,[[["into",8],["size",3]]]],[11,"from","","",2,[[],["size",3]]],[11,"from","","",2,[[],["size",3]]],[11,"from","","",2,[[],["size",3]]],[11,"from","","",2,[[],["size",3]]],[11,"from","","",3,[[],["position",3]]],[11,"from","","",3,[[],["position",3]]],[11,"clone","","",2,[[],["size",3]]],[11,"clone","","",3,[[],["position",3]]],[11,"clone","","",8,[[],["windowsettings",3]]],[11,"eq","","",2,[[["size",3]],["bool",15]]],[11,"ne","","",2,[[["size",3]],["bool",15]]],[11,"eq","","",3,[[["position",3]],["bool",15]]],[11,"ne","","",3,[[["position",3]],["bool",15]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"new","","Creates a new <code>NoWindow</code>.",9,[[["windowsettings",3]],["nowindow",3]]],[11,"opengl","","Creates a new OpenGL version.",0,[[["u32",15]],["version",3]]],[11,"vulkan","","Creates a new Vulkan version.",0,[[["u32",15]],["version",3]]],[11,"directx","","Creates a new DirectX version.",0,[[["u32",15]],["version",3]]],[11,"metal","","Creates a new Metal version.",0,[[["u32",15]],["version",3]]],[11,"is_opengl","","Returns <code>true</code> if the API is OpenGL, <code>false</code> otherwise.",0,[[],["bool",15]]],[11,"is_vulkan","","Returns <code>true</code> if the API is Vulkan, <code>false</code> otherwise.",0,[[],["bool",15]]],[11,"is_directx","","Returns <code>true</code> if the API is DirectX, <code>false</code> otherwise.",0,[[],["bool",15]]],[11,"is_metal","","Returns <code>true</code> if the API is metal, <code>false</code> otherwise.",0,[[],["bool",15]]]],"p":[[3,"Api"],[3,"UnsupportedGraphicsApiError"],[3,"Size"],[3,"Position"],[8,"BuildFromWindowSettings"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"],[3,"WindowSettings"],[3,"NoWindow"]]},\
"winit":{"doc":"Winit is a cross-platform window creation and event loop …","i":[[0,"dpi","winit","UI scaling is important, so read the docs for this module …",null,null],[8,"Pixel","winit::dpi","",null,null],[10,"from_f64","","",0,[[["f64",15]]]],[11,"cast","","",0,[[],["pixel",8]]],[5,"validate_scale_factor","","Checks that the scale factor is a normal positive <code>f64</code>.",null,[[["f64",15]],["bool",15]]],[3,"LogicalPosition","","A position represented in logical pixels.",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[11,"new","","",1,[[]]],[11,"from_physical","","",1,[[["physicalposition",3],["f64",15],["into",8]]]],[11,"to_physical","","",1,[[["f64",15]],[["physicalposition",3],["pixel",8]]]],[11,"cast","","",1,[[],[["pixel",8],["logicalposition",3]]]],[3,"PhysicalPosition","","A position represented in physical pixels.",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[11,"new","","",2,[[]]],[11,"from_logical","","",2,[[["logicalposition",3],["f64",15],["into",8]]]],[11,"to_logical","","",2,[[["f64",15]],[["pixel",8],["logicalposition",3]]]],[11,"cast","","",2,[[],[["physicalposition",3],["pixel",8]]]],[3,"LogicalSize","","A size represented in logical pixels.",null,null],[12,"width","","",3,null],[12,"height","","",3,null],[11,"new","","",3,[[]]],[11,"from_physical","","",3,[[["physicalsize",3],["into",8],["f64",15]]]],[11,"to_physical","","",3,[[["f64",15]],[["physicalsize",3],["pixel",8]]]],[11,"cast","","",3,[[],[["pixel",8],["logicalsize",3]]]],[3,"PhysicalSize","","A size represented in physical pixels.",null,null],[12,"width","","",4,null],[12,"height","","",4,null],[11,"new","","",4,[[]]],[11,"from_logical","","",4,[[["f64",15],["into",8],["logicalsize",3]]]],[11,"to_logical","","",4,[[["f64",15]],[["pixel",8],["logicalsize",3]]]],[11,"cast","","",4,[[],[["physicalsize",3],["pixel",8]]]],[4,"Size","","A size that\'s either physical or logical.",null,null],[13,"Physical","","",5,null],[13,"Logical","","",5,null],[11,"new","","",5,[[["into",8],["size",4]],["size",4]]],[11,"to_logical","","",5,[[["f64",15]],[["pixel",8],["logicalsize",3]]]],[11,"to_physical","","",5,[[["f64",15]],[["pixel",8],["physicalsize",3]]]],[4,"Position","","A position that\'s either physical or logical.",null,null],[13,"Physical","","",6,null],[13,"Logical","","",6,null],[11,"new","","",6,[[["position",4],["into",8]],["position",4]]],[11,"to_logical","","",6,[[["f64",15]],[["pixel",8],["logicalposition",3]]]],[11,"to_physical","","",6,[[["f64",15]],[["pixel",8],["physicalposition",3]]]],[0,"error","winit","",null,null],[4,"ExternalError","winit::error","An error whose cause it outside Winit\'s control.",null,null],[13,"NotSupported","","The operation is not supported by the backend.",7,null],[13,"Os","","The OS cannot perform the operation.",7,null],[3,"NotSupportedError","","The error type for when the requested operation is not …",null,null],[3,"OsError","","The error type for when the OS cannot perform the …",null,null],[0,"event","winit","The <code>Event</code> enum and assorted supporting types.",null,null],[4,"Event","winit::event","Describes a generic event.",null,null],[13,"NewEvents","","Emitted when new events arrive from the OS to be …",8,null],[13,"WindowEvent","","Emitted when the OS sends an event to a winit window.",8,null],[12,"window_id","winit::event::Event","",9,null],[12,"event","","",9,null],[13,"DeviceEvent","winit::event","Emitted when the OS sends an event to a device.",8,null],[12,"device_id","winit::event::Event","",10,null],[12,"event","","",10,null],[13,"UserEvent","winit::event","Emitted when an event is sent from …",8,null],[13,"Suspended","","Emitted when the application has been suspended.",8,null],[13,"Resumed","","Emitted when the application has been resumed.",8,null],[13,"MainEventsCleared","","Emitted when all of the event loop\'s input events have …",8,null],[13,"RedrawRequested","","Emitted after <code>MainEventsCleared</code> when a window should be …",8,null],[13,"RedrawEventsCleared","","Emitted after all <code>RedrawRequested</code> events have been …",8,null],[13,"LoopDestroyed","","Emitted when the event loop is being shut down.",8,null],[11,"map_nonuser_event","","",8,[[],[["event",4],["event",4],["result",4]]]],[11,"to_static","","If the event doesn\'t contain a reference, turn it into an …",8,[[],[["option",4],["event",4]]]],[4,"StartCause","","Describes the reason the event loop is resuming.",null,null],[13,"ResumeTimeReached","","Sent if the time specified by <code>ControlFlow::WaitUntil</code> has …",11,null],[12,"start","winit::event::StartCause","",12,null],[12,"requested_resume","","",12,null],[13,"WaitCancelled","winit::event","Sent if the OS has new events to send to the window, …",11,null],[12,"start","winit::event::StartCause","",13,null],[12,"requested_resume","","",13,null],[13,"Poll","winit::event","Sent if the event loop is being resumed after the loop\'s …",11,null],[13,"Init","","Sent once, immediately after <code>run</code> is called. Indicates …",11,null],[4,"WindowEvent","","Describes an event from a <code>Window</code>.",null,null],[13,"Resized","","The size of the window has changed. Contains the client …",14,null],[13,"Moved","","The position of the window has changed. Contains the …",14,null],[13,"CloseRequested","","The window has been requested to close.",14,null],[13,"Destroyed","","The window has been destroyed.",14,null],[13,"DroppedFile","","A file has been dropped into the window.",14,null],[13,"HoveredFile","","A file is being hovered over the window.",14,null],[13,"HoveredFileCancelled","","A file was hovered, but has exited the window.",14,null],[13,"ReceivedCharacter","","The window received a unicode character.",14,null],[13,"Focused","","The window gained or lost focus.",14,null],[13,"KeyboardInput","","An event from the keyboard has been received.",14,null],[12,"device_id","winit::event::WindowEvent","",15,null],[12,"input","","",15,null],[12,"is_synthetic","","If <code>true</code>, the event was generated synthetically by winit …",15,null],[13,"ModifiersChanged","winit::event","The keyboard modifiers have changed.",14,null],[13,"CursorMoved","","The cursor has moved on the window.",14,null],[12,"device_id","winit::event::WindowEvent","",16,null],[12,"position","","(x,y) coords in pixels relative to the top-left corner of …",16,null],[12,"modifiers","","",16,null],[13,"CursorEntered","winit::event","The cursor has entered the window.",14,null],[12,"device_id","winit::event::WindowEvent","",17,null],[13,"CursorLeft","winit::event","The cursor has left the window.",14,null],[12,"device_id","winit::event::WindowEvent","",18,null],[13,"MouseWheel","winit::event","A mouse wheel movement or touchpad scroll occurred.",14,null],[12,"device_id","winit::event::WindowEvent","",19,null],[12,"delta","","",19,null],[12,"phase","","",19,null],[12,"modifiers","","",19,null],[13,"MouseInput","winit::event","An mouse button press has been received.",14,null],[12,"device_id","winit::event::WindowEvent","",20,null],[12,"state","","",20,null],[12,"button","","",20,null],[12,"modifiers","","",20,null],[13,"TouchpadPressure","winit::event","Touchpad pressure event.",14,null],[12,"device_id","winit::event::WindowEvent","",21,null],[12,"pressure","","",21,null],[12,"stage","","",21,null],[13,"AxisMotion","winit::event","Motion on some analog axis. May report data redundant to …",14,null],[12,"device_id","winit::event::WindowEvent","",22,null],[12,"axis","","",22,null],[12,"value","","",22,null],[13,"Touch","winit::event","Touch event has been received",14,null],[13,"ScaleFactorChanged","","The window\'s scale factor has changed.",14,null],[12,"scale_factor","winit::event::WindowEvent","",23,null],[12,"new_inner_size","","",23,null],[13,"ThemeChanged","winit::event","The system window theme has changed.",14,null],[11,"to_static","","",14,[[],[["windowevent",4],["option",4]]]],[3,"DeviceId","","Identifier of an input device.",null,null],[11,"dummy","","Returns a dummy <code>DeviceId</code>, useful for unit testing. The …",24,[[]]],[4,"DeviceEvent","","Represents raw hardware events that are not associated …",null,null],[13,"Added","","",25,null],[13,"Removed","","",25,null],[13,"MouseMotion","","Change in physical position of a pointing device.",25,null],[12,"delta","winit::event::DeviceEvent","(x, y) change in position in unspecified units.",26,null],[13,"MouseWheel","winit::event","Physical scroll event",25,null],[12,"delta","winit::event::DeviceEvent","",27,null],[13,"Motion","winit::event","Motion on some analog axis.  This event will be reported …",25,null],[12,"axis","winit::event::DeviceEvent","",28,null],[12,"value","","",28,null],[13,"Button","winit::event","",25,null],[12,"button","winit::event::DeviceEvent","",29,null],[12,"state","","",29,null],[13,"Key","winit::event","",25,null],[13,"Text","","",25,null],[12,"codepoint","winit::event::DeviceEvent","",30,null],[3,"KeyboardInput","winit::event","Describes a keyboard input event.",null,null],[12,"scancode","","Identifies the physical key pressed",31,null],[12,"state","","",31,null],[12,"virtual_keycode","","Identifies the semantic meaning of the key",31,null],[12,"modifiers","","Modifier keys active at the time of this input.",31,null],[4,"TouchPhase","","Describes touch-screen input state.",null,null],[13,"Started","","",32,null],[13,"Moved","","",32,null],[13,"Ended","","",32,null],[13,"Cancelled","","",32,null],[3,"Touch","","Represents a touch event",null,null],[12,"device_id","","",33,null],[12,"phase","","",33,null],[12,"location","","",33,null],[12,"force","","Describes how hard the screen was pressed. May be <code>None</code> if …",33,null],[12,"id","","Unique identifier of a finger.",33,null],[4,"Force","","Describes the force of a touch event",null,null],[13,"Calibrated","","On iOS, the force is calibrated so that the same number …",34,null],[12,"force","winit::event::Force","The force of the touch, where a value of 1.0 represents …",35,null],[12,"max_possible_force","","The maximum possible force for a touch.",35,null],[12,"altitude_angle","","The altitude (in radians) of the stylus.",35,null],[13,"Normalized","winit::event","If the platform reports the force as normalized, we have …",34,null],[11,"normalized","","Returns the force normalized to the range between 0.0 and …",34,[[],["f64",15]]],[6,"ScanCode","","Hardware-dependent keyboard scan code.",null,null],[6,"AxisId","","Identifier for a specific analog axis on some device.",null,null],[6,"ButtonId","","Identifier for a specific button on some device.",null,null],[4,"ElementState","","Describes the input state of a key.",null,null],[13,"Pressed","","",36,null],[13,"Released","","",36,null],[4,"MouseButton","","Describes a button of a mouse controller.",null,null],[13,"Left","","",37,null],[13,"Right","","",37,null],[13,"Middle","","",37,null],[13,"Other","","",37,null],[4,"MouseScrollDelta","","Describes a difference in the mouse scroll wheel state.",null,null],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal and …",38,null],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and vertical …",38,null],[4,"VirtualKeyCode","","Symbolic name for a keyboard key.",null,null],[13,"Key1","","The \'1\' key over the letters.",39,null],[13,"Key2","","The \'2\' key over the letters.",39,null],[13,"Key3","","The \'3\' key over the letters.",39,null],[13,"Key4","","The \'4\' key over the letters.",39,null],[13,"Key5","","The \'5\' key over the letters.",39,null],[13,"Key6","","The \'6\' key over the letters.",39,null],[13,"Key7","","The \'7\' key over the letters.",39,null],[13,"Key8","","The \'8\' key over the letters.",39,null],[13,"Key9","","The \'9\' key over the letters.",39,null],[13,"Key0","","The \'0\' key over the \'O\' and \'P\' keys.",39,null],[13,"A","","",39,null],[13,"B","","",39,null],[13,"C","","",39,null],[13,"D","","",39,null],[13,"E","","",39,null],[13,"F","","",39,null],[13,"G","","",39,null],[13,"H","","",39,null],[13,"I","","",39,null],[13,"J","","",39,null],[13,"K","","",39,null],[13,"L","","",39,null],[13,"M","","",39,null],[13,"N","","",39,null],[13,"O","","",39,null],[13,"P","","",39,null],[13,"Q","","",39,null],[13,"R","","",39,null],[13,"S","","",39,null],[13,"T","","",39,null],[13,"U","","",39,null],[13,"V","","",39,null],[13,"W","","",39,null],[13,"X","","",39,null],[13,"Y","","",39,null],[13,"Z","","",39,null],[13,"Escape","","The Escape key, next to F1.",39,null],[13,"F1","","",39,null],[13,"F2","","",39,null],[13,"F3","","",39,null],[13,"F4","","",39,null],[13,"F5","","",39,null],[13,"F6","","",39,null],[13,"F7","","",39,null],[13,"F8","","",39,null],[13,"F9","","",39,null],[13,"F10","","",39,null],[13,"F11","","",39,null],[13,"F12","","",39,null],[13,"F13","","",39,null],[13,"F14","","",39,null],[13,"F15","","",39,null],[13,"F16","","",39,null],[13,"F17","","",39,null],[13,"F18","","",39,null],[13,"F19","","",39,null],[13,"F20","","",39,null],[13,"F21","","",39,null],[13,"F22","","",39,null],[13,"F23","","",39,null],[13,"F24","","",39,null],[13,"Snapshot","","Print Screen/SysRq.",39,null],[13,"Scroll","","Scroll Lock.",39,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",39,null],[13,"Insert","","<code>Insert</code>, next to Backspace.",39,null],[13,"Home","","",39,null],[13,"Delete","","",39,null],[13,"End","","",39,null],[13,"PageDown","","",39,null],[13,"PageUp","","",39,null],[13,"Left","","",39,null],[13,"Up","","",39,null],[13,"Right","","",39,null],[13,"Down","","",39,null],[13,"Back","","The Backspace key, right over Enter.",39,null],[13,"Return","","The Enter key.",39,null],[13,"Space","","The space bar.",39,null],[13,"Compose","","The \\\"Compose\\\" key on Linux.",39,null],[13,"Caret","","",39,null],[13,"Numlock","","",39,null],[13,"Numpad0","","",39,null],[13,"Numpad1","","",39,null],[13,"Numpad2","","",39,null],[13,"Numpad3","","",39,null],[13,"Numpad4","","",39,null],[13,"Numpad5","","",39,null],[13,"Numpad6","","",39,null],[13,"Numpad7","","",39,null],[13,"Numpad8","","",39,null],[13,"Numpad9","","",39,null],[13,"NumpadAdd","","",39,null],[13,"NumpadDivide","","",39,null],[13,"NumpadDecimal","","",39,null],[13,"NumpadComma","","",39,null],[13,"NumpadEnter","","",39,null],[13,"NumpadEquals","","",39,null],[13,"NumpadMultiply","","",39,null],[13,"NumpadSubtract","","",39,null],[13,"AbntC1","","",39,null],[13,"AbntC2","","",39,null],[13,"Apostrophe","","",39,null],[13,"Apps","","",39,null],[13,"Asterisk","","",39,null],[13,"At","","",39,null],[13,"Ax","","",39,null],[13,"Backslash","","",39,null],[13,"Calculator","","",39,null],[13,"Capital","","",39,null],[13,"Colon","","",39,null],[13,"Comma","","",39,null],[13,"Convert","","",39,null],[13,"Equals","","",39,null],[13,"Grave","","",39,null],[13,"Kana","","",39,null],[13,"Kanji","","",39,null],[13,"LAlt","","",39,null],[13,"LBracket","","",39,null],[13,"LControl","","",39,null],[13,"LShift","","",39,null],[13,"LWin","","",39,null],[13,"Mail","","",39,null],[13,"MediaSelect","","",39,null],[13,"MediaStop","","",39,null],[13,"Minus","","",39,null],[13,"Mute","","",39,null],[13,"MyComputer","","",39,null],[13,"NavigateForward","","",39,null],[13,"NavigateBackward","","",39,null],[13,"NextTrack","","",39,null],[13,"NoConvert","","",39,null],[13,"OEM102","","",39,null],[13,"Period","","",39,null],[13,"PlayPause","","",39,null],[13,"Plus","","",39,null],[13,"Power","","",39,null],[13,"PrevTrack","","",39,null],[13,"RAlt","","",39,null],[13,"RBracket","","",39,null],[13,"RControl","","",39,null],[13,"RShift","","",39,null],[13,"RWin","","",39,null],[13,"Semicolon","","",39,null],[13,"Slash","","",39,null],[13,"Sleep","","",39,null],[13,"Stop","","",39,null],[13,"Sysrq","","",39,null],[13,"Tab","","",39,null],[13,"Underline","","",39,null],[13,"Unlabeled","","",39,null],[13,"VolumeDown","","",39,null],[13,"VolumeUp","","",39,null],[13,"Wake","","",39,null],[13,"WebBack","","",39,null],[13,"WebFavorites","","",39,null],[13,"WebForward","","",39,null],[13,"WebHome","","",39,null],[13,"WebRefresh","","",39,null],[13,"WebSearch","","",39,null],[13,"WebStop","","",39,null],[13,"Yen","","",39,null],[13,"Copy","","",39,null],[13,"Paste","","",39,null],[13,"Cut","","",39,null],[3,"ModifiersState","","Represents the current state of the keyboard modifiers",null,null],[18,"SHIFT","","The \\\"shift\\\" key.",40,null],[18,"CTRL","","The \\\"control\\\" key.",40,null],[18,"ALT","","The \\\"alt\\\" key.",40,null],[18,"LOGO","","This is the \\\"windows\\\" key on PC and \\\"command\\\" key on Mac.",40,null],[11,"empty","","Returns an empty set of flags",40,[[],["modifiersstate",3]]],[11,"all","","Returns the set containing all flags.",40,[[],["modifiersstate",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",40,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",40,[[["u32",15]],[["option",4],["modifiersstate",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",40,[[["u32",15]],["modifiersstate",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",40,[[["u32",15]],["modifiersstate",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",40,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",40,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",40,[[["modifiersstate",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",40,[[["modifiersstate",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",40,[[["modifiersstate",3]]]],[11,"remove","","Removes the specified flags in-place.",40,[[["modifiersstate",3]]]],[11,"toggle","","Toggles the specified flags in-place.",40,[[["modifiersstate",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",40,[[["bool",15],["modifiersstate",3]]]],[0,"event_loop","winit","The <code>EventLoop</code> struct and assorted supporting types, …",null,null],[3,"EventLoop","winit::event_loop","Provides a way to retrieve events from the system and …",null,null],[3,"EventLoopWindowTarget","","Target that associates windows with an <code>EventLoop</code>.",null,null],[4,"ControlFlow","","Set by the user callback given to the <code>EventLoop::run</code> …",null,null],[13,"Poll","","When the current loop iteration finishes, immediately …",41,null],[13,"Wait","","When the current loop iteration finishes, suspend the …",41,null],[13,"WaitUntil","","When the current loop iteration finishes, suspend the …",41,null],[13,"Exit","","Send a <code>LoopDestroyed</code> event and stop the event loop. This …",41,null],[11,"new","","Builds a new event loop with a <code>()</code> as the user event type.",42,[[],["eventloop",3]]],[11,"with_user_event","","Builds a new event loop.",42,[[],["eventloop",3]]],[11,"run","","Hijacks the calling thread and initializes the winit …",42,[[]]],[11,"create_proxy","","Creates an <code>EventLoopProxy</code> that can be used to dispatch …",42,[[],["eventloopproxy",3]]],[11,"available_monitors","","Returns the list of all the monitors available on the …",43,[[]]],[11,"primary_monitor","","Returns the primary monitor of the system.",43,[[],[["monitorhandle",3],["option",4]]]],[3,"EventLoopProxy","","Used to send custom events to <code>EventLoop</code>.",null,null],[11,"send_event","","Send an event to the <code>EventLoop</code> from which this proxy was …",44,[[],[["eventloopclosed",3],["result",4]]]],[3,"EventLoopClosed","","The error that is returned when an <code>EventLoopProxy</code> …",null,null],[12,"0","","",45,null],[0,"monitor","winit","Types useful for interacting with a user\'s monitors.",null,null],[3,"VideoMode","winit::monitor","Describes a fullscreen video mode of a monitor.",null,null],[11,"size","","Returns the resolution of this video mode.",46,[[],[["physicalsize",3],["u32",15]]]],[11,"bit_depth","","Returns the bit depth of this video mode, as in how many …",46,[[],["u16",15]]],[11,"refresh_rate","","Returns the refresh rate of this video mode. <strong>Note</strong>: the …",46,[[],["u16",15]]],[11,"monitor","","Returns the monitor that this video mode is valid for. …",46,[[],["monitorhandle",3]]],[3,"MonitorHandle","","Handle to a monitor.",null,null],[11,"name","","Returns a human-readable name of the monitor.",47,[[],[["option",4],["string",3]]]],[11,"size","","Returns the monitor\'s resolution.",47,[[],[["physicalsize",3],["u32",15]]]],[11,"position","","Returns the top-left corner position of the monitor …",47,[[],[["i32",15],["physicalposition",3]]]],[11,"scale_factor","","Returns the scale factor that can be used to map logical …",47,[[],["f64",15]]],[11,"video_modes","","Returns all fullscreen video modes supported by this …",47,[[]]],[0,"window","winit","The <code>Window</code> struct and associated types.",null,null],[4,"BadIcon","winit::window","An error produced when using <code>Icon::from_rgba</code> with invalid …",null,null],[13,"ByteCountNotDivisibleBy4","","Produced when the length of the <code>rgba</code> argument isn\'t …",48,null],[12,"byte_count","winit::window::BadIcon","",49,null],[13,"DimensionsVsPixelCount","winit::window","Produced when the number of pixels (<code>rgba.len() / 4</code>) isn\'t …",48,null],[12,"width","winit::window::BadIcon","",50,null],[12,"height","","",50,null],[12,"width_x_height","","",50,null],[12,"pixel_count","","",50,null],[13,"OsError","winit::window","Produced when underlying OS functionality failed to …",48,null],[3,"Icon","","An icon used for the window titlebar, taskbar, etc.",null,null],[3,"Window","","Represents a window.",null,null],[3,"WindowId","","Identifier of a window. Unique for each window.",null,null],[11,"dummy","","Returns a dummy <code>WindowId</code>, useful for unit testing. The …",51,[[]]],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[12,"window","","The attributes to use to create the window.",52,null],[3,"WindowAttributes","","Attributes to use when creating a window.",null,null],[12,"inner_size","","The dimensions of the window. If this is <code>None</code>, some …",53,null],[12,"min_inner_size","","The minimum dimensions a window can be, If this is <code>None</code>, …",53,null],[12,"max_inner_size","","The maximum dimensions a window can be, If this is <code>None</code>, …",53,null],[12,"resizable","","Whether the window is resizable or not.",53,null],[12,"fullscreen","","Whether the window should be set as fullscreen upon …",53,null],[12,"title","","The title of the window in the title bar.",53,null],[12,"maximized","","Whether the window should be maximized upon creation.",53,null],[12,"visible","","Whether the window should be immediately visible upon …",53,null],[12,"transparent","","Whether the the window should be transparent. If this is …",53,null],[12,"decorations","","Whether the window should have borders and bars.",53,null],[12,"always_on_top","","Whether the window should always be on top of other …",53,null],[12,"window_icon","","The window icon.",53,null],[11,"new","","Initializes a new <code>WindowBuilder</code> with default values.",52,[[]]],[11,"with_inner_size","","Requests the window to be of specific dimensions.",52,[[["into",8],["size",4]]]],[11,"with_min_inner_size","","Sets a minimum dimension size for the window.",52,[[["into",8],["size",4]]]],[11,"with_max_inner_size","","Sets a maximum dimension size for the window.",52,[[["into",8],["size",4]]]],[11,"with_resizable","","Sets whether the window is resizable or not.",52,[[["bool",15]]]],[11,"with_title","","Requests a specific title for the window.",52,[[["string",3],["into",8]]]],[11,"with_fullscreen","","Sets the window fullscreen state.",52,[[["fullscreen",4],["option",4]]]],[11,"with_maximized","","Requests maximized mode.",52,[[["bool",15]]]],[11,"with_visible","","Sets whether the window will be initially hidden or …",52,[[["bool",15]]]],[11,"with_transparent","","Sets whether the background of the window should be …",52,[[["bool",15]]]],[11,"with_decorations","","Sets whether the window should have a border, a title …",52,[[["bool",15]]]],[11,"with_always_on_top","","Sets whether or not the window will always be on top of …",52,[[["bool",15]]]],[11,"with_window_icon","","Sets the window icon.",52,[[["option",4],["icon",3]]]],[11,"build","","Builds the window.",52,[[["eventloopwindowtarget",3]],[["window",3],["oserror",3],["result",4]]]],[11,"new","","Creates a new Window for platforms where this is …",54,[[["eventloopwindowtarget",3]],[["window",3],["oserror",3],["result",4]]]],[11,"id","","Returns an identifier unique to the window.",54,[[],["windowid",3]]],[11,"scale_factor","","Returns the scale factor that can be used to map logical …",54,[[],["f64",15]]],[11,"request_redraw","","Emits a <code>WindowEvent::RedrawRequested</code> event in the …",54,[[]]],[11,"inner_position","","Returns the position of the top-left hand corner of the …",54,[[],[["physicalposition",3],["notsupportederror",3],["result",4]]]],[11,"outer_position","","Returns the position of the top-left hand corner of the …",54,[[],[["physicalposition",3],["notsupportederror",3],["result",4]]]],[11,"set_outer_position","","Modifies the position of the window.",54,[[["position",4],["into",8]]]],[11,"inner_size","","Returns the physical size of the window\'s client area.",54,[[],[["physicalsize",3],["u32",15]]]],[11,"set_inner_size","","Modifies the inner size of the window.",54,[[["into",8],["size",4]]]],[11,"outer_size","","Returns the physical size of the entire window.",54,[[],[["physicalsize",3],["u32",15]]]],[11,"set_min_inner_size","","Sets a minimum dimension size for the window.",54,[[["option",4],["into",8],["size",4]]]],[11,"set_max_inner_size","","Sets a maximum dimension size for the window.",54,[[["option",4],["into",8],["size",4]]]],[11,"set_title","","Modifies the title of the window.",54,[[["str",15]]]],[11,"set_visible","","Modifies the window\'s visibility.",54,[[["bool",15]]]],[11,"set_resizable","","Sets whether the window is resizable or not.",54,[[["bool",15]]]],[11,"set_minimized","","Sets the window to minimized or back",54,[[["bool",15]]]],[11,"set_maximized","","Sets the window to maximized or back.",54,[[["bool",15]]]],[11,"set_fullscreen","","Sets the window to fullscreen or back.",54,[[["fullscreen",4],["option",4]]]],[11,"fullscreen","","Gets the window\'s current fullscreen state.",54,[[],[["fullscreen",4],["option",4]]]],[11,"set_decorations","","Turn window decorations on or off.",54,[[["bool",15]]]],[11,"set_always_on_top","","Change whether or not the window will always be on top of …",54,[[["bool",15]]]],[11,"set_window_icon","","Sets the window icon. On Windows and X11, this is …",54,[[["option",4],["icon",3]]]],[11,"set_ime_position","","Sets location of IME candidate box in client area …",54,[[["position",4],["into",8]]]],[11,"request_user_attention","","Requests user attention to the window, this has no effect …",54,[[["option",4],["userattentiontype",4]]]],[11,"set_cursor_icon","","Modifies the cursor icon of the window.",54,[[["cursoricon",4]]]],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",54,[[["position",4],["into",8]],[["result",4],["externalerror",4]]]],[11,"set_cursor_grab","","Grabs the cursor, preventing it from leaving the window.",54,[[["bool",15]],[["result",4],["externalerror",4]]]],[11,"set_cursor_visible","","Modifies the cursor\'s visibility.",54,[[["bool",15]]]],[11,"current_monitor","","Returns the monitor on which the window currently resides.",54,[[],[["monitorhandle",3],["option",4]]]],[11,"available_monitors","","Returns the list of all the monitors available on the …",54,[[]]],[11,"primary_monitor","","Returns the primary monitor of the system.",54,[[],[["monitorhandle",3],["option",4]]]],[4,"CursorIcon","","Describes the appearance of the mouse cursor.",null,null],[13,"Default","","The platform-dependent default cursor.",55,null],[13,"Crosshair","","A simple crosshair.",55,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",55,null],[13,"Arrow","","Self explanatory.",55,null],[13,"Move","","Indicates something is to be moved.",55,null],[13,"Text","","Indicates text that may be selected or edited.",55,null],[13,"Wait","","Program busy indicator.",55,null],[13,"Help","","Help indicator (often rendered as a \\\"?\\\")",55,null],[13,"Progress","","Progress indicator. Shows that processing is being done. …",55,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",55,null],[13,"ContextMenu","","",55,null],[13,"Cell","","",55,null],[13,"VerticalText","","",55,null],[13,"Alias","","",55,null],[13,"Copy","","",55,null],[13,"NoDrop","","",55,null],[13,"Grab","","Indicates something can be grabbed.",55,null],[13,"Grabbing","","Indicates something is grabbed.",55,null],[13,"AllScroll","","",55,null],[13,"ZoomIn","","",55,null],[13,"ZoomOut","","",55,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the …",55,null],[13,"NResize","","",55,null],[13,"NeResize","","",55,null],[13,"NwResize","","",55,null],[13,"SResize","","",55,null],[13,"SeResize","","",55,null],[13,"SwResize","","",55,null],[13,"WResize","","",55,null],[13,"EwResize","","",55,null],[13,"NsResize","","",55,null],[13,"NeswResize","","",55,null],[13,"NwseResize","","",55,null],[13,"ColResize","","",55,null],[13,"RowResize","","",55,null],[4,"Fullscreen","","Fullscreen modes.",null,null],[13,"Exclusive","","",56,null],[13,"Borderless","","Providing <code>None</code> to <code>Borderless</code> will fullscreen on the …",56,null],[4,"Theme","","",null,null],[13,"Light","","",57,null],[13,"Dark","","",57,null],[4,"UserAttentionType","","Platform-specific<strong>X11:</strong> Sets the WM\'s <code>XUrgencyHint</code>. No …",null,null],[13,"Critical","","Platform-specific<strong>macOS:</strong> Bounces the dock icon until the …",58,null],[13,"Informational","","Platform-specific<strong>macOS:</strong> Bounces the dock icon once.<strong>…",58,null],[0,"platform","winit","Contains traits with platform-specific methods in them.",null,null],[0,"macos","winit::platform","",null,null],[8,"WindowExtMacOS","winit::platform::macos","Additional methods on <code>Window</code> that are specific to MacOS.",null,null],[10,"ns_window","","Returns a pointer to the cocoa <code>NSWindow</code> that is used by …",59,[[]]],[10,"ns_view","","Returns a pointer to the cocoa <code>NSView</code> that is used by …",59,[[]]],[10,"simple_fullscreen","","Returns whether or not the window is in simple fullscreen …",59,[[],["bool",15]]],[10,"set_simple_fullscreen","","Toggles a fullscreen mode that doesn\'t require a new …",59,[[["bool",15]],["bool",15]]],[10,"has_shadow","","Returns whether or not the window has shadow.",59,[[],["bool",15]]],[10,"set_has_shadow","","Sets whether or not the window has shadow.",59,[[["bool",15]]]],[4,"ActivationPolicy","","Corresponds to <code>NSApplicationActivationPolicy</code>.",null,null],[13,"Regular","","Corresponds to <code>NSApplicationActivationPolicyRegular</code>.",60,null],[13,"Accessory","","Corresponds to <code>NSApplicationActivationPolicyAccessory</code>.",60,null],[13,"Prohibited","","Corresponds to <code>NSApplicationActivationPolicyProhibited</code>.",60,null],[8,"WindowBuilderExtMacOS","","Additional methods on <code>WindowBuilder</code> that are specific to …",null,null],[10,"with_activation_policy","","Sets the activation policy for the window being built.",61,[[["activationpolicy",4]],["windowbuilder",3]]],[10,"with_movable_by_window_background","","Enables click-and-drag behavior for the entire window, …",61,[[["bool",15]],["windowbuilder",3]]],[10,"with_titlebar_transparent","","Makes the titlebar transparent and allows the content to …",61,[[["bool",15]],["windowbuilder",3]]],[10,"with_title_hidden","","Hides the window title.",61,[[["bool",15]],["windowbuilder",3]]],[10,"with_titlebar_hidden","","Hides the window titlebar.",61,[[["bool",15]],["windowbuilder",3]]],[10,"with_titlebar_buttons_hidden","","Hides the window titlebar buttons.",61,[[["bool",15]],["windowbuilder",3]]],[10,"with_fullsize_content_view","","Makes the window content appear behind the titlebar.",61,[[["bool",15]],["windowbuilder",3]]],[10,"with_resize_increments","","Build window with <code>resizeIncrements</code> property. Values must …",61,[[["f64",15],["logicalsize",3]],["windowbuilder",3]]],[10,"with_disallow_hidpi","","",61,[[["bool",15]],["windowbuilder",3]]],[10,"with_has_shadow","","",61,[[["bool",15]],["windowbuilder",3]]],[8,"MonitorHandleExtMacOS","","Additional methods on <code>MonitorHandle</code> that are specific to …",null,null],[10,"native_id","","Returns the identifier of the monitor for Cocoa.",62,[[],["u32",15]]],[10,"ns_screen","","Returns a pointer to the NSScreen representing this …",62,[[],["option",4]]],[8,"EventLoopWindowTargetExtMacOS","","Additional methods on <code>EventLoopWindowTarget</code> that are …",null,null],[10,"hide_application","","Hide the entire application. In most applications this is …",63,[[]]],[10,"hide_other_applications","","Hide the other applications. In most applications this is …",63,[[]]],[0,"run_return","winit::platform","",null,null],[8,"EventLoopExtRunReturn","winit::platform::run_return","Additional methods on <code>EventLoop</code> to return control flow to …",null,null],[16,"UserEvent","","A type provided by the user that can be passed through …",64,null],[10,"run_return","","Initializes the <code>winit</code> event loop.",64,[[]]],[11,"from","winit::dpi","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","winit::error","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_string","","",66,[[],["string",3]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","winit::event","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","winit::event_loop","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","winit::window","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","winit::monitor","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","winit::window","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","winit::platform::macos","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"ns_window","winit::window","",54,[[]]],[11,"ns_view","","",54,[[]]],[11,"simple_fullscreen","","",54,[[],["bool",15]]],[11,"set_simple_fullscreen","","",54,[[["bool",15]],["bool",15]]],[11,"has_shadow","","",54,[[],["bool",15]]],[11,"set_has_shadow","","",54,[[["bool",15]]]],[11,"with_activation_policy","","",52,[[["activationpolicy",4]],["windowbuilder",3]]],[11,"with_movable_by_window_background","","",52,[[["bool",15]],["windowbuilder",3]]],[11,"with_titlebar_transparent","","",52,[[["bool",15]],["windowbuilder",3]]],[11,"with_titlebar_hidden","","",52,[[["bool",15]],["windowbuilder",3]]],[11,"with_titlebar_buttons_hidden","","",52,[[["bool",15]],["windowbuilder",3]]],[11,"with_title_hidden","","",52,[[["bool",15]],["windowbuilder",3]]],[11,"with_fullsize_content_view","","",52,[[["bool",15]],["windowbuilder",3]]],[11,"with_resize_increments","","",52,[[["f64",15],["logicalsize",3]],["windowbuilder",3]]],[11,"with_disallow_hidpi","","",52,[[["bool",15]],["windowbuilder",3]]],[11,"with_has_shadow","","",52,[[["bool",15]],["windowbuilder",3]]],[11,"native_id","winit::monitor","",47,[[],["u32",15]]],[11,"ns_screen","","",47,[[],["option",4]]],[11,"hide_application","winit::event_loop","",43,[[]]],[11,"hide_other_applications","","",43,[[]]],[11,"run_return","","",42,[[]]],[11,"drop","winit::window","",54,[[]]],[11,"from","winit::dpi","",1,[[],["logicalposition",3]]],[11,"from","","",1,[[],["logicalposition",3]]],[11,"from","","",2,[[],["physicalposition",3]]],[11,"from","","",2,[[],["physicalposition",3]]],[11,"from","","",3,[[],["logicalsize",3]]],[11,"from","","",3,[[],["logicalsize",3]]],[11,"from","","",4,[[],["physicalsize",3]]],[11,"from","","",4,[[],["physicalsize",3]]],[11,"from","","",5,[[["physicalsize",3]],["size",4]]],[11,"from","","",5,[[["logicalsize",3]],["size",4]]],[11,"from","","",6,[[["physicalposition",3]],["position",4]]],[11,"from","","",6,[[["logicalposition",3]],["position",4]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into","","",3,[[["logicalsize",3]]]],[11,"into","","",3,[[]]],[11,"into","","",4,[[]]],[11,"into","","",4,[[]]],[11,"extend","winit::event","",40,[[["intoiterator",8]]]],[11,"clone","winit::dpi","",1,[[],["logicalposition",3]]],[11,"clone","","",2,[[],["physicalposition",3]]],[11,"clone","","",3,[[],["logicalsize",3]]],[11,"clone","","",4,[[],["physicalsize",3]]],[11,"clone","","",5,[[],["size",4]]],[11,"clone","","",6,[[],["position",4]]],[11,"clone","winit::error","",65,[[],["notsupportederror",3]]],[11,"clone","winit::event","",8,[[]]],[11,"clone","","",11,[[],["startcause",4]]],[11,"clone","","",14,[[]]],[11,"clone","","",24,[[],["deviceid",3]]],[11,"clone","","",25,[[],["deviceevent",4]]],[11,"clone","","",31,[[],["keyboardinput",3]]],[11,"clone","","",32,[[],["touchphase",4]]],[11,"clone","","",33,[[],["touch",3]]],[11,"clone","","",34,[[],["force",4]]],[11,"clone","","",36,[[],["elementstate",4]]],[11,"clone","","",37,[[],["mousebutton",4]]],[11,"clone","","",38,[[],["mousescrolldelta",4]]],[11,"clone","","",39,[[],["virtualkeycode",4]]],[11,"clone","","",40,[[],["modifiersstate",3]]],[11,"clone","winit::event_loop","",41,[[],["controlflow",4]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[],["eventloopclosed",3]]],[11,"clone","winit::window","",67,[[],["icon",3]]],[11,"clone","winit::monitor","",46,[[],["videomode",3]]],[11,"clone","","",47,[[],["monitorhandle",3]]],[11,"clone","winit::window","",51,[[],["windowid",3]]],[11,"clone","","",52,[[],["windowbuilder",3]]],[11,"clone","","",53,[[],["windowattributes",3]]],[11,"clone","","",55,[[],["cursoricon",4]]],[11,"clone","","",56,[[],["fullscreen",4]]],[11,"clone","","",57,[[],["theme",4]]],[11,"clone","","",58,[[],["userattentiontype",4]]],[11,"clone","winit::platform::macos","",60,[[],["activationpolicy",4]]],[11,"default","winit::event","",40,[[],["modifiersstate",3]]],[11,"default","winit::event_loop","",41,[[],["controlflow",4]]],[11,"default","winit::window","",52,[[],["windowbuilder",3]]],[11,"default","","",53,[[],["windowattributes",3]]],[11,"default","","",55,[[]]],[11,"default","","",58,[[]]],[11,"default","winit::platform::macos","",60,[[]]],[11,"cmp","winit::event","",24,[[["deviceid",3]],["ordering",4]]],[11,"cmp","","",39,[[["virtualkeycode",4]],["ordering",4]]],[11,"cmp","","",40,[[["modifiersstate",3]],["ordering",4]]],[11,"cmp","winit::monitor","",46,[[["videomode",3]],["ordering",4]]],[11,"cmp","","",47,[[["monitorhandle",3]],["ordering",4]]],[11,"cmp","winit::window","",51,[[["windowid",3]],["ordering",4]]],[11,"eq","winit::dpi","",1,[[["logicalposition",3]],["bool",15]]],[11,"ne","","",1,[[["logicalposition",3]],["bool",15]]],[11,"eq","","",2,[[["physicalposition",3]],["bool",15]]],[11,"ne","","",2,[[["physicalposition",3]],["bool",15]]],[11,"eq","","",3,[[["logicalsize",3]],["bool",15]]],[11,"ne","","",3,[[["logicalsize",3]],["bool",15]]],[11,"eq","","",4,[[["physicalsize",3]],["bool",15]]],[11,"ne","","",4,[[["physicalsize",3]],["bool",15]]],[11,"eq","","",5,[[["size",4]],["bool",15]]],[11,"ne","","",5,[[["size",4]],["bool",15]]],[11,"eq","","",6,[[["position",4]],["bool",15]]],[11,"ne","","",6,[[["position",4]],["bool",15]]],[11,"eq","winit::event","",8,[[["event",4]],["bool",15]]],[11,"ne","","",8,[[["event",4]],["bool",15]]],[11,"eq","","",11,[[["startcause",4]],["bool",15]]],[11,"ne","","",11,[[["startcause",4]],["bool",15]]],[11,"eq","","",14,[[["windowevent",4]],["bool",15]]],[11,"ne","","",14,[[["windowevent",4]],["bool",15]]],[11,"eq","","",24,[[["deviceid",3]],["bool",15]]],[11,"ne","","",24,[[["deviceid",3]],["bool",15]]],[11,"eq","","",25,[[["deviceevent",4]],["bool",15]]],[11,"ne","","",25,[[["deviceevent",4]],["bool",15]]],[11,"eq","","",31,[[["keyboardinput",3]],["bool",15]]],[11,"ne","","",31,[[["keyboardinput",3]],["bool",15]]],[11,"eq","","",32,[[["touchphase",4]],["bool",15]]],[11,"eq","","",33,[[["touch",3]],["bool",15]]],[11,"ne","","",33,[[["touch",3]],["bool",15]]],[11,"eq","","",34,[[["force",4]],["bool",15]]],[11,"ne","","",34,[[["force",4]],["bool",15]]],[11,"eq","","",36,[[["elementstate",4]],["bool",15]]],[11,"eq","","",37,[[["mousebutton",4]],["bool",15]]],[11,"ne","","",37,[[["mousebutton",4]],["bool",15]]],[11,"eq","","",38,[[["mousescrolldelta",4]],["bool",15]]],[11,"ne","","",38,[[["mousescrolldelta",4]],["bool",15]]],[11,"eq","","",39,[[["virtualkeycode",4]],["bool",15]]],[11,"eq","","",40,[[["modifiersstate",3]],["bool",15]]],[11,"ne","","",40,[[["modifiersstate",3]],["bool",15]]],[11,"eq","winit::event_loop","",41,[[["controlflow",4]],["bool",15]]],[11,"ne","","",41,[[["controlflow",4]],["bool",15]]],[11,"eq","","",45,[[["eventloopclosed",3]],["bool",15]]],[11,"ne","","",45,[[["eventloopclosed",3]],["bool",15]]],[11,"eq","winit::monitor","",46,[[["videomode",3]],["bool",15]]],[11,"ne","","",46,[[["videomode",3]],["bool",15]]],[11,"eq","","",47,[[["monitorhandle",3]],["bool",15]]],[11,"ne","","",47,[[["monitorhandle",3]],["bool",15]]],[11,"eq","winit::window","",51,[[["windowid",3]],["bool",15]]],[11,"ne","","",51,[[["windowid",3]],["bool",15]]],[11,"eq","","",55,[[["cursoricon",4]],["bool",15]]],[11,"eq","","",56,[[["fullscreen",4]],["bool",15]]],[11,"ne","","",56,[[["fullscreen",4]],["bool",15]]],[11,"eq","","",57,[[["theme",4]],["bool",15]]],[11,"eq","","",58,[[["userattentiontype",4]],["bool",15]]],[11,"eq","winit::platform::macos","",60,[[["activationpolicy",4]],["bool",15]]],[11,"partial_cmp","winit::event","",24,[[["deviceid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",24,[[["deviceid",3]],["bool",15]]],[11,"le","","",24,[[["deviceid",3]],["bool",15]]],[11,"gt","","",24,[[["deviceid",3]],["bool",15]]],[11,"ge","","",24,[[["deviceid",3]],["bool",15]]],[11,"partial_cmp","","",39,[[["virtualkeycode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",40,[[["modifiersstate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",40,[[["modifiersstate",3]],["bool",15]]],[11,"le","","",40,[[["modifiersstate",3]],["bool",15]]],[11,"gt","","",40,[[["modifiersstate",3]],["bool",15]]],[11,"ge","","",40,[[["modifiersstate",3]],["bool",15]]],[11,"partial_cmp","winit::monitor","",46,[[["videomode",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",47,[[["monitorhandle",3]],[["option",4],["ordering",4]]]],[11,"lt","","",47,[[["monitorhandle",3]],["bool",15]]],[11,"le","","",47,[[["monitorhandle",3]],["bool",15]]],[11,"gt","","",47,[[["monitorhandle",3]],["bool",15]]],[11,"ge","","",47,[[["monitorhandle",3]],["bool",15]]],[11,"partial_cmp","winit::window","",51,[[["windowid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",51,[[["windowid",3]],["bool",15]]],[11,"le","","",51,[[["windowid",3]],["bool",15]]],[11,"gt","","",51,[[["windowid",3]],["bool",15]]],[11,"ge","","",51,[[["windowid",3]],["bool",15]]],[11,"deref","winit::event_loop","",42,[[],["eventloopwindowtarget",3]]],[11,"fmt","winit::dpi","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","winit::error","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","winit::event","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","winit::event_loop","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","winit::window","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","winit::monitor","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","winit::window","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","winit::platform::macos","",60,[[["formatter",3]],["result",6]]],[11,"fmt","winit::error","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","winit::event_loop","",45,[[["formatter",3]],["result",6]]],[11,"fmt","winit::window","",48,[[["formatter",3]],["result",6]]],[11,"fmt","winit::monitor","",46,[[["formatter",3]],["result",6]]],[11,"sub","winit::event","Returns the set difference of the two sets of flags.",40,[[["modifiersstate",3]],["modifiersstate",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",40,[[["modifiersstate",3]]]],[11,"not","","Returns the complement of this set of flags.",40,[[],["modifiersstate",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",40,[[["modifiersstate",3]],["modifiersstate",3]]],[11,"bitor","","Returns the union of the two sets of flags.",40,[[["modifiersstate",3]],["modifiersstate",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",40,[[["modifiersstate",3]],["modifiersstate",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",40,[[["modifiersstate",3]]]],[11,"bitor_assign","","Adds the set of flags.",40,[[["modifiersstate",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",40,[[["modifiersstate",3]]]],[11,"hash","winit::dpi","",4,[[]]],[11,"hash","winit::event","",24,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","winit::event_loop","",45,[[]]],[11,"hash","winit::monitor","",46,[[]]],[11,"hash","winit::window","",51,[[]]],[11,"hash","","",55,[[]]],[11,"from_iter","winit::event","",40,[[["intoiterator",8]],["modifiersstate",3]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"source","winit::window","",48,[[],[["option",4],["error",8]]]],[11,"raw_window_handle","","Returns a <code>raw_window_handle::RawWindowHandle</code> for the …",54,[[],["rawwindowhandle",4]]],[11,"shift","winit::event","Returns <code>true</code> if the shift key is pressed.",40,[[],["bool",15]]],[11,"ctrl","","Returns <code>true</code> if the control key is pressed.",40,[[],["bool",15]]],[11,"alt","","Returns <code>true</code> if the alt key is pressed.",40,[[],["bool",15]]],[11,"logo","","Returns <code>true</code> if the logo key is pressed.",40,[[],["bool",15]]],[11,"from_rgba","winit::window","Creates an <code>Icon</code> from 32bpp RGBA data.",67,[[["u32",15],["vec",3],["u8",15]],[["result",4],["badicon",4]]]]],"p":[[8,"Pixel"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[4,"Size"],[4,"Position"],[4,"ExternalError"],[4,"Event"],[13,"WindowEvent"],[13,"DeviceEvent"],[4,"StartCause"],[13,"ResumeTimeReached"],[13,"WaitCancelled"],[4,"WindowEvent"],[13,"KeyboardInput"],[13,"CursorMoved"],[13,"CursorEntered"],[13,"CursorLeft"],[13,"MouseWheel"],[13,"MouseInput"],[13,"TouchpadPressure"],[13,"AxisMotion"],[13,"ScaleFactorChanged"],[3,"DeviceId"],[4,"DeviceEvent"],[13,"MouseMotion"],[13,"MouseWheel"],[13,"Motion"],[13,"Button"],[13,"Text"],[3,"KeyboardInput"],[4,"TouchPhase"],[3,"Touch"],[4,"Force"],[13,"Calibrated"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[3,"ModifiersState"],[4,"ControlFlow"],[3,"EventLoop"],[3,"EventLoopWindowTarget"],[3,"EventLoopProxy"],[3,"EventLoopClosed"],[3,"VideoMode"],[3,"MonitorHandle"],[4,"BadIcon"],[13,"ByteCountNotDivisibleBy4"],[13,"DimensionsVsPixelCount"],[3,"WindowId"],[3,"WindowBuilder"],[3,"WindowAttributes"],[3,"Window"],[4,"CursorIcon"],[4,"Fullscreen"],[4,"Theme"],[4,"UserAttentionType"],[8,"WindowExtMacOS"],[4,"ActivationPolicy"],[8,"WindowBuilderExtMacOS"],[8,"MonitorHandleExtMacOS"],[8,"EventLoopWindowTargetExtMacOS"],[8,"EventLoopExtRunReturn"],[3,"NotSupportedError"],[3,"OsError"],[3,"Icon"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);